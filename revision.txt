diff --git a/src/main/java/com/grupobios/bioslis/bs/CargosModulosServiceImpl.java b/src/main/java/com/grupobios/bioslis/bs/CargosModulosServiceImpl.java
index 3d6ce777..1ffa0d7e 100644
--- a/src/main/java/com/grupobios/bioslis/bs/CargosModulosServiceImpl.java
+++ b/src/main/java/com/grupobios/bioslis/bs/CargosModulosServiceImpl.java
@@ -16,6 +16,8 @@ import com.grupobios.bioslis.entity.CfgCargosmodulosbl;
 import com.grupobios.bioslis.entity.LdvCargosusuarios;
 import java.util.ArrayList;
 import java.util.List;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.springframework.stereotype.Service;
 
 /**
@@ -25,6 +27,7 @@ import org.springframework.stereotype.Service;
 @Service
 public class CargosModulosServiceImpl implements CargosModulosService {
 
+    private static Logger logger = LogManager.getLogger(CargosModulosServiceImpl.class);
     LdvCargosUsuariosDAO ldvCargosUsuariosDAO;
     CfgCargosmodulosblDAO cfgCargosmodulosblDAO;
     CfgBioslismodulosDAO cfgBioslismodulosDAO;
@@ -149,8 +152,8 @@ public class CargosModulosServiceImpl implements CargosModulosService {
             for (CfgCargosmodulosbl ccmblNew: listCmbl){
                 existe = false;
                 for (CfgCargosmodulosbl ccmblAct : listActualModulos) {
-                   // System.out.println("id cargo: "+ccmblAct.getId().getCcmIdcargo());
-                   // System.out.println("id modulo: "+ccmblAct.getId().getCcmIdbioslismodulo());
+                    logger.debug("*** ID Cargo: " + ccmblAct.getId().getCcmIdcargo() + " ***");
+                    logger.debug("*** ID MÃ³dulo: " + ccmblAct.getId().getCcmIdbioslismodulo() + " ***");
                     if (ccmblAct.getId().getCcmIdcargo() == ccmblNew.getId().getCcmIdcargo()
                             && ccmblAct.getId().getCcmIdbioslismodulo() == ccmblNew.getId().getCcmIdbioslismodulo()){
                         existe = true;
diff --git a/src/main/java/com/grupobios/bioslis/bs/ConfiguracionEtiquetasService.java b/src/main/java/com/grupobios/bioslis/bs/ConfiguracionEtiquetasService.java
deleted file mode 100644
index 0eccf2b0..00000000
--- a/src/main/java/com/grupobios/bioslis/bs/ConfiguracionEtiquetasService.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.grupobios.bioslis.bs;
-
-import java.util.List;
-
-import com.grupobios.bioslis.dao.BiosLISDAOException;
-import com.grupobios.bioslis.dto.EtiquetaCodigoBarraDTO;
-import com.grupobios.bioslis.entity.CfgEtiquetacodigobarras;
-
-// *** realizado por cristian
-public interface ConfiguracionEtiquetasService {
-
-    
-    public List<EtiquetaCodigoBarraDTO> getAllEtiquetas() throws BiosLISDAOException;
-    public EtiquetaCodigoBarraDTO getEtiquetaBycodigo(String codigo) throws BiosLISDAOException;
-    public void insertUpdateEtiqueta(CfgEtiquetacodigobarras etiquetaCodigoBarra, String idUsuario)  throws BiosLISDAOException;;
-}
diff --git a/src/main/java/com/grupobios/bioslis/bs/ConfiguracionEtiquetasServiceImpl.java b/src/main/java/com/grupobios/bioslis/bs/ConfiguracionEtiquetasServiceImpl.java
deleted file mode 100644
index 937a2730..00000000
--- a/src/main/java/com/grupobios/bioslis/bs/ConfiguracionEtiquetasServiceImpl.java
+++ /dev/null
@@ -1,44 +0,0 @@
-package com.grupobios.bioslis.bs;
-
-import java.util.List;
-
-import org.springframework.beans.factory.annotation.Autowired;
-
-import com.grupobios.bioslis.dao.BiosLISDAOException;
-import com.grupobios.bioslis.dao.CfgEtiquetaCodigoBarrasDAO;
-import com.grupobios.bioslis.dto.EtiquetaCodigoBarraDTO;
-import com.grupobios.bioslis.entity.CfgEtiquetacodigobarras;
-
-public class ConfiguracionEtiquetasServiceImpl implements ConfiguracionEtiquetasService {
-
-    
-    @Autowired
-    CfgEtiquetaCodigoBarrasDAO cfgEtiquetaCodigoBarrasDAO;
-    
-    
-    public CfgEtiquetaCodigoBarrasDAO getCfgEtiquetaCodigoBarrasDAO() {
-        return cfgEtiquetaCodigoBarrasDAO;
-    }
-
-
-    public void setCfgEtiquetaCodigoBarrasDAO(CfgEtiquetaCodigoBarrasDAO cfgEtiquetaCodigoBarrasDAO) {
-        this.cfgEtiquetaCodigoBarrasDAO = cfgEtiquetaCodigoBarrasDAO;
-    }
-
-
-    @Override
-    public List<EtiquetaCodigoBarraDTO> getAllEtiquetas() throws BiosLISDAOException {
-        return  cfgEtiquetaCodigoBarrasDAO.getAllEtiquetas();
-    }
-
-
-    @Override
-    public EtiquetaCodigoBarraDTO getEtiquetaBycodigo(String codigo) throws BiosLISDAOException {
-         return cfgEtiquetaCodigoBarrasDAO.getEtiquetaBycodigo(codigo);
-    }
-
-    @Override
-    public void insertUpdateEtiqueta(CfgEtiquetacodigobarras etiquetaCodigoBarra, String idUsuario) throws BiosLISDAOException {
-        cfgEtiquetaCodigoBarrasDAO.insertUpdateEtiqueta(etiquetaCodigoBarra, idUsuario); 
-    }
-}
diff --git a/src/main/java/com/grupobios/bioslis/bs/ConfiguracionTestServiceImpl.java b/src/main/java/com/grupobios/bioslis/bs/ConfiguracionTestServiceImpl.java
index 272b4727..c4401c5d 100644
--- a/src/main/java/com/grupobios/bioslis/bs/ConfiguracionTestServiceImpl.java
+++ b/src/main/java/com/grupobios/bioslis/bs/ConfiguracionTestServiceImpl.java
@@ -51,6 +51,8 @@ import com.grupobios.bioslis.entity.CfgValoresreferencia;
 import java.math.BigDecimal;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.logging.Level;
+import java.util.logging.Logger;
 import org.springframework.stereotype.Service;
 
 /**
@@ -640,17 +642,21 @@ public class ConfiguracionTestServiceImpl implements ConfiguracionTestService {
     public List<TestDTO> getTestDtoBySeccionExamen(int idSeccion, long idExamen) throws BiosLISDAOException {
         List<TestDTO> lisTestDTO = new ArrayList<>();
         List<CfgTest> listTests = cfgTestDAO.getTestBySeccionExamen(idSeccion, idExamen);
-        for (CfgTest ct: listTests){
-            TestDTO testDTO = new TestDTO();
-            testDTO.setCfgTest(ct);
-            CfgSecciones seccion = cfgSeccionesDAO.getSeccionById(ct.getCfgSecciones());
-            testDTO.setCfgSecciones(seccion);
-            List<ExamenThinDTO> examenesTest = cfgExamenesTestDAO.getExamenesTest(ct.getCtIdtest());
-            testDTO.setListExamenesTest(examenesTest);
-            CfgMuestras muestras = cfgMuestrasDAO.getMuestraById(ct.getCfgMuestras().getCmueIdtipomuestra());
-            testDTO.setCfgMuestras(muestras);
-            lisTestDTO.add(testDTO);
-        }
+        listTests.forEach((ct) -> {
+            try {
+                TestDTO testDTO = new TestDTO();
+                testDTO.setCfgTest(ct);
+                CfgSecciones seccion = cfgSeccionesDAO.getSeccionById(ct.getCfgSecciones());
+                testDTO.setCfgSecciones(seccion);
+                List<ExamenThinDTO> examenesTest = cfgExamenesTestDAO.getExamenesTest(ct.getCtIdtest());
+                testDTO.setListExamenesTest(examenesTest);
+                CfgMuestras muestras = cfgMuestrasDAO.getMuestraById(ct.getCfgMuestras().getCmueIdtipomuestra());
+                testDTO.setCfgMuestras(muestras);
+                lisTestDTO.add(testDTO);
+            } catch (BiosLISDAOException ex) {
+                Logger.getLogger(ConfiguracionTestServiceImpl.class.getName()).log(Level.SEVERE, null, ex);
+            }
+        });
         return lisTestDTO;
     }
 }
diff --git a/src/main/java/com/grupobios/bioslis/bs/ExamenServiceImpl.java b/src/main/java/com/grupobios/bioslis/bs/ExamenServiceImpl.java
index 3d71e48d..41a75336 100755
--- a/src/main/java/com/grupobios/bioslis/bs/ExamenServiceImpl.java
+++ b/src/main/java/com/grupobios/bioslis/bs/ExamenServiceImpl.java
@@ -268,7 +268,6 @@ public class ExamenServiceImpl implements ExamenService {
     }
     for (DatosFichasexamenes datosFichasexamenes : lstDatosFichasexamenes) {
       logger.debug(datosFichasexamenes.getDfeCodigoestadoexamen());
-      ;
       Short examenEstado = this.getNextState(datosFichasexamenes.getDfeCodigoestadoexamen(), actionCode);
       if (examenEstado == null) {
         logger.error("No se puede {} cuando estado actual es {}", actionCode,
diff --git a/src/main/java/com/grupobios/bioslis/bs/MicrobiologiaService.java b/src/main/java/com/grupobios/bioslis/bs/MicrobiologiaService.java
deleted file mode 100644
index 1552c30a..00000000
--- a/src/main/java/com/grupobios/bioslis/bs/MicrobiologiaService.java
+++ /dev/null
@@ -1,15 +0,0 @@
-package com.grupobios.bioslis.bs;
-
-import java.util.Date;
-import java.util.List;
-
-import com.grupobios.bioslis.dao.BiosLISDAOException;
-import com.grupobios.bioslis.microbiologia.dto.MicrobiologiaOrdenPacienteDTO;
-
-
-//se crea pero por el momento no se esta utilizando  **creada 08-11 por cristian
-public interface MicrobiologiaService {
-
-    List<MicrobiologiaOrdenPacienteDTO> getListOrder(Long  startId, Long endId, Date starDate, Date endDate, Long atentionType,
-            Long exam, Long section, String names, String surname, Long documentType, Long documentId, Long serviceId) throws BiosLISDAOException;
-}
diff --git a/src/main/java/com/grupobios/bioslis/bs/MicrobiologiaServiceImpl.java b/src/main/java/com/grupobios/bioslis/bs/MicrobiologiaServiceImpl.java
deleted file mode 100644
index 38395aca..00000000
--- a/src/main/java/com/grupobios/bioslis/bs/MicrobiologiaServiceImpl.java
+++ /dev/null
@@ -1,51 +0,0 @@
-package com.grupobios.bioslis.bs;
-
-import java.util.Date;
-import java.util.List;
-
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Service;
-
-import com.grupobios.bioslis.dao.BiosLISDAOException;
-import com.grupobios.bioslis.microbiologia.dao.MicrobiologiaOrdenDAO;
-import com.grupobios.bioslis.microbiologia.dto.MicrobiologiaOrdenPacienteDTO;
-
-//se crea , pero por el momento no se esta utilizando  **creada 08-11 por cristian
-@Service
-public class MicrobiologiaServiceImpl implements MicrobiologiaService {
-
-    private static Logger logger = LogManager.getLogger(MicrobiologiaServiceImpl.class);
-    
-    private MicrobiologiaOrdenDAO microbiologiaOrdenDAO;
-    
-    public MicrobiologiaServiceImpl() {
- 
-    }
-
-   
-
-
-    public MicrobiologiaOrdenDAO getMicrobiologiaOrdenDAO() {
-        return microbiologiaOrdenDAO;
-    }
-
-    public void setMicrobiologiaOrdenDAO(MicrobiologiaOrdenDAO microbiologiaOrdenDAO) {
-        this.microbiologiaOrdenDAO = microbiologiaOrdenDAO;
-    }
-
-
-
-
-
-
-    @Override
-    public List<MicrobiologiaOrdenPacienteDTO> getListOrder(Long startId, Long endId, Date starDate, Date endDate,
-            Long atentionType, Long exam, Long section, String names, String surname, Long documentType,
-            Long documentId, Long serviceId) throws BiosLISDAOException {
-        
-        return microbiologiaOrdenDAO.getListOrder(startId, endId, starDate, endDate, atentionType, exam, section, names, surname, documentType, documentId, serviceId) ;
-    }
-
-}
diff --git a/src/main/java/com/grupobios/bioslis/bs/OrdenService.java b/src/main/java/com/grupobios/bioslis/bs/OrdenService.java
index 8af59c77..48195420 100755
--- a/src/main/java/com/grupobios/bioslis/bs/OrdenService.java
+++ b/src/main/java/com/grupobios/bioslis/bs/OrdenService.java
@@ -61,8 +61,8 @@ public interface OrdenService {
 
   List<OrdenExamenCapturaResultadoDTO> getOrdenesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO)
       throws BiosLISException, BiosLISDAOException;
-//CAMBIO REALIZADO POR CRISTIAN 09-11  DE ordenFulldto a OrdenInformeResultadoDTO
-  List<OrdenInformeResultadoDTO> getSoloOrdenesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException;
+
+  List<OrdenFullDTO> getSoloOrdenesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException;
 
   List<OrdenInformeResultadoDTO> getOrdenesConSeccionesCapturaResultados(List<Integer> lstOrdenes)
       throws BiosLISDAOException;
@@ -113,7 +113,7 @@ public interface OrdenService {
   List<OrdenExamenCapturaResultadoDTO> getOrdenesExamenesSeccionesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO)
       throws BiosLISException, BiosLISDAOException;
 
-  List<OrdenInformeResultadoDTO> getBOOrdenesConSecciones(BCFichaFiltroDTO fichaFiltroDTO) throws BiosLISException;
+  List<OrdenInformeResultadoDTO> getBOOrdenesConSecciones(BOOrdenesFiltroDTO fichaFiltroDTO) throws BiosLISException;
 
   void updateEstadoResultadoExamenesOrdenes(Long nroOrden, Long examenId, Long testId, String estado, Long idUsuario)
       throws BiosLISDAOException;
diff --git a/src/main/java/com/grupobios/bioslis/bs/OrdenServiceImpl.java b/src/main/java/com/grupobios/bioslis/bs/OrdenServiceImpl.java
index cb6639de..9d5908c3 100755
--- a/src/main/java/com/grupobios/bioslis/bs/OrdenServiceImpl.java
+++ b/src/main/java/com/grupobios/bioslis/bs/OrdenServiceImpl.java
@@ -8,7 +8,7 @@ package com.grupobios.bioslis.bs;
 import java.io.IOException;
 import java.text.ParseException;
 import java.time.LocalDate;
-import java.util.List; 
+import java.util.List;
 
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -60,503 +60,514 @@ import com.grupobios.bioslis.entity.DatosFichasexamenestest;
 
 public class OrdenServiceImpl implements OrdenService {
 
-    private static Logger logger = LogManager.getLogger(OrdenServiceImpl.class);
+  private static Logger logger = LogManager.getLogger(OrdenServiceImpl.class);
 
-    @Autowired
-    private CfgLocalizacionesDAO cfgLocalizacionesDAO;
-    private CapturaResultadosDAO capturaResultadosDAO;
-    private DatosFichas_DAO datosFichas_dao;
-    private DatosFichasDAO datosFichasDAO;
-    private DatosFichasExamenesTestDAO datosFichasExamenesTestDAO;
+  @Autowired
+  private CfgLocalizacionesDAO cfgLocalizacionesDAO;
+  private CapturaResultadosDAO capturaResultadosDAO;
+  private DatosFichas_DAO datosFichas_dao;
+  private DatosFichasDAO datosFichasDAO;
+  private DatosFichasExamenesTestDAO datosFichasExamenesTestDAO;
 
-    public void setDatosFichasExamenesTestDAO(DatosFichasExamenesTestDAO datosFichasExamenesTestDAO) {
-        this.datosFichasExamenesTestDAO = datosFichasExamenesTestDAO;
-    }
+  public void setDatosFichasExamenesTestDAO(DatosFichasExamenesTestDAO datosFichasExamenesTestDAO) {
+    this.datosFichasExamenesTestDAO = datosFichasExamenesTestDAO;
+  }
 
-    @Autowired
-    private CfgExamenesDAO cfgExamenesDAO;
-    @Autowired
-    private PacienteService pacienteService;
+  @Autowired
+  private CfgExamenesDAO cfgExamenesDAO;
+  @Autowired
+  private PacienteService pacienteService;
 
-    @Autowired
-    private OrdenExecutorFactory ordenExecutorFactory;
+  @Autowired
+  private OrdenExecutorFactory ordenExecutorFactory;
 
-    private OrdenServiceImpl() throws BiosLISDaoException {
+  private OrdenServiceImpl() throws BiosLISDaoException {
 
-    }
+  }
 
-    public CfgExamenesDAO getCfgExamenesDAO() {
-        return cfgExamenesDAO;
-    }
+  public CfgExamenesDAO getCfgExamenesDAO() {
+    return cfgExamenesDAO;
+  }
 
-    @Override
-    public List<FilaExamenesMuestrasDeUnaOrdenDTO> getMuestrasExamenesOrden(Long nroOrden) {
+  @Override
+  public List<FilaExamenesMuestrasDeUnaOrdenDTO> getMuestrasExamenesOrden(Long nroOrden) {
 
-        return capturaResultadosDAO.getFilasMuestrasExamenesDeUnaOrden(nroOrden);
-    }
+    return capturaResultadosDAO.getFilasMuestrasExamenesDeUnaOrden(nroOrden);
+  }
 
-    public CapturaResultadosDAO getCapturaResultadosDAO() {
-        return capturaResultadosDAO;
-    }
+  public CapturaResultadosDAO getCapturaResultadosDAO() {
+    return capturaResultadosDAO;
+  }
 
-    public DatosFichasExamenesTestDAO getDatosFichasExamenesTestDAO() {
-        return datosFichasExamenesTestDAO;
-    }
+  public DatosFichasExamenesTestDAO getDatosFichasExamenesTestDAO() {
+    return datosFichasExamenesTestDAO;
+  }
 
-    public void setCapturaResultadosDAO(CapturaResultadosDAO capturaResultadosDAO) {
-        this.capturaResultadosDAO = capturaResultadosDAO;
-    }
+  public void setCapturaResultadosDAO(CapturaResultadosDAO capturaResultadosDAO) {
+    this.capturaResultadosDAO = capturaResultadosDAO;
+  }
 
-    public DatosFichas_DAO getDatosFichas_dao() {
-        return datosFichas_dao;
-    }
+  public DatosFichas_DAO getDatosFichas_dao() {
+    return datosFichas_dao;
+  }
 
-    public void setDatosFichas_dao(DatosFichas_DAO datosFichas_dao) {
-        this.datosFichas_dao = datosFichas_dao;
-    }
+  public void setDatosFichas_dao(DatosFichas_DAO datosFichas_dao) {
+    this.datosFichas_dao = datosFichas_dao;
+  }
 
-    @Override
-    public List<ExamenesResultadosDeUnaOrdenDTO> getResultadosExamenesOrden(Long nroOrden) {
-        return capturaResultadosDAO.getResultadosExamenesOrden(nroOrden);
-    }
+  @Override
+  public List<ExamenesResultadosDeUnaOrdenDTO> getResultadosExamenesOrden(Long nroOrden) {
+    return capturaResultadosDAO.getResultadosExamenesOrden(nroOrden);
+  }
 
-    @Override
-    public void updateResultadosExamenesOrdenes(List<ExamenesResultadosDeUnaOrdenDTO> lista)
-            throws BiosLISDAOException {
-        capturaResultadosDAO.updateResultadosExamenesOrdenes(lista);
-    }
+  @Override
+  public void updateResultadosExamenesOrdenes(List<ExamenesResultadosDeUnaOrdenDTO> lista) throws BiosLISDAOException {
+    capturaResultadosDAO.updateResultadosExamenesOrdenes(lista);
+  }
 
-    @Override
-    public List<ExamenesResultadosDeUnaOrdenDTO> getResultadosExamenesOrden(Long nroOrden,
-            ParamResultadoExamenOrden prmResultadoExamenOrden)
-            throws BiosLISException, BiosLISDAONotFoundException, BiosLISDAOException {
+  @Override
+  public List<ExamenesResultadosDeUnaOrdenDTO> getResultadosExamenesOrden(Long nroOrden,
+      ParamResultadoExamenOrden prmResultadoExamenOrden)
+      throws BiosLISException, BiosLISDAONotFoundException, BiosLISDAOException {
 
-        List<ExamenesResultadosDeUnaOrdenDTO> lstAux = capturaResultadosDAO.getResultadosExamenesOrden(nroOrden,
-                prmResultadoExamenOrden);
-        return lstAux;
-    }
+    List<ExamenesResultadosDeUnaOrdenDTO> lstAux = capturaResultadosDAO.getResultadosExamenesOrden(nroOrden,
+        prmResultadoExamenOrden);
+    return lstAux;
+  }
 
-    @Override
-    public List<OrdenInformeResultadoDTO> getOrdenesConSeccionesCapturaResultados(FichaFiltroDTO ffDto)
-            throws BiosLISException {
+  @Override
+  public List<OrdenInformeResultadoDTO> getOrdenesConSeccionesCapturaResultados(FichaFiltroDTO ffDto)
+      throws BiosLISException {
 
-        return datosFichas_dao.getOrdenesCapturaResultados(ffDto);
-    }
+    return datosFichas_dao.getOrdenesCapturaResultados(ffDto);
+  }
 
-    @Override
-    public RangoValorResultado updateResultadoTestExamenOrden(ResultadoNumericoTestExamenOrdenDTO resultado)
-            throws BiosLISDAOException, ParseException {
+  @Override
+  public RangoValorResultado updateResultadoTestExamenOrden(ResultadoNumericoTestExamenOrdenDTO resultado)
+      throws BiosLISDAOException, ParseException {
 
-        return capturaResultadosDAO.updateResultadoTestExamenOrden(resultado);
+    return capturaResultadosDAO.updateResultadoTestExamenOrden(resultado);
 
-    }
+  }
 
-    @Override
-    public List<ExamenOrdenDTO> readyToSign(Long nroOrden) throws BiosLISDAOException {
-        return datosFichas_dao.readyToSign(nroOrden);
-    }
+  @Override
+  public List<ExamenOrdenDTO> readyToSign(Long nroOrden) throws BiosLISDAOException {
+    return datosFichas_dao.readyToSign(nroOrden);
+  }
 
-    @Override
-    public List<OrdenExamenCapturaResultadoDTO> getOrdenesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO)
-            throws BiosLISException, BiosLISDAOException {
-        return datosFichas_dao.getOrdenesxFiltro(bcFichaFiltroDTO);
+  @Override
+  public List<OrdenExamenCapturaResultadoDTO> getOrdenesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO)
+      throws BiosLISException, BiosLISDAOException {
+    return datosFichas_dao.getOrdenesxFiltro(bcFichaFiltroDTO);
 
-    }
+  }
 
-    @Override
-    public List<OrdenExamenCapturaResultadoDTO> getOrdenesExamenesSeccionesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO)
-            throws BiosLISException, BiosLISDAOException {
-        return datosFichas_dao.getOrdenesExamenesSeccionesxFiltro(bcFichaFiltroDTO);
+  @Override
+  public List<OrdenExamenCapturaResultadoDTO> getOrdenesExamenesSeccionesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO)
+      throws BiosLISException, BiosLISDAOException {
+    return datosFichas_dao.getOrdenesExamenesSeccionesxFiltro(bcFichaFiltroDTO);
 
-    }
-//cambiando de ordenfullDto a OrdenInformeResultadoDTO
-    @Override
-    public List<OrdenInformeResultadoDTO> getSoloOrdenesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
-        return datosFichas_dao.getSoloOrdenesxFiltro(bcFichaFiltroDTO);
-    }
+  }
 
-    @Override
-    public List<OrdenInformeResultadoDTO> getOrdenesConSeccionesCapturaResultados(List<Integer> lstOrdenes)
-            throws BiosLISDAOException {
-        return datosFichas_dao.getOrdenesCapturaResultados(lstOrdenes);
-    }
+  @Override
+  public List<OrdenFullDTO> getSoloOrdenesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
+    return datosFichas_dao.getSoloOrdenesxFiltro(bcFichaFiltroDTO);
+  }
 
-    @Override
-    public List<OrdenExamenCapturaResultadoDTO> getOrdenesExamenesCapturaResultados(List<Integer> listaOrdenes)
-            throws BiosLISDAOException {
-        return datosFichas_dao.getOrdenesExamenesCapturaResultados(listaOrdenes);
-    }
+  @Override
+  public List<OrdenInformeResultadoDTO> getOrdenesConSeccionesCapturaResultados(List<Integer> lstOrdenes)
+      throws BiosLISDAOException {
+    return datosFichas_dao.getOrdenesCapturaResultados(lstOrdenes);
+  }
 
-    @Override
-    public void doAction(String actionCode, List<Long> listaOrdenes, Long idUsuario) throws BiosLISDAOException,
-            BiosLISJasperException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException,
-            IOException {
+  @Override
+  public List<OrdenExamenCapturaResultadoDTO> getOrdenesExamenesCapturaResultados(List<Integer> listaOrdenes)
+      throws BiosLISDAOException {
+    return datosFichas_dao.getOrdenesExamenesCapturaResultados(listaOrdenes);
+  }
 
-        for (Long nroOrden : listaOrdenes) {
-            this.doAction(actionCode, nroOrden, idUsuario);
-        }
+  @Override
+  public void doAction(String actionCode, List<Long> listaOrdenes, Long idUsuario) throws BiosLISDAOException,
+      BiosLISJasperException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException {
 
+    for (Long nroOrden : listaOrdenes) {
+      this.doAction(actionCode, nroOrden, idUsuario);
     }
 
-    private void doAction(String actionCode, Long nroOrden, Long idUsuario)
-            throws BiosLISDAOException, BiosLisExecutorException {
+  }
 
-        ActionOrdenExecutor orderExecutor = ordenExecutorFactory.getInstance(actionCode);
-        if (orderExecutor == null) {
-            throw new BiosLisExecutorException("Executor no encontrado para: ".concat(actionCode));
-        }
-        orderExecutor.exec(nroOrden, idUsuario);
-    }
+  private void doAction(String actionCode, Long nroOrden, Long idUsuario)
+      throws BiosLISDAOException, BiosLisExecutorException {
 
-    @Override
-    public List<DatosFichasexamenes> getExamenes(Long nroOrden) throws BiosLISDAOException {
-        return datosFichas_dao.getDatosFichasexamenesOrden(nroOrden);
+    ActionOrdenExecutor orderExecutor = ordenExecutorFactory.getInstance(actionCode);
+    if (orderExecutor == null) {
+      throw new BiosLisExecutorException("Executor no encontrado para: ".concat(actionCode));
     }
+    orderExecutor.exec(nroOrden, idUsuario);
+  }
 
-    public OrdenExecutorFactory getOrdenExecutorFactory() {
-        return ordenExecutorFactory;
-    }
+  @Override
+  public List<DatosFichasexamenes> getExamenes(Long nroOrden) throws BiosLISDAOException {
+    return datosFichas_dao.getDatosFichasexamenesOrden(nroOrden);
+  }
+
+  public OrdenExecutorFactory getOrdenExecutorFactory() {
+    return ordenExecutorFactory;
+  }
+
+  public void setOrdenExecutorFactory(OrdenExecutorFactory ordenExecutorFactory) {
+    this.ordenExecutorFactory = ordenExecutorFactory;
+  }
+
+  @Override
+  public DatosFichas insertOrden(DatosFichasDTO medReq, Integer[] examenes, String ipEquipo, Long idUsuario)
+      throws BiosLISDAOException, NumberFormatException, BiosLISException {
+
+    DatosFichas med = medReq.toDatosFicha();
+    if (med.getCfgDiagnosticos() == 0) {
+      med.setCfgDiagnosticos(1);
+    }
+    logger.debug("Procedencia {}", med.getCfgProcedencias());
+    logger.debug("Servicio {}", med.getCfgServicios());
 
-    public void setOrdenExecutorFactory(OrdenExecutorFactory ordenExecutorFactory) {
-        this.ordenExecutorFactory = ordenExecutorFactory;
+    if (med.getCfgServicios() == Constante.SIN_SERVICIO) {
+      med.setCfgServicios(Constante.CFG_SERVICIOS_SIN_SERVICIO);
     }
 
-    @Override
-    public DatosFichas insertOrden(DatosFichasDTO medReq, Integer[] examenes, String ipEquipo, Long idUsuario)
-            throws BiosLISDAOException, NumberFormatException, BiosLISException {
+    if (med.getCfgProcedencias() == Constante.SIN_PROCEDENCIA) {
+      med.setDfCodigolocalizacion("");
+      med.setCfgLocalizaciones(Constante.SIN_LOCALIZAR);
+      med.setCfgProcedencias(Constante.CFG_PROCEDENCIAS_SIN_PROCEDENCIA);
+    } else {
+      Integer idSalas = medReq.getSalas() == null ? 0
+          : (medReq.getSalas().equals("N") ? 0 : Integer.valueOf(medReq.getSalas()));
+      Integer idCamas = medReq.getCamas() == null ? 0
+          : (medReq.getCamas().equals("N") ? 0 : Integer.valueOf(medReq.getCamas()));
+      Integer idServicios = medReq.getCfgServicios() == null ? 0
+          : (medReq.getCfgServicios().equals("N") ? 0 : Integer.valueOf(medReq.getCfgServicios()));
 
-        DatosFichas med = medReq.toDatosFicha();
-        if (med.getCfgDiagnosticos() == 0) {
-            med.setCfgDiagnosticos(1);
-        }
-        logger.debug("Procedencia {}", med.getCfgProcedencias());
-        logger.debug("Servicio {}", med.getCfgServicios());
+      CfgLocalizaciones cl = cfgLocalizacionesDAO.getLocalizacion(idServicios, idSalas, idCamas);
+
+      if (cl != null) {
+        med.setDfCodigolocalizacion(cl.getClCodigolocalizacion());
+        med.setCfgLocalizaciones(cl.getClIdlocalizacion());
+      } else {
+        med.setDfCodigolocalizacion("");
+        med.setCfgLocalizaciones(Constante.SIN_LOCALIZAR);
+      }
+    }
+
+    datosFichasDAO.insertOrden(med, examenes, ipEquipo, idUsuario);
+    return med;
+
+  }
+
+  public CfgLocalizacionesDAO getCfgLocalizacionesDAO() {
+    return cfgLocalizacionesDAO;
+  }
+
+  public void setCfgLocalizacionesDAO(CfgLocalizacionesDAO cfgLocalizacionesDAO) {
+    this.cfgLocalizacionesDAO = cfgLocalizacionesDAO;
+  }
+
+  public DatosFichasDAO getDatosFichasDAO() {
+    return datosFichasDAO;
+  }
+
+  public void setDatosFichasDAO(DatosFichasDAO datosFichasDAO) {
+    this.datosFichasDAO = datosFichasDAO;
+  }
+
+  @Override
+  public List<DatosFichas> selectOrdenxRangoFechas(LocalDate fechaInicio, LocalDate fechaFin, Integer idPac)
+      throws BiosLISDAOException {
+    return datosFichasDAO.selectOrdenxRangoFechas(fechaInicio, fechaFin, idPac);
+  }
+
+  @Override
+  public boolean verificarMasDeUnaOrden(Integer idPac) {
+    return false;
+  }
 
-        if (med.getCfgServicios() == Constante.SIN_SERVICIO) {
-            med.setCfgServicios(Constante.CFG_SERVICIOS_SIN_SERVICIO);
+  @Override
+  public List<OrdenExamenValidoDTO> getOrdenesConExamenesValidosDeUnPaciente(Integer idPac) throws BiosLISDAOException {
+    return pacienteService.getOrdenesConExamenesValidosDeUnPaciente(idPac);
+  }
+
+  @Override
+  public String getOrdenesConExamenesValidosDeUnPaciente(DatosFichas med, Integer[] examenes)
+      throws BiosLISDAOException {
+
+    Boolean hayExamenesValidos = false;
+    List<OrdenExamenValidoDTO> lstOrdenes = this.getOrdenesConExamenesValidosDeUnPaciente(med.getDatosPacientes());
+    String mensaje = "Orden ".concat(Integer.toString(med.getDfNorden()));
+    StringBuilder sb = new StringBuilder(mensaje);
+    Long currentOrden = -1L;
+
+    if (!lstOrdenes.isEmpty()) {
+      hayExamenesValidos = true;
+      sb.append(" tiene validos los examenes siguientes: ");
+      for (OrdenExamenValidoDTO ordenExamenValidoDTO : lstOrdenes) {
+        if (!currentOrden.equals(ordenExamenValidoDTO.getDFE_NORDEN())) {
+          currentOrden = ordenExamenValidoDTO.getDFE_NORDEN();
+          sb.append("Orden:").append(currentOrden).append("\n");
         }
-
-        if (med.getCfgProcedencias() == Constante.SIN_PROCEDENCIA) {
-            med.setDfCodigolocalizacion("");
-            med.setCfgLocalizaciones(Constante.SIN_LOCALIZAR);
-            med.setCfgProcedencias(Constante.CFG_PROCEDENCIAS_SIN_PROCEDENCIA);
-        } else {
-            Integer idSalas = medReq.getSalas() == null ? 0
-                    : (medReq.getSalas().equals("N") ? 0 : Integer.valueOf(medReq.getSalas()));
-            Integer idCamas = medReq.getCamas() == null ? 0
-                    : (medReq.getCamas().equals("N") ? 0 : Integer.valueOf(medReq.getCamas()));
-            Integer idServicios = medReq.getCfgServicios() == null ? 0
-                    : (medReq.getCfgServicios().equals("N") ? 0 : Integer.valueOf(medReq.getCfgServicios()));
-
-            CfgLocalizaciones cl = cfgLocalizacionesDAO.getLocalizacion(idServicios, idSalas, idCamas);
-
-            if (cl != null) {
-                med.setDfCodigolocalizacion(cl.getClCodigolocalizacion());
-                med.setCfgLocalizaciones(cl.getClIdlocalizacion());
-            } else {
-                med.setDfCodigolocalizacion("");
-                med.setCfgLocalizaciones(Constante.SIN_LOCALIZAR);
-            }
+        for (Integer idTest : examenes) {
+          if (ordenExamenValidoDTO.getCE_IDEXAMEN().equals(idTest)) {
+            sb.append(ordenExamenValidoDTO.getCE_ABREVIADO()).append("\n");
+          }
         }
-
-        datosFichasDAO.insertOrden(med, examenes, ipEquipo, idUsuario);
-        return med;
-
-    }
-
-    public CfgLocalizacionesDAO getCfgLocalizacionesDAO() {
-        return cfgLocalizacionesDAO;
-    }
-
-    public void setCfgLocalizacionesDAO(CfgLocalizacionesDAO cfgLocalizacionesDAO) {
-        this.cfgLocalizacionesDAO = cfgLocalizacionesDAO;
+      }
     }
-
-    public DatosFichasDAO getDatosFichasDAO() {
-        return datosFichasDAO;
+    if (hayExamenesValidos) {
+      return sb.toString();
+    } else {
+      return "";
     }
+  }
 
-    public void setDatosFichasDAO(DatosFichasDAO datosFichasDAO) {
-        this.datosFichasDAO = datosFichasDAO;
-    }
+  public PacienteService getPacienteService() {
+    return pacienteService;
+  }
 
-    @Override
-    public List<DatosFichas> selectOrdenxRangoFechas(LocalDate fechaInicio, LocalDate fechaFin, Integer idPac)
-            throws BiosLISDAOException {
-        return datosFichasDAO.selectOrdenxRangoFechas(fechaInicio, fechaFin, idPac);
-    }
+  public void setPacienteService(PacienteService pacienteService) {
+    this.pacienteService = pacienteService;
+  }
 
-    @Override
-    public boolean verificarMasDeUnaOrden(Integer idPac) {
-        return false;
-    }
+  @Override
+  public DatosFichas insertOrden(DatosFichasDTO medReq, String ipEquipo, Long idUsuario)
+      throws BiosLISDAOException, BiosLISException {
 
-    @Override
-    public List<OrdenExamenValidoDTO> getOrdenesConExamenesValidosDeUnPaciente(Integer idPac)
-            throws BiosLISDAOException {
-        return pacienteService.getOrdenesConExamenesValidosDeUnPaciente(idPac);
-    }
+    logger.debug("Servicio {}", medReq.getCfgServicios());
+    DatosFichas med = medReq.toDatosFicha();
 
-    @Override
-    public String getOrdenesConExamenesValidosDeUnPaciente(DatosFichas med, Integer[] examenes)
-            throws BiosLISDAOException {
-
-        Boolean hayExamenesValidos = false;
-        List<OrdenExamenValidoDTO> lstOrdenes = this.getOrdenesConExamenesValidosDeUnPaciente(med.getDatosPacientes());
-        String mensaje = "Orden ".concat(Integer.toString(med.getDfNorden()));
-        StringBuilder sb = new StringBuilder(mensaje);
-        Long currentOrden = -1L;
-
-        if (!lstOrdenes.isEmpty()) {
-            hayExamenesValidos = true;
-            sb.append(" tiene validos los examenes siguientes: ");
-            for (OrdenExamenValidoDTO ordenExamenValidoDTO : lstOrdenes) {
-                if (!currentOrden.equals(ordenExamenValidoDTO.getDFE_NORDEN())) {
-                    currentOrden = ordenExamenValidoDTO.getDFE_NORDEN();
-                    sb.append("Orden:").append(currentOrden).append("\n");
-                }
-                for (Integer idTest : examenes) {
-                    if (ordenExamenValidoDTO.getCE_IDEXAMEN().equals(idTest)) {
-                        sb.append(ordenExamenValidoDTO.getCE_ABREVIADO()).append("\n");
-                    }
-                }
-            }
-        }
-        if (hayExamenesValidos) {
-            return sb.toString();
-        } else {
-            return "";
-        }
+    if (med.getCfgDiagnosticos() == 0) {
+      med.setCfgDiagnosticos(Constante.CD_IDDIAGNOSTICO_SIN_ESPECIFICAR);
     }
 
-    public PacienteService getPacienteService() {
-        return pacienteService;
-    }
+    logger.debug("Procedencia {}", med.getCfgProcedencias());
 
-    public void setPacienteService(PacienteService pacienteService) {
-        this.pacienteService = pacienteService;
+    if (med.getCfgServicios() == Constante.SIN_SERVICIO) {
+      med.setCfgServicios(Constante.CFG_SERVICIOS_SIN_SERVICIO);
     }
+    logger.debug("Servicio {}", med.getCfgServicios());
 
-    @Override
-    public DatosFichas insertOrden(DatosFichasDTO medReq, String ipEquipo, Long idUsuario)
-            throws BiosLISDAOException, BiosLISException {
-
-        logger.debug("Servicio {}", medReq.getCfgServicios());
-        DatosFichas med = medReq.toDatosFicha();
+    if (med.getCfgProcedencias() == Constante.SIN_PROCEDENCIA) {
+      med.setDfCodigolocalizacion("");
+      med.setCfgLocalizaciones(Constante.SIN_LOCALIZAR);
+      med.setCfgProcedencias(Constante.CFG_PROCEDENCIAS_SIN_PROCEDENCIA);
+    } else {
+      Integer idSalas = medReq.getSalas() == null ? 0
+          : (medReq.getSalas().equals("N") ? 0 : Integer.valueOf(medReq.getSalas()));
+      Integer idCamas = medReq.getCamas() == null ? 0
+          : (medReq.getCamas().equals("N") ? 0 : Integer.valueOf(medReq.getCamas()));
+      Integer idServicios = (medReq.getCfgServicios() == null ? 0 : medReq.getCfgServicios());
 
-        if (med.getCfgDiagnosticos() == 0) {
-            med.setCfgDiagnosticos(Constante.CD_IDDIAGNOSTICO_SIN_ESPECIFICAR);
-        }
-
-        logger.debug("Procedencia {}", med.getCfgProcedencias());
-
-        if (med.getCfgServicios() == Constante.SIN_SERVICIO) {
-            med.setCfgServicios(Constante.CFG_SERVICIOS_SIN_SERVICIO);
-        }
-        logger.debug("Servicio {}", med.getCfgServicios());
-
-        if (med.getCfgProcedencias() == Constante.SIN_PROCEDENCIA) {
-            med.setDfCodigolocalizacion("");
-            med.setCfgLocalizaciones(Constante.SIN_LOCALIZAR);
-            med.setCfgProcedencias(Constante.CFG_PROCEDENCIAS_SIN_PROCEDENCIA);
-        } else {
-            Integer idSalas = medReq.getSalas() == null ? 0
-                    : (medReq.getSalas().equals("N") ? 0 : Integer.valueOf(medReq.getSalas()));
-            Integer idCamas = medReq.getCamas() == null ? 0
-                    : (medReq.getCamas().equals("N") ? 0 : Integer.valueOf(medReq.getCamas()));
-            Integer idServicios = (medReq.getCfgServicios() == null ? 0 : medReq.getCfgServicios());
-
-            CfgLocalizaciones cl = cfgLocalizacionesDAO.getLocalizacion(idServicios, idSalas, idCamas);
-
-            if (cl != null) {
-                med.setDfCodigolocalizacion(cl.getClCodigolocalizacion());
-                med.setCfgLocalizaciones(cl.getClIdlocalizacion());
-            } else {
-                med.setDfCodigolocalizacion("");
-                med.setCfgLocalizaciones(Constante.SIN_LOCALIZAR);
-            }
-        }
+      CfgLocalizaciones cl = cfgLocalizacionesDAO.getLocalizacion(idServicios, idSalas, idCamas);
 
-        datosFichasDAO.insertOrden(med, medReq.getLstExamenesDto(), ipEquipo, idUsuario);
-        return med;
+      if (cl != null) {
+        med.setDfCodigolocalizacion(cl.getClCodigolocalizacion());
+        med.setCfgLocalizaciones(cl.getClIdlocalizacion());
+      } else {
+        med.setDfCodigolocalizacion("");
+        med.setCfgLocalizaciones(Constante.SIN_LOCALIZAR);
+      }
     }
 
-    @Override
-    public String getOrdenesConExamenesValidosDeUnPaciente(DatosFichas med, CfgExamenesDTO[] lstExamenesDto)
-            throws BiosLISDAOException {
+    datosFichasDAO.insertOrden(med, medReq.getLstExamenesDto(), ipEquipo, idUsuario);
+    return med;
+  }
 
-        int n = lstExamenesDto.length;
-        Integer[] lstIdeExamen = new Integer[n];
+  @Override
+  public String getOrdenesConExamenesValidosDeUnPaciente(DatosFichas med, CfgExamenesDTO[] lstExamenesDto)
+      throws BiosLISDAOException {
 
-        for (int i = 0; i < n; i++) {
-            lstIdeExamen[i] = Integer.valueOf(Long.valueOf(lstExamenesDto[i].getCeIdexamen()).toString());
-        }
+    int n = lstExamenesDto.length;
+    Integer[] lstIdeExamen = new Integer[n];
 
-        return this.getOrdenesConExamenesValidosDeUnPaciente(med, lstIdeExamen);
+    for (int i = 0; i < n; i++) {
+      lstIdeExamen[i] = Integer.valueOf(Long.valueOf(lstExamenesDto[i].getCeIdexamen()).toString());
     }
 
-    @Override
-    public List<OrdenInformeResultadoDTO> getBOOrdenesConSeccionesCapturaResultados(BOOrdenesFiltroDTO fichaFiltroDTO)
-            throws BiosLISException {
-
-        FichaFiltroDTO ffDto = new FichaFiltroDTO();
-
-        ffDto.setApellido(fichaFiltroDTO.getBo_apellido());
-        ffDto.setfFin(fichaFiltroDTO.getBo_fFin());
-        ffDto.setfIni(fichaFiltroDTO.getBo_fIni());
-        ffDto.setLocalizacion(fichaFiltroDTO.getBo_localizacion());
-        ffDto.setNombre(fichaFiltroDTO.getBo_nombre());
-        ffDto.setnOrden(fichaFiltroDTO.getBo_nOrdenIni());
-        ffDto.setNroDocumento(fichaFiltroDTO.getBo_nroDocumento());
-        ffDto.setTipoAtencion(fichaFiltroDTO.getBo_tipoAtencion());
-        ffDto.setTipoDocumento(fichaFiltroDTO.getBo_tipoDocumento());
-        // ffDto.set(fichaFiltroDTO.getBo_nOrdenFin());
-       
-        return datosFichas_dao.getOrdenesCapturaResultados(ffDto);
+    return this.getOrdenesConExamenesValidosDeUnPaciente(med, lstIdeExamen);
+  }
 
-    }
+  @Override
+  public List<OrdenInformeResultadoDTO> getBOOrdenesConSeccionesCapturaResultados(BOOrdenesFiltroDTO fichaFiltroDTO)
+      throws BiosLISException {
 
-    @Override
-    public List<OrdenInformeResultadoDTO> getBOOrdenesConSecciones(BCFichaFiltroDTO fichaFiltroDTO)
-            throws BiosLISException {
+    FichaFiltroDTO ffDto = new FichaFiltroDTO();
 
-        return datosFichas_dao.getBOOrdenesConSecciones(fichaFiltroDTO);
+    ffDto.setApellido(fichaFiltroDTO.getBo_apellido());
+    ffDto.setfFin(fichaFiltroDTO.getBo_fFin());
+    ffDto.setfIni(fichaFiltroDTO.getBo_fIni());
+    ffDto.setLocalizacion(fichaFiltroDTO.getBo_localizacion());
+    ffDto.setNombre(fichaFiltroDTO.getBo_nombre());
+    ffDto.setnOrden(fichaFiltroDTO.getBo_nOrdenIni());
+    ffDto.setNroDocumento(fichaFiltroDTO.getBo_nroDocumento());
+    ffDto.setTipoAtencion(fichaFiltroDTO.getBo_tipoAtencion());
+    ffDto.setTipoDocumento(fichaFiltroDTO.getBo_tipoDocumento());
+    // ffDto.set(fichaFiltroDTO.getBo_nOrdenFin());
 
-    }
+    return datosFichas_dao.getOrdenesCapturaResultados(ffDto);
 
-    @Override
-    public void addTestOpcional2Examen(Integer ordenId, Integer examenId, Integer testId) throws BiosLISDAOException {
-        datosFichasDAO.addTestOpcional2Examen(ordenId, examenId, testId);
-    }
+  }
 
-    @Override
-    public void addTestOpcionalList2Examen(Integer ordenId, Integer examenId, Integer[] testIdLst)
-            throws BiosLISDAOException {
-        for (Integer testId : testIdLst) {
-            datosFichasDAO.addTestOpcional2Examen(ordenId, examenId, testId);
-        }
+  @Override
+  public List<OrdenInformeResultadoDTO> getBOOrdenesConSecciones(BOOrdenesFiltroDTO fichaFiltroDTO)
+      throws BiosLISException {
 
-    }
+    return datosFichas_dao.getBOOrdenesConSecciones(fichaFiltroDTO);
 
-    @Override
-    public ResultadoTestNotificacionDeUnaOrdenDTO getDatosTestNotificacion(Long nroOrden, Long examenId, Long testId)
-            throws BiosLISDAOException {
-        return capturaResultadosDAO.getDatosTestNotificacion(nroOrden, examenId, testId);
-    }
+  }
 
-    @Override
-    public Integer insertDatosTestNotificacion(Long nroOrden, Long examenId, Long testId,
-            DatosFichaTestNotificaciones notif) throws BiosLISDAOException {
-        return capturaResultadosDAO.insertDatosFichasNotificacionTest(notif);
-    }
+  @Override
+  public void addTestOpcional2Examen(Integer ordenId, Integer examenId, Integer testId) throws BiosLISDAOException {
+    datosFichasDAO.addTestOpcional2Examen(ordenId, examenId, testId);
+  }
 
-    @Override
-    public OrdenFullDTO getDatosOrdenFull(int nOrden) throws BiosLISDAOException {
-        return datosFichas_dao.getDatosOrdenFull(nOrden);
+  @Override
+  public void addTestOpcionalList2Examen(Integer ordenId, Integer examenId, Integer[] testIdLst)
+      throws BiosLISDAOException {
+    for (Integer testId : testIdLst) {
+      datosFichasDAO.addTestOpcional2Examen(ordenId, examenId, testId);
     }
 
-    @Override
-    public void updateEstadoResultadoExamenesOrdenes(Long nroOrden, Long examenId, Long testId, String estado, Long idUsuario)
-            throws BiosLISDAOException {
-        this.capturaResultadosDAO.updateEstadoResultadoExamenesOrdenes(nroOrden, examenId, testId, estado, idUsuario);
+  }
 
-    }
+  @Override
+  public ResultadoTestNotificacionDeUnaOrdenDTO getDatosTestNotificacion(Long nroOrden, Long examenId, Long testId)
+      throws BiosLISDAOException {
+    return capturaResultadosDAO.getDatosTestNotificacion(nroOrden, examenId, testId);
+  }
 
-    // CREADO POR CRISTIAN 05-09-2022 PRUEBA ACTUALIZAR FECHA RESULTADO TEST
-    @Override
-    public void updateContadorFichaExamenTest(Long nroOrden, Long examenId, Long testId, String fechaResultado)
-            throws BiosLISDAOException {
-        this.capturaResultadosDAO.updateContadorFichaExamenTest(nroOrden, examenId, testId, fechaResultado);
-
-    }
+  @Override
+  public Integer insertDatosTestNotificacion(Long nroOrden, Long examenId, Long testId,
+      DatosFichaTestNotificaciones notif) throws BiosLISDAOException {
+    return capturaResultadosDAO.insertDatosFichasNotificacionTest(notif);
+  }
 
-//CREADO POR CRISTIAN 05-09-2022 GRABAR DATOS CONTADOR CELULAS
-    @Override
-    public void insertDatosContadorCelulas(CfgCellcounter cellCounter) throws BiosLISDAOException {
-        this.capturaResultadosDAO.insertDatosContadorCelulas(cellCounter);
+  @Override
+  public OrdenFullDTO getDatosOrdenFull(int nOrden) throws BiosLISDAOException {
+    return datosFichas_dao.getDatosOrdenFull(nOrden);
+  }
 
-    }
+  @Override
+  public void updateEstadoResultadoExamenesOrdenes(Long nroOrden, Long examenId, Long testId, String estado,
+      Long idUsuario) throws BiosLISDAOException {
+    this.capturaResultadosDAO.updateEstadoResultadoExamenesOrdenes(nroOrden, examenId, testId, estado, idUsuario);
 
-//CREADO POR CRISTIAN DEVUELVE DATOS CELLCOUNTER
-    @Override
-    public CfgCellcounter getCellCounter() throws BiosLISDAOException {
-        return this.capturaResultadosDAO.getCellCounter();
-    }
+  }
 
-    @Override
-    public void updateEstadoTransmitidoResultadoTestExamenOrden(ResultadoNumericoTestExamenOrdenDTO resultado)
-            throws BiosLISDAOException, ParseException {
-        this.capturaResultadosDAO.updateEstadoTransmitidoResultadoTestExamenOrden(resultado);
+  // CREADO POR CRISTIAN 05-09-2022 PRUEBA ACTUALIZAR FECHA RESULTADO TEST
+  @Override
+  public void updateContadorFichaExamenTest(Long nroOrden, Long examenId, Long testId, String fechaResultado)
+      throws BiosLISDAOException {
+    this.capturaResultadosDAO.updateContadorFichaExamenTest(nroOrden, examenId, testId, fechaResultado);
 
-    }
+  }
 
-    @Override
-    public List<Object> getDatosPacienteTest(Long idPaciente, Long idTest) throws BiosLISDAOException {
-        List<Object> result = this.capturaResultadosDAO.getPacienteTest(idPaciente, idTest);
-        return result;
-    }
-
-    @Override
-    public List<DatosFichasexamenestest> getDatosFichasExamenesTestByOrden(long orden) throws BiosLISDAOException {
-        // TODO Auto-generated method stub
-        return datosFichasExamenesTestDAO.getDatosFichasExamenesTestByOrden(orden);
-    }
-
-    @Override
-    public Object datosExamenById(Long examen) throws BiosLISDAOException, BiosLISDAONotFoundException {
-        Object resultado = this.capturaResultadosDAO.datosExamenById(examen);
-        return resultado;
-    }
-
-    @Override
-    public Object unidadMedidaById(int idMedida) throws BiosLISDAOException {
-
-        return this.capturaResultadosDAO.unidadMedidaById(idMedida);
-    }
+//CREADO POR CRISTIAN 05-09-2022 GRABAR DATOS CONTADOR CELULAS
+  @Override
+  public void insertDatosContadorCelulas(CfgCellcounter cellCounter) throws BiosLISDAOException {
+    this.capturaResultadosDAO.insertDatosContadorCelulas(cellCounter);
 
-    @Override
-    public List<Object> getDatosOrdenTestUnidad(Long nOrden) throws BiosLISDAOException {
-        return this.capturaResultadosDAO.getDatosOrdenTestUnidad(nOrden);
-    }
+  }
 
-    @Override
-    public List<CfgTest> getTestAll() throws BiosLISDAOException {
-        // TODO Auto-generated method stub
-        return this.capturaResultadosDAO.getTestAll();
-    }
+//CREADO POR CRISTIAN DEVUELVE DATOS CELLCOUNTER
+  @Override
+  public CfgCellcounter getCellCounter() throws BiosLISDAOException {
+    return this.capturaResultadosDAO.getCellCounter();
+  }
+
+  @Override
+  public void updateEstadoTransmitidoResultadoTestExamenOrden(ResultadoNumericoTestExamenOrdenDTO resultado)
+      throws BiosLISDAOException, ParseException {
+    this.capturaResultadosDAO.updateEstadoTransmitidoResultadoTestExamenOrden(resultado);
+
+  }
+
+  @Override
+  public List<Object> getDatosPacienteTest(Long idPaciente, Long idTest) throws BiosLISDAOException {
+    List<Object> result = this.capturaResultadosDAO.getPacienteTest(idPaciente, idTest);
+    return result;
+  }
+
+  @Override
+  public List<DatosFichasexamenestest> getDatosFichasExamenesTestByOrden(long orden) throws BiosLISDAOException {
+    // TODO Auto-generated method stub
+    return datosFichasExamenesTestDAO.getDatosFichasExamenesTestByOrden(orden);
+  }
+
+  @Override
+  public Object datosExamenById(Long examen) throws BiosLISDAOException, BiosLISDAONotFoundException {
+    Object resultado = this.capturaResultadosDAO.datosExamenById(examen);
+    return resultado;
+  }
+
+  @Override
+  public Object unidadMedidaById(int idMedida) throws BiosLISDAOException {
+
+    return this.capturaResultadosDAO.unidadMedidaById(idMedida);
+  }
+
+  @Override
+  public List<Object> getDatosOrdenTestUnidad(Long nOrden) throws BiosLISDAOException {
+    return this.capturaResultadosDAO.getDatosOrdenTestUnidad(nOrden);
+  }
+
+  @Override
+  public List<CfgTest> getTestAll() throws BiosLISDAOException {
+    // TODO Auto-generated method stub
+    return this.capturaResultadosDAO.getTestAll();
+  }
 
 //*************************************************************************
-    @Override
-    public List<CfgTest> getTestOpcionalesExamenesOrden(Long nOrden, Long idExamen) throws BiosLISDAOException {
-        return this.datosFichasDAO.getTestOpcionalesExamenesOrden(nOrden, idExamen);
-    }
-
-    @Override
-    public RangoValorResultado resetResultadoTestExamenOrden(ResultadoNumericoTestExamenOrdenDTO resultado)
-            throws BiosLISDAOException, ParseException {
-        return this.capturaResultadosDAO.resetResultadoTestExamenOrden(resultado);
-    }
-
-    // creado por cristian 12-10
-    @Override
-    public DatosLineaTiempoDTO getDatosLineaTiempo(Long nOrden, Long idExamen, Long idTest) throws BiosLISDAOException {
-        return this.capturaResultadosDAO.getDatosLineaTiempo(nOrden, idExamen, idTest);
-    }
-
-//*****creado por cristian 18-10   edicion de orden **  aca segun servicio, cama , sala se consige la localizacion -- id y codigo localizacion 
-    public Boolean updatefichaExamenTest(DatosFichasDTO datosFichasExamenTest, Long idUsuario)
-            throws BiosLISDAOException {
-        Integer idSalas = datosFichasExamenTest.getSalas() == null ? 0 : (datosFichasExamenTest.getSalas().equals("N") ? 0 : Integer.valueOf(datosFichasExamenTest.getSalas()));
-        Integer idCamas = datosFichasExamenTest.getCamas() == null ? 0 : (datosFichasExamenTest.getCamas().equals("N") ? 0 : Integer.valueOf(datosFichasExamenTest.getCamas()));
-        Integer idServicios = (datosFichasExamenTest.getCfgServicios() == null ? 0 : datosFichasExamenTest.getCfgServicios());
-
-        CfgLocalizaciones cl = cfgLocalizacionesDAO.getLocalizacion(idServicios, idSalas, idCamas);
-        datosFichasExamenTest.setCfgLocalizaciones(cl.getClIdlocalizacion());
-        datosFichasExamenTest.setDfCodigolocalizacion(cl.getClCodigolocalizacion());
-       
-        return this.datosFichasExamenesTestDAO.updateFichasExamenesTest(datosFichasExamenTest, idUsuario);
-    }
-
-   
+  @Override
+  public List<CfgTest> getTestOpcionalesExamenesOrden(Long nOrden, Long idExamen) throws BiosLISDAOException {
+    return this.datosFichasDAO.getTestOpcionalesExamenesOrden(nOrden, idExamen);
+  }
+
+  @Override
+  public RangoValorResultado resetResultadoTestExamenOrden(ResultadoNumericoTestExamenOrdenDTO resultado)
+      throws BiosLISDAOException, ParseException {
+    return this.capturaResultadosDAO.resetResultadoTestExamenOrden(resultado);
+  }
+
+  // creado por cristian 12-10
+  @Override
+  public DatosLineaTiempoDTO getDatosLineaTiempo(Long nOrden, Long idExamen, Long idTest) throws BiosLISDAOException {
+    return this.capturaResultadosDAO.getDatosLineaTiempo(nOrden, idExamen, idTest);
+  }
+
+//*****creado por cristian 18-10   edicion de orden
+  public Boolean updatefichaExamenTest(DatosFichasDTO datosFichasExamenTest, Long idUsuario)
+      throws BiosLISDAOException {
+
+    // DatosFichasexamenes examen = new DatosFichasexamenes();
+
+    Integer idSalas = datosFichasExamenTest.getSalas() == null ? 0
+        : (datosFichasExamenTest.getSalas().equals("N") ? 0 : Integer.valueOf(datosFichasExamenTest.getSalas()));
+    Integer idCamas = datosFichasExamenTest.getCamas() == null ? 0
+        : (datosFichasExamenTest.getCamas().equals("N") ? 0 : Integer.valueOf(datosFichasExamenTest.getCamas()));
+    Integer idServicios = (datosFichasExamenTest.getCfgServicios() == null ? 0
+        : datosFichasExamenTest.getCfgServicios());
+
+    CfgLocalizaciones cl = cfgLocalizacionesDAO.getLocalizacion(idServicios, idSalas, idCamas);
+    logger.debug(cl.getClCodigolocalizacion());
+    datosFichasExamenTest.setCfgLocalizaciones(cl.getClIdlocalizacion());
+    datosFichasExamenTest.setDfCodigolocalizacion(cl.getClCodigolocalizacion());
+
+    Boolean respuesta = this.datosFichasExamenesTestDAO.updateFichasExamenesTest(datosFichasExamenTest, idUsuario);
+    logger.debug(respuesta);
+
+    // DatosFichasexamenes dfe =
+    // this.getDatosFichasexamenesById(examen.getIddatosFichasExamenes());
+    // dfe.setDfeExamenesurgente(examen.getDfeExamenesurgente());
+    // sesion.update(dfe);
+
+    return true;
+
+  }
 
 }
diff --git a/src/main/java/com/grupobios/bioslis/bs/ProcesosService.java b/src/main/java/com/grupobios/bioslis/bs/ProcesosService.java
index c2a06a3b..f0e7fbb4 100644
--- a/src/main/java/com/grupobios/bioslis/bs/ProcesosService.java
+++ b/src/main/java/com/grupobios/bioslis/bs/ProcesosService.java
@@ -11,6 +11,7 @@ import com.grupobios.bioslis.entity.LdvOperacionesmath;
 import com.grupobios.bioslis.entity.LdvTipocomunicacion;
 import com.grupobios.bioslis.entity.LdvTiposcondicion;
 import com.grupobios.bioslis.entity.SigmaProcesos;
+import com.grupobios.bioslis.entity.SigmaProcesosalarmas;
 import com.grupobios.bioslis.entity.SigmaTiposmuestras;
 import java.util.HashMap;
 import java.util.List;
@@ -36,4 +37,8 @@ public interface ProcesosService {
     List<LdvTiposcondicion> getListTiposCondicion() throws BiosLISDAOException;
     
     List<LdvOperacionesmath> getListOperacionesMath() throws BiosLISDAOException;
+    
+    List<SigmaProcesos> getProcesoByCodigo(String codigoProceso) throws BiosLISDAOException;
+    
+    List<SigmaProcesosalarmas> getAlarmasByCodigoProceso(String codigoProceso) throws BiosLISDAOException;
 }
diff --git a/src/main/java/com/grupobios/bioslis/bs/ProcesosServiceImpl.java b/src/main/java/com/grupobios/bioslis/bs/ProcesosServiceImpl.java
index 6369d68d..5e5e8c7d 100644
--- a/src/main/java/com/grupobios/bioslis/bs/ProcesosServiceImpl.java
+++ b/src/main/java/com/grupobios/bioslis/bs/ProcesosServiceImpl.java
@@ -11,10 +11,13 @@ import com.grupobios.bioslis.dao.CfgTiposderesultadoDAO;
 import com.grupobios.bioslis.dao.LdvOperacionesMathDAO;
 import com.grupobios.bioslis.dao.LdvTipoComunicacionDAO;
 import com.grupobios.bioslis.dao.LdvTiposCondicionDAO;
+import com.grupobios.bioslis.dao.SigmaProcesosAlarmasDAO;
 import com.grupobios.bioslis.dao.SigmaProcesosDAO;
+import com.grupobios.bioslis.dao.SigmaProcesosTestConversionDAO;
 import com.grupobios.bioslis.dao.SigmaProcesosTestDAO;
 import com.grupobios.bioslis.dao.SigmaTiposMuestrasDAO;
 import com.grupobios.bioslis.dto.ProcesosDTO;
+import com.grupobios.bioslis.dto.ProcesosTestsConversionDTO;
 import com.grupobios.bioslis.dto.ProcesosTestsDTO;
 import com.grupobios.bioslis.entity.CfgMuestrasprefijos;
 import com.grupobios.bioslis.entity.CfgTiposderesultado;
@@ -22,7 +25,10 @@ import com.grupobios.bioslis.entity.LdvOperacionesmath;
 import com.grupobios.bioslis.entity.LdvTipocomunicacion;
 import com.grupobios.bioslis.entity.LdvTiposcondicion;
 import com.grupobios.bioslis.entity.SigmaProcesos;
+import com.grupobios.bioslis.entity.SigmaProcesosalarmas;
 import com.grupobios.bioslis.entity.SigmaProcesostest;
+import com.grupobios.bioslis.entity.SigmaProcesotestconversion;
+import com.grupobios.bioslis.entity.SigmaProcesotestconversionId;
 import com.grupobios.bioslis.entity.SigmaTiposmuestras;
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -46,7 +52,10 @@ public class ProcesosServiceImpl implements ProcesosService{
     LdvOperacionesMathDAO operacionesMathDAO;
     CfgTiposderesultadoDAO cfgTiposderesultadoDAO;
     CfgMuestrasPrefijosDAO muestrasPrefijosDAO;
+    SigmaProcesosTestConversionDAO procesosTestConversionDAO;
+    SigmaProcesosAlarmasDAO procesosAlarmasDAO;
 
+    //GETTERS Y SETTERS
     public SigmaProcesosDAO getProcesosDAO() {
         return procesosDAO;
     }
@@ -110,6 +119,23 @@ public class ProcesosServiceImpl implements ProcesosService{
     public void setMuestrasPrefijosDAO(CfgMuestrasPrefijosDAO muestrasPrefijosDAO) {
         this.muestrasPrefijosDAO = muestrasPrefijosDAO;
     }
+
+    public SigmaProcesosTestConversionDAO getProcesosTestConversionDAO() {
+        return procesosTestConversionDAO;
+    }
+
+    public void setProcesosTestConversionDAO(SigmaProcesosTestConversionDAO procesosTestConversionDAO) {
+        this.procesosTestConversionDAO = procesosTestConversionDAO;
+    }
+
+    public SigmaProcesosAlarmasDAO getProcesosAlarmasDAO() {
+        return procesosAlarmasDAO;
+    }
+
+    public void setProcesosAlarmasDAO(SigmaProcesosAlarmasDAO procesosAlarmasDAO) {
+        this.procesosAlarmasDAO = procesosAlarmasDAO;
+    }
+    //END GETTERS Y SETTERS
     
     @Override
     public List<SigmaProcesos> getProcesosFiltro(HashMap<String, String> filtros) throws BiosLISDAOException {
@@ -135,23 +161,56 @@ public class ProcesosServiceImpl implements ProcesosService{
             ProcesosTestsDTO pTestsDTO = new ProcesosTestsDTO();
             pTestsDTO.setSigmaProcesostest(spt);
             pTestsDTO.setIdTest(spt.getCfgTest().getCtIdtest());
-            pTestsDTO.setIdSigmaTipoMuestra(spt.getSigmaTiposmuestras().getStmIdsigmatipomuestra());
+            if (spt.getSigmaTiposmuestras()!=null){
+                pTestsDTO.setIdSigmaTipoMuestra(spt.getSigmaTiposmuestras().getStmIdsigmatipomuestra());
+            }
             if (spt.getCfgTiposderesultado()!=null){
                 pTestsDTO.setIdtiporesultado(spt.getCfgTiposderesultado().getCtrIdtiporesultado());
             }
-            if (spt.getCfgMuestrasprefijos().getCmuepPrefijotipomuestra()!=null){
+            if (spt.getCfgMuestrasprefijos()!=null){
                 pTestsDTO.setPrefijoTipoMuestra(spt.getCfgMuestrasprefijos().getCmuepPrefijotipomuestra());
             }
+            
+            List<SigmaProcesotestconversion> listConversiones = procesosTestConversionDAO.getConversionesFromProcesoTest(sp.getSpIdproceso(), spt.getCfgTest().getCtIdtest());
+            List<ProcesosTestsConversionDTO> listConversionesDTO = new ArrayList<>();
+            for (SigmaProcesotestconversion sptc : listConversiones){
+                ProcesosTestsConversionDTO ptcdto = new ProcesosTestsConversionDTO();
+                if (sptc.getLdvOperacionesmath()!=null){
+                    ptcdto.setLdvomIdoperadormath(sptc.getLdvOperacionesmath().getLdvomIdoperadormath());
+                } else {
+                    ptcdto.setLdvomIdoperadormath(Byte.valueOf("0"));
+                }
+                if (sptc.getLdvTiposcondicion()!=null){
+                    ptcdto.setLdvtcondIdtipocondicion(sptc.getLdvTiposcondicion().getLdvtcondIdtipocondicion());
+                } else {
+                    ptcdto.setLdvtcondIdtipocondicion(Byte.valueOf("0"));
+                }
+                ptcdto.setSptcNumerocondicion(sptc.getId().getSptcNumerocondicion());
+                ptcdto.setSptcBloquearsn(sptc.getSptcBloquearsn());
+                ptcdto.setSptcCalculosn(sptc.getSptcCalculosn());
+                ptcdto.setSptcCondicionalsn(sptc.getSptcCondicionalsn());
+                ptcdto.setSptcCriticosn(sptc.getSptcCriticosn());
+                ptcdto.setSptcFirmarsn(sptc.getSptcFirmarsn());
+                ptcdto.setSptcReprocesarsn(sptc.getSptcReprocesarsn());
+                ptcdto.setSptcValorentrada(sptc.getSptcValorentrada());
+                ptcdto.setSptcValoroperando(sptc.getSptcValoroperando());
+                ptcdto.setSptcValorsalida(sptc.getSptcValorsalida());
+                listConversionesDTO.add(ptcdto);
+            }
+            ProcesosTestsConversionDTO[] conversionesDTOs = listConversionesDTO.toArray(new ProcesosTestsConversionDTO[0]);
+            pTestsDTO.setConversiones(listConversionesDTO.toArray(conversionesDTOs));
             listaProcesosTestDTO.add(pTestsDTO);
         }
         ProcesosTestsDTO[] procesosTestsDTOs = listaProcesosTestDTO.toArray(new ProcesosTestsDTO[0]);
         procesosDTO.setProcesosTests(listaProcesosTestDTO.toArray(procesosTestsDTOs));
+        
         procesosDTO.setSigmaProcesos(sp);
         return procesosDTO;
     }
 
     @Override
     public void insertProceso(ProcesosDTO procesoDTO) throws BiosLISDAOException {
+        //insertar procesos
         SigmaProcesos sp = procesoDTO.getSigmaProcesos();
         sp.setSpIdproceso(procesosDAO.obtenerIdSecuencia());
         if (procesoDTO.getLdvTipocomunicacion().getLdvtcIdtipocomunicacion() > 0){
@@ -159,6 +218,7 @@ public class ProcesosServiceImpl implements ProcesosService{
         }
         procesosDAO.insertProceso(sp);
         
+        //insertar procesos tests
         ProcesosTestsDTO[] ptDtos = procesoDTO.getProcesosTests();
         for (ProcesosTestsDTO ptd: ptDtos){
             SigmaProcesostest sigmaProcesostest = ptd.getSigmaProcesostest();
@@ -167,18 +227,130 @@ public class ProcesosServiceImpl implements ProcesosService{
             if (ptd.getIdtiporesultado()>0){
                 CfgTiposderesultado tipoResultado = cfgTiposderesultadoDAO.getTipoResultadoById(ptd.getIdtiporesultado());
                 sigmaProcesostest.setCfgTiposderesultado(tipoResultado);
-            }           
+            }
+            if (ptd.getIdSigmaTipoMuestra()>0){
+                SigmaTiposmuestras sigmaTiposmuestras = sigmaTiposMuestrasDAO.getSigmaTiposMuestrasById(ptd.getIdSigmaTipoMuestra());
+                sigmaProcesostest.setSigmaTiposmuestras(sigmaTiposmuestras);
+            }
             if (!"".equals(ptd.getPrefijoTipoMuestra())){
-                CfgMuestrasprefijos muestraPrefijo = muestrasPrefijosDAO.getMuestraPrefijo(ptd.getPrefijoTipoMuestra());
-                sigmaProcesostest.setCfgMuestrasprefijos(muestraPrefijo);
+                if (muestrasPrefijosDAO.existeMuestraPrefijo(ptd.getPrefijoTipoMuestra())){
+                    CfgMuestrasprefijos muestraPrefijo = muestrasPrefijosDAO.getMuestraPrefijo(ptd.getPrefijoTipoMuestra());
+                    sigmaProcesostest.setCfgMuestrasprefijos(muestraPrefijo);
+                } else {
+                    CfgMuestrasprefijos newMuestra = new CfgMuestrasprefijos();
+                    newMuestra.setCmuepPrefijotipomuestra(ptd.getPrefijoTipoMuestra());
+                    newMuestra.setCmuepIdtipomuestra(ptd.getCmueIdtipomuestra());
+                    muestrasPrefijosDAO.insertPrefijo(newMuestra);
+                }
+                
             }
             procesosTestDAO.insertProcesotest(sigmaProcesostest);
+            
+            //insertar conversiones procesos tests
+            if (ptd.getConversiones()!=null){
+                ProcesosTestsConversionDTO[] conversionesDTO = ptd.getConversiones();
+                for (ProcesosTestsConversionDTO ptcd: conversionesDTO){
+                    SigmaProcesotestconversionId sptcId = new SigmaProcesotestconversionId();
+                    sptcId.setSptcIdproceso(sp.getSpIdproceso());
+                    sptcId.setSptcIdtest(sigmaProcesostest.getId().getSptIdtest());
+                    sptcId.setSptcNumerocondicion(ptcd.getSptcNumerocondicion());
+                    LdvTiposcondicion ldvTiposcondicion = null;
+                    if (ptcd.getLdvtcondIdtipocondicion() > 0){
+                        ldvTiposcondicion = tiposCondicionDAO.getTipoCondicionById(ptcd.getLdvtcondIdtipocondicion());
+                    }
+                    LdvOperacionesmath ldvOperacionesmath = null;
+                    if (ptcd.getLdvomIdoperadormath() > 0){
+                        ldvOperacionesmath = operacionesMathDAO.getOperacionesMathById(ptcd.getLdvomIdoperadormath());
+                    }
+                    SigmaProcesotestconversion sigmaProcesotestconversion = ptcd.toSigmaProcesotestconversion(sptcId, sigmaProcesostest, ldvTiposcondicion, ldvOperacionesmath);
+                    procesosTestConversionDAO.insertProceso(sigmaProcesotestconversion);                
+                }
+            }
+        }
+        
+        SigmaProcesosalarmas[] procesosalarmas = procesoDTO.getProcesosAlarmas();
+        for (SigmaProcesosalarmas alarma : procesosalarmas){
+            alarma.setSigmaProcesos(sp);
+            procesosAlarmasDAO.insertAlarma(alarma);
         }
     }
 
     @Override
     public void updateProceso(ProcesosDTO procesoDTO) throws BiosLISDAOException {
+        //Editar procesos
         SigmaProcesos sp = procesoDTO.getSigmaProcesos();
+        if (procesoDTO.getLdvTipocomunicacion().getLdvtcIdtipocomunicacion() > 0){
+            sp.setLdvTipocomunicacion(procesoDTO.getLdvTipocomunicacion());
+        }
+        
+        //Editar procesos test
+        ProcesosTestsDTO[] ptDtos = procesoDTO.getProcesosTests();
+        for (ProcesosTestsDTO ptd: ptDtos){
+            SigmaProcesostest sigmaProcesostest = ptd.getSigmaProcesostest();
+            sigmaProcesostest.getId().setSptIdproceso(sp.getSpIdproceso());
+            sigmaProcesostest.setSigmaProcesos(sp);
+            if (ptd.getIdtiporesultado()>0){
+                CfgTiposderesultado tipoResultado = cfgTiposderesultadoDAO.getTipoResultadoById(ptd.getIdtiporesultado());
+                sigmaProcesostest.setCfgTiposderesultado(tipoResultado);
+            }           
+            if (ptd.getIdSigmaTipoMuestra()>0){
+                SigmaTiposmuestras sigmaTiposmuestras = sigmaTiposMuestrasDAO.getSigmaTiposMuestrasById(ptd.getIdSigmaTipoMuestra());
+                sigmaProcesostest.setSigmaTiposmuestras(sigmaTiposmuestras);
+            }
+            if (!"".equals(ptd.getPrefijoTipoMuestra())){
+                if (muestrasPrefijosDAO.existeMuestraPrefijo(ptd.getPrefijoTipoMuestra())){
+                    CfgMuestrasprefijos muestraPrefijo = muestrasPrefijosDAO.getMuestraPrefijo(ptd.getPrefijoTipoMuestra());
+                    sigmaProcesostest.setCfgMuestrasprefijos(muestraPrefijo);
+                } else {
+                    CfgMuestrasprefijos newMuestra = new CfgMuestrasprefijos();
+                    newMuestra.setCmuepPrefijotipomuestra(ptd.getPrefijoTipoMuestra());
+                    newMuestra.setCmuepIdtipomuestra(ptd.getCmueIdtipomuestra());
+                    muestrasPrefijosDAO.insertPrefijo(newMuestra);
+                }
+                
+            }
+            if (!procesosTestDAO.existeProcesoTest(sp.getSpIdproceso(), ptd.getIdTest())){
+                procesosTestDAO.insertProcesotest(sigmaProcesostest);
+            } else {
+                procesosTestDAO.updateProcesotest(sigmaProcesostest);
+            }
+            
+            //Editar conversiones procesos test
+            if (ptd.getConversiones()!=null){
+                ProcesosTestsConversionDTO[] conversionesDTO = ptd.getConversiones();
+                for (ProcesosTestsConversionDTO ptcd: conversionesDTO){
+                    SigmaProcesotestconversionId sptcId = new SigmaProcesotestconversionId();
+                    sptcId.setSptcIdproceso(sp.getSpIdproceso());
+                    sptcId.setSptcIdtest(sigmaProcesostest.getId().getSptIdtest());
+                    sptcId.setSptcNumerocondicion(ptcd.getSptcNumerocondicion());
+                    LdvTiposcondicion ldvTiposcondicion = null;
+                    if (ptcd.getLdvtcondIdtipocondicion() > 0){
+                        ldvTiposcondicion = tiposCondicionDAO.getTipoCondicionById(ptcd.getLdvtcondIdtipocondicion());
+                    }
+                    LdvOperacionesmath ldvOperacionesmath = null;
+                    if (ptcd.getLdvomIdoperadormath() > 0){
+                        ldvOperacionesmath = operacionesMathDAO.getOperacionesMathById(ptcd.getLdvomIdoperadormath());
+                    }
+                    SigmaProcesotestconversion sigmaProcesotestconversion = ptcd.toSigmaProcesotestconversion(sptcId, sigmaProcesostest, ldvTiposcondicion, ldvOperacionesmath);
+                    if (!procesosTestConversionDAO.existeConversionProcesoTest(sp.getSpIdproceso(), ptd.getIdTest(), ptcd.getSptcNumerocondicion())){
+                        procesosTestConversionDAO.insertProceso(sigmaProcesotestconversion);
+                    } else {
+                        procesosTestConversionDAO.updateProceso(sigmaProcesotestconversion);
+                    }
+                }
+            }
+        }
+        
+        SigmaProcesosalarmas[] procesosalarmas = procesoDTO.getProcesosAlarmas();
+        for (SigmaProcesosalarmas alarma : procesosalarmas){
+            alarma.setSigmaProcesos(sp);
+            if (alarma.getSpaIdprocesoalarma() == 0){
+                procesosAlarmasDAO.insertAlarma(alarma);
+            } else {
+                procesosAlarmasDAO.updateAlarma(alarma);
+            }
+        }
+        
         procesosDAO.updateProceso(sp);
     }
 
@@ -201,5 +373,15 @@ public class ProcesosServiceImpl implements ProcesosService{
     public List<LdvOperacionesmath> getListOperacionesMath() throws BiosLISDAOException {
         return operacionesMathDAO.listOperacionesMath();
     }
+
+    @Override
+    public List<SigmaProcesos> getProcesoByCodigo(String codigoProceso) throws BiosLISDAOException {
+        return procesosDAO.getProcesoByCodigo(codigoProceso);
+    }
+
+    @Override
+    public List<SigmaProcesosalarmas> getAlarmasByCodigoProceso(String codigoProceso) throws BiosLISDAOException {
+        return procesosAlarmasDAO.getAlarmasByProceso(codigoProceso);
+    }
     
 }
diff --git a/src/main/java/com/grupobios/bioslis/bs/SessionServiceImpl.java b/src/main/java/com/grupobios/bioslis/bs/SessionServiceImpl.java
index a48c7d08..558737bc 100644
--- a/src/main/java/com/grupobios/bioslis/bs/SessionServiceImpl.java
+++ b/src/main/java/com/grupobios/bioslis/bs/SessionServiceImpl.java
@@ -35,10 +35,7 @@ public class SessionServiceImpl implements SessionService {
 
   private static final Logger LOGGER = LogManager.getLogger(SessionServiceImpl.class);
 
- 
-
-
-@Override
+  @Override
   public ModelAndView validarSesionUsuario(ModelAndView mav, HttpSession sesion, RedirectAttributes attributes, int idModulo) {
 
     Session session = HibernateUtil.getSessionFactory().openSession();
diff --git a/src/main/java/com/grupobios/bioslis/bs/TestService.java b/src/main/java/com/grupobios/bioslis/bs/TestService.java
index 067e9bd1..30b52b61 100755
--- a/src/main/java/com/grupobios/bioslis/bs/TestService.java
+++ b/src/main/java/com/grupobios/bioslis/bs/TestService.java
@@ -9,7 +9,6 @@ import java.io.IOException;
 import java.util.List;
 
 import com.grupobios.bioslis.common.BiosLISException;
-import com.grupobios.bioslis.common.BiosLisExamenSignerException;
 import com.grupobios.bioslis.common.BiosLisExecutorException;
 import com.grupobios.bioslis.dao.BiosLISDAOException;
 import com.grupobios.bioslis.dao.BiosLISDAONotFoundException;
@@ -31,10 +30,9 @@ public interface TestService {
 
   DatosFichasexamenestest doAction(String actionCode, ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
       throws BiosLISDAONotFoundException, BiosLISBSException, BiosLISDAOException, BiosLISJasperException,
-      BiosLISException, BiosLisExamenSignerException, BiosLisExecutorException, IOException;
+      BiosLISException, BiosLisExecutorException, BiosLisExecutorException, IOException;
 
-  void doListAction(String actionCode, List<ResultadoNumericoTestExamenOrdenDTO> examenes, Long idUsuario)
-      throws BiosLISBSException;
+  List<String> doListAction(String actionCode, List<ResultadoNumericoTestExamenOrdenDTO> examenes, Long idUsuario);
 
   List<CfgGlosas> getTestGM(Integer idTest) throws BiosLISDAOException, BiosLISDAONotFoundException;
 
diff --git a/src/main/java/com/grupobios/bioslis/bs/TestServiceImpl.java b/src/main/java/com/grupobios/bioslis/bs/TestServiceImpl.java
index 369529a9..4a12551a 100755
--- a/src/main/java/com/grupobios/bioslis/bs/TestServiceImpl.java
+++ b/src/main/java/com/grupobios/bioslis/bs/TestServiceImpl.java
@@ -1,7 +1,6 @@
 package com.grupobios.bioslis.bs;
 
 import java.io.IOException;
-import java.sql.Timestamp;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -13,8 +12,7 @@ import org.apache.logging.log4j.Logger;
 import com.grupobios.bioslis.common.ActionExamenExecutor;
 import com.grupobios.bioslis.common.ActionExecutorFactory;
 import com.grupobios.bioslis.common.BiosLISException;
-import com.grupobios.bioslis.common.BiosLisCalendarService;
-import com.grupobios.bioslis.common.BiosLisExamenSignerException;
+import com.grupobios.bioslis.common.BiosLisExecutorException;
 import com.grupobios.bioslis.common.EstadosSistema;
 import com.grupobios.bioslis.common.TestBiosAction;
 import com.grupobios.bioslis.dao.BiosLISDAOException;
@@ -82,7 +80,7 @@ public class TestServiceImpl implements TestService {
   @Override
   public DatosFichasexamenestest doAction(String actionCode, ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
       throws BiosLISDAONotFoundException, BiosLISDAOException, BiosLISJasperException, BiosLISException,
-      BiosLisExamenSignerException, IOException {
+      BiosLisExecutorException, IOException {
 
     DatosFichasexamenestest dfet = this.executeTransition(actionCode, dfetId, idUsuario); //
                                                                                           // test.
@@ -91,8 +89,8 @@ public class TestServiceImpl implements TestService {
   }
 
   private void executeAction(String actionCode, ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
-      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExamenSignerException,
-      IOException {
+      throws BiosLISDAOException, BiosLISJasperException, BiosLISException, BiosLISDAONotFoundException,
+      BiosLisExecutorException, IOException {
 
     ActionExamenExecutor executor = actionExecutorFactory.getActionExamenInstance(actionCode.toUpperCase());
     if (executor != null) {
@@ -113,22 +111,6 @@ public class TestServiceImpl implements TestService {
       logger.error("No se puede {} cuando estado actual es {}", actionCode, dfet.getDfetIdestadoresultadotest());
       throw new BiosLISBSException("No se pudo ejecutar acciÃ³n " + actionCode);
     }
-    // agregado para agregar usuario firma *** 15-11 por cristian
-    System.out.println(actionCode);
-    // modificado para agregar fecha firma *** 15-11 por cristian
-    Timestamp ts = BiosLisCalendarService.getInstance().getTS();
-
-    if (actionCode.equals("FIRMAR")) {
-      dfet.setDfetFechafirma(ts);
-      dfet.setDfetIdusuariofirma(idUsuario);
-      dfet.setDfetTestfirmado("S");
-    } else {
-      if (actionCode.equals("RETIRARFIRMA")) {
-        dfet.setDfetFechafirma(null);
-        dfet.setDfetIdusuariofirma(null);
-        dfet.setDfetTestfirmado("N");
-      }
-    }
     dfet.setDfetIdestadoresultadotest(testEstado);
     logger.debug("Estado finall {}", dfet.getDfetIdestadoresultadotest());
     datosFichasExamenesTestDAO.updateDFExamenesTest(dfet);
@@ -170,25 +152,18 @@ public class TestServiceImpl implements TestService {
   }
 
   @Override
-  public void doListAction(String actionCode, List<ResultadoNumericoTestExamenOrdenDTO> test, Long idUsuario)
-      throws BiosLISBSException {
+  public List<String> doListAction(String actionCode, List<ResultadoNumericoTestExamenOrdenDTO> test, Long idUsuario) {
 
-    StringBuilder sb = new StringBuilder();
     test.forEach(t -> {
       try {
         this.doAction(actionCode, t, idUsuario);
-      } catch (BiosLISDAONotFoundException | BiosLISDAOException | BiosLISException | IOException e) {
-        sb.append(t.toString()).append(" ").append(e.getLocalizedMessage()).append("");
-      } catch (BiosLisExamenSignerException e) {
+      } catch (BiosLISDAONotFoundException | BiosLISDAOException | BiosLISException | BiosLisExecutorException
+          | IOException e) {
+        logger.error("No se pudo realizar acciÃ³n: .".concat(actionCode).concat(" sobre ").concat(t.toString()));
       }
-
     });
 
-    if (!sb.toString().isEmpty()) {
-      String msg = "No se pudo realizar acciÃ³n: .".concat(actionCode).concat(" sobre ").concat(sb.toString());
-      logger.error(msg);
-      throw new BiosLISBSException(msg);
-    }
+    return null;
   }
 
   @Override
diff --git a/src/main/java/com/grupobios/bioslis/bs/TomaMuestrasService.java b/src/main/java/com/grupobios/bioslis/bs/TomaMuestrasService.java
index 90999796..baefc6b7 100755
--- a/src/main/java/com/grupobios/bioslis/bs/TomaMuestrasService.java
+++ b/src/main/java/com/grupobios/bioslis/bs/TomaMuestrasService.java
@@ -34,9 +34,9 @@ public interface TomaMuestrasService {
 
   // Tipo de muestra
 
-  public List<OrdenesTMDTO> getListaOrdenesTM(String fechaInicio, String fechaFin);
+  public List<OrdenesTMDTO> getListaOrdenesTM(String fechaInicio, String fechaFin) throws BiosLISDAOException;
 
-  public List<MuestrasDTO> getListaMuestrasTM(long nOrden);
+  public List<MuestrasDTO> getListaMuestrasTM(long nOrden) throws BiosLISDAOException ;
 
   public void updateTipoMuestra(MuestrasDTO muestraDTO) throws BiosLISDAOException;
 
diff --git a/src/main/java/com/grupobios/bioslis/bs/TomaMuestrasServiceImpl.java b/src/main/java/com/grupobios/bioslis/bs/TomaMuestrasServiceImpl.java
index a96d2c6d..edd02ddd 100755
--- a/src/main/java/com/grupobios/bioslis/bs/TomaMuestrasServiceImpl.java
+++ b/src/main/java/com/grupobios/bioslis/bs/TomaMuestrasServiceImpl.java
@@ -42,6 +42,7 @@ import com.grupobios.bioslis.entity.DatosFichasexamenestest;
 import com.grupobios.bioslis.entity.DatosFichasmuestras;
 import com.grupobios.bioslis.entity.DatosUsuarios;
 import java.util.HashMap;
+import org.apache.logging.log4j.LogManager;
 
 /**
  *
@@ -50,6 +51,7 @@ import java.util.HashMap;
 @Service
 public class TomaMuestrasServiceImpl implements TomaMuestrasService {
 
+  private static org.apache.logging.log4j.Logger logger = LogManager.getLogger(TomaMuestrasServiceImpl.class);
   @Autowired
   private DatosFichasExamenesTestDAO datosFichasExamenesTestDAO;
 
@@ -122,12 +124,12 @@ public class TomaMuestrasServiceImpl implements TomaMuestrasService {
   // END GETTERS Y SETTERS
 
   @Override
-  public List<OrdenesTMDTO> getListaOrdenesTM(String fechaInicio, String fechaFin) {
+  public List<OrdenesTMDTO> getListaOrdenesTM(String fechaInicio, String fechaFin) throws BiosLISDAOException {
     return datosFichasDAO.getOrdenesTomaMuestras(fechaInicio, fechaFin);
   }
 
   @Override
-  public List<MuestrasDTO> getListaMuestrasTM(long nOrden) {
+  public List<MuestrasDTO> getListaMuestrasTM(long nOrden) throws BiosLISDAOException {
     List<MuestrasDTO> listMuestras = datosFichasExamenesTestDAO.getDatosTablaMuestrasTM(nOrden);
     for (MuestrasDTO m : listMuestras) {
       String estado = "";
@@ -255,7 +257,7 @@ public class TomaMuestrasServiceImpl implements TomaMuestrasService {
   @Override
   public TMClickDTO validarTmClick(Integer nOrden, Long idUsuario) {
     TMClickDTO tmClick = datosFichasDAO.getTmClick(nOrden);
-    System.out.println("TM Click: " + tmClick.getOCUPADO());
+    logger.debug("TM Click: " + tmClick.getOCUPADO());
     if (!tmClick.getOCUPADO().equals("N")) {
       String[] parts = tmClick.getOCUPADO().split("/");
       tmClick.setIDUSUARIO(new BigDecimal(parts[0]));
@@ -358,7 +360,7 @@ public class TomaMuestrasServiceImpl implements TomaMuestrasService {
     // dfm.setDfmFechatm(BiosLiosCalendarService.getInstance().getTS());
     dfm.setDfmEstadotm(EstadosSistema.DFM_ESTADOTM_TOMADA);
     dfm.setDfmIdusuariotm(idUsuario);
-    // System.out.println("hora: "+new Date(time*1000));
+    logger.debug("hora: "+new Date(time*1000));
     dfm.setDfmFechatm(new Date(time * 1000));
 
     datosFichasmuestrasDAO.updateDatosFichasmuestras(dfm);
diff --git a/src/main/java/com/grupobios/bioslis/bs/microbiologia/OrderSearcher.java b/src/main/java/com/grupobios/bioslis/bs/microbiologia/OrderSearcher.java
index cf7a35f5..a3452944 100755
--- a/src/main/java/com/grupobios/bioslis/bs/microbiologia/OrderSearcher.java
+++ b/src/main/java/com/grupobios/bioslis/bs/microbiologia/OrderSearcher.java
@@ -47,16 +47,14 @@ public class OrderSearcher {
         put("observation", order.getObservation());
         put("service", order.getService());
         put("origin", order.getOrigin());
-        //agregado por cristian 09-11
-        put("procedencia", order.getProcedencia());
       }
     });
 
     result.put("previousOrders", order.getPatient().getOrdersList());
     result.put("exams", order.getExamList());
-    /*result.put("events", order.getEvents()
+    result.put("events", order.getEvents()
 
-    );*/
+    );
 
     return result;
   }
diff --git a/src/main/java/com/grupobios/bioslis/common/ActionExamenExecutor.java b/src/main/java/com/grupobios/bioslis/common/ActionExamenExecutor.java
index e0c7b1cf..8bb1babb 100644
--- a/src/main/java/com/grupobios/bioslis/common/ActionExamenExecutor.java
+++ b/src/main/java/com/grupobios/bioslis/common/ActionExamenExecutor.java
@@ -10,8 +10,8 @@ import com.grupobios.bioslis.dto.ResultadoNumericoTestExamenOrdenDTO;
 
 public interface ActionExamenExecutor extends ActionExecutor {
 
-  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario) throws BiosLISDAOException,
-      BiosLISException, BiosLISDAONotFoundException, BiosLisExamenSignerException, IOException;
+  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
+      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException;
 
   void exec(List<ExamenOrdenDTO> listaExamenes, Long idUsuario);
 
diff --git a/src/main/java/com/grupobios/bioslis/common/AutorizarExamenExecutor.java b/src/main/java/com/grupobios/bioslis/common/AutorizarExamenExecutor.java
index e054630b..cc74325f 100644
--- a/src/main/java/com/grupobios/bioslis/common/AutorizarExamenExecutor.java
+++ b/src/main/java/com/grupobios/bioslis/common/AutorizarExamenExecutor.java
@@ -18,7 +18,7 @@ public class AutorizarExamenExecutor implements ActionExamenExecutor {
 
   @Override
   public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
-      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, IOException {
+      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException {
 
   }
 
diff --git a/src/main/java/com/grupobios/bioslis/common/BiosLisExamenSignerException.java b/src/main/java/com/grupobios/bioslis/common/BiosLisExamenSignerException.java
deleted file mode 100644
index b135f3ae..00000000
--- a/src/main/java/com/grupobios/bioslis/common/BiosLisExamenSignerException.java
+++ /dev/null
@@ -1,30 +0,0 @@
-package com.grupobios.bioslis.common;
-
-public class BiosLisExamenSignerException extends BiosLisExecutorException {
-
-  public BiosLisExamenSignerException() {
-    // TODO Auto-generated constructor stub
-  }
-
-  public BiosLisExamenSignerException(String arg0) {
-    super(arg0);
-    // TODO Auto-generated constructor stub
-  }
-
-  public BiosLisExamenSignerException(Throwable cause) {
-    super(cause);
-    // TODO Auto-generated constructor stub
-  }
-
-  public BiosLisExamenSignerException(String message, Throwable cause) {
-    super(message, cause);
-    // TODO Auto-generated constructor stub
-  }
-
-  public BiosLisExamenSignerException(String message, Throwable cause, boolean enableSuppression,
-      boolean writableStackTrace) {
-    super(message, cause, enableSuppression, writableStackTrace);
-    // TODO Auto-generated constructor stub
-  }
-
-}
diff --git a/src/main/java/com/grupobios/bioslis/common/BloquearExamenExecutor.java b/src/main/java/com/grupobios/bioslis/common/BloquearExamenExecutor.java
index 5b534418..b16d99e9 100644
--- a/src/main/java/com/grupobios/bioslis/common/BloquearExamenExecutor.java
+++ b/src/main/java/com/grupobios/bioslis/common/BloquearExamenExecutor.java
@@ -25,12 +25,12 @@ public class BloquearExamenExecutor implements ActionExamenExecutor {
   }
 
   @Override
-  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario) throws BiosLISDAOException,
-      BiosLISException, BiosLISDAONotFoundException, BiosLisExamenSignerException, IOException {
+  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
+      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException {
     if (examenService.readyToSign(dfetId.getDFET_IDTEST().longValue(), dfetId.getDF_NORDEN().longValue())) {
       examenService.sign(dfetId, idUsuario);
     } else {
-      throw new BiosLisExamenSignerException("Examen no estÃ¡ listo para ser firmado.");
+      throw new BiosLisExecutorException("Examen no estÃ¡ listo para ser firmado.");
     }
 //
 //    List<ExamenOrdenDTO> lst = ordenService.readyToSign(dfetId.getDF_NORDEN().longValue());
diff --git a/src/main/java/com/grupobios/bioslis/common/DaoHelper.java b/src/main/java/com/grupobios/bioslis/common/DaoHelper.java
index f0927ac3..de682031 100644
--- a/src/main/java/com/grupobios/bioslis/common/DaoHelper.java
+++ b/src/main/java/com/grupobios/bioslis/common/DaoHelper.java
@@ -7,481 +7,314 @@ import com.grupobios.bioslis.dto.BCFichaFiltroDTO;
 
 public class DaoHelper {
 
-    private static Logger logger = LogManager.getLogger(DaoHelper.class);
-
-    public DaoHelper() {
-    }
-
-    //CAMBIOS REALIZADOS POR CRISTIAN 14-11 
-    public String genSql(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
-System.out.println("entre a genSql");
-        String sql = "";
-        String sCond = "";
-
-        this.normalize(bcFichaFiltroDTO);
-        sCond = this.genSqlCondicionBOFull(bcFichaFiltroDTO);
-/*
-        if (bcFichaFiltroDTO.getBo_apellido() != null && !bcFichaFiltroDTO.getBo_apellido().trim().equals("")) {
-            sCond += " ( UPPER(dp.DP_PRIMERAPELLIDO) like UPPER(:apellido) OR "
-                    + " UPPER(dp.DP_SEGUNDOAPELLIDO) like UPPER(:apellido)) AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_nombre() != null && !bcFichaFiltroDTO.getBo_nombre().trim().isEmpty()) {
-            sCond += " UPPER(dp.DP_NOMBRES) like UPPER(:nombre) AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_fFin() != null && !bcFichaFiltroDTO.getBo_fFin().trim().isEmpty()) {
-            sCond += " df.DF_FECHAORDEN <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_fIni() != null && !bcFichaFiltroDTO.getBo_fIni().trim().isEmpty()) {
-
-            sCond += " df.DF_FECHAORDEN >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_nOrdenIni() != null) {
-            sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
-            sCond += " df.DF_NORDEN <= :nOrdenFin AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_tipoDocumento() != null && bcFichaFiltroDTO.getBo_tipoDocumento() != -1) {
-            sCond += " dp.DP_IDTIPODOCUMENTO = :tipoDoc AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_nroDocumento() != null && !bcFichaFiltroDTO.getBo_nroDocumento().trim().isEmpty()) {
-            sCond += " dp.DP_NRODOCUMENTO = :nDoc  AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_tipoAtencion() != null && bcFichaFiltroDTO.getBo_tipoAtencion() != -1) {
-            sCond += " df.DF_IDTIPOATENCION = :tipoAtencion AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_localizacion() != null && bcFichaFiltroDTO.getBo_localizacion() != -1) {
-            sCond += " df.DF_IDLOCALIZACION = :idLocalizacion AND ";
-        }
-
-        if (bcFichaFiltroDTO.getBo_procedencia() != null && bcFichaFiltroDTO.getBo_procedencia() != -1) {
-            sCond += " df.DF_IDPROCEDENCIA = :idProcedencia AND ";
-        }
-
-        if (bcFichaFiltroDTO.getBo_servicio() != null && bcFichaFiltroDTO.getBo_servicio() != -1) {
-            sCond += " df.DF_IDSERVICIO = :idServicio AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_seccion() != null && bcFichaFiltroDTO.getBo_seccion() != -1) {
-            sCond += " df.DF_IDLOCALIZACION = :idSeccion AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
-            sCond += " df.DF_IDEXAMEN= :idExamen AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_host() != null && !bcFichaFiltroDTO.getBo_host().trim().isEmpty()) {
-            sCond += " df.DF_IDEXAMEN= :idExamen AND ";
-        }
-
-        int pos = sCond.lastIndexOf("AND");
-
-        if (pos != -1) {
-            sCond = sCond.substring(0, pos);
-            sCond = " WHERE " + sCond;
-        }
-*/
-        logger.debug("Condiciones consulta {}", sCond);
-
-        return _sqlOrdenesConDatosExamenes + sCond;
-    }
-
-    //AQUI NORMALIZA LOS DATOS 
-    private void normalize(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
-
-     
-        if (bcFichaFiltroDTO.getBo_apellido() == null || bcFichaFiltroDTO.getBo_apellido().trim().equals("")) {
-            bcFichaFiltroDTO.setBo_apellido(null);
-        }
-        if (bcFichaFiltroDTO.getBo_nombre() == null || bcFichaFiltroDTO.getBo_nombre().trim().equals("")) {
-            bcFichaFiltroDTO.setBo_nombre(null);
-        }
-        if (bcFichaFiltroDTO.getBo_nroDocumento() == null || bcFichaFiltroDTO.getBo_nroDocumento().trim().equals("")) {
-            bcFichaFiltroDTO.setBo_nroDocumento(null);
-        }
-
-       
-        if (bcFichaFiltroDTO.getBo_host() == null || bcFichaFiltroDTO.getBo_host().trim().equals("")) {
-            bcFichaFiltroDTO.setBo_host(null);
-        }
-        
-        
-        if (bcFichaFiltroDTO.getBo_fIni() == null || bcFichaFiltroDTO.getBo_fIni().trim().equals("")) {
-            bcFichaFiltroDTO.setBo_fIni(null);
-        } else {
-            logger.debug(BiosLisCalendarService.getInstance().estandariza(bcFichaFiltroDTO.getBo_fIni()));
-            bcFichaFiltroDTO
-                    .setBo_fIni(BiosLisCalendarService.getInstance().estandariza(bcFichaFiltroDTO.getBo_fIni()));
-        }
-        if (bcFichaFiltroDTO.getBo_fFin() == null || bcFichaFiltroDTO.getBo_fFin().trim().equals("")) {
-            bcFichaFiltroDTO.setBo_fFin(null);
-        } else {
-            bcFichaFiltroDTO
-                    .setBo_fFin(BiosLisCalendarService.getInstance().estandariza(bcFichaFiltroDTO.getBo_fFin()));
-        }
-
-    }
-
-    // MODIFICADO POR CRISTIAN 10-11 PARA BUSCADORES DE ORDENES POR FILTROS
-    public String genSqlBOFull(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
- 
-        String sql = "";
-        String sCond = "";
-
-        this.normalize(bcFichaFiltroDTO);
-     
-         sCond =   this.genSqlCondicionBOFull(bcFichaFiltroDTO);
-    
-        logger.debug("Condiciones consulta {} BoFull", sCond);
-        return _sqlOrdenesFullxFiltro + sCond;
-    }
-    
-   //****************************************************************************************************************************
-
-    
-    //SE REALIZAN CAMBIOS PARA FILTRO POR SECCIONES
-    public String genSqlOrdenesConDatosExamenesConSecciones(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
-     
-        String sCond = "";
-
-        this.normalize(bcFichaFiltroDTO);
-        
-        sCond = this.genSqlCondicionBOFull(bcFichaFiltroDTO);       
-/*
-        if (bcFichaFiltroDTO.getBo_nOrdenIni() != null && bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
-            sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
-            sCond += " df.DF_NORDEN <= :nOrdenFin AND ";            
-        } else {
-            if (bcFichaFiltroDTO.getBo_nOrdenIni() != null || bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
-                if (bcFichaFiltroDTO.getBo_nOrdenIni() != null) {
-                    sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
-                    sCond += " df.DF_NORDEN <= :nOrdenIni AND ";
-                }
-                if (bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
-                    sCond += " df.DF_NORDEN >= :nOrdenFin AND ";
-                    sCond += " df.DF_NORDEN <= :nOrdenFin AND ";
-                }
-            }
-        }
-        if (bcFichaFiltroDTO.getBo_procedencia() != null && bcFichaFiltroDTO.getBo_procedencia() != -1) {
-            sCond += " df.DF_IDPROCEDENCIA = :idProcedencia AND ";
-        }
-
-             
-        if ((bcFichaFiltroDTO.getBo_nOrdenIni() != null && bcFichaFiltroDTO.getBo_nOrdenFin() != null)
-                || (bcFichaFiltroDTO.getBo_nOrdenIni() == null && bcFichaFiltroDTO.getBo_nOrdenFin() == null)) {
-       
-            if (bcFichaFiltroDTO.getBo_fIni() != null && bcFichaFiltroDTO.getBo_fFin() != null) {              
-                sCond += " df.DF_FECHAORDEN >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
-                sCond += " df.DF_FECHAORDEN <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') + 1 AND ";
-            } else {
-                if (bcFichaFiltroDTO.getBo_fIni() != null || bcFichaFiltroDTO.getBo_fFin() != null) {
-                    if (bcFichaFiltroDTO.getBo_fIni() != null) {
-                        sCond += " df.DF_FECHAORDEN like TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
-                        
-                    }
-                    if (bcFichaFiltroDTO.getBo_fFin() != null) {
-                        sCond += " df.DF_FECHAORDEN like TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
-                   }
-                }
-            }         
-        }                
-          
-        
-        
-    
-
-        if (bcFichaFiltroDTO.getBo_apellido() != null && !bcFichaFiltroDTO.getBo_apellido().trim().equals("")) {
-            sCond += " ( UPPER(dp.DP_PRIMERAPELLIDO) like UPPER(:apellido) OR "
-                    + " UPPER(dp.DP_SEGUNDOAPELLIDO) like UPPER(:apellido)) AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_nombre() != null && !bcFichaFiltroDTO.getBo_nombre().trim().isEmpty()) {
-            sCond += " UPPER(dp.DP_NOMBRES) like UPPER(:nombre) AND ";
-        }
-        /*
-        if (bcFichaFiltroDTO.getBo_fFin() != null && !bcFichaFiltroDTO.getBo_fFin().trim().isEmpty()) {
-            sCond += " df.DF_FECHAORDEN <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_fIni() != null && !bcFichaFiltroDTO.getBo_fIni().trim().isEmpty()) {
-
-            sCond += " df.DF_FECHAORDEN >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_nOrdenIni() != null) {
-            sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
-            sCond += " df.DF_NORDEN <= :nOrdenFin AND ";
-        }
-        */
-        /*
-        if (bcFichaFiltroDTO.getBo_tipoDocumento() != null && bcFichaFiltroDTO.getBo_tipoDocumento() != -1) {
-            sCond += " dp.DP_IDTIPODOCUMENTO = :tipoDoc AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_nroDocumento() != null && !bcFichaFiltroDTO.getBo_nroDocumento().trim().isEmpty()) {
-            sCond += " dp.DP_NRODOCUMENTO = :nDoc  AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_tipoAtencion() != null && bcFichaFiltroDTO.getBo_tipoAtencion() != -1) {
-            sCond += " df.DF_IDTIPOATENCION = :tipoAtencion AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_localizacion() != null && bcFichaFiltroDTO.getBo_localizacion() != -1) {
-            sCond += " df.DF_IDLOCALIZACION = :idLocalizacion AND ";
-        }
-
-        if (bcFichaFiltroDTO.getBo_procedencia() != null && bcFichaFiltroDTO.getBo_procedencia() != -1) {
-            sCond += " df.DF_IDPROCEDENCIA = :idProcedencia AND ";
-        }            
-        
-        if (bcFichaFiltroDTO.getBo_servicio() != null && bcFichaFiltroDTO.getBo_servicio() != -1) {
-            sCond += " df.DF_IDSERVICIO = :idServicio AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_seccion() != null && bcFichaFiltroDTO.getBo_seccion() != -1) {
-            sCond += " df.DF_IDLOCALIZACION = :idSeccion AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
-            sCond += " df.DF_IDEXAMEN= :idExamen AND ";
-        }
-        if (bcFichaFiltroDTO.getBo_host() != null && !bcFichaFiltroDTO.getBo_host().trim().isEmpty()) {
-            sCond += " df.DF_IDEXAMEN= :idExamen AND ";
-        }
-
-        int pos = sCond.lastIndexOf("AND");
-
-        if (pos != -1) {
-            sCond = sCond.substring(0, pos);
-            sCond = " WHERE " + sCond;
-        }
-
-        sCond = sCond + " order by DF_NORDEN DESC";
-*/
-        logger.debug("Condiciones consulta {} genSqlOrdenesConDatosExamenesConSecciones ", sCond);
-
-        return _sqlOrdenesConDatosExamenesConSecciones + sCond;
-
-    }
-    
-    // creado solo devolver condicion --cristian 14-11 ************************************
-    public String genSqlCondicionBOFull(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
-
-        String sCond = "";
-
-        this.normalize(bcFichaFiltroDTO);
-     
-
-        if (bcFichaFiltroDTO.getBo_nOrdenIni() != null && bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
-            sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
-            sCond += " df.DF_NORDEN <= :nOrdenFin AND ";            
-        } else {
-            if (bcFichaFiltroDTO.getBo_nOrdenIni() != null || bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
-                if (bcFichaFiltroDTO.getBo_nOrdenIni() != null) {
-                    sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
-                    sCond += " df.DF_NORDEN <= :nOrdenIni AND ";
-                }
-                if (bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
-                    sCond += " df.DF_NORDEN >= :nOrdenFin AND ";
-                    sCond += " df.DF_NORDEN <= :nOrdenFin AND ";
-                }
-            }
-        }
-        if (bcFichaFiltroDTO.getBo_procedencia() != null && bcFichaFiltroDTO.getBo_procedencia() != -1) {
-            sCond += " df.DF_IDPROCEDENCIA = :idProcedencia AND ";
-        }
-
-             
-        if ((bcFichaFiltroDTO.getBo_nOrdenIni() != null && bcFichaFiltroDTO.getBo_nOrdenFin() != null)
-                || (bcFichaFiltroDTO.getBo_nOrdenIni() == null && bcFichaFiltroDTO.getBo_nOrdenFin() == null)) {
-       
-            if (bcFichaFiltroDTO.getBo_fIni() != null && bcFichaFiltroDTO.getBo_fFin() != null) {              
-                sCond += " df.DF_FECHAORDEN >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
-                sCond += " df.DF_FECHAORDEN <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') + 1 AND ";
-            } else {
-                if (bcFichaFiltroDTO.getBo_fIni() != null || bcFichaFiltroDTO.getBo_fFin() != null) {
-                    if (bcFichaFiltroDTO.getBo_fIni() != null) {
-                        sCond += " df.DF_FECHAORDEN like TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
-                        
-                    }
-                    if (bcFichaFiltroDTO.getBo_fFin() != null) {
-                        sCond += " df.DF_FECHAORDEN like TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
-                   }
-                }
-            }         
-        }                
-            
-            
-
-            if (bcFichaFiltroDTO.getBo_apellido() != null && !bcFichaFiltroDTO.getBo_apellido().trim().equals("")) {
-                sCond += " ( UPPER(dp.DP_PRIMERAPELLIDO) like UPPER(:apellido) OR "
-                        + " UPPER(dp.DP_SEGUNDOAPELLIDO) like UPPER(:apellido)) AND ";
-            }
-            if (bcFichaFiltroDTO.getBo_nombre() != null && !bcFichaFiltroDTO.getBo_nombre().trim().isEmpty()) {
-                sCond += " UPPER(dp.DP_NOMBRES) like UPPER(:nombre) AND ";
-            }
-           
-            if (bcFichaFiltroDTO.getBo_tipoDocumento() != null && bcFichaFiltroDTO.getBo_tipoDocumento() != -1) {
-                sCond += " dp.DP_IDTIPODOCUMENTO = :tipoDoc AND ";
-            }
-            if (bcFichaFiltroDTO.getBo_nroDocumento() != null
-                    && !bcFichaFiltroDTO.getBo_nroDocumento().trim().isEmpty()) {
-                sCond += " dp.DP_NRODOCUMENTO = :nDoc  AND ";
-            }
-            if (bcFichaFiltroDTO.getBo_tipoAtencion() != null && bcFichaFiltroDTO.getBo_tipoAtencion() != -1) {
-                sCond += " df.DF_IDTIPOATENCION = :tipoAtencion AND ";
-            }
-            if (bcFichaFiltroDTO.getBo_localizacion() != null && bcFichaFiltroDTO.getBo_localizacion() != -1) {
-                sCond += " df.DF_IDLOCALIZACION = :idLocalizacion AND ";
-            }         
-
-            if (bcFichaFiltroDTO.getBo_servicio() != null ) {
-                sCond += " df.DF_IDSERVICIO = :idServicio AND ";
-            }
-            
-            if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
-                sCond += "ce.ce_CODIGOEXAMEN= :idExamen AND ";
-            }
-            if (bcFichaFiltroDTO.getBo_seccion() != null ) {
-                sCond += " ce.CE_IDSECCION= :idSeccion AND ";
-              }
-          
-      
-        int pos = sCond.lastIndexOf("AND");
-
-        if (pos != -1) {
-            sCond = sCond.substring(0, pos);
-           
-        }
-      
-        sCond = "where " +sCond ;
-        logger.debug("Condiciones consulta {} genSqlCondicionBOFull", sCond);
-        return sCond;
-    }
-   //****************************************************************************************************************************
-
-    
-    
-    
-    
-
-    private static final String _sqlOrdenesConDatosExamenes = ""
-            + "SELECT  TO_CHAR(DF_FECHAORDEN,'DD-MM HH24:MI') SDF_FECHAORDEN, DF_NORDEN, dp.DP_NOMBRES ,"
-            + "TO_CHAR(dp.DP_FNACIMIENTO,'DD-MM-YYYY ') SDP_FNACIMIENTO , ls.LDVS_DESCRIPCION  ,dp.DP_OBSERVACION, cc.CC_ABREVIADO, "
-            + "lt.LDVTD_DESCRIPCION,dp.DP_NRODOCUMENTO,ct.CTA_DESCRIPCION, cp.CP_DESCRIPCION , cs.CS_DESCRIPCION ,"
-            + "dp.DP_EMAIL, dp.DP_IDPACIENTE,dp.DP_PRIMERAPELLIDO, dp.DP_SEGUNDOAPELLIDO,"
-            + "cd.CD_DESCRIPCION, df.DF_OBSERVACION, cm.CM_NOMBRES,cm.CM_PRIMERAPELLIDO, cm.CM_SEGUNDOAPELLIDO, ce.CE_IDSECCION ,"
-            + "dfe.DFE_CODIGOESTADOEXAMEN,cee.CEE_DESCRIPCIONESTADOEXAMEN, dfe.DFE_EXAMENESURGENTE, df.DF_HOST "
-            + "FROM  DATOS_FICHAS df       " + "JOIN DATOS_PACIENTES dp ON (dp.DP_IDPACIENTE = df.DF_IDPACIENTE)     "
-            + "JOIN DATOS_FICHASEXAMENES dfe ON (dfe.DFE_NORDEN = df.DF_NORDEN) "
-            + "JOIN LDV_TIPOSDOCUMENTOS lt ON (lt.LDVTD_IDTIPODOCUMENTO = dp.DP_IDTIPODOCUMENTO) "
-            + "JOIN CFG_TIPOATENCION ct ON (ct.CTA_IDTIPOATENCION = df.DF_IDTIPOATENCION)    "
-            + "LEFT OUTER JOIN CFG_PROCEDENCIAS cp ON (cp.CP_IDPROCEDENCIA = df.DF_IDPROCEDENCIA )     "
-            + "LEFT OUTER JOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = df.DF_IDLOCALIZACION ) "
-            + "JOIN CFG_EXAMENES ce ON (ce.CE_IDEXAMEN = dfe.DFE_IDEXAMEN) "
-            + "JOIN LDV_SEXO ls ON (ls.LDVS_IDSEXO = dp.DP_IDSEXO) "
-            + "JOIN CFG_ESTADOSEXAMENES cee ON (dfe.DFE_CODIGOESTADOEXAMEN = cee.CEE_CODIGOESTADOEXAMEN) "
-
-            + "LEFT OUTER JOIN CFG_DIAGNOSTICOS cd ON (cd.CD_IDDIAGNOSTICO = df.DF_IDDIAGNOSTICO) "
-            + "LEFT OUTER JOIN CFG_CONVENIOS cc ON (cc.CC_IDCONVENIO = df.DF_IDCONVENIO) "
-            + "LEFT OUTER JOIN CFG_MEDICOS cm  ON (cm.CM_IDMEDICO = df.DF_IDMEDICO) ";
-    /*
-     * private static final String _sqlOrdenesFullxFiltro = ""
-     * +
-     * "SELECT   DF_NORDEN,TO_CHAR(DF_FECHAORDEN,'DD-MM HH24:MI') SDF_FECHAORDEN, df.DF_OBSERVACION, "
-     * +
-     * "dp.DP_IDPACIENTE,lt.LDVTD_DESCRIPCION,dp.DP_NRODOCUMENTO,dp.DP_NOMBRES , dp.DP_PRIMERAPELLIDO, dp.DP_SEGUNDOAPELLIDO,dp.DP_EMAIL,"
-     * +
-     * "TO_CHAR(dp.DP_FNACIMIENTO,'DD-MM-YYYY ') SDP_FNACIMIENTO , ls.LDVS_DESCRIPCION  ,dp.DP_OBSERVACION,"
-     * + "ct.CTA_DESCRIPCION, cp.CP_DESCRIPCION , " + "cc.CC_ABREVIADO, " +
-     * "df.DF_IDPREVISION,  "
-     * + "df.DF_IDLOCALIZACION," + "cd.CD_DESCRIPCION," + "df.DF_IDCENTRODESALUD," +
-     * "df.DF_IDPRIORIDADATENCION,"
-     * + "cs.CS_DESCRIPCION, df.DF_IDFICHAESTADOTM "
-     * +
-     * ", (select ldvfet_descripcion from ldv_fichasestadostm where ldvfet_idfichaestadotm = df.DF_IDFICHAESTADOTM) as ldvfet_descripcion "
-     * + "FROM  DATOS_FICHAS df       "
-     * + "JOIN DATOS_PACIENTES dp ON (dp.DP_IDPACIENTE = df.DF_IDPACIENTE)     "
-     * // + "JOIN DATOS_FICHASEXAMENES dfe ON (dfe.DFE_NORDEN = df.DF_NORDEN) "
-     * +
-     * "JOIN LDV_TIPOSDOCUMENTOS lt ON (lt.LDVTD_IDTIPODOCUMENTO = dp.DP_IDTIPODOCUMENTO) "
-     * +
-     * "JOIN CFG_TIPOATENCION ct ON (ct.CTA_IDTIPOATENCION = df.DF_IDTIPOATENCION)    "
-     * +
-     * "LEFT OUTER JOIN CFG_PROCEDENCIAS cp ON (cp.CP_IDPROCEDENCIA = df.DF_IDPROCEDENCIA )     "
-     * +
-     * "LEFT OUTER JOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = df.DF_IDLOCALIZACION ) "
-     * // + "JOIN CFG_EXAMENES ce ON (ce.CE_IDEXAMEN = dfe.DFE_IDEXAMEN) "
-     * + "JOIN LDV_SEXO ls ON (ls.LDVS_IDSEXO = dp.DP_IDSEXO) "
-     * // +
-     * "JOIN CFG_ESTADOSEXAMENES cee ON (dfe.DFE_CODIGOESTADOEXAMEN = cee.CEE_CODIGOESTADOEXAMEN) "
-     * +
-     * "LEFT OUTER JOIN CFG_DIAGNOSTICOS cd ON (cd.CD_IDDIAGNOSTICO = df.DF_IDDIAGNOSTICO) "
-     * +
-     * "LEFT OUTER JOIN CFG_CONVENIOS cc ON (cc.CC_IDCONVENIO = df.DF_IDCONVENIO) ";
-     * 
-     */
-//cambiado por cristian 10-11 para filtrar ordenes (lo que esta en minuscula)
-    private static final String _sqlOrdenesFullxFiltro = "SELECT   DF_NORDEN,TO_CHAR(DF_FECHAORDEN,'DD-MM HH24:MI') SDF_FECHAORDEN, df.DF_OBSERVACION,  "
-            + "     dp.DP_IDPACIENTE,lt.LDVTD_DESCRIPCION,dp.DP_NRODOCUMENTO,dp.DP_NOMBRES , dp.DP_PRIMERAPELLIDO, dp.DP_SEGUNDOAPELLIDO,dp.DP_EMAIL, "
-            + "      TO_CHAR(dp.DP_FNACIMIENTO,'DD-MM-YYYY ') SDP_FNACIMIENTO , ls.LDVS_DESCRIPCION  ,dp.DP_OBSERVACION, "
-            + "      ct.CTA_DESCRIPCION, cp.CP_DESCRIPCION , cc.CC_ABREVIADO, df.DF_IDPREVISION,   "
-            + "      df.DF_IDLOCALIZACION,cd.CD_DESCRIPCION,df.DF_IDCENTRODESALUD,df.DF_IDPRIORIDADATENCION, "
-            + "       cs.CS_DESCRIPCION, df.DF_IDFICHAESTADOTM , ldvfet_descripcion , df.df_codigolocalizacion as localizacion , "
-            + "(select  ce.ce_escultivo from cfg_examenes ce  "
-            + "          inner join datos_fichasexamenes dfesel  "
-            + "           on ce.ce_idexamen = dfesel.dfe_idexamen  "
-            + "          where dfesel.dfe_norden = df.df_norden  "
-            + "          order by ce.ce_escultivo desc "
-            + "          FETCH FIRST 1 ROWS Only) as tienecultivo ,"
-            + " ( select dfes.dfe_codigoestadoexamen  from datos_fichas dfs "
-            + "          inner join datos_fichasexamenes dfes  "
-            + "           on dfes.dfe_norden = dfs.df_norden  "
-            + "          where dfes.dfe_norden = df.DF_NORDEN "
-            + "          order by dfes.dfe_codigoestadoexamen desc "
-            + "          FETCH FIRST 1 ROWS Only) as DFE_CODIGOESTADOEXAMEN , "
-            + "( select cee.cee_descripcionestadoexamen  from datos_fichas dfs inner join datos_fichasexamenes dfes  on dfes.dfe_norden = dfs.df_norden  "
-            + "   inner join cfg_estadosexamenes cee on cee.cee_codigoestadoexamen =  dfes.dfe_codigoestadoexamen  "
-            + "where dfes.dfe_norden = df.DF_NORDEN  order by dfes.dfe_codigoestadoexamen desc FETCH FIRST 1 ROWS Only) as CEE_DESCRIPCIONESTADOEXAMEN ,"
-            + "( select dfes.dfe_IDBACESTADO  from datos_fichas dfs "
-            + "          inner join datos_fichasexamenes dfes  "
-            + "           on dfes.dfe_norden = dfs.df_norden  "
-            + "          where dfes.dfe_norden = df.DF_NORDEN  "
-            + "          order by dfes.dfe_codigoestadoexamen desc "
-            + "          FETCH FIRST 1 ROWS Only) AS DFE_IDBACESTADO,  "
-            + "           ( select dfes.dfe_IDBACESTADO  from datos_fichas dfs "
-            + "          inner join datos_fichasexamenes dfes  "
-            + "           on dfes.dfe_norden = dfs.df_norden  "
-            + "          where dfes.dfe_norden = df.DF_NORDEN  "
-            + "          order by dfes.dfe_codigoestadoexamen desc "
-            + "          FETCH FIRST 1 ROWS Only) AS CBE_DESCRIPCION "            
-            + "       FROM  DATOS_FICHAS df      "
-            + "      JOIN DATOS_PACIENTES dp ON (dp.DP_IDPACIENTE = df.DF_IDPACIENTE)  "
-            + "      JOIN LDV_TIPOSDOCUMENTOS lt ON (lt.LDVTD_IDTIPODOCUMENTO = dp.DP_IDTIPODOCUMENTO)  "
-            + "      JOIN CFG_TIPOATENCION ct ON (ct.CTA_IDTIPOATENCION = df.DF_IDTIPOATENCION)     "
-            + "      JOIN CFG_PROCEDENCIAS cp ON (cp.CP_IDPROCEDENCIA = df.DF_IDPROCEDENCIA )      "
-            + "      jOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = df.DF_IDSERVICIO )  "
-            + "      JOIN LDV_SEXO ls ON (ls.LDVS_IDSEXO = dp.DP_IDSEXO)  "
-            + "      JOIN CFG_DIAGNOSTICOS cd ON (cd.CD_IDDIAGNOSTICO = df.DF_IDDIAGNOSTICO)  "
-            + "      JOIN CFG_CONVENIOS cc ON (cc.CC_IDCONVENIO = df.DF_IDCONVENIO)  "
-           + "      join  ldv_fichasestadostm ldvfet on (ldvfet.ldvfet_idfichaestadotm = df.DF_IDFICHAESTADOTM)  ";
-
-      // "LEFT OUTER JOIN LDV_FICHASESTADOSTM fe ON (fe.LDVFET_IDFICHAESTADOTM = df.DF_IDFICHAESTADOTM)";
+  private static Logger logger = LogManager.getLogger(DaoHelper.class);
+
+  public DaoHelper() {
+  }
+
+  public String genSql(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
+
+    String sql = "";
+    String sCond = "";
+
+    this.normalize(bcFichaFiltroDTO);
+
+    if (bcFichaFiltroDTO.getBo_apellido() != null && !bcFichaFiltroDTO.getBo_apellido().trim().equals("")) {
+      sCond += " ( UPPER(dp.DP_PRIMERAPELLIDO) like UPPER(:apellido) OR "
+          + " UPPER(dp.DP_SEGUNDOAPELLIDO) like UPPER(:apellido)) AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nombre() != null && !bcFichaFiltroDTO.getBo_nombre().trim().isEmpty()) {
+      sCond += " UPPER(dp.DP_NOMBRES) like UPPER(:nombre) AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_fFin() != null && !bcFichaFiltroDTO.getBo_fFin().trim().isEmpty()) {
+      sCond += " df.DF_FECHAORDEN <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_fIni() != null && !bcFichaFiltroDTO.getBo_fIni().trim().isEmpty()) {
+
+      sCond += " df.DF_FECHAORDEN >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nOrdenIni() != null) {
+      sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
+      sCond += " df.DF_NORDEN <= :nOrdenFin AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_tipoDocumento() != null && bcFichaFiltroDTO.getBo_tipoDocumento() != -1) {
+      sCond += " dp.DP_IDTIPODOCUMENTO = :tipoDoc AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nroDocumento() != null && !bcFichaFiltroDTO.getBo_nroDocumento().trim().isEmpty()) {
+      sCond += " dp.DP_NRODOCUMENTO = :nDoc  AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_tipoAtencion() != null && bcFichaFiltroDTO.getBo_tipoAtencion() != -1) {
+      sCond += " df.DF_IDTIPOATENCION = :tipoAtencion AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_localizacion() != null && bcFichaFiltroDTO.getBo_localizacion() != -1) {
+      sCond += " df.DF_IDLOCALIZACION = :idLocalizacion AND ";
+    }
+
+    if (bcFichaFiltroDTO.getBo_procedencia() != null && bcFichaFiltroDTO.getBo_procedencia() != -1) {
+      sCond += " df.DF_IDPROCEDENCIA = :idProcedencia AND ";
+    }
+
+    if (bcFichaFiltroDTO.getBo_servicio() != null && bcFichaFiltroDTO.getBo_servicio() != -1) {
+      sCond += " df.DF_IDSERVICIO = :idServicio AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_seccion() != null && bcFichaFiltroDTO.getBo_seccion() != -1) {
+      sCond += " df.DF_IDLOCALIZACION = :idSeccion AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
+      sCond += " df.DF_IDEXAMEN= :idExamen AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_host() != null && !bcFichaFiltroDTO.getBo_host().trim().isEmpty()) {
+      sCond += " df.DF_IDEXAMEN= :idExamen AND ";
+    }
+
+    int pos = sCond.lastIndexOf("AND");
+
+    if (pos != -1) {
+      sCond = sCond.substring(0, pos);
+      sCond = " WHERE " + sCond;
+    }
+
+    logger.debug("Condiciones consulta {}", sCond);
+
+    return _sqlOrdenesConDatosExamenes + sCond;
+
+  }
+
+  private void normalize(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
+
+    if (bcFichaFiltroDTO.getBo_apellido() == null || bcFichaFiltroDTO.getBo_apellido().trim().equals("")) {
+      bcFichaFiltroDTO.setBo_apellido(null);
+    }
+    if (bcFichaFiltroDTO.getBo_nombre() == null || bcFichaFiltroDTO.getBo_nombre().trim().equals("")) {
+      bcFichaFiltroDTO.setBo_nombre(null);
+    }
+    if (bcFichaFiltroDTO.getBo_nroDocumento() == null || bcFichaFiltroDTO.getBo_nroDocumento().trim().equals("")) {
+      bcFichaFiltroDTO.setBo_nroDocumento(null);
+    }
+
+    if (bcFichaFiltroDTO.getBo_fFin() == null || bcFichaFiltroDTO.getBo_fFin().trim().equals("")) {
+      bcFichaFiltroDTO.setBo_fFin(null);
+    } else {
+      bcFichaFiltroDTO.setBo_fFin(BiosLisCalendarService.getInstance().estandariza(bcFichaFiltroDTO.getBo_fFin()));
+    }
+    if (bcFichaFiltroDTO.getBo_host() == null || bcFichaFiltroDTO.getBo_host().trim().equals("")) {
+      bcFichaFiltroDTO.setBo_host(null);
+    }
+    if (bcFichaFiltroDTO.getBo_fIni() == null || bcFichaFiltroDTO.getBo_fIni().trim().equals("")) {
+      bcFichaFiltroDTO.setBo_fIni(null);
+    } else {
+      logger.debug(BiosLisCalendarService.getInstance().estandariza(bcFichaFiltroDTO.getBo_fIni()));
+      bcFichaFiltroDTO.setBo_fIni(BiosLisCalendarService.getInstance().estandariza(bcFichaFiltroDTO.getBo_fIni()));
+    }
+
+  }
+
+  public String genSqlBOFull(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
+
+    String sql = "";
+    String sCond = "";
+
+    this.normalize(bcFichaFiltroDTO);
+
+    if (bcFichaFiltroDTO.getBo_apellido() != null && !bcFichaFiltroDTO.getBo_apellido().trim().equals("")) {
+      sCond += " ( UPPER(dp.DP_PRIMERAPELLIDO) like UPPER(:apellido) OR "
+          + " UPPER(dp.DP_SEGUNDOAPELLIDO) like UPPER(:apellido)) AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nombre() != null && !bcFichaFiltroDTO.getBo_nombre().trim().isEmpty()) {
+      sCond += " UPPER(dp.DP_NOMBRES) like UPPER(:nombre) AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_fFin() != null && !bcFichaFiltroDTO.getBo_fFin().trim().isEmpty()) {
+      sCond += " df.DF_FECHAORDEN <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_fIni() != null && !bcFichaFiltroDTO.getBo_fIni().trim().isEmpty()) {
+
+      sCond += " df.DF_FECHAORDEN >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nOrdenIni() != null) {
+      sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
+      sCond += " df.DF_NORDEN <= :nOrdenFin AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_tipoDocumento() != null && bcFichaFiltroDTO.getBo_tipoDocumento() != -1) {
+      sCond += " dp.DP_IDTIPODOCUMENTO = :tipoDoc AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nroDocumento() != null && !bcFichaFiltroDTO.getBo_nroDocumento().trim().isEmpty()) {
+      sCond += " dp.DP_NRODOCUMENTO = :nDoc  AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_tipoAtencion() != null && bcFichaFiltroDTO.getBo_tipoAtencion() != -1) {
+      sCond += " df.DF_IDTIPOATENCION = :tipoAtencion AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_localizacion() != null && bcFichaFiltroDTO.getBo_localizacion() != -1) {
+      sCond += " df.DF_IDLOCALIZACION = :idLocalizacion AND ";
+    }
+
+    if (bcFichaFiltroDTO.getBo_procedencia() != null && bcFichaFiltroDTO.getBo_procedencia() != -1) {
+      sCond += " df.DF_IDPROCEDENCIA = :idProcedencia AND ";
+    }
+
+    if (bcFichaFiltroDTO.getBo_servicio() != null && bcFichaFiltroDTO.getBo_servicio() != -1) {
+      sCond += " df.DF_IDSERVICIO = :idServicio AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_seccion() != null && bcFichaFiltroDTO.getBo_seccion() != -1) {
+      sCond += " df.DF_IDLOCALIZACION = :idSeccion AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
+      sCond += " df.DF_IDEXAMEN= :idExamen AND ";
+    }
+
+    int pos = sCond.lastIndexOf("AND");
+
+    if (pos != -1) {
+      sCond = sCond.substring(0, pos);
+      sCond = " WHERE " + sCond;
+    }
+
+    logger.debug("Condiciones consulta {}", sCond);
+
+    return _sqlOrdenesFullxFiltro + sCond;
+
+  }
+
+  public String genSqlOrdenesConDatosExamenesConSecciones(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
+
+    String sql = "";
+    String sCond = "";
+
+    this.normalize(bcFichaFiltroDTO);
+
+    if (bcFichaFiltroDTO.getBo_apellido() != null && !bcFichaFiltroDTO.getBo_apellido().trim().equals("")) {
+      sCond += " ( UPPER(dp.DP_PRIMERAPELLIDO) like UPPER(:apellido) OR "
+          + " UPPER(dp.DP_SEGUNDOAPELLIDO) like UPPER(:apellido)) AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nombre() != null && !bcFichaFiltroDTO.getBo_nombre().trim().isEmpty()) {
+      sCond += " UPPER(dp.DP_NOMBRES) like UPPER(:nombre) AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_fFin() != null && !bcFichaFiltroDTO.getBo_fFin().trim().isEmpty()) {
+      sCond += " df.DF_FECHAORDEN <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_fIni() != null && !bcFichaFiltroDTO.getBo_fIni().trim().isEmpty()) {
+
+      sCond += " df.DF_FECHAORDEN >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nOrdenIni() != null) {
+      sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nOrdenFin() != null) {
+      sCond += " df.DF_NORDEN <= :nOrdenFin AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_tipoDocumento() != null && bcFichaFiltroDTO.getBo_tipoDocumento() != -1) {
+      sCond += " dp.DP_IDTIPODOCUMENTO = :tipoDoc AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_nroDocumento() != null && !bcFichaFiltroDTO.getBo_nroDocumento().trim().isEmpty()) {
+      sCond += " dp.DP_NRODOCUMENTO = :nDoc  AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_tipoAtencion() != null && bcFichaFiltroDTO.getBo_tipoAtencion() != -1) {
+      sCond += " df.DF_IDTIPOATENCION = :tipoAtencion AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_localizacion() != null && bcFichaFiltroDTO.getBo_localizacion() != -1) {
+      sCond += " df.DF_IDLOCALIZACION = :idLocalizacion AND ";
+    }
+
+    if (bcFichaFiltroDTO.getBo_procedencia() != null && bcFichaFiltroDTO.getBo_procedencia() != -1) {
+      sCond += " df.DF_IDPROCEDENCIA = :idProcedencia AND ";
+    }
+
+    if (bcFichaFiltroDTO.getBo_servicio() != null && bcFichaFiltroDTO.getBo_servicio() != -1) {
+      sCond += " df.DF_IDSERVICIO = :idServicio AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_seccion() != null && bcFichaFiltroDTO.getBo_seccion() != -1) {
+      sCond += " df.DF_IDLOCALIZACION = :idSeccion AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
+      sCond += " df.DF_IDEXAMEN= :idExamen AND ";
+    }
+    if (bcFichaFiltroDTO.getBo_host() != null && !bcFichaFiltroDTO.getBo_host().trim().isEmpty()) {
+      sCond += " df.DF_IDEXAMEN= :idExamen AND ";
+    }
+
+    int pos = sCond.lastIndexOf("AND");
+
+    if (pos != -1) {
+      sCond = sCond.substring(0, pos);
+      sCond = " WHERE " + sCond;
+    }
+
+    sCond = sCond.concat(" order by DF_NORDEN ");
+
+    logger.debug("Condiciones consulta {}", sCond);
+
+    return _sqlOrdenesConDatosExamenesConSecciones + sCond;
+
+  }
+
+  private static final String _sqlOrdenesConDatosExamenes = ""
+      + "SELECT  TO_CHAR(DF_FECHAORDEN,'DD-MM HH24:MI') SDF_FECHAORDEN, DF_NORDEN, dp.DP_NOMBRES ,"
+      + "TO_CHAR(dp.DP_FNACIMIENTO,'DD-MM-YYYY ') SDP_FNACIMIENTO , ls.LDVS_DESCRIPCION  ,dp.DP_OBSERVACION, cc.CC_ABREVIADO, "
+      + "lt.LDVTD_DESCRIPCION,dp.DP_NRODOCUMENTO,ct.CTA_DESCRIPCION, cp.CP_DESCRIPCION , cs.CS_DESCRIPCION ,"
+      + "dp.DP_EMAIL, dp.DP_IDPACIENTE,dp.DP_PRIMERAPELLIDO, dp.DP_SEGUNDOAPELLIDO,"
+      + "cd.CD_DESCRIPCION, df.DF_OBSERVACION, cm.CM_NOMBRES,cm.CM_PRIMERAPELLIDO, cm.CM_SEGUNDOAPELLIDO, ce.CE_IDSECCION ,"
+      + "dfe.DFE_CODIGOESTADOEXAMEN,cee.CEE_DESCRIPCIONESTADOEXAMEN, dfe.DFE_EXAMENESURGENTE, df.DF_HOST "
+      + "FROM  DATOS_FICHAS df       " + "JOIN DATOS_PACIENTES dp ON (dp.DP_IDPACIENTE = df.DF_IDPACIENTE)     "
+      + "JOIN DATOS_FICHASEXAMENES dfe ON (dfe.DFE_NORDEN = df.DF_NORDEN) "
+      + "JOIN LDV_TIPOSDOCUMENTOS lt ON (lt.LDVTD_IDTIPODOCUMENTO = dp.DP_IDTIPODOCUMENTO) "
+      + "JOIN CFG_TIPOATENCION ct ON (ct.CTA_IDTIPOATENCION = df.DF_IDTIPOATENCION)    "
+      + "LEFT OUTER JOIN CFG_PROCEDENCIAS cp ON (cp.CP_IDPROCEDENCIA = df.DF_IDPROCEDENCIA )     "
+      + "LEFT OUTER JOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = df.DF_IDLOCALIZACION ) "
+      + "JOIN CFG_EXAMENES ce ON (ce.CE_IDEXAMEN = dfe.DFE_IDEXAMEN) "
+      + "JOIN LDV_SEXO ls ON (ls.LDVS_IDSEXO = dp.DP_IDSEXO) "
+      + "JOIN CFG_ESTADOSEXAMENES cee ON (dfe.DFE_CODIGOESTADOEXAMEN = cee.CEE_CODIGOESTADOEXAMEN) "
+
+      + "LEFT OUTER JOIN CFG_DIAGNOSTICOS cd ON (cd.CD_IDDIAGNOSTICO = df.DF_IDDIAGNOSTICO) "
+      + "LEFT OUTER JOIN CFG_CONVENIOS cc ON (cc.CC_IDCONVENIO = df.DF_IDCONVENIO) "
+      + "LEFT OUTER JOIN CFG_MEDICOS cm  ON (cm.CM_IDMEDICO = df.DF_IDMEDICO) ";
+
+  private static final String _sqlOrdenesFullxFiltro = ""
+      + "SELECT   DF_NORDEN,TO_CHAR(DF_FECHAORDEN,'DD-MM HH24:MI') SDF_FECHAORDEN, df.DF_OBSERVACION, "
+      + "dp.DP_IDPACIENTE,lt.LDVTD_DESCRIPCION,dp.DP_NRODOCUMENTO,dp.DP_NOMBRES , dp.DP_PRIMERAPELLIDO, dp.DP_SEGUNDOAPELLIDO,dp.DP_EMAIL,"
+      + "TO_CHAR(dp.DP_FNACIMIENTO,'DD-MM-YYYY ') SDP_FNACIMIENTO , ls.LDVS_DESCRIPCION  ,dp.DP_OBSERVACION,"
+      + "ct.CTA_DESCRIPCION, cp.CP_DESCRIPCION , " + "cc.CC_ABREVIADO, " + "df.DF_IDPREVISION,  "
+      + "df.DF_IDLOCALIZACION," + "cd.CD_DESCRIPCION," + "df.DF_IDCENTRODESALUD," + "df.DF_IDPRIORIDADATENCION,"
+      + "cs.CS_DESCRIPCION, df.DF_IDFICHAESTADOTM " 
+      + ", (select ldvfet_descripcion from ldv_fichasestadostm where ldvfet_idfichaestadotm = df.DF_IDFICHAESTADOTM) as ldvfet_descripcion "
+      + "FROM  DATOS_FICHAS df       "
+      + "JOIN DATOS_PACIENTES dp ON (dp.DP_IDPACIENTE = df.DF_IDPACIENTE)     "
+//      + "JOIN DATOS_FICHASEXAMENES dfe ON (dfe.DFE_NORDEN = df.DF_NORDEN) "
+      + "JOIN LDV_TIPOSDOCUMENTOS lt ON (lt.LDVTD_IDTIPODOCUMENTO = dp.DP_IDTIPODOCUMENTO) "
+      + "JOIN CFG_TIPOATENCION ct ON (ct.CTA_IDTIPOATENCION = df.DF_IDTIPOATENCION)    "
+      + "LEFT OUTER JOIN CFG_PROCEDENCIAS cp ON (cp.CP_IDPROCEDENCIA = df.DF_IDPROCEDENCIA )     "
+      + "LEFT OUTER JOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = df.DF_IDLOCALIZACION ) "
+//      + "JOIN CFG_EXAMENES ce ON (ce.CE_IDEXAMEN = dfe.DFE_IDEXAMEN) "
+      + "JOIN LDV_SEXO ls ON (ls.LDVS_IDSEXO = dp.DP_IDSEXO) "
+//      + "JOIN CFG_ESTADOSEXAMENES cee ON (dfe.DFE_CODIGOESTADOEXAMEN = cee.CEE_CODIGOESTADOEXAMEN) "
+      + "LEFT OUTER JOIN CFG_DIAGNOSTICOS cd ON (cd.CD_IDDIAGNOSTICO = df.DF_IDDIAGNOSTICO) "
+      + "LEFT OUTER JOIN CFG_CONVENIOS cc ON (cc.CC_IDCONVENIO = df.DF_IDCONVENIO) "
       //AÃ±adido por Marco Caracciolo 27/10/2022
-    
-    private static final String _sqlOrdenesConDatosExamenesConSecciones = ""
-            + "SELECT  TO_CHAR(DF_FECHAORDEN,'DD-MM HH24:MI') SDF_FECHAORDEN, DF_NORDEN, dp.DP_NOMBRES ,"
-            + "TO_CHAR(dp.DP_FNACIMIENTO,'DD-MM-YYYY ') SDP_FNACIMIENTO , ls.LDVS_DESCRIPCION  ,dp.DP_OBSERVACION, cc.CC_ABREVIADO, "
-            + "lt.LDVTD_DESCRIPCION,dp.DP_NRODOCUMENTO,ct.CTA_DESCRIPCION, cp.CP_DESCRIPCION , cs.CS_DESCRIPCION ,"
-            + "dp.DP_EMAIL, dp.DP_IDPACIENTE,dp.DP_PRIMERAPELLIDO, dp.DP_SEGUNDOAPELLIDO,"
-            + "cd.CD_DESCRIPCION, df.DF_OBSERVACION, cm.CM_NOMBRES,cm.CM_PRIMERAPELLIDO, cm.CM_SEGUNDOAPELLIDO, ce.CE_IDSECCION ,"
-            + "dfe.DFE_CODIGOESTADOEXAMEN,cee.CEE_DESCRIPCIONESTADOEXAMEN, dfe.DFE_EXAMENESURGENTE,ce.CE_CODIGOEXAMEN, ce.CE_ABREVIADO, "
-            + "csec.CSEC_DESCRIPCION,dfe.DFE_IDEXAMEN " + "FROM  DATOS_FICHAS df       "
-            + "JOIN DATOS_PACIENTES dp ON (dp.DP_IDPACIENTE = df.DF_IDPACIENTE)    "
-            + "JOIN DATOS_FICHASEXAMENES dfe ON (dfe.DFE_NORDEN = df.DF_NORDEN) "
-            + "JOIN LDV_TIPOSDOCUMENTOS lt ON (lt.LDVTD_IDTIPODOCUMENTO = dp.DP_IDTIPODOCUMENTO) "
-            + "JOIN CFG_TIPOATENCION ct ON (ct.CTA_IDTIPOATENCION = df.DF_IDTIPOATENCION)    "
-            + "LEFT OUTER JOIN CFG_PROCEDENCIAS cp ON (cp.CP_IDPROCEDENCIA = df.DF_IDPROCEDENCIA )     "
-            + "LEFT OUTER JOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = df.DF_IDSERVICIO ) "
-            + "JOIN CFG_EXAMENES ce ON (ce.CE_IDEXAMEN = dfe.DFE_IDEXAMEN) "
-            + "JOIN LDV_SEXO ls ON (ls.LDVS_IDSEXO = dp.DP_IDSEXO) "
-            + "JOIN CFG_ESTADOSEXAMENES cee ON (dfe.DFE_CODIGOESTADOEXAMEN = cee.CEE_CODIGOESTADOEXAMEN) "
-
-            + "LEFT OUTER JOIN CFG_DIAGNOSTICOS cd ON (cd.CD_IDDIAGNOSTICO = df.DF_IDDIAGNOSTICO) "
-            + "LEFT OUTER JOIN CFG_SECCIONES csec ON (csec.CSEC_IDSECCION = ce.CE_IDSECCION ) "
-            + "LEFT OUTER JOIN CFG_CONVENIOS cc ON (cc.CC_IDCONVENIO = df.DF_IDCONVENIO) "
-            + "LEFT OUTER JOIN CFG_MEDICOS cm  ON (cm.CM_IDMEDICO = df.DF_IDMEDICO) ";
+      + "LEFT OUTER JOIN LDV_FICHASESTADOSTM fe ON (fe.LDVFET_IDFICHAESTADOTM = df.DF_IDFICHAESTADOTM)";
+
+  private static final String _sqlOrdenesConDatosExamenesConSecciones = ""
+      + "SELECT  TO_CHAR(DF_FECHAORDEN,'DD-MM HH24:MI') SDF_FECHAORDEN, DF_NORDEN, dp.DP_NOMBRES ,"
+      + "TO_CHAR(dp.DP_FNACIMIENTO,'DD-MM-YYYY ') SDP_FNACIMIENTO , ls.LDVS_DESCRIPCION  ,dp.DP_OBSERVACION, cc.CC_ABREVIADO, "
+      + "lt.LDVTD_DESCRIPCION,dp.DP_NRODOCUMENTO,ct.CTA_DESCRIPCION, cp.CP_DESCRIPCION , cs.CS_DESCRIPCION ,"
+      + "dp.DP_EMAIL, dp.DP_IDPACIENTE,dp.DP_PRIMERAPELLIDO, dp.DP_SEGUNDOAPELLIDO,"
+      + "cd.CD_DESCRIPCION, df.DF_OBSERVACION, cm.CM_NOMBRES,cm.CM_PRIMERAPELLIDO, cm.CM_SEGUNDOAPELLIDO, ce.CE_IDSECCION ,"
+      + "dfe.DFE_CODIGOESTADOEXAMEN,cee.CEE_DESCRIPCIONESTADOEXAMEN, dfe.DFE_EXAMENESURGENTE,ce.CE_CODIGOEXAMEN, ce.CE_ABREVIADO, "
+      + "csec.CSEC_DESCRIPCION,dfe.DFE_IDEXAMEN " + "FROM  DATOS_FICHAS df       "
+      + "JOIN DATOS_PACIENTES dp ON (dp.DP_IDPACIENTE = df.DF_IDPACIENTE)    "
+      + "JOIN DATOS_FICHASEXAMENES dfe ON (dfe.DFE_NORDEN = df.DF_NORDEN) "
+      + "JOIN LDV_TIPOSDOCUMENTOS lt ON (lt.LDVTD_IDTIPODOCUMENTO = dp.DP_IDTIPODOCUMENTO) "
+      + "JOIN CFG_TIPOATENCION ct ON (ct.CTA_IDTIPOATENCION = df.DF_IDTIPOATENCION)    "
+      + "LEFT OUTER JOIN CFG_PROCEDENCIAS cp ON (cp.CP_IDPROCEDENCIA = df.DF_IDPROCEDENCIA )     "
+      + "LEFT OUTER JOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = df.DF_IDLOCALIZACION ) "
+      + "JOIN CFG_EXAMENES ce ON (ce.CE_IDEXAMEN = dfe.DFE_IDEXAMEN) "
+      + "JOIN LDV_SEXO ls ON (ls.LDVS_IDSEXO = dp.DP_IDSEXO) "
+      + "JOIN CFG_ESTADOSEXAMENES cee ON (dfe.DFE_CODIGOESTADOEXAMEN = cee.CEE_CODIGOESTADOEXAMEN) "
+
+      + "LEFT OUTER JOIN CFG_DIAGNOSTICOS cd ON (cd.CD_IDDIAGNOSTICO = df.DF_IDDIAGNOSTICO) "
+      + "LEFT OUTER JOIN CFG_SECCIONES csec ON (csec.CSEC_IDSECCION = ce.CE_IDSECCION ) "
+      + "LEFT OUTER JOIN CFG_CONVENIOS cc ON (cc.CC_IDCONVENIO = df.DF_IDCONVENIO) "
+      + "LEFT OUTER JOIN CFG_MEDICOS cm  ON (cm.CM_IDMEDICO = df.DF_IDMEDICO) ";
 
 }
diff --git a/src/main/java/com/grupobios/bioslis/common/DesautorizarExamenExecutor.java b/src/main/java/com/grupobios/bioslis/common/DesautorizarExamenExecutor.java
index 758345c4..ec59b64e 100644
--- a/src/main/java/com/grupobios/bioslis/common/DesautorizarExamenExecutor.java
+++ b/src/main/java/com/grupobios/bioslis/common/DesautorizarExamenExecutor.java
@@ -17,8 +17,8 @@ public class DesautorizarExamenExecutor implements ActionExamenExecutor {
   ExamenService examenService;
 
   @Override
-  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario) throws BiosLISDAOException,
-      BiosLISException, BiosLISDAONotFoundException, BiosLisExamenSignerException, IOException {
+  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
+      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException {
 
   }
 
diff --git a/src/main/java/com/grupobios/bioslis/common/DesbloquearExamenExecutor.java b/src/main/java/com/grupobios/bioslis/common/DesbloquearExamenExecutor.java
index 15911862..562e69b2 100644
--- a/src/main/java/com/grupobios/bioslis/common/DesbloquearExamenExecutor.java
+++ b/src/main/java/com/grupobios/bioslis/common/DesbloquearExamenExecutor.java
@@ -17,8 +17,8 @@ public class DesbloquearExamenExecutor implements ActionExamenExecutor {
   ExamenService examenService;
 
   @Override
-  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario) throws BiosLISDAOException,
-      BiosLISException, BiosLISDAONotFoundException, BiosLisExamenSignerException, IOException {
+  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
+      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException {
 //
 //    List<ExamenOrdenDTO> lst = ordenService.readyToSign(dfetId.getDF_NORDEN().longValue());
 //
diff --git a/src/main/java/com/grupobios/bioslis/common/ExamenNoExecutor.java b/src/main/java/com/grupobios/bioslis/common/ExamenNoExecutor.java
index 2ff9a330..6375d577 100644
--- a/src/main/java/com/grupobios/bioslis/common/ExamenNoExecutor.java
+++ b/src/main/java/com/grupobios/bioslis/common/ExamenNoExecutor.java
@@ -17,8 +17,8 @@ public class ExamenNoExecutor implements ActionExamenExecutor {
   ExamenService examenService;
 
   @Override
-  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario) throws BiosLISDAOException,
-      BiosLISException, BiosLISDAONotFoundException, BiosLisExamenSignerException, IOException {
+  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
+      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException {
 
   }
 
diff --git a/src/main/java/com/grupobios/bioslis/common/MassiveSignExecutor.java b/src/main/java/com/grupobios/bioslis/common/MassiveSignExecutor.java
index e2305c3b..115d4b0a 100644
--- a/src/main/java/com/grupobios/bioslis/common/MassiveSignExecutor.java
+++ b/src/main/java/com/grupobios/bioslis/common/MassiveSignExecutor.java
@@ -38,8 +38,8 @@ public class MassiveSignExecutor implements ActionExamenExecutor {
   }
 
   @Override
-  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario) throws BiosLISDAOException,
-      BiosLISException, BiosLISDAONotFoundException, BiosLisExamenSignerException, IOException {
+  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
+      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException {
     // TODO Auto-generated method stub
 
   }
diff --git a/src/main/java/com/grupobios/bioslis/common/OrdenHelper.java b/src/main/java/com/grupobios/bioslis/common/OrdenHelper.java
index ee945012..1ea841fe 100644
--- a/src/main/java/com/grupobios/bioslis/common/OrdenHelper.java
+++ b/src/main/java/com/grupobios/bioslis/common/OrdenHelper.java
@@ -172,7 +172,7 @@ public class OrdenHelper {
       + "JOIN LDV_TIPOSDOCUMENTOS lt ON (lt.LDVTD_IDTIPODOCUMENTO = dp.DP_IDTIPODOCUMENTO) "
       + "JOIN CFG_TIPOATENCION ct ON (ct.CTA_IDTIPOATENCION = df.DF_IDTIPOATENCION)    "
       + "LEFT OUTER JOIN CFG_PROCEDENCIAS cp ON (cp.CP_IDPROCEDENCIA = df.DF_IDPROCEDENCIA )     "
-      + "LEFT OUTER JOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = df.DF_IDSERVICIO ) "
+      + "LEFT OUTER JOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = df.DF_IDLOCALIZACION ) "
       + "JOIN CFG_EXAMENES ce ON (ce.CE_IDEXAMEN = dfe.DFE_IDEXAMEN) "
       + "JOIN LDV_SEXO ls ON (ls.LDVS_IDSEXO = dp.DP_IDSEXO) "
       + "JOIN CFG_ESTADOSEXAMENES cee ON (dfe.DFE_CODIGOESTADOEXAMEN = cee.CEE_CODIGOESTADOEXAMEN) "
diff --git a/src/main/java/com/grupobios/bioslis/common/SignExamenExecutor.java b/src/main/java/com/grupobios/bioslis/common/SignExamenExecutor.java
index 91ef3769..b8eb57af 100644
--- a/src/main/java/com/grupobios/bioslis/common/SignExamenExecutor.java
+++ b/src/main/java/com/grupobios/bioslis/common/SignExamenExecutor.java
@@ -75,21 +75,20 @@ public class SignExamenExecutor implements ActionExamenExecutor {
   }
 
   @Override
-  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario) throws BiosLISDAOException,
-      BiosLISException, BiosLISDAONotFoundException, BiosLisExamenSignerException, IOException {
+  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
+      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException {
 
     if (examenService.readyToSign(dfetId.getDFE_IDEXAMEN().longValue(), dfetId.getDF_NORDEN().longValue())) {
       examenService.sign(dfetId, idUsuario);
     } else {
-      throw new BiosLisExamenSignerException("Examen no estÃ¡ listo para ser firmado.");
+      throw new BiosLisExecutorException("Examen no estÃ¡ listo para ser firmado.");
     }
 
     List<ExamenOrdenDTO> lst = ordenService.readyToSign(dfetId.getDF_NORDEN().longValue());
 
     if (lst == null || lst.isEmpty()) {
 
-      throw new BiosLisExamenSignerException(
-          "Orden " + dfetId.getDF_NORDEN().longValue() + " aun con firmas pendientes.");
+      throw new BiosLISException("Orden " + dfetId.getDF_NORDEN().longValue() + " aun con firmas pendientes.");
     }
 
     String[] lstExamenes = new String[lst.size()];
diff --git a/src/main/java/com/grupobios/bioslis/common/UnsignExamenExecutor.java b/src/main/java/com/grupobios/bioslis/common/UnsignExamenExecutor.java
index ba33f098..65092d2b 100644
--- a/src/main/java/com/grupobios/bioslis/common/UnsignExamenExecutor.java
+++ b/src/main/java/com/grupobios/bioslis/common/UnsignExamenExecutor.java
@@ -75,13 +75,13 @@ public class UnsignExamenExecutor implements ActionExamenExecutor {
   }
 
   @Override
-  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario) throws BiosLISDAOException,
-      BiosLISException, BiosLISDAONotFoundException, IOException, BiosLisExamenSignerException {
+  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
+      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException {
 
     if (examenService.readyToSign(dfetId.getDFET_IDTEST().longValue(), dfetId.getDF_NORDEN().longValue())) {
       examenService.sign(dfetId, idUsuario);
     } else {
-      throw new BiosLisExamenSignerException("Examen no estÃ¡ listo para ser firmado.");
+      throw new BiosLisExecutorException("Examen no estÃ¡ listo para ser firmado.");
     }
 
     List<ExamenOrdenDTO> lst = ordenService.readyToSign(dfetId.getDF_NORDEN().longValue());
diff --git a/src/main/java/com/grupobios/bioslis/common/UnsignTestExecutor.java b/src/main/java/com/grupobios/bioslis/common/UnsignTestExecutor.java
index 44824786..588cee83 100644
--- a/src/main/java/com/grupobios/bioslis/common/UnsignTestExecutor.java
+++ b/src/main/java/com/grupobios/bioslis/common/UnsignTestExecutor.java
@@ -75,13 +75,13 @@ public class UnsignTestExecutor implements ActionExamenExecutor {
   }
 
   @Override
-  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario) throws BiosLISDAOException,
-      BiosLISException, BiosLISDAONotFoundException, BiosLisExamenSignerException, IOException {
+  public void exec(ResultadoNumericoTestExamenOrdenDTO dfetId, Long idUsuario)
+      throws BiosLISDAOException, BiosLISException, BiosLISDAONotFoundException, BiosLisExecutorException, IOException {
 
     if (examenService.readyToSign(dfetId.getDFET_IDTEST().longValue(), dfetId.getDF_NORDEN().longValue())) {
       examenService.sign(dfetId, idUsuario);
     } else {
-      throw new BiosLisExamenSignerException("Examen no estÃ¡ listo para ser firmado.");
+      throw new BiosLisExecutorException("Examen no estÃ¡ listo para ser firmado.");
     }
 
     List<ExamenOrdenDTO> lst = ordenService.readyToSign(dfetId.getDF_NORDEN().longValue());
diff --git a/src/main/java/com/grupobios/bioslis/controller/ConfiguracionEtiquetasController.java b/src/main/java/com/grupobios/bioslis/controller/ConfiguracionEtiquetasController.java
deleted file mode 100644
index 229613e5..00000000
--- a/src/main/java/com/grupobios/bioslis/controller/ConfiguracionEtiquetasController.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package com.grupobios.bioslis.controller;
-
-import org.springframework.stereotype.Controller;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestMethod;
-import org.springframework.web.servlet.ModelAndView;
-
-
-@Controller
-public class ConfiguracionEtiquetasController {
-
-    
-    ModelAndView mav = new ModelAndView();
-
-    @RequestMapping(value = "/ConfiguracionEtiquetas", method = RequestMethod.GET)
-    public ModelAndView pageLoad() {
-      mav.setViewName("/ConfiguracionEtiquetas");
-      return mav;
-    }
-}
diff --git a/src/main/java/com/grupobios/bioslis/controller/DefController.java b/src/main/java/com/grupobios/bioslis/controller/DefController.java
index a3ee07f5..53537976 100755
--- a/src/main/java/com/grupobios/bioslis/controller/DefController.java
+++ b/src/main/java/com/grupobios/bioslis/controller/DefController.java
@@ -29,13 +29,5 @@ public class DefController {
         mav.setViewName("Estilos");
         return mav;
     }   
-   
-    
-    //creado por cristian para prueba excel 17-11
-    @RequestMapping(value="/PruebaEstadistica",method = RequestMethod.GET)
-    public ModelAndView prueba(){
-        mav.setViewName("PruebaEstadistica");
-        return mav;
-    }   
 
 }
diff --git a/src/main/java/com/grupobios/bioslis/controller/Home_newController.java b/src/main/java/com/grupobios/bioslis/controller/Home_newController.java
index 50d3384d..09ee0c6c 100755
--- a/src/main/java/com/grupobios/bioslis/controller/Home_newController.java
+++ b/src/main/java/com/grupobios/bioslis/controller/Home_newController.java
@@ -7,6 +7,7 @@ package com.grupobios.bioslis.controller;
 
 import com.grupobios.bioslis.dao.DatosUsuariosDAO;
 import com.grupobios.bioslis.entity.DatosUsuarios;
+import javax.faces.context.FacesContext;
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
diff --git a/src/main/java/com/grupobios/bioslis/controller/MicrobiologiaApiController.java b/src/main/java/com/grupobios/bioslis/controller/MicrobiologiaApiController.java
index 40289fa8..346d54ad 100755
--- a/src/main/java/com/grupobios/bioslis/controller/MicrobiologiaApiController.java
+++ b/src/main/java/com/grupobios/bioslis/controller/MicrobiologiaApiController.java
@@ -35,8 +35,6 @@ public class MicrobiologiaApiController {
 
 	static Logger log = LogManager.getLogger(MicrobiologiaApiController.class.getName());
 
-	
-	
 	@GetMapping("/Microbiologia/api/getOrderList")
 	public List<HashMap<String, String>> getOrderList(
 			@RequestParam(value = "startId", defaultValue = "") String startId,
@@ -57,9 +55,6 @@ public class MicrobiologiaApiController {
 		return (new OrderSearcher()).searchList(startId, endId, startDate, endDate, atentionType, exam, section, names,
 				surname, documentType, documentId, serviceId, statusPending, statusForSignature);
 	}
-	
-	
-	
 
 	@GetMapping("/Microbiologia/api/getOrderData")
 	public HashMap<String, Object> getOrderData(@RequestParam(value = "orderId", defaultValue = "") String orderId) {
diff --git a/src/main/java/com/grupobios/bioslis/controller/RegistroMedicoController.java b/src/main/java/com/grupobios/bioslis/controller/RegistroMedicoController.java
index b106d1b7..1608f6a0 100755
--- a/src/main/java/com/grupobios/bioslis/controller/RegistroMedicoController.java
+++ b/src/main/java/com/grupobios/bioslis/controller/RegistroMedicoController.java
@@ -102,7 +102,7 @@ public class RegistroMedicoController {
 
     @RequestMapping(value = "/RegistroMedico", method = RequestMethod.POST, params = "update")
     public ModelAndView editMedico(CfgMedicos med, HttpServletRequest request) throws ParseException {
-        String ipEquipo = request.getParameter("ipEquipo");     
+        String ipEquipo = request.getParameter("ipEquipo");       
         try {
             int id = Integer.parseInt(request.getParameter("idMedico"));
             String activo = request.getParameter("mcActivo");
@@ -236,12 +236,12 @@ public class RegistroMedicoController {
 
     @RequestMapping(value = "/RegistroMedico", method = RequestMethod.POST, params = "filtro")
 	public void getSecciones(HttpServletRequest request, HttpServletResponse response) throws IOException {
-	
+	System.out.println("entre a filtrar");
 		String run = request.getParameter("run");
 		
 		String nombre = request.getParameter("nombre");
 		nombre = nombre.toUpperCase();
-	
+	System.out.println("run" + " "+run);
 	
 	/*
 		List<CfgSecciones> listaSecciones = new ArrayList<CfgSecciones>();
diff --git a/src/main/java/com/grupobios/bioslis/controller/TomaMuestrasController.java b/src/main/java/com/grupobios/bioslis/controller/TomaMuestrasController.java
index d69598d4..08153bd2 100755
--- a/src/main/java/com/grupobios/bioslis/controller/TomaMuestrasController.java
+++ b/src/main/java/com/grupobios/bioslis/controller/TomaMuestrasController.java
@@ -146,8 +146,7 @@ public class TomaMuestrasController {
             idEnvase.shortValue(), idDerivador.shortValue(), comparteMuestra);
         for (DatosFichasexamenestest ddfet : listDfet) {
           ddfet.setDfetIdmuestra(dfm.getDfmIdmuestra());
-          //modificado por cristian 04-11 
-          //ddfet.setDfetIdusuariodigita(idUsuario);  no se debe guardar usuariodigita en este paso
+          ddfet.setDfetIdusuariodigita(idUsuario);
           dfetDao.updateDFExamenesTest(ddfet);
 
           bl.logInsertDatosFichaTableRecord(DatosFichasexamenestest.class, ddfet, new BigDecimal(idUsuario),
diff --git a/src/main/java/com/grupobios/bioslis/dao/CapturaResultadosDAO.java b/src/main/java/com/grupobios/bioslis/dao/CapturaResultadosDAO.java
index d5bb30f2..129bd192 100755
--- a/src/main/java/com/grupobios/bioslis/dao/CapturaResultadosDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/CapturaResultadosDAO.java
@@ -56,16 +56,13 @@ public class CapturaResultadosDAO {
 
   public static final String sqlUpdateResultadoEstadoTransmitidoExamenesDeUnaOrden = "UPDATE DATOS_FICHASEXAMENESTEST dfet "
       + "SET dfet.DFET_RESULTADO = :resultado" + " , dfet.DFET_RESULTADONUMERICO = :resultadonro "
-      + " , dfet.DFET_IDESTADORESULTADOTEST = :estado ,"
-      + " dfet.DFET_IDUSUARIODIGITA =:idUsuario , dfet.DFET_FECHAINGRESORESULTADO=:fecha  " 
-      + " WHERE dfet.DFET_NORDEN = :nOrden "
+      + " , dfet.DFET_IDESTADORESULTADOTEST = :estado" + " WHERE dfet.DFET_NORDEN = :nOrden "
       + "AND  dfet.DFET_IDEXAMEN = :idExamen " + "AND  dfet.DFET_IDTEST = :idTest ";
 
   public static final String sqlExamenesMuestrasDeUnaOrden = ""
       + "SELECT dfe.DFE_NORDEN,ce.CE_ABREVIADO,cm.CMUE_DESCRIPCIONABREVIADA , cenv.CENV_DESCRIPCION , cs.CSEC_DESCRIPCION"
       + ",cte.CT_DESCRIPCION, cte.CT_CODIGO,cte.CT_IDTIPOMUESTRA ,dfe.DFE_IDEXAMEN"
-      + ",dfe.DFE_CODIGOESTADOEXAMEN, dfe.DFE_CANTIDAD,dfe.DFE_EXAMENESURGENTE,cee.CEE_DESCRIPCIONESTADOEXAMEN,"
-      + "dfm.DFM_CODIGOBARRA, ce.CE_CODIGOEXAMEN, cte.CT_FORMULA,dfe.DFE_EXAMENANULADO,ce.CE_IDSECCION  "
+      + ",dfe.DFE_CODIGOESTADOEXAMEN, dfe.DFE_CANTIDAD,dfe.DFE_EXAMENESURGENTE,cee.CEE_DESCRIPCIONESTADOEXAMEN,dfm.DFM_CODIGOBARRA, ce.CE_CODIGOEXAMEN, cte.CT_FORMULA  "
       + "FROM  DATOS_FICHAS df " + "JOIN DATOS_FICHASEXAMENES dfe ON (dfe.DFE_NORDEN = df.DF_NORDEN) "
       + "JOIN CFG_EXAMENES ce ON (ce.CE_IDEXAMEN = dfe.DFE_IDEXAMEN) "
       + "JOIN DATOS_FICHASEXAMENESTEST dfet ON(dfet.DFET_IDEXAMEN = dfe.DFE_IDEXAMEN AND dfet.DFET_NORDEN = dfe.DFE_NORDEN ) "
@@ -81,7 +78,7 @@ public class CapturaResultadosDAO {
       + " df.DF_NORDEN = :nOrden " + "ORDER BY dfe.DFE_EXAMENESURGENTE,ce.CE_ABREVIADO desc";
 
   public static final String sqlUpdateResultadosExamenesDeUnaOrden = "UPDATE DATOS_FICHASEXAMENESTEST dfet "
-      + "SET dfet.DFET_RESULTADO = :resultado " + " WHERE dfet.DFET_NORDEN = :nOrden "
+      + "SET dfet.DFET_RESULTADO = :resultado" + " WHERE dfet.DFET_NORDEN = :nOrden "
       + "AND  dfet.DFET_IDEXAMEN = :idExamen " + "AND  dfet.DFET_IDTEST = :idTest ";
 
   public static final String sqlUpdateEstadoResultadosExamenesDeUnaOrden = "UPDATE DATOS_FICHASEXAMENESTEST dfet "
@@ -98,8 +95,8 @@ public class CapturaResultadosDAO {
       + "dfet.DFET_RESULTADONUMERICO ,dfet.DFET_IDUNIDADDEMEDIDA,dfet.DFET_REFERENCIADESDE, "
       + "dfet.DFET_REFERENCIAHASTA,ctr.CTR_CODIGO,dfet.DFET_RESULTADO, "
       + "dfet.DFET_RCRITICO, dp.DP_IDPACIENTE, dfet.DFET_IDMUESTRA,ct.CT_DECIMALES ,dfm.DFM_CODIGOBARRA,"
-      + "ct.CT_RESULTADOOMISION,ct.CT_RESULTADOOBLIGADO,ct.CT_ESCULTIVO,ct.CT_IDSECCION,dfe.DFE_EXAMENANULADO "
-      + " FROM DATOS_FICHAS df " + "INNER JOIN DATOS_PACIENTES dp ON (dp.DP_IDPACIENTE = df.DF_IDPACIENTE) "
+      + "ct.CT_RESULTADOOMISION,ct.CT_RESULTADOOBLIGADO,ct.CT_ESCULTIVO,ct.CT_IDSECCION " + " FROM DATOS_FICHAS df "
+      + "INNER JOIN DATOS_PACIENTES dp ON (dp.DP_IDPACIENTE = df.DF_IDPACIENTE) "
       + "INNER JOIN DATOS_FICHASEXAMENES dfe ON (df.DF_NORDEN = dfe.DFE_NORDEN) "
       + "INNER JOIN DATOS_FICHASEXAMENESTEST dfet ON (dfet.DFET_NORDEN = dfe.DFE_NORDEN AND dfet.DFET_IDEXAMEN = dfe.DFE_IDEXAMEN) "
       + "INNER JOIN cfg_examenes ce ON (dfe.DFE_IDEXAMEN = ce.CE_IDEXAMEN) "
@@ -131,8 +128,7 @@ public class CapturaResultadosDAO {
       + " DF_NORDEN = :nOrden " + "ORDER BY 1";
 
   public static final String sqlUpdateResultadosNumericosExamenesDeUnaOrden = "UPDATE DATOS_FICHASEXAMENESTEST dfet "
-      + "SET dfet.DFET_RESULTADO = :resultado , dfet.DFET_RESULTADONUMERICO = :resultadonro, dfet.DFET_RCRITICO = :rcritico, dfet.DFET_IDESTADORESULTADOTEST = :estado ,"
-      + "dfet.DFET_IDUSUARIODIGITA=:idUsuario , dfet.DFET_FECHAINGRESORESULTADO=:fecha "
+      + "SET dfet.DFET_RESULTADO = :resultado , dfet.DFET_RESULTADONUMERICO = :resultadonro, dfet.DFET_RCRITICO = :rcritico, dfet.DFET_IDESTADORESULTADOTEST = :estado"
       + " WHERE dfet.DFET_NORDEN = :nOrden " + "AND  dfet.DFET_IDEXAMEN = :idExamen "
       + "AND  dfet.DFET_IDTEST = :idTest ";
 
@@ -266,8 +262,7 @@ public class CapturaResultadosDAO {
         fila.setCEE_DESCRIPCIONESTADOEXAMEN(e.getCEE_DESCRIPCIONESTADOEXAMEN());
         fila.setCE_CODIGOEXAMEN(e.getCE_CODIGOEXAMEN());
         fila.setCT_FORMULA(e.getCT_FORMULA());
-        fila.setDFE_EXAMENANULADO(e.getDFE_EXAMENANULADO());
-        fila.setCE_IDSECCION(e.getCE_IDSECCION());
+
         curIdExamen = e.getDFE_IDEXAMEN();
       }
       muestrasCB.add(e.getDFM_CODIGOBARRA());
@@ -315,7 +310,6 @@ public class CapturaResultadosDAO {
   }
 
   public List<ExamenesResultadosDeUnaOrdenDTO> getResultadosExamenesOrden(Long nroOrden) {
-   
     List<ExamenesResultadosDeUnaOrdenDTO> lst = null;
     Session sesion = HibernateUtil.getSessionFactory().openSession();
 
@@ -341,7 +335,7 @@ public class CapturaResultadosDAO {
         qry.setString("resultado", eResultado.getDFET_RESULTADO());
         qry.setBigDecimal("nOrden", eResultado.getDF_NORDEN());
         qry.setBigDecimal("idExamen", eResultado.getDFE_IDEXAMEN());
-        qry.setBigDecimal("idTest", eResultado.getDFET_IDTEST());     
+        qry.setBigDecimal("idTest", eResultado.getDFET_IDTEST());
         qry.executeUpdate();
 
       }
@@ -365,30 +359,22 @@ public class CapturaResultadosDAO {
 
     try {
 
-      List<Long> paramLst = null;
-
       if (prmResultadoExamenOrden.getExamenes().isEmpty()
           || prmResultadoExamenOrden.getPaciente().getFnac().equals("")) {
 
-        Query qry = sesion.createQuery(
-            "select dfe.IddatosFichasExamenes.dfeIdexamen from DatosFichasexamenes dfe where dfe.IddatosFichasExamenes.dfeNorden = :nroOrden");
-        qry.setLong("nroOrden", nroOrden);
-        paramLst = (List<Long>) qry.list();
-
-//        return new ArrayList<ExamenesResultadosDeUnaOrdenDTO>();
-      } else {
-        paramLst = new ArrayList<Long>(prmResultadoExamenOrden.getExamenes().size());
-
-        for (ParamResultadoExamenDTO fila : prmResultadoExamenOrden.getExamenes()) {
-          paramLst.add(fila.getDFE_IDEXAMEN().longValue());
-          logger.debug("ID examen {}", fila.getDFE_IDEXAMEN().longValue());
-        }
+        return new ArrayList<ExamenesResultadosDeUnaOrdenDTO>();
       }
-
       Query qry = sesion.createSQLQuery(sqlResultadosSelExamenesDeUnaOrden)
           .setResultTransformer(Transformers.aliasToBean(ExamenesResultadosDeUnaOrdenDTO.class));
       qry.setLong("nOrden", nroOrden);
 
+      List<Long> paramLst = new ArrayList<Long>(prmResultadoExamenOrden.getExamenes().size());
+
+      for (ParamResultadoExamenDTO fila : prmResultadoExamenOrden.getExamenes()) {
+        paramLst.add(fila.getDFE_IDEXAMEN().longValue());
+        logger.debug("ID examen {}", fila.getDFE_IDEXAMEN().longValue());
+      }
+
       qry.setParameterList("lista", paramLst);
       lst = (List<ExamenesResultadosDeUnaOrdenDTO>) qry.list();
 
@@ -437,28 +423,21 @@ public class CapturaResultadosDAO {
     }
     return lst;
   }
-  
- 
-//REVISAR ESTO EN TOMCAT -validado 11-11
-  //aqui se realiza cambios para agregar usuariodigita resultado y fecha digita
+
   public RangoValorResultado updateResultadoTestExamenOrden(ResultadoNumericoTestExamenOrdenDTO resultado)
-      throws BiosLISDAOException, ParseException {    
-      
+      throws BiosLISDAOException, ParseException {
     Session sesion = HibernateUtil.getSessionFactory().openSession();
     RangoValorResultado result = RangoValorResultado.N;
 
-    //modificacion por cristian 07-11  agregar idusuariodigita y fecharesultado
-    Timestamp ts = BiosLisCalendarService.getInstance().getTS();
     try {
       Query qry = sesion.createSQLQuery(sqlUpdateResultadosNumericosExamenesDeUnaOrden);
-       sesion.beginTransaction();
+
+      sesion.beginTransaction();
       qry.setString("resultado", resultado.getDFET_RESULTADO());
       qry.setBigDecimal("nOrden", resultado.getDF_NORDEN());
       qry.setBigDecimal("idExamen", resultado.getDFE_IDEXAMEN());
       qry.setBigDecimal("idTest", resultado.getDFET_IDTEST());
       qry.setInteger("estado", EstadosSistema.DFET_IDRESULTADOTEST_DIGITADO);
-   
-      
       if (!resultado.getCTR_CODIGO().equals("N")) {
         qry.setBigDecimal("resultadonro", null);
       } else {
@@ -487,8 +466,6 @@ public class CapturaResultadosDAO {
         }
       }
       qry.setString("rcritico", result.toString());
-      qry.setParameter("idUsuario", resultado.getIdUsuarioDigita());
-      qry.setParameter("fecha", ts);
       qry.executeUpdate();
       sesion.getTransaction().commit();
     } catch (HibernateException | BiosLISException he) {
@@ -789,9 +766,7 @@ public class CapturaResultadosDAO {
       throws BiosLISDAOException, ParseException {
     Session sesion = HibernateUtil.getSessionFactory().openSession();
     RangoValorResultado result = RangoValorResultado.N;
-    
-    //modificacion por cristian 07-11  agregar idusuariodigita y fecharesultado
-    Timestamp ts = BiosLisCalendarService.getInstance().getTS();
+
     try {
       Query qry = sesion.createSQLQuery(sqlUpdateResultadosNumericosExamenesDeUnaOrden);
 
@@ -803,8 +778,6 @@ public class CapturaResultadosDAO {
       qry.setInteger("estado", EstadosSistema.DFET_IDRESULTADOTEST_PENDIENTE);
       qry.setBigDecimal("resultadonro", null);
       qry.setString("rcritico", "");
-      qry.setParameter("idUsuario", resultado.getIdUsuarioDigita());
-      qry.setParameter("fecha", ts);
       qry.executeUpdate();
       sesion.getTransaction().commit();
     } catch (HibernateException he) {
@@ -849,9 +822,6 @@ public class CapturaResultadosDAO {
   public void updateEstadoTransmitidoResultadoTestExamenOrden(ResultadoNumericoTestExamenOrdenDTO resultado)
       throws BiosLISDAOException, ParseException {
 
-      //modificacion por cristian 07-11  agregar idusuariodigita y fecharesultado
-      Timestamp ts = BiosLisCalendarService.getInstance().getTS();
-      
     Session sesion = HibernateUtil.getSessionFactory().openSession();
     Query qry = sesion.createSQLQuery(sqlUpdateResultadoEstadoTransmitidoExamenesDeUnaOrden);
 
@@ -864,8 +834,6 @@ public class CapturaResultadosDAO {
       qry.setBigDecimal("idExamen", resultado.getDFE_IDEXAMEN());
       qry.setBigDecimal("idTest", resultado.getDFET_IDTEST());
       qry.setBigDecimal("estado", TRANSMITIDO);
-      qry.setParameter("idUsuario", resultado.getIdUsuarioDigita());
-      qry.setParameter("fecha", ts);
       qry.executeUpdate();
       sesion.getTransaction().commit();
 
diff --git a/src/main/java/com/grupobios/bioslis/dao/CfgEtiquetaCodigoBarrasDAO.java b/src/main/java/com/grupobios/bioslis/dao/CfgEtiquetaCodigoBarrasDAO.java
deleted file mode 100644
index c805cdfa..00000000
--- a/src/main/java/com/grupobios/bioslis/dao/CfgEtiquetaCodigoBarrasDAO.java
+++ /dev/null
@@ -1,124 +0,0 @@
-package com.grupobios.bioslis.dao;
-
-import java.sql.Timestamp;
-import java.util.List;
-
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-import org.hibernate.HibernateException;
-import org.hibernate.Query;
-import org.hibernate.Session;
-import org.hibernate.transform.Transformers;
-
-import com.grupobios.bioslis.common.BiosLisCalendarService;
-import com.grupobios.bioslis.config.HibernateUtil;
-import com.grupobios.bioslis.dto.EtiquetaCodigoBarraDTO;
-import com.grupobios.bioslis.entity.CfgEtiquetacodigobarras;
-
-
-//**** creado por cristian ****
-public class CfgEtiquetaCodigoBarrasDAO {
-
-    private static Logger logger = LogManager.getLogger(CfgEtiquetaCodigoBarrasDAO.class); 
-    
-     
-    
-    @SuppressWarnings("unchecked")
-    public List<EtiquetaCodigoBarraDTO> getAllEtiquetas() throws BiosLISDAOException {
-        Session sesion = HibernateUtil.getSessionFactory().openSession();
-
-        List<EtiquetaCodigoBarraDTO> listEtiquetas;
-        try {
-            Query query = sesion
-                    .createSQLQuery("select * from cfg_etiquetacodigobarras").setResultTransformer(Transformers.aliasToBean(EtiquetaCodigoBarraDTO.class));
-         
-          listEtiquetas = query.list();
-
-        } catch (HibernateException he) {
-          logger.error("No se pudo obtener datos Etiquetas", he.getMessage());
-          throw new BiosLISDAOException(he.getLocalizedMessage());
-        } finally {
-          if (sesion.isOpen()) {
-            sesion.close();
-          }
-        }
-        
-        
-          return listEtiquetas;
-      }
-   
-    public EtiquetaCodigoBarraDTO getEtiquetaBycodigo(String codigo) throws BiosLISDAOException {
-      
-        Session sesion = HibernateUtil.getSessionFactory().openSession();
-
-        EtiquetaCodigoBarraDTO etiqueta;
-        try {
-            Query query = sesion
-                    .createSQLQuery("select * from cfg_etiquetacodigobarras where cecb_codigo=:codigo").setResultTransformer(Transformers.aliasToBean(EtiquetaCodigoBarraDTO.class));
-               query.setString("codigo", codigo);
-          
-          etiqueta = (EtiquetaCodigoBarraDTO) query.uniqueResult();
-
-        } catch (HibernateException he) {
-          logger.error("No se pudo obtener datos Etiquetas", he.getMessage());
-          throw new BiosLISDAOException(he.getLocalizedMessage());
-        } finally {
-          if (sesion.isOpen()) {
-            sesion.close();
-          }
-        }       
-          return etiqueta;
-      }
-    
-    
-    public void insertUpdateEtiqueta(CfgEtiquetacodigobarras etiquetaCodigoBarra, String idUsuario) throws BiosLISDAOException{
-       Session sesion = HibernateUtil.getSessionFactory().openSession();      
-    
-        Timestamp ts = BiosLisCalendarService.getInstance().getTS();    
-        CfgEtiquetacodigobarras etiqueta;
-        sesion.beginTransaction();
-        try {
-          
-           etiqueta = (CfgEtiquetacodigobarras) sesion.get(CfgEtiquetacodigobarras.class, etiquetaCodigoBarra.getCecbCodigo()); 
-          
-           
-           sesion.evict(etiqueta);
-           
-           if(etiqueta.equals(null)) {  
-               etiquetaCodigoBarra.setCecbUsuarioregistro( idUsuario);
-               etiquetaCodigoBarra.setCecbFecharegistro(ts);
-               sesion.save(etiquetaCodigoBarra);
-           }else {             
-               etiquetaCodigoBarra.setCecbTexto0fila(etiqueta.getCecbTexto0fila());
-               etiquetaCodigoBarra.setCecbTexto0columna(etiqueta.getCecbTexto0columna());
-               etiquetaCodigoBarra.setCecbActivotexto0(etiqueta.getCecbActivotexto0());
-               etiquetaCodigoBarra.setCecbNegrita0(etiqueta.getCecbNegrita0());
-               etiquetaCodigoBarra.setCecbtamano0(etiqueta.getCecbtamano0());
-               etiquetaCodigoBarra.setCecbSort(etiqueta.getCecbSort());              
-               etiquetaCodigoBarra.setCecbTexto1largo(etiqueta.getCecbTexto1largo());      
-               etiquetaCodigoBarra.setCecbTexto12largo(etiqueta.getCecbTexto12largo());
-               etiquetaCodigoBarra.setCecbTexto12tamano(etiqueta.getCecbTexto12tamano());
-            
-               etiquetaCodigoBarra.setCecbUsuarioregistro( idUsuario);                            
-               etiquetaCodigoBarra.setCecbFecharegistro(ts); 
-               etiqueta = null;
-               sesion.update(etiquetaCodigoBarra); 
-           }          
-           
-          sesion.getTransaction().commit();
-          
-          } catch (HibernateException he) {
-             sesion.getTransaction().rollback();
-            
-            logger.error("No se pudo grabar datos Etiquetas", he.getMessage());
-            logger.error(he.getStackTrace());
-            throw new BiosLISDAOException(he.getLocalizedMessage());
-          } finally {
-            if (sesion.isOpen()) {
-              sesion.close();
-            }
-          }       
-        
-    }
-    
-}
diff --git a/src/main/java/com/grupobios/bioslis/dao/CfgExamenesDAO.java b/src/main/java/com/grupobios/bioslis/dao/CfgExamenesDAO.java
index bc0483bb..5702f64e 100755
--- a/src/main/java/com/grupobios/bioslis/dao/CfgExamenesDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/CfgExamenesDAO.java
@@ -700,7 +700,7 @@ public class CfgExamenesDAO {
     query.setParameter("idMuestra", idMuestra);
     List<CfgExamenes> listaExamenes = query.list();
     for (CfgExamenes examen : listaExamenes) {
-      System.out.println("muestra: " + examen.getCfgMuestras().getCmueDescripcion());
+      logger.debug("muestra: " + examen.getCfgMuestras().getCmueDescripcion());
     }
     sesion.close();
     return listaExamenes;
diff --git a/src/main/java/com/grupobios/bioslis/dao/CfgLocalizacionesDAO.java b/src/main/java/com/grupobios/bioslis/dao/CfgLocalizacionesDAO.java
index cc20f36a..f3e9e9d0 100755
--- a/src/main/java/com/grupobios/bioslis/dao/CfgLocalizacionesDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/CfgLocalizacionesDAO.java
@@ -58,10 +58,10 @@ public class CfgLocalizacionesDAO {
      // if (idServicio.equals(0)) {
        // return null;
      // }
-      if (idSalasServicios.equals(0) || idSalasServicios.equals(null) ) {          
+      if (idSalasServicios.equals(0) || idSalasServicios == null ) {
         query = sesion.createQuery("select c from com.grupobios.bioslis.entity.CfgLocalizaciones c "
             + "where c.clIdservicio = :idServicio " + "and c.clIdsala is null " + "and c.clIdcama is null");
-        query.setParameter("idServicio", 0);
+        query.setParameter("idServicio", idServicio);
       } else if (idCamasSalas.equals(0)) {
         query = sesion.createQuery("select c from com.grupobios.bioslis.entity.CfgLocalizaciones c "
             + "where c.clIdservicio = :idServicio " + "and c.clIdsala = :idSalasServicios " + "and c.clIdcama is null");
diff --git a/src/main/java/com/grupobios/bioslis/dao/CfgMedicosDAO.java b/src/main/java/com/grupobios/bioslis/dao/CfgMedicosDAO.java
index 1e15e932..eb48908e 100755
--- a/src/main/java/com/grupobios/bioslis/dao/CfgMedicosDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/CfgMedicosDAO.java
@@ -117,7 +117,7 @@ public class CfgMedicosDAO {
     Session sesion = HibernateUtil.getSessionFactory().openSession();
     sesion.beginTransaction();
     List<CfgMedicos> listaMedicos = null;
-  
+    System.out.println(nombre + " "+ primerApellido + " "+ segundoApellido);
     try {
       if (!nombre.equals("") && !primerApellido.equals("")) {
         Query query = sesion.createQuery("select med " + "from com.grupobios.bioslis.entity.CfgMedicos med "
@@ -204,10 +204,10 @@ public class CfgMedicosDAO {
     try {
 
       CfgMedicos updateMed = this.getMedicoById(med.getCmIdmedico());
-     
+      System.out.println(med.toString());
       updateMed = this.nullToSpace(updateMed);
       med = this.nullToSpace(med);
-     
+      System.out.println("entre a update");
     //  logTablas.comparadorObjetos(med, updateMed, "Cfg_Medicos", 2, 1, "Equipo", updateMed.getCmIdmedico(), ip);
       updateMed.setCfgInstitucionesdesalud(med.getCfgInstitucionesdesalud());
       updateMed.setCmActivo(med.getCmActivo());
diff --git a/src/main/java/com/grupobios/bioslis/dao/CfgMuestrasPrefijosDAO.java b/src/main/java/com/grupobios/bioslis/dao/CfgMuestrasPrefijosDAO.java
index a2e509f7..c2ac60fe 100644
--- a/src/main/java/com/grupobios/bioslis/dao/CfgMuestrasPrefijosDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/CfgMuestrasPrefijosDAO.java
@@ -7,6 +7,7 @@ package com.grupobios.bioslis.dao;
 
 import com.grupobios.bioslis.config.HibernateUtil;
 import com.grupobios.bioslis.entity.CfgMuestrasprefijos;
+import java.util.List;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.hibernate.HibernateException;
@@ -40,4 +41,55 @@ public class CfgMuestrasPrefijosDAO {
         }
     }
     
+    public boolean existeMuestraPrefijo(String prefijo) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            Query query = sesion.createQuery("from CfgMuestrasprefijos where cmuepPrefijotipomuestra = :prefijo");
+            query.setParameter("prefijo", prefijo);
+            List<CfgMuestrasprefijos> list = query.list();
+            sesion.getTransaction().commit();
+            return !list.isEmpty();
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
+    
+    public void insertPrefijo(CfgMuestrasprefijos cmp) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            sesion.save(cmp);
+            sesion.getTransaction().commit();
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
+    
+    public void updateProceso(CfgMuestrasprefijos cmp) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            sesion.update(cmp);
+            sesion.getTransaction().commit();
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
+    
 }
diff --git a/src/main/java/com/grupobios/bioslis/dao/CfgProcedenciasDAO.java b/src/main/java/com/grupobios/bioslis/dao/CfgProcedenciasDAO.java
index f1e3fd66..0c9032d7 100755
--- a/src/main/java/com/grupobios/bioslis/dao/CfgProcedenciasDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/CfgProcedenciasDAO.java
@@ -72,14 +72,14 @@ public class CfgProcedenciasDAO {
   }
 
   public CfgProcedencias getProcedenciaById(Integer idProcedencia) {
-      Session sesion = HibernateUtil.getSessionFactory().openSession();
+    Session sesion = HibernateUtil.getSessionFactory().openSession();
     Query query = sesion.createQuery("from CfgProcedencias cp " 
         + "left join fetch cp.cfgCentroDeSalud "
         + "left join fetch cp.cfgConvenios " 
         + "where cp.cpIdprocedencia = :idProcedencia");
     query.setParameter("idProcedencia", idProcedencia);
     CfgProcedencias procedencia = (CfgProcedencias) query.uniqueResult();
-      sesion.close();
+    sesion.close();
     return procedencia;
   }
 
diff --git a/src/main/java/com/grupobios/bioslis/dao/CfgTestDAO.java b/src/main/java/com/grupobios/bioslis/dao/CfgTestDAO.java
index 1590b227..7d4ce7b2 100755
--- a/src/main/java/com/grupobios/bioslis/dao/CfgTestDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/CfgTestDAO.java
@@ -295,7 +295,6 @@ public class CfgTestDAO {
     String sql = "select * from cfg_test ct" 
             + " join cfg_examenestest cet on cet.cet_idtest = ct.ct_idtest"
             + sCond + " order by ct.ct_descripcion asc";
-    System.out.println("query: "+sql);
     Query query = sesion.createSQLQuery(sql).addEntity(CfgTest.class);
     if (idSeccion > 0) {
         query.setInteger("idSeccion", idSeccion);
diff --git a/src/main/java/com/grupobios/bioslis/dao/DatosFichasDAO.java b/src/main/java/com/grupobios/bioslis/dao/DatosFichasDAO.java
index 3dbf9c61..7b9d9d8c 100755
--- a/src/main/java/com/grupobios/bioslis/dao/DatosFichasDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/DatosFichasDAO.java
@@ -528,47 +528,55 @@ public class DatosFichasDAO {
 
   }
 
-  public List<OrdenesTMDTO> getOrdenesTomaMuestras(String fechaInicio, String fechaFin) {
+  public List<OrdenesTMDTO> getOrdenesTomaMuestras(String fechaInicio, String fechaFin) throws BiosLISDAOException {
     Session sesion = HibernateUtil.getSessionFactory().openSession();
-    String sqlQueryOrdenes = "select df_norden NORDEN, to_char(df_fechaorden, 'dd/mm/yyyy hh24:mi:ss') FECHAORDEN,"
-        + " case when datos_pacientes.dp_esvip = 'S' and datos_pacientes.dp_nombreencriptado is not null"
-        + " then datos_pacientes.dp_nombreencriptado" + " else"
-        + " case when datos_pacientes.dp_nombresocial is not null" + " then datos_pacientes.dp_nombresocial"
-        + " else datos_pacientes.dp_nombres || ' ' || datos_pacientes.dp_primerapellido || ' ' || datos_pacientes.dp_segundoapellido"
-        + " end" + " end NOMBRES," + " to_char(datos_pacientes.dp_fnacimiento, 'DD/MM/YYYY') FECHANAC, "// + "
-        // cfg_prioridadatencion.cpa_iconoprioridad,"
-        + " cfg_prioridadatencion.cpa_colorprioridad COLORPRIO,"
-        // + " cfg_procedencias.cp_descripcion PROCEDENCIA, cfg_servicios.cs_descripcion
-        // SERVICIO,"
-        + " case when cfg_procedencias.cp_idprocedencia > 0" + " then cfg_procedencias.cp_descripcion"
-        + " else '' end procedencia," + " case when cfg_servicios.cs_idservicio > 0"
-        + " then cfg_servicios.cs_descripcion" + " else '' end servicio,"
-        + " ldv_fichasestadostm.ldvfet_descripcion ESTADO, datos_fichas.df_observacion OBSERVACION, cfg_prioridadatencion.cpa_descripcion PRIORIDADATENCION,"
-        + " cfg_prioridadatencion.cpa_prioridad PRIORIDAD, datos_pacientes.dp_idpaciente IDPACIENTE, cfg_tipoatencion.cta_descripcion TIPOATENCION,"
-        + " datos_fichas.df_tmclick TMCLICK" + " from datos_fichas"
-        + " left join datos_pacientes ON datos_pacientes.dp_idpaciente = datos_fichas.df_idpaciente"
-        + " left join cfg_prioridadatencion ON cfg_prioridadatencion.cpa_idprioridadatencion = datos_fichas.df_idprioridadatencion"
-        + " left JOIN cfg_localizaciones ON cfg_localizaciones.cl_idlocalizacion = datos_fichas.df_idlocalizacion"
-        + " left JOIN cfg_servicios ON cfg_servicios.cs_idservicio = cfg_localizaciones.cl_idservicio"
-        + " left JOIN cfg_procedencias ON cfg_procedencias.cp_idprocedencia = datos_fichas.df_idprocedencia"
-        + " left JOIN ldv_fichasestadostm ON ldv_fichasestadostm.ldvfet_idfichaestadotm = datos_fichas.df_idfichaestadotm"
-        + " left JOIN cfg_tipoatencion ON cfg_tipoatencion.cta_idtipoatencion = datos_fichas.df_idtipoatencion"
-        // + " where df_fechaorden BETWEEN :fechaInicio and to_date( :fechaFin,
-        // 'dd/mm/yyyy HH24:mi:ss')"
-        + " where df_fechaorden >=  to_date(:fechaInicio, 'dd/mm/yyyy hh24:mi:ss') and df_fechaorden < to_date(:fechaFin, 'dd/mm/yyyy') +1"
-        //verifica ordenes con examenes anulados
-            + " and exists (select dfe.dfe_idexamen from datos_fichasexamenes dfe" 
-            + " where dfe.dfe_examenanulado = 'N' and dfe.dfe_norden = df_norden)"
-        //    
-        + " order by case when cfg_prioridadatencion.cpa_idprioridadatencion = 12" + " then 1 else 2" + " end, "
-        + "df_fechaorden asc";
-    Query query = sesion.createSQLQuery(sqlQueryOrdenes)
-        .setResultTransformer(Transformers.aliasToBean(OrdenesTMDTO.class));
-    query.setParameter("fechaInicio", fechaInicio);
-    query.setParameter("fechaFin", fechaFin);
-    List<OrdenesTMDTO> lista = (List<OrdenesTMDTO>) query.list();
-    sesion.close();
-    return lista;
+    try {
+        String sqlQueryOrdenes = "select df_norden NORDEN, to_char(df_fechaorden, 'dd/mm/yyyy hh24:mi:ss') FECHAORDEN,"
+            + " case when datos_pacientes.dp_esvip = 'S' and datos_pacientes.dp_nombreencriptado is not null"
+            + " then datos_pacientes.dp_nombreencriptado" + " else"
+            + " case when datos_pacientes.dp_nombresocial is not null" + " then datos_pacientes.dp_nombresocial"
+            + " else datos_pacientes.dp_nombres || ' ' || datos_pacientes.dp_primerapellido || ' ' || datos_pacientes.dp_segundoapellido"
+            + " end" + " end NOMBRES," + " to_char(datos_pacientes.dp_fnacimiento, 'DD/MM/YYYY') FECHANAC, "// + "
+            // cfg_prioridadatencion.cpa_iconoprioridad,"
+            + " cfg_prioridadatencion.cpa_colorprioridad COLORPRIO,"
+            // + " cfg_procedencias.cp_descripcion PROCEDENCIA, cfg_servicios.cs_descripcion
+            // SERVICIO,"
+            + " case when cfg_procedencias.cp_idprocedencia > 0" + " then cfg_procedencias.cp_descripcion"
+            + " else '' end procedencia," + " case when cfg_servicios.cs_idservicio > 0"
+            + " then cfg_servicios.cs_descripcion" + " else '' end servicio,"
+            + " ldv_fichasestadostm.ldvfet_descripcion ESTADO, datos_fichas.df_observacion OBSERVACION, cfg_prioridadatencion.cpa_descripcion PRIORIDADATENCION,"
+            + " cfg_prioridadatencion.cpa_prioridad PRIORIDAD, datos_pacientes.dp_idpaciente IDPACIENTE, cfg_tipoatencion.cta_descripcion TIPOATENCION,"
+            + " datos_fichas.df_tmclick TMCLICK" + " from datos_fichas"
+            + " left join datos_pacientes ON datos_pacientes.dp_idpaciente = datos_fichas.df_idpaciente"
+            + " left join cfg_prioridadatencion ON cfg_prioridadatencion.cpa_idprioridadatencion = datos_fichas.df_idprioridadatencion"
+            + " left JOIN cfg_localizaciones ON cfg_localizaciones.cl_idlocalizacion = datos_fichas.df_idlocalizacion"
+            + " left JOIN cfg_servicios ON cfg_servicios.cs_idservicio = cfg_localizaciones.cl_idservicio"
+            + " left JOIN cfg_procedencias ON cfg_procedencias.cp_idprocedencia = datos_fichas.df_idprocedencia"
+            + " left JOIN ldv_fichasestadostm ON ldv_fichasestadostm.ldvfet_idfichaestadotm = datos_fichas.df_idfichaestadotm"
+            + " left JOIN cfg_tipoatencion ON cfg_tipoatencion.cta_idtipoatencion = datos_fichas.df_idtipoatencion"
+            // + " where df_fechaorden BETWEEN :fechaInicio and to_date( :fechaFin,
+            // 'dd/mm/yyyy HH24:mi:ss')"
+            + " where df_fechaorden >=  to_date(:fechaInicio, 'dd/mm/yyyy hh24:mi:ss') and df_fechaorden < to_date(:fechaFin, 'dd/mm/yyyy') +1"
+            //verifica ordenes con examenes anulados
+                + " and exists (select dfe.dfe_idexamen from datos_fichasexamenes dfe" 
+                + " where dfe.dfe_examenanulado = 'N' and dfe.dfe_norden = df_norden)"
+            //    
+            + " order by case when cfg_prioridadatencion.cpa_idprioridadatencion = 12" + " then 1 else 2" + " end, "
+            + "df_fechaorden asc";
+        Query query = sesion.createSQLQuery(sqlQueryOrdenes)
+            .setResultTransformer(Transformers.aliasToBean(OrdenesTMDTO.class));
+        query.setParameter("fechaInicio", fechaInicio);
+        query.setParameter("fechaFin", fechaFin);
+        List<OrdenesTMDTO> lista = (List<OrdenesTMDTO>) query.list();
+        return lista;
+    } catch (HibernateException he) {
+        logger.error(he.getMessage());
+        throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+    } finally {
+        if (sesion.isOpen()) {
+            sesion.close();
+        }
+    }
   }
 
   /* TOMA DE MUESTRAS */
@@ -698,7 +706,7 @@ public class DatosFichasDAO {
 
   public Boolean validarTMClick(int nOrden) {
     Session sesion = HibernateUtil.getSessionFactory().openSession();
-  //  System.out.println("nOrden: " + nOrden);
+    logger.debug("nOrden: " + nOrden);
     try {
       Boolean validadorFinal;
       sesion.beginTransaction();
@@ -710,7 +718,7 @@ public class DatosFichasDAO {
 
       sesion.getTransaction().commit();
       sesion.close();
-    //  System.out.println("validador: " + validador);
+      logger.debug("validador: " + validador);
       if ("S".equals(validador)) {
         validadorFinal = true;
       } else {
diff --git a/src/main/java/com/grupobios/bioslis/dao/DatosFichasExamenesDAO.java b/src/main/java/com/grupobios/bioslis/dao/DatosFichasExamenesDAO.java
index 5e3a61ea..058d88ab 100755
--- a/src/main/java/com/grupobios/bioslis/dao/DatosFichasExamenesDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/DatosFichasExamenesDAO.java
@@ -79,7 +79,8 @@ public class DatosFichasExamenesDAO {
       dfe.setDfeCodigoestadoexamen(EstadosSistema.DFE_CODIGOESTADOEXAMEN_INGRESADO);
       dfe.setDfeIdderivador(derivador.getCderivIdderivador());
       dfe.setDfeExamenesurgente("");
-      dfe.setDfeIdusuario(0);   
+      dfe.setDfeIdusuario(0);
+
       sesion.beginTransaction();
       sesion.save(dfe);
       sesion.getTransaction().commit();
diff --git a/src/main/java/com/grupobios/bioslis/dao/DatosFichasExamenesTestDAO.java b/src/main/java/com/grupobios/bioslis/dao/DatosFichasExamenesTestDAO.java
index 0a9de7d3..49e5795a 100755
--- a/src/main/java/com/grupobios/bioslis/dao/DatosFichasExamenesTestDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/DatosFichasExamenesTestDAO.java
@@ -1,5 +1,5 @@
 /*
-  * To change this license header, choose License Headers in Project Properties.
+ * To change this license header, choose License Headers in Project Properties.
  * To change this template file, choose Tools | Templates
  * and open the template in the editor.
  */
@@ -9,6 +9,7 @@ import java.math.BigDecimal;
 import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.Calendar;
+import java.util.Date;
 import java.util.List;
 
 import org.apache.logging.log4j.LogManager;
@@ -68,34 +69,6 @@ public class DatosFichasExamenesTestDAO {
     Session sesion = null;
     try {
 
-      // agregado por cristian 03-11 para rescatar urgente y tipoatencion y buscar
-      // tiempoentrega **********
-
-      Query query;
-      sesion = HibernateUtil.getSessionFactory().openSession();
-      DatosFichas df = (DatosFichas) sesion.get(DatosFichas.class, idOrden);
-
-      DatosFichasexamenesId dfid = new DatosFichasexamenesId(idOrden, idExamen);
-      DatosFichasexamenes dfe = (DatosFichasexamenes) sesion.get(DatosFichasexamenes.class, dfid);
-
-      Long id = (long) idExamen;
-      ExamenEditarOrdenDTO result = getTiempoEntrega(dfe.getDfeExamenesurgente(), df.getCfgTipoatencion(), id);
-
-      if (result.getTIEMPOENTREGA().equals(null)) {
-        result.setTIEMPOENTREGA(BigDecimal.valueOf(0));
-      }
-
-      Timestamp ts = BiosLisCalendarService.getInstance().getTS();
-      int tiempo = result.getTIEMPOENTREGA().intValueExact();
-      Calendar calendar = this.fechaCalculoEntrega(ts, tiempo);
-
-      dfe.setDfeFechaentrega(calendar.getTime());
-      sesion.beginTransaction();
-      sesion.save(dfe);
-      sesion.getTransaction().commit();
-      sesion.close();
-
-      // *****************************************************************************************************
       for (CfgExamenestest test : listaTests) {
         DatosFichasexamenestest dfet = new DatosFichasexamenestest();
         DatosFichasexamenestestId dfei = new DatosFichasexamenestestId();
@@ -124,7 +97,7 @@ public class DatosFichasExamenesTestDAO {
         dfet.setDfetIdpaciente(idPaciente);
         dfet.setDfetFechacreaciontest(BiosLisCalendarService.getInstance().getTS());
         dfet.setDfetIdusuariocreacion(idUsuarioCrea);
-
+        ;
         CfgValoresreferencia vr = null;
         try {
           logger.debug("Se busca valores de referencia para {} {}", idTest, idPaciente);
@@ -146,19 +119,7 @@ public class DatosFichasExamenesTestDAO {
             dfet.setDfetReferenciahasta(vr.getCvrValoralto().toString());
           }
         }
-        // agregado por cristian para almacenar idmetodo ***
-        // 04-11******************************
-
         sesion = HibernateUtil.getSessionFactory().openSession();
-        query = sesion.createSQLQuery("select  cmt_idmetodo  from cfg_metodostest "
-            + "        where cmt_idTest=:idTest and cmt_esvalorpordefecto = 'S' ");
-
-        query.setLong("idTest", test.getId().getCetIdtest());
-        BigDecimal metodo = (BigDecimal) query.uniqueResult();
-
-        dfet.setDfetIdmetodo(metodo);
-
-        // ***************************************************************************************
 
         sesion.beginTransaction();
         sesion.save(dfet);
@@ -223,38 +184,53 @@ public class DatosFichasExamenesTestDAO {
     return lista;
   }
 
-  public List<MuestrasDTO> getDatosTablaMuestrasTM(long nOrden) {
+  public List<MuestrasDTO> getDatosTablaMuestrasTM(long nOrden) throws BiosLISDAOException {
     Session sesion = HibernateUtil.getSessionFactory().openSession();
-    String sqlQuery = "SELECT DISTINCT dfet.dfet_norden NORDEN, dfm.dfm_idmuestra IDMUESTRA, dfet.dfet_idtipomuestra IDTIPOMUESTRA, dfet.dfet_idenvase IDENVASE, env.cenv_descripcion ENVASEDESC, mue.cmue_descripcion MUESTRADESC, "
-        + "mue.cmue_prefijotipomuestra PREFIJO, dfm.DFM_CODIGOBARRA CODIGOBARRAS, du.du_nombres || ' ' || du.du_primerapellido USRFLEBOTOMISTA, du.du_idusuario IDUSRFLEBOTOMISTA, dfm.dfm_estadotm ESTADOTM, dfm.dfm_estadorm ESTADORM, "
-        + "dfm.dfm_tmobservacion OBSERVACIONTM, ce.ce_compartemuestra COMPARTEMUESTRA, NVL(dfe.dfe_idderivador, 0) IDDERIVADOR, NVL(dfm.dfm_nrovecestomada, 0) NROVECESTOMADA, "
-        + "dfm.dfm_idzonacuerpo IDZONACUERPO, zc.cbzc_descripcion ZONACUERPO, ce.ce_escurvatolerancia ESCURVATOLERANCIA "
-        + "FROM DATOS_FICHASEXAMENESTEST dfet " + "LEFT JOIN CFG_ENVASES env on env.cenv_idenvase = dfet.dfet_idenvase "
-        + "LEFT JOIN CFG_MUESTRAS mue on dfet.dfet_idtipomuestra=mue.cmue_idtipomuestra "
-        + "LEFT JOIN DATOS_FICHASMUESTRAS dfm on dfm.dfm_idmuestra = dfet.dfet_idmuestra "
-        + "LEFT JOIN CFG_EXAMENES ce on ce.ce_idexamen = dfet.dfet_idexamen "
-        + "LEFT JOIN DATOS_FICHASEXAMENES dfe on dfet.dfet_idexamen = dfe.dfe_idexamen and dfet.dfet_norden = dfe.dfe_norden "
-        + "LEFT JOIN DATOS_USUARIOS du on du.du_idusuario = dfm.dfm_idusuariotm "
-        + "LEFT JOIN CFG_BACZONACUERPO zc on zc.cbzc_idzonacuerpo = dfm.dfm_idzonacuerpo "
-        + "WHERE dfet.dfet_norden=:nOrden AND ce.ce_compartemuestra = 'S' and dfet.dfet_idtipomuestra > 0 " + "UNION "
-        + "SELECT dfet.dfet_norden NORDEN, dfm.dfm_idmuestra IDMUESTRA, dfet.dfet_idtipomuestra IDTIPOMUESTRA, dfet.dfet_idenvase IDENVASE, env.cenv_descripcion ENVASEDESC, mue.cmue_descripcion MUESTRADESC, "
-        + "mue.cmue_prefijotipomuestra PREFIJO, dfm.DFM_CODIGOBARRA CODIGOBARRAS, du.du_nombres || ' ' || du.du_primerapellido USRFLEBOTOMISTA, du.du_idusuario IDUSRFLEBOTOMISTA, dfm.dfm_estadotm ESTADOTM, dfm.dfm_estadorm ESTADORM, "
-        + "dfm.dfm_tmobservacion OBSERVACIONTM, ce.ce_compartemuestra COMPARTEMUESTRA, NVL(dfe.dfe_idderivador, 0) IDDERIVADOR, NVL(dfm.dfm_nrovecestomada, 0) NROVECESTOMADA, "
-        + "dfm.dfm_idzonacuerpo IDZONACUERPO, zc.cbzc_descripcion ZONACUERPO, ce.ce_escurvatolerancia ESCURVATOLERANCIA "
-        + "FROM DATOS_FICHASEXAMENESTEST dfet " + "LEFT JOIN CFG_ENVASES env on env.cenv_idenvase = dfet.dfet_idenvase "
-        + "LEFT JOIN CFG_MUESTRAS mue on dfet.dfet_idtipomuestra=mue.cmue_idtipomuestra "
-        + "LEFT JOIN DATOS_FICHASMUESTRAS dfm on dfm.dfm_idmuestra = dfet.dfet_idmuestra "
-        + "LEFT JOIN CFG_EXAMENES ce on ce.ce_idexamen = dfet.dfet_idexamen "
-        + "LEFT JOIN DATOS_FICHASEXAMENES dfe on dfet.dfet_idexamen = dfe.dfe_idexamen and dfet.dfet_norden = dfe.dfe_norden "
-        + "LEFT JOIN DATOS_USUARIOS du on du.du_idusuario = dfm.dfm_idusuariotm "
-        + "LEFT JOIN CFG_BACZONACUERPO zc on zc.cbzc_idzonacuerpo = dfm.dfm_idzonacuerpo "
-        + "WHERE dfet.dfet_norden=:nOrden AND ce.ce_compartemuestra = 'N' and dfet.dfet_idtipomuestra > 0";
-    Query query = sesion.createSQLQuery(sqlQuery).setResultTransformer(Transformers.aliasToBean(MuestrasDTO.class));
-    query.setParameter("nOrden", nOrden);
-    List<MuestrasDTO> lista = query.list();
-
-    sesion.close();
-    return lista;
+    try {
+        String sqlQuery = "SELECT DISTINCT dfet.dfet_norden NORDEN, dfm.dfm_idmuestra IDMUESTRA, dfet.dfet_idtipomuestra IDTIPOMUESTRA, dfet.dfet_idenvase IDENVASE, env.cenv_descripcion ENVASEDESC, mue.cmue_descripcion MUESTRADESC, "
+            + "mue.cmue_prefijotipomuestra PREFIJO, dfm.DFM_CODIGOBARRA CODIGOBARRAS, du.du_nombres || ' ' || du.du_primerapellido USRFLEBOTOMISTA, du.du_idusuario IDUSRFLEBOTOMISTA, dfm.dfm_estadotm ESTADOTM, dfm.dfm_estadorm ESTADORM, "
+            + "dfm.dfm_tmobservacion OBSERVACIONTM, ce.ce_compartemuestra COMPARTEMUESTRA, NVL(dfe.dfe_idderivador, 0) IDDERIVADOR, NVL(dfm.dfm_nrovecestomada, 0) NROVECESTOMADA, "
+            + "dfm.dfm_idzonacuerpo IDZONACUERPO, zc.cbzc_descripcion ZONACUERPO, ce.ce_escurvatolerancia ESCURVATOLERANCIA "
+            + "FROM DATOS_FICHASEXAMENESTEST dfet " + "LEFT JOIN CFG_ENVASES env on env.cenv_idenvase = dfet.dfet_idenvase "
+            + "LEFT JOIN CFG_MUESTRAS mue on dfet.dfet_idtipomuestra=mue.cmue_idtipomuestra "
+            + "LEFT JOIN DATOS_FICHASMUESTRAS dfm on dfm.dfm_idmuestra = dfet.dfet_idmuestra "
+            + "LEFT JOIN CFG_EXAMENES ce on ce.ce_idexamen = dfet.dfet_idexamen "
+            + "LEFT JOIN DATOS_FICHASEXAMENES dfe on dfet.dfet_idexamen = dfe.dfe_idexamen and dfet.dfet_norden = dfe.dfe_norden "
+            + "LEFT JOIN DATOS_USUARIOS du on du.du_idusuario = dfm.dfm_idusuariotm "
+            + "LEFT JOIN CFG_BACZONACUERPO zc on zc.cbzc_idzonacuerpo = dfm.dfm_idzonacuerpo "
+            + "WHERE dfet.dfet_norden=:nOrden AND ce.ce_compartemuestra = 'S' and dfet.dfet_idtipomuestra > 0 "
+            //valida examenes anulados
+            + "and (dfm.dfm_idmuestra is null and dfe.dfe_examenanulado = 'N' or dfm.dfm_idmuestra is not null) " 
+            //
+            + "UNION "
+            + "SELECT dfet.dfet_norden NORDEN, dfm.dfm_idmuestra IDMUESTRA, dfet.dfet_idtipomuestra IDTIPOMUESTRA, dfet.dfet_idenvase IDENVASE, env.cenv_descripcion ENVASEDESC, mue.cmue_descripcion MUESTRADESC, "
+            + "mue.cmue_prefijotipomuestra PREFIJO, dfm.DFM_CODIGOBARRA CODIGOBARRAS, du.du_nombres || ' ' || du.du_primerapellido USRFLEBOTOMISTA, du.du_idusuario IDUSRFLEBOTOMISTA, dfm.dfm_estadotm ESTADOTM, dfm.dfm_estadorm ESTADORM, "
+            + "dfm.dfm_tmobservacion OBSERVACIONTM, ce.ce_compartemuestra COMPARTEMUESTRA, NVL(dfe.dfe_idderivador, 0) IDDERIVADOR, NVL(dfm.dfm_nrovecestomada, 0) NROVECESTOMADA, "
+            + "dfm.dfm_idzonacuerpo IDZONACUERPO, zc.cbzc_descripcion ZONACUERPO, ce.ce_escurvatolerancia ESCURVATOLERANCIA "
+            + "FROM DATOS_FICHASEXAMENESTEST dfet " + "LEFT JOIN CFG_ENVASES env on env.cenv_idenvase = dfet.dfet_idenvase "
+            + "LEFT JOIN CFG_MUESTRAS mue on dfet.dfet_idtipomuestra=mue.cmue_idtipomuestra "
+            + "LEFT JOIN DATOS_FICHASMUESTRAS dfm on dfm.dfm_idmuestra = dfet.dfet_idmuestra "
+            + "LEFT JOIN CFG_EXAMENES ce on ce.ce_idexamen = dfet.dfet_idexamen "
+            + "LEFT JOIN DATOS_FICHASEXAMENES dfe on dfet.dfet_idexamen = dfe.dfe_idexamen and dfet.dfet_norden = dfe.dfe_norden "
+            + "LEFT JOIN DATOS_USUARIOS du on du.du_idusuario = dfm.dfm_idusuariotm "
+            + "LEFT JOIN CFG_BACZONACUERPO zc on zc.cbzc_idzonacuerpo = dfm.dfm_idzonacuerpo "
+            + "WHERE dfet.dfet_norden=:nOrden AND ce.ce_compartemuestra = 'N' and dfet.dfet_idtipomuestra > 0"
+            //valida examenes anulados
+            + "and (dfm.dfm_idmuestra is null and dfe.dfe_examenanulado = 'N' or dfm.dfm_idmuestra is not null)"
+            //
+            + "";
+        Query query = sesion.createSQLQuery(sqlQuery).setResultTransformer(Transformers.aliasToBean(MuestrasDTO.class));
+        query.setParameter("nOrden", nOrden);
+        List<MuestrasDTO> lista = query.list();
+        return lista;
+    } catch (HibernateException he) {
+        logger.error(he.getMessage());
+        throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+    } finally {
+        if (sesion.isOpen()) {
+            sesion.close();
+        }
+    }
   }
 
   public List<ExamenOrdenMuestraDTO> getExamenesOrdenMuestra(Long nOrden) {
@@ -262,7 +238,7 @@ public class DatosFichasExamenesTestDAO {
     String queryString = "SELECT DISTINCT CFG_EXAMENES.CE_CODIGOEXAMEN, CFG_MUESTRAS.CMUE_DESCRIPCION, CFG_ENVASES.CENV_DESCRIPCION, CFG_EXAMENES.CE_ABREVIADO CE_DESCRIPCION, "
         + "CFG_CENTROSDESALUD.CCDS_DESCRIPCION, CFG_LABORATORIOS.CLAB_DESCRIPCION, CFG_SECCIONES.CSEC_DESCRIPCION, CFG_EXAMENES.CE_COMPARTEMUESTRA, "
         + "DATOS_FICHAS.DF_OBSERVACION, CFG_DIAGNOSTICOS.CD_DESCRIPCION, CD.CDERIV_DESCRIPCION, CD.CDERIV_IDDERIVADOR, CFG_EXAMENES.CE_IDEXAMEN, "
-        + "DFET.DFET_IDMUESTRA, CFG_CENTROSDESALUD.CCDS_IDCENTRODESALUD, CFG_LABORATORIOS.CLAB_IDLABORATORIO, CFG_SECCIONES.CSEC_IDSECCION "
+        + "DFET.DFET_IDMUESTRA, CFG_CENTROSDESALUD.CCDS_IDCENTRODESALUD, CFG_LABORATORIOS.CLAB_IDLABORATORIO, CFG_SECCIONES.CSEC_IDSECCION, DATOS_FICHASEXAMENES.DFE_EXAMENANULADO "
         + "FROM DATOS_FICHASEXAMENESTEST DFET "
         + "INNER JOIN DATOS_FICHASEXAMENES ON DATOS_FICHASEXAMENES.DFE_NORDEN = DFET.DFET_NORDEN AND DATOS_FICHASEXAMENES.DFE_IDEXAMEN = DFET.DFET_IDEXAMEN "
         + "INNER JOIN CFG_EXAMENES ON DFET.DFET_IDEXAMEN = CFG_EXAMENES.CE_IDEXAMEN "
@@ -305,32 +281,41 @@ public class DatosFichasExamenesTestDAO {
     return lista;
   }
 
-  public List<ExamenOrdenMuestraDTO> getDetalleMuestraSM(Long nOrden, Short idTipoMuestra, Short idEnvase,
-      Short idDerivador, String comparteMuestra) {
+  public List<ExamenOrdenMuestraDTO> getDetalleMuestraSM(Long nOrden, Short idTipoMuestra, Short idEnvase, Short idDerivador, String comparteMuestra) throws BiosLISDAOException {
     Session sesion = HibernateUtil.getSessionFactory().openSession();
-    String queryString = "SELECT DISTINCT CFG_EXAMENES.CE_CODIGOEXAMEN, CFG_MUESTRAS.CMUE_DESCRIPCION, CFG_ENVASES.CENV_DESCRIPCION, CFG_EXAMENES.CE_ABREVIADO CE_DESCRIPCION, "
-        + "CFG_EXAMENES.CE_COMPARTEMUESTRA, CD.CDERIV_DESCRIPCION, CD.CDERIV_IDDERIVADOR, CFG_EXAMENES.CE_IDEXAMEN, "
-        + "DFET.DFET_IDMUESTRA, CFG_MUESTRAS.cmue_idtipomuestra, cfg_muestras.cmue_idgrupomuestra "
-        + "FROM DATOS_FICHASEXAMENESTEST DFET "
-        + "INNER JOIN DATOS_FICHASEXAMENES ON DATOS_FICHASEXAMENES.DFE_NORDEN = DFET.DFET_NORDEN AND DATOS_FICHASEXAMENES.DFE_IDEXAMEN = DFET.DFET_IDEXAMEN "
-        + "INNER JOIN CFG_EXAMENES ON DFET.DFET_IDEXAMEN = CFG_EXAMENES.CE_IDEXAMEN "
-        + "INNER JOIN CFG_TEST ON DFET.DFET_IDTEST = CFG_TEST.CT_IDTEST "
-        + "INNER JOIN DATOS_FICHAS ON DATOS_FICHAS.DF_NORDEN = DFET.DFET_NORDEN "
-        + "INNER JOIN CFG_MUESTRAS ON CFG_MUESTRAS.CMUE_IDTIPOMUESTRA = DFET.DFET_IDTIPOMUESTRA "
-        + "INNER JOIN CFG_ENVASES ON CFG_ENVASES.CENV_IDENVASE = DFET.DFET_IDENVASE "
-        + "INNER JOIN CFG_DERIVADORES CD ON CD.CDERIV_IDDERIVADOR = DATOS_FICHASEXAMENES.DFE_IDDERIVADOR "
-        + "WHERE DFET.DFET_NORDEN = :nOrden and CFG_MUESTRAS.cmue_idtipomuestra = :idTipoMuestra and CFG_ENVASES.cenv_idenvase = :idEnvase "
-        + "and cd.cderiv_idderivador = :idDerivador and cfg_examenes.ce_compartemuestra = :comparteMuestra";
-    Query query = sesion.createSQLQuery(queryString)
-        .setResultTransformer(Transformers.aliasToBean(ExamenOrdenMuestraDTO.class));
-    query.setParameter("nOrden", nOrden);
-    query.setParameter("idTipoMuestra", idTipoMuestra);
-    query.setParameter("idEnvase", idEnvase);
-    query.setParameter("idDerivador", idDerivador);
-    query.setParameter("comparteMuestra", comparteMuestra);
-    List<ExamenOrdenMuestraDTO> lista = query.list();
-    sesion.close();
-    return lista;
+    try {
+        String queryString = "SELECT DISTINCT CFG_EXAMENES.CE_CODIGOEXAMEN, CFG_MUESTRAS.CMUE_DESCRIPCION, CFG_ENVASES.CENV_DESCRIPCION, CFG_EXAMENES.CE_ABREVIADO CE_DESCRIPCION, "
+            + "CFG_EXAMENES.CE_COMPARTEMUESTRA, CD.CDERIV_DESCRIPCION, CD.CDERIV_IDDERIVADOR, CFG_EXAMENES.CE_IDEXAMEN, CFG_EXAMENES.CE_TIENEGRUPOMUESTRA, "
+            + "DFET.DFET_IDMUESTRA, CFG_MUESTRAS.CMUE_IDTIPOMUESTRA, CFG_MUESTRAS.CMUE_IDGRUPOMUESTRA "
+            + "FROM DATOS_FICHASEXAMENESTEST DFET "
+            + "INNER JOIN DATOS_FICHASEXAMENES ON DATOS_FICHASEXAMENES.DFE_NORDEN = DFET.DFET_NORDEN AND DATOS_FICHASEXAMENES.DFE_IDEXAMEN = DFET.DFET_IDEXAMEN "
+            + "INNER JOIN CFG_EXAMENES ON DFET.DFET_IDEXAMEN = CFG_EXAMENES.CE_IDEXAMEN "
+            + "INNER JOIN CFG_TEST ON DFET.DFET_IDTEST = CFG_TEST.CT_IDTEST "
+            + "INNER JOIN DATOS_FICHAS ON DATOS_FICHAS.DF_NORDEN = DFET.DFET_NORDEN "
+            + "INNER JOIN CFG_MUESTRAS ON CFG_MUESTRAS.CMUE_IDTIPOMUESTRA = DFET.DFET_IDTIPOMUESTRA "
+            + "INNER JOIN CFG_ENVASES ON CFG_ENVASES.CENV_IDENVASE = DFET.DFET_IDENVASE "
+            + "INNER JOIN CFG_DERIVADORES CD ON CD.CDERIV_IDDERIVADOR = DATOS_FICHASEXAMENES.DFE_IDDERIVADOR "
+            + "WHERE DFET.DFET_NORDEN = :nOrden and CFG_MUESTRAS.cmue_idtipomuestra = :idTipoMuestra and CFG_ENVASES.cenv_idenvase = :idEnvase "
+            + "and cd.cderiv_idderivador = :idDerivador and cfg_examenes.ce_compartemuestra = :comparteMuestra";
+        Query query = sesion.createSQLQuery(queryString)
+            .setResultTransformer(Transformers.aliasToBean(ExamenOrdenMuestraDTO.class));
+        query.setParameter("nOrden", nOrden);
+        query.setParameter("idTipoMuestra", idTipoMuestra);
+        query.setParameter("idEnvase", idEnvase);
+        query.setParameter("idDerivador", idDerivador);
+        query.setParameter("comparteMuestra", comparteMuestra);
+        List<ExamenOrdenMuestraDTO> lista = query.list();
+        return lista;
+    } catch (HibernateException he) {
+        sesion.getTransaction().rollback();
+        logger.error(he.getMessage() + he.getCause());
+        he.printStackTrace();
+        throw new BiosLISDAOException("No se pudo Actualizar  Datos Ficha ExamenTest");
+    } finally {
+        if (sesion != null && sesion.isOpen()) {
+          sesion.close();
+        }
+    }
   }
 
   public Boolean verificarComparteMuestra(long Examen) {
@@ -680,13 +665,14 @@ public class DatosFichasExamenesTestDAO {
 
       String sqlQuery = " Select dfet from DatosFichasexamenestest dfet inner join fetch dfet.cfgExamenestest cet inner join fetch cet.cfgTest ct "
           + "where dfet.id.dfetIdexamen = :dfetIdexamen and dfet.id.dfetNorden = :dfetNorden and "
-          + " ( dfet.dfetIdestadoresultadotest not in :listaEstadosOKFirma and ct.ctResultadoobligado like 'S' )";
+          + " ( dfet.dfetIdestadoresultadotest not in :listaEstadosOKFirma " + "" + "or "
+          + "   not  ( dfet.dfetIdestadoresultadotest not in :listaEstadosPdteDigitado   and ct.ctResultadoobligado not like 'S' ) )";
 //      + "(dfet.dfetIdestadoresultadotest not in :listaEstadosOKFirma or not (ct.ctResultadoobligado not like ('S') AND dfet.dfetIdestadoresultadotest in  :listaEstadosPdteDigitado ) ";
       Query query = sesion.createQuery(sqlQuery);
       query.setParameter("dfetIdexamen", idExamen);
       query.setParameter("dfetNorden", nOrden);
       query.setParameterList("listaEstadosOKFirma", estadosResultadoOKFirma);
-//            query.setParameterList("listaEstadosPdteDigitado", estadosResultadoPdteDigitado);
+      query.setParameterList("listaEstadosPdteDigitado", estadosResultadoPdteDigitado);
 
       List<DatosFichasexamenestest> lst = (List<DatosFichasexamenestest>) query.list();
       return (lst == null || lst.isEmpty());
@@ -881,6 +867,7 @@ public class DatosFichasExamenesTestDAO {
   @SuppressWarnings("unchecked")
   public Boolean updateFichasExamenesTest(DatosFichasDTO datosFichasExamenTest, Long idUsuario)
       throws BiosLISDAOException {
+
     Query query;
     Session sesion = HibernateUtil.getSessionFactory().openSession();
     try {
@@ -907,6 +894,7 @@ public class DatosFichasExamenesTestDAO {
       // SE RECORRE EXAMENES QUE VIENEN DEL FRONT PARA AGREGAR O REALIZAR UPDATE A
       // COLUMAN EXAMENESURGENTE DE DATOS_FICHASEXAMENES
       for (CfgExamenesDTO examen : datosFichasExamenTest.getLstExamenesDto()) {
+        // sesion.beginTransaction();
 
         // se realiza select para verificar si examen ya esta creada y realizar update
         // de lo contrario realizar insert
@@ -916,47 +904,87 @@ public class DatosFichasExamenesTestDAO {
         query.setParameter("idExamen", examen.getCeIdexamen());
 
         List<Object[]> lista = query.list();
-
-        ExamenEditarOrdenDTO result = getTiempoEntrega(examen.getCeEsurgente(),
-            datosFichasExamenTest.getCfgTipoatencion(), examen.getCeIdexamen());
-
-        if (result.getTIEMPOENTREGA().equals(null)) {
-          result.setTIEMPOENTREGA(BigDecimal.valueOf(0));
+        // sesion.getTransaction().commit();
+
+        // sesion.beginTransaction();
+        // System.out.println(examen.getCeEsurgente());
+        // System.out.println(datosFichasExamenTest.getCfgTipoatencion());
+        // System.out.println(examen.getCeIdexamen());
+        String consulta = "select ce.ce_idexamen as idexamen, ce.ce_contablecantidad as cantidad, "
+            + " ce.ce_idderivador as idderivador, ";
+
+        if (examen.getCeEsurgente().equals("S") || datosFichasExamenTest.getCfgTipoatencion() == 3) {
+          // System.out.println("se toma cantidad urgente");
+          consulta = consulta + " CASE " + "        WHEN CE.CE_TIEMPOENTREGAURGENTE IS NOT NULL "
+              + "            THEN CE.CE_TIEMPOENTREGAURGENTE " + "        ELSE 0 " + "        END AS tiempoentrega "
+              + " from cfg_examenes  ce where ce.ce_idexamen = :idExamen";
+        } else {
+          if (datosFichasExamenTest.getCfgTipoatencion() == 1 || datosFichasExamenTest.getCfgTipoatencion() == 4) {
+            // System.out.println("se toma cantidad de normal");
+            consulta = consulta + " CASE " + "        WHEN CE.CE_TIEMPOENTREGANORMAL IS NOT NULL "
+                + "            THEN CE.CE_TIEMPOENTREGANORMAL " + "        ELSE 0 " + "        END AS tiempoentrega "
+                + " from cfg_examenes  ce where ce.ce_idexamen = :idExamen";
+          } else {
+            // System.out.println("se toma cantidad hospitalizado");
+            consulta = consulta + " CASE " + "        WHEN CE.CE_TIEMPOENTREGAHOSPITALIZADO IS NOT NULL "
+                + "            THEN CE.CE_TIEMPOENTREGAHOSPITALIZADO " + "        ELSE 0 "
+                + "        END AS tiempoentrega " + " from cfg_examenes  ce where ce.ce_idexamen = :idExamen";
+          }
         }
 
-        // se realiza insert a datos_fichasexamenes debido a que examen no existia en la
-        // tabla
+        query = sesion.createSQLQuery(consulta)
+            .setResultTransformer(Transformers.aliasToBean(ExamenEditarOrdenDTO.class));
+        query.setLong("idExamen", examen.getCeIdexamen());
+        ExamenEditarOrdenDTO result = (ExamenEditarOrdenDTO) query.uniqueResult();
 
-        Timestamp ts = BiosLisCalendarService.getInstance().getTS();
-        int tiempo = result.getTIEMPOENTREGA().intValueExact();      
-        Calendar calendar = this.fechaCalculoEntrega(ts, tiempo);
+        query = sesion.createSQLQuery("select df.dfe_fechacreacion as fechaexamen from datos_fichasexamenes df "
+            + "where df.dfe_norden =:nOrden and df.dfe_idexamen =:idExamen ");
 
-        // ***************************************************************************
+        query.setLong("idExamen", examen.getCeIdexamen());
+        query.setLong("nOrden", datosFichasExamenTest.getDfNorden());
+        result.setFECHAEXAMEN((Date) query.uniqueResult());
 
         if (lista.size() > 0) {
+          // se calcula tiempo de entrega ***********************************
+          // System.out.println("tiempo entrega " + result.getTIEMPOENTREGA());
+          Timestamp ts = (Timestamp) result.getFECHAEXAMEN();
+          Calendar calendar = Calendar.getInstance();
+          calendar.setTime(ts); // tuFechaBase es un Date;
+          int tiempo = result.getTIEMPOENTREGA().intValueExact();
+          calendar.add(Calendar.MINUTE, tiempo); // minutosASumar es int.
+
+          // ***************************************************************************
 
-          // update de esurgente de datos_fichasexamenes debido a que examen ya existia
+          // update de datos_fichasexamenes debido a que examen ya existia
 
           DatosFichasexamenesId dfi = new DatosFichasexamenesId(datosFichasExamenTest.getDfNorden(),
               examen.getCeIdexamen());
           DatosFichasexamenes dfe = (DatosFichasexamenes) sesion.get(DatosFichasexamenes.class, dfi);
           dfe.setDfeExamenesurgente(examen.getCeEsurgente());
-          // dfe.setDfeExamenAnulado(examen.getCeActivo());
-        
-          if ((examen.getCeActivo().equals("S") || examen.getCeActivo().isEmpty())
-              && (dfe.getDfeExamenAnulado().equals("N") || dfe.getDfeExamenAnulado().isEmpty())) {
-       
-            dfe.setDfeExamenAnulado(examen.getCeActivo()); // en este dato se trae si esta anulado
+          if(examen.getCeActivo().equals("S") && (dfe.getDfeExamenAnulado().equals("N") || dfe.getDfeExamenAnulado().equals(null) )){
+            dfe.setDfeExamenAnulado(examen.getCeActivo());
             dfe.setDfeIdusuarioAnula(idUsuario);
           }
           sesion.update(dfe);
 
         } else {
-
+          // se realiza insert a datos_fichasexamenes debido a que examen no existia en la
+          // tabla
+          // se calcula tiempo de entrega ***********************************
+          // System.out.println("tiempo entrega " + result.getTIEMPOENTREGA());
+          Timestamp ts = BiosLisCalendarService.getInstance().getTS();
+          Calendar calendar = Calendar.getInstance();
+          calendar.setTime(ts); // tuFechaBase es un Date;
+          int tiempo = result.getTIEMPOENTREGA().intValueExact();
+          calendar.add(Calendar.MINUTE, tiempo); // minutosASumar es int.
+
+          // ***************************************************************************
+
+          // sesion.beginTransaction();
           query = sesion.createSQLQuery(
-              "insert into  datos_fichasexamenes (dfe_norden, dfe_idexamen, dfe_fechacreacion, dfe_fechaentrega ,dfe_idusuario, dfe_cantidad, dfe_idderivador, dfe_examenesurgente, "
-                  + " dfe_examenanulado)"
-                  + " values(:nOrden, :idExamen, :fecha, :fechaEntrega ,:idUsuario , :cantidad, :idDerivador, :examenUrgente, :anulado)");
+            "insert into  datos_fichasexamenes (dfe_norden, dfe_idexamen, dfe_fechacreacion, dfe_fechaentrega ,dfe_idusuario, dfe_cantidad, dfe_idderivador, dfe_examenesurgente, "
+            + " dfe_examenanulado)"
+                    + " values(:nOrden, :idExamen, :fecha, :fechaEntrega ,:idUsuario , :cantidad, :idDerivador, :examenUrgente, :anulado)");
           query.setLong("nOrden", datosFichasExamenTest.getDfNorden());
           query.setLong("idExamen", examen.getCeIdexamen());
           query.setParameter("fecha", ts);
@@ -965,10 +993,12 @@ public class DatosFichasExamenesTestDAO {
           query.setParameter("cantidad", result.getCANTIDAD());
           query.setParameter("idDerivador", result.getIDDERIVADOR());
           query.setString("examenUrgente", examen.getCeEsurgente());
-          query.setString("anulado", "N");
+          query.setString("anulado", examen.getCeActivo());
           query.executeUpdate();
           // sesion.getTransaction().commit();
 
+          // sesion.beginTransaction();
+
           // se toman los datos necesarios para insertar en Datos_fichasexamenestest
           query = sesion.createSQLQuery(
               "select ct.ct_idtest as idtest, cet.cet_idexamen as idexamen, ct.ct_idtipomuestra as idtipomuestra, ct.ct_idseccion as idseccion , "
@@ -980,56 +1010,37 @@ public class DatosFichasExamenesTestDAO {
 
           query.setParameter("idExamen", examen.getCeIdexamen());
           List<TestEdicionOrdenDTO> listTest = query.list();
+          // sesion.getTransaction().commit();
 
-      
-         
-          List<TestEdicionOrdenDTO> listTest2 = null;
-          
-          
-          for (TestEdicionOrdenDTO test : listTest) {  //lista de test que le corresponden a un examen 
-             
-              // agregado para tomar datos de examenes test con idenvase e idmuestra
-              query = sesion.createSQLQuery(
-                  "select dfet.dfet_idmuestra as idmuestra from datos_fichasexamenestest dfet "
-                  + "where dfet.dfet_norden =:nOrden and dfet.dfet_idenvase =:idEnvase and dfet.dfet_idtipomuestra=:idTipoMuestra  order by dfet.dfet_idmuestra Asc")
-                  .setResultTransformer(Transformers.aliasToBean(TestEdicionOrdenDTO.class));
-
-              query.setParameter("nOrden",datosFichasExamenTest.getDfNorden());
-              query.setParameter("idEnvase",test.getIDENVASE());
-              query.setParameter("idTipoMuestra",test.getIDTIPOMUESTRA());
-              listTest2 = query.list();               
-               test.setIDMUESTRA(listTest2.get(0).getIDMUESTRA());
-           
-              
-             //******************************************************************************* 
+          for (TestEdicionOrdenDTO test : listTest) {
             // se realizan los insert necesarios de tantos test existan por examen a
             // datos_fichasexamenestest
-              //***se agrego a insert idMuestra por cristian el 23-11
+
+            // sesion.beginTransaction();
             if (test.getIDMETODO() == null) {
               // insert sin idMetoto
               query = sesion.createSQLQuery(
                   "insert into  datos_fichasexamenestest (dfet_norden, dfet_idexamen, dfet_idtest, dfet_idpaciente, "
-                      + " dfet_fechaorden, dfet_idtipomuestra, dfet_idenvase, dfet_idseccion , dfet_fechacreaciontest, dfet_idusuariocreacion, dfet_idmuestra) "
-                      + " values(:nOrden, :idExamen, :idTest, :idPaciente , :fechaOrden, :idTipoMuestra, :idEnvase, :idSeccion, :fechaCreacion, :idUsuario, :idMuestra)");
+                      + " dfet_fechaorden, dfet_idtipomuestra, dfet_idenvase, dfet_idseccion , dfet_fechacreaciontest, dfet_idusuariocreacion) "
+                      + " values(:nOrden, :idExamen, :idTest, :idPaciente , :fechaOrden, :idMuestra, :idEnvase, :idSeccion, :fechaCreacion, :idUsuario)");
             } else {
               // insert con idmetodo
               query = sesion.createSQLQuery(
                   "insert into  datos_fichasexamenestest (dfet_norden, dfet_idexamen, dfet_idtest, dfet_idpaciente, "
-                      + " dfet_fechaorden, dfet_idtipomuestra, dfet_idenvase, dfet_idseccion , dfet_fechacreaciontest, dfet_idusuariocreacion, dfet_idmetodo, dfet_idmuestra)"
-                      + " values(:nOrden, :idExamen, :idTest, :idPaciente , :fechaOrden, :idTipoMuestra, :idEnvase, :idSeccion, :fechaCreacion, :idUsuario , :idMetodo, :idMuestra)");
+                      + " dfet_fechaorden, dfet_idtipomuestra, dfet_idenvase, dfet_idseccion , dfet_fechacreaciontest, dfet_idusuariocreacion, dfet_idmetodo)"
+                      + " values(:nOrden, :idExamen, :idTest, :idPaciente , :fechaOrden, :idMuestra, :idEnvase, :idSeccion, :fechaCreacion, :idUsuario , :idMetodo)");
             }
-System.out.println(test.getIDMUESTRA());
+
             query.setLong("nOrden", datosFichasExamenTest.getDfNorden());
             query.setLong("idExamen", examen.getCeIdexamen());
             query.setParameter("idTest", test.getIDTEST());
             query.setLong("idPaciente", datosFichasExamenTest.getDatosPacientes());
             query.setParameter("fechaOrden", datosFichasExamenTest.getDfFechaorden());
-            query.setParameter("idTipoMuestra", test.getIDTIPOMUESTRA());
+            query.setParameter("idMuestra", test.getIDTIPOMUESTRA());
             query.setParameter("idEnvase", test.getIDENVASE());
             query.setParameter("idSeccion", test.getIDSECCION());
             query.setParameter("fechaCreacion", ts);
             query.setLong("idUsuario", idUsuario);
-            query.setParameter("idMuestra", test.getIDMUESTRA());
             if (test.getIDMETODO() != null) {
               query.setParameter("idMetodo", test.getIDMETODO());
             }
@@ -1055,62 +1066,6 @@ System.out.println(test.getIDMUESTRA());
     return true;
   }
 
-  // Se crean dos funciones para ser llamadas de update e insert de fichasexamenes
-  // entrega ExamenEditarOrdenDTO con tiempo de entrega
-  private ExamenEditarOrdenDTO getTiempoEntrega(String esUrgente, int tipoAtencion, Long idExamen)
-      throws BiosLISDAOException {
-
-    ExamenEditarOrdenDTO result = null;
-    Session sesion = HibernateUtil.getSessionFactory().openSession();
-    String consulta = "select ce.ce_idexamen as idexamen, ce.ce_contablecantidad as cantidad, "
-        + " ce.ce_idderivador as idderivador, ";
-
-    if (esUrgente.equals("S") || tipoAtencion == 3) {
-
-      // se toma cantidad urgente;
-      consulta = consulta + " CASE " + "        WHEN CE.CE_TIEMPOENTREGAURGENTE IS NOT NULL "
-          + "            THEN CE.CE_TIEMPOENTREGAURGENTE " + "        ELSE 0 " + "        END AS tiempoentrega "
-          + " from cfg_examenes  ce where ce.ce_idexamen = :idExamen";
-    } else {
-      if (tipoAtencion == 1 || tipoAtencion == 4) {
-        consulta = consulta + " CASE " + "        WHEN CE.CE_TIEMPOENTREGANORMAL IS NOT NULL "
-            + "            THEN CE.CE_TIEMPOENTREGANORMAL " + "        ELSE 0 " + "        END AS tiempoentrega "
-            + " from cfg_examenes  ce where ce.ce_idexamen = :idExamen";
-      } else {
-        consulta = consulta + " CASE " + "        WHEN CE.CE_TIEMPOENTREGAHOSPITALIZADO IS NOT NULL "
-            + "            THEN CE.CE_TIEMPOENTREGAHOSPITALIZADO " + "        ELSE 0 " + "        END AS tiempoentrega "
-            + " from cfg_examenes  ce where ce.ce_idexamen = :idExamen";
-      }
-    }
-    try {
-
-      Query query = sesion.createSQLQuery(consulta)
-          .setResultTransformer(Transformers.aliasToBean(ExamenEditarOrdenDTO.class));
-      query.setLong("idExamen", idExamen);
-      result = (ExamenEditarOrdenDTO) query.uniqueResult();
-
-    } catch (HibernateException he) {
-
-      logger.error(he.getMessage() + he.getCause());
-      he.printStackTrace();
-      throw new BiosLISDAOException("No se pudo leer datos tiempo entrega");
-    } finally {
-      if (sesion != null && sesion.isOpen()) {
-        sesion.close();
-      }
-    }
-
-    return result;
-  }
-
-  private Calendar fechaCalculoEntrega(Timestamp ts, int tiempo) {
-
-    Calendar calendar = Calendar.getInstance();
-    calendar.setTime(ts); // tuFechaBase es un Date;
-    calendar.add(Calendar.MINUTE, tiempo); // minutosASumar es int.
-    return calendar;
-  }
-
   public static final String sqlResultadosTestDeUnaOrden = ""
       + "SELECT df.DF_NORDEN,dfe.DFE_IDEXAMEN,dfet.DFET_IDTEST,ce.CE_ABREVIADO , ct.ct_abreviado, "
       + "ctr.CTR_DESCRIPCION ,ct.CT_FORMULA ,cu.CUM_DESCRIPCION ,ct.CT_IDUNIDADMEDIDA ,"
diff --git a/src/main/java/com/grupobios/bioslis/dao/DatosFichas_DAO.java b/src/main/java/com/grupobios/bioslis/dao/DatosFichas_DAO.java
index 26091c99..5ea10f91 100755
--- a/src/main/java/com/grupobios/bioslis/dao/DatosFichas_DAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/DatosFichas_DAO.java
@@ -23,7 +23,6 @@ import org.hibernate.Session;
 import org.hibernate.transform.Transformers;
 
 import com.grupobios.bioslis.common.BiosLISException;
-import com.grupobios.bioslis.common.BiosLisCalendarService;
 import com.grupobios.bioslis.common.DaoHelper;
 import com.grupobios.common.Edad;
 import com.grupobios.bioslis.common.EstadosSistema;
@@ -386,33 +385,9 @@ public class DatosFichas_DAO implements BiosLisDAO {
 
   }
 
-//CAMBIO REALIZADOS POR CRISTIAN 14-11  SE VA A BUSCAR CONDICION DE FILTRO A DAOHELPER
   public List<OrdenInformeResultadoDTO> getOrdenesInformeResultados(FichaFiltroDTO ffDto) {
 
     String sCond = "";
-    BCFichaFiltroDTO bcFichaFiltroDTO = new BCFichaFiltroDTO();
-    bcFichaFiltroDTO.setBo_nOrdenIni(ffDto.getnOrden());
-    bcFichaFiltroDTO.setBo_fIni(ffDto.getfIni());
-    bcFichaFiltroDTO.setBo_fFin(ffDto.getfFin());
-    bcFichaFiltroDTO.setBo_nombre(ffDto.getNombre());
-    bcFichaFiltroDTO.setBo_apellido(ffDto.getApellido());
-    bcFichaFiltroDTO.setBo_tipoDocumento(ffDto.getTipoDocumento());
-    bcFichaFiltroDTO.setBo_nroDocumento(ffDto.getNroDocumento());
-    bcFichaFiltroDTO.setBo_tipoAtencion(ffDto.getTipoAtencion());
-    bcFichaFiltroDTO.setBo_localizacion(ffDto.getLocalizacion());
-    DaoHelper dh = new DaoHelper();
-    
-    try {
-        sCond = dh.genSqlCondicionBOFull(bcFichaFiltroDTO);
-        sCond = sCond + "order by DF_NORDEN DESC";
-    } catch (BiosLISException e) {
-        // TODO Auto-generated catch block
-        e.printStackTrace();
-    }
-    
-    /*
-    
-    
     if (ffDto.getApellido() != null && !ffDto.getApellido().trim().equals("")) {
       sCond += " ( UPPER(dp.DP_PRIMERAPELLIDO) like UPPER(:apellido) OR "
           + " UPPER(dp.DP_SEGUNDOPELLIDO) like UPPER(:apellido)) AND ";
@@ -450,8 +425,6 @@ public class DatosFichas_DAO implements BiosLisDAO {
       sCond = sCond.substring(0, pos);
       sCond = " WHERE " + sCond;
     }
-  */  
-    
     logger.debug("Condiciones consulta {}", sCond);
 
     List<OrdenInformeResultadoDTO> lst = null;
@@ -487,11 +460,6 @@ public class DatosFichas_DAO implements BiosLisDAO {
       qry.setParameter("idLocalizacion", ffDto.getLocalizacion());
     }
 
-    if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
-      
-        qry.setParameter("idExamen", bcFichaFiltroDTO.getBo_examen() );
-    }
-    
     lst = (List<OrdenInformeResultadoDTO>) qry.list();
 
     return lst;
@@ -529,31 +497,10 @@ public class DatosFichas_DAO implements BiosLisDAO {
     return lst;
   }
 
-//CAMBIO REALIZADOS POR CRISTIAN 14-11  SE VA A BUSCAR CONDICION DE FILTRO A DAOHELPER 
   public List<OrdenExamenCapturaResultadoDTO> getOrdenesConSeccionesCapturaResultados(FichaFiltroDTO ffDto)
       throws BiosLISException {
 
-      String sCond = "";
-      BCFichaFiltroDTO bcFichaFiltroDTO = new BCFichaFiltroDTO();
-      bcFichaFiltroDTO.setBo_nOrdenIni(ffDto.getnOrden());
-      bcFichaFiltroDTO.setBo_fIni(ffDto.getfIni());
-      bcFichaFiltroDTO.setBo_fFin(ffDto.getfFin());
-      bcFichaFiltroDTO.setBo_nombre(ffDto.getNombre());
-      bcFichaFiltroDTO.setBo_apellido(ffDto.getApellido());
-      bcFichaFiltroDTO.setBo_tipoDocumento(ffDto.getTipoDocumento());
-      bcFichaFiltroDTO.setBo_nroDocumento(ffDto.getNroDocumento());
-      bcFichaFiltroDTO.setBo_tipoAtencion(ffDto.getTipoAtencion());
-      bcFichaFiltroDTO.setBo_localizacion(ffDto.getLocalizacion());
-      DaoHelper dh = new DaoHelper();
-      
-      try {
-          sCond = dh.genSqlCondicionBOFull(bcFichaFiltroDTO);
-         
-      } catch (BiosLISException e) {
-          // TODO Auto-generated catch block
-          e.printStackTrace();
-      }
-/*
+    String sCond = "";
     if (ffDto.getApellido() != null && !ffDto.getApellido().trim().equals("")) {
       sCond += " ( UPPER(dp.DP_PRIMERAPELLIDO) like UPPER(:apellido) OR "
           + " UPPER(dp.DP_SEGUNDOAPELLIDO) like UPPER(:apellido)) AND ";
@@ -591,7 +538,7 @@ public class DatosFichas_DAO implements BiosLisDAO {
       sCond = sCond.substring(0, pos);
       sCond = " WHERE " + sCond;
     }
-*/
+
     String sCondRecepcionMuestra = "";
 
     if (ffDto.getfFin() != null && !ffDto.getfFin().trim().isEmpty()) {
@@ -602,7 +549,7 @@ public class DatosFichas_DAO implements BiosLisDAO {
       sCondRecepcionMuestra += " dfm.DFM_FECHARM >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND  ";
     }
 
-   int  pos = sCondRecepcionMuestra.lastIndexOf("AND");
+    pos = sCondRecepcionMuestra.lastIndexOf("AND");
 
     if (pos != -1) {
       sCondRecepcionMuestra = sCondRecepcionMuestra.substring(0, pos);
@@ -647,22 +594,13 @@ public class DatosFichas_DAO implements BiosLisDAO {
     if (ffDto.getTipoAtencion() != null && ffDto.getTipoAtencion() != -1) {
       qry.setParameter("tipoAtencion", ffDto.getTipoAtencion());
     }
-
     if (ffDto.getLocalizacion() != null && ffDto.getLocalizacion() != -1) {
-  
       qry.setParameter("idLocalizacion", ffDto.getLocalizacion());
     }
 
-    if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
-      
-        qry.setParameter("idExamen", bcFichaFiltroDTO.getBo_examen() );
-    }
-    
-
     lst = (List<OrdenExamenCapturaResultadoDTO>) qry.list();
 
     for (OrdenExamenCapturaResultadoDTO oecr : lst) {
-       
       if (oecr.getSDP_FNACIMIENTO() != null) {
         oecr.setSDP_FNACIMIENTO(Edad.getEdadActual(oecr.getSDP_FNACIMIENTO()).toString());
       }
@@ -673,7 +611,6 @@ public class DatosFichas_DAO implements BiosLisDAO {
 
   }
 
-  
   public List<OrdenInformeResultadoDTO> getOrdenesCapturaResultados(FichaFiltroDTO ffDto) throws BiosLISException {
 
     List<OrdenExamenCapturaResultadoDTO> lstOrdenesConSecciones = this.getOrdenesConSeccionesCapturaResultados(ffDto);
@@ -713,29 +650,9 @@ public class DatosFichas_DAO implements BiosLisDAO {
     return lstOrdenes;
   }
 
-  //CAMBIO REALIZADOS POR CRISTIAN 14-11  SE VA A BUSCAR CONDICION DE FILTRO A DAOHELPER
   public List<OrdenesTMDTO> getOrdenesRechazoMuestras(FichaFiltroDTO ffDto) {
 
-      String sCond = "";
-      BCFichaFiltroDTO bcFichaFiltroDTO = new BCFichaFiltroDTO();
-      bcFichaFiltroDTO.setBo_nOrdenIni(ffDto.getnOrden());
-      bcFichaFiltroDTO.setBo_fIni(ffDto.getfIni());
-      bcFichaFiltroDTO.setBo_fFin(ffDto.getfFin());
-      bcFichaFiltroDTO.setBo_nombre(ffDto.getNombre());
-      bcFichaFiltroDTO.setBo_apellido(ffDto.getApellido());
-      bcFichaFiltroDTO.setBo_tipoDocumento(ffDto.getTipoDocumento());
-      bcFichaFiltroDTO.setBo_nroDocumento(ffDto.getNroDocumento());
-      bcFichaFiltroDTO.setBo_tipoAtencion(ffDto.getTipoAtencion());
-      bcFichaFiltroDTO.setBo_localizacion(ffDto.getLocalizacion());
-      DaoHelper dh = new DaoHelper();
-      
-      try {
-          sCond = dh.genSqlCondicionBOFull(bcFichaFiltroDTO);
-      } catch (BiosLISException e) {
-          // TODO Auto-generated catch block
-          e.printStackTrace();
-      }
-      /*
+    String sCond = "";
     if (ffDto.getApellido() != null && !ffDto.getApellido().trim().equals("")) {
       sCond += " ( UPPER(dp.DP_PRIMERAPELLIDO) like UPPER(:apellido) OR "
           + " UPPER(dp.DP_SEGUNDOAPELLIDO) like UPPER(:apellido)) AND ";
@@ -763,7 +680,7 @@ public class DatosFichas_DAO implements BiosLisDAO {
       sCond = sCond.substring(0, pos);
       sCond = " WHERE " + sCond;
     }
-*/
+
     Session sesion = HibernateUtil.getSessionFactory().openSession();
     String sqlQuery = "SELECT df.df_norden NORDEN, to_char(df.df_fechaorden, 'dd/MM/yyyy hh24:mi') FECHAORDEN, dp.dp_idpaciente idpaciente,"
         + "to_char(dp.dp_nombres || ' ' || dp.dp_primerapellido || ' ' || dp.dp_segundoapellido) nombres, "
@@ -793,12 +710,6 @@ public class DatosFichas_DAO implements BiosLisDAO {
       query.setParameter("nDoc", ffDto.getNroDocumento());
     }
 
-    if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
-      
-        query.setParameter("idExamen", bcFichaFiltroDTO.getBo_examen() );
-    }
-    
-
     List<OrdenesTMDTO> lista = query.list();
     sesion.close();
     return lista;
@@ -848,8 +759,6 @@ public class DatosFichas_DAO implements BiosLisDAO {
       + "  FROM DatosFichasexamenes dfe " + "  WHERE dfe.IddatosFichasExamenes.dfeNorden = :nroOrden "
       + "    AND dfe.dfeCodigoestadoexamen   in :lstEstados";
 
-  
-  
   public List<OrdenExamenCapturaResultadoDTO> getOrdenesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO)
       throws BiosLISException, BiosLISDAOException {
     List<OrdenExamenCapturaResultadoDTO> lst = null;
@@ -898,11 +807,6 @@ public class DatosFichas_DAO implements BiosLisDAO {
         qry.setParameter("host", bcFichaFiltroDTO.getBo_host());
       }
 
-      if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
-        
-          qry.setParameter("idExamen", bcFichaFiltroDTO.getBo_examen() );
-      }
-      
       lst = qry.list();
     } catch (BiosLISException e) {
       logger.error(e.getLocalizedMessage());
@@ -915,17 +819,15 @@ public class DatosFichas_DAO implements BiosLisDAO {
     return lst;
   }
 
-  //************ pe cambio  ordenfulldto a OrdenInformeResultadoDTO 10-11 por cristian  
-  public List<OrdenInformeResultadoDTO> getSoloOrdenesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
-    List<OrdenInformeResultadoDTO> lst = null;
+  public List<OrdenFullDTO> getSoloOrdenesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO) throws BiosLISException {
+    List<OrdenFullDTO> lst = null;
     Session sesion = HibernateUtil.getSessionFactory().openSession();
     try {
       DaoHelper dh = new DaoHelper();
       String sql;
       sql = dh.genSqlBOFull(bcFichaFiltroDTO);
-      sql =  sql + " order by DF_NORDEN DESC";
 
-      Query qry = sesion.createSQLQuery(sql).setResultTransformer(Transformers.aliasToBean(OrdenInformeResultadoDTO.class));
+      Query qry = sesion.createSQLQuery(sql).setResultTransformer(Transformers.aliasToBean(OrdenFullDTO.class));
 
       if (bcFichaFiltroDTO.getBo_apellido() != null && !bcFichaFiltroDTO.getBo_apellido().trim().isEmpty()) {
         qry.setParameter("apellido", bcFichaFiltroDTO.getBo_apellido().concat("%"));
@@ -933,21 +835,14 @@ public class DatosFichas_DAO implements BiosLisDAO {
       if (bcFichaFiltroDTO.getBo_nombre() != null && !bcFichaFiltroDTO.getBo_nombre().trim().isEmpty()) {
         qry.setParameter("nombre", bcFichaFiltroDTO.getBo_nombre().concat("%"));
       }
-      
-      if ((bcFichaFiltroDTO.getBo_nOrdenIni() != null && bcFichaFiltroDTO.getBo_nOrdenFin() != null)
-              || (bcFichaFiltroDTO.getBo_nOrdenIni() == null && bcFichaFiltroDTO.getBo_nOrdenFin() == null)) {
-          if (bcFichaFiltroDTO.getBo_fFin() != null && !bcFichaFiltroDTO.getBo_fFin().trim().isEmpty()) {
-            logger.debug("" + bcFichaFiltroDTO.getBo_fFin());        
-                qry.setParameter("ffin", bcFichaFiltroDTO.getBo_fFin());
-            }      
-          
-          if (bcFichaFiltroDTO.getBo_fIni() != null && !bcFichaFiltroDTO.getBo_fIni().trim().isEmpty()) {
-            logger.debug("fini" + bcFichaFiltroDTO.getBo_fIni());
-            qry.setParameter("fini", bcFichaFiltroDTO.getBo_fIni());        
-          }
-      }  
-      
-      
+      if (bcFichaFiltroDTO.getBo_fFin() != null && !bcFichaFiltroDTO.getBo_fFin().trim().isEmpty()) {
+        logger.debug("" + bcFichaFiltroDTO.getBo_fFin());
+        qry.setParameter("ffin", bcFichaFiltroDTO.getBo_fFin());
+      }
+      if (bcFichaFiltroDTO.getBo_fIni() != null && !bcFichaFiltroDTO.getBo_fIni().trim().isEmpty()) {
+        logger.debug("fini" + bcFichaFiltroDTO.getBo_fIni());
+        qry.setParameter("fini", bcFichaFiltroDTO.getBo_fIni());
+      }
       if (bcFichaFiltroDTO.getBo_nOrdenIni() != null) {
         qry.setParameter("nOrdenIni", bcFichaFiltroDTO.getBo_nOrdenIni());
       }
@@ -973,16 +868,13 @@ public class DatosFichas_DAO implements BiosLisDAO {
         qry.setParameter("idProcedencia", bcFichaFiltroDTO.getBo_procedencia());
       }
 
-      if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
-        
-          qry.setParameter("idExamen", bcFichaFiltroDTO.getBo_examen() );
-      }
-      
-      
       lst = qry.list();
     } catch (BiosLISException e) {
       logger.error(e.getLocalizedMessage());
       throw e;
+//    } catch (HibernateException e) {
+//      logger.error(e.getLocalizedMessage());
+//      throw new BiosLISDAOException("No se pudo recuperar informaciÃ³n de ordenes" + e.getLocalizedMessage());
     }
 
     return lst;
@@ -1064,7 +956,7 @@ public class DatosFichas_DAO implements BiosLisDAO {
   }
 
   public List<DatosFichasexamenes> getDatosFichasexamenesOrden(Long nroOrden) throws BiosLISDAOException {
-    
+
     Session sesion = HibernateUtil.getSessionFactory().openSession();
     try {
       List<DatosFichasexamenes> lst = null;
@@ -1132,28 +1024,12 @@ public class DatosFichas_DAO implements BiosLisDAO {
 
   public List<OrdenExamenCapturaResultadoDTO> getOrdenesExamenesSeccionesxFiltro(BCFichaFiltroDTO bcFichaFiltroDTO)
       throws BiosLISException, BiosLISDAOException {
-     
     List<OrdenExamenCapturaResultadoDTO> lst = null;
     Session sesion = HibernateUtil.getSessionFactory().openSession();
     try {
       DaoHelper dh = new DaoHelper();
       String sql = dh.genSqlOrdenesConDatosExamenesConSecciones(bcFichaFiltroDTO);
-      
-      
 
-      if (bcFichaFiltroDTO.getBo_fIni() == null || bcFichaFiltroDTO.getBo_fIni().trim().equals("")) {
-          bcFichaFiltroDTO.setBo_fIni(null);
-      } else {
-          logger.debug(BiosLisCalendarService.getInstance().estandariza(bcFichaFiltroDTO.getBo_fIni()));
-          bcFichaFiltroDTO
-                  .setBo_fIni(BiosLisCalendarService.getInstance().estandariza(bcFichaFiltroDTO.getBo_fIni()));
-      }
-      if (bcFichaFiltroDTO.getBo_fFin() == null || bcFichaFiltroDTO.getBo_fFin().trim().equals("")) {
-          bcFichaFiltroDTO.setBo_fFin(null);
-      } else {
-          bcFichaFiltroDTO
-                  .setBo_fFin(BiosLisCalendarService.getInstance().estandariza(bcFichaFiltroDTO.getBo_fFin()));
-      }
       Query qry = sesion.createSQLQuery(sql)
           .setResultTransformer(Transformers.aliasToBean(OrdenExamenCapturaResultadoDTO.class));
 
@@ -1193,11 +1069,6 @@ public class DatosFichas_DAO implements BiosLisDAO {
         qry.setParameter("host", bcFichaFiltroDTO.getBo_host());
       }
 
-      if (bcFichaFiltroDTO.getBo_examen() != null && bcFichaFiltroDTO.getBo_examen() != -1) {
-        
-          qry.setParameter("idExamen", bcFichaFiltroDTO.getBo_examen() );
-      }
-      
       lst = qry.list();
 
       Map<OrdenExamenCapturaResultadoDTO, List<BigDecimal>> hm = new HashMap<OrdenExamenCapturaResultadoDTO, List<BigDecimal>>();
@@ -1237,14 +1108,11 @@ public class DatosFichas_DAO implements BiosLisDAO {
     return lst;
   }
 
-  public List<OrdenInformeResultadoDTO> getBOOrdenesConSecciones(BCFichaFiltroDTO fichaFiltroDTO)
+  public List<OrdenInformeResultadoDTO> getBOOrdenesConSecciones(BOOrdenesFiltroDTO fichaFiltroDTO)
       throws BiosLISException {
-   
-     
     List<OrdenExamenCapturaResultadoDTO> lstOrdenesConSecciones = this
         .getOrdenesConSeccionesCapturaResultados(fichaFiltroDTO);
 
-  
     Map<OrdenInformeResultadoDTO, List<BigDecimal>> hm = new HashMap<OrdenInformeResultadoDTO, List<BigDecimal>>();
 
     // Setear si tienen un examen en estado pendiente.
@@ -1270,7 +1138,7 @@ public class DatosFichas_DAO implements BiosLisDAO {
     }
 
     for (OrdenExamenCapturaResultadoDTO ordenExamen : lstOrdenesConSecciones) {
-           
+
 //      logger.debug("Codigo examen 0 {}", ordenExamen.getOrdenInformeResultadoDTO().toString());
 //      logger.debug("Examen con resultado urgente {}", ordenExamen.getDFE_EXAMENESURGENTE());
 //      logger.debug("Examen con informe resultado urgente {}",
@@ -1293,88 +1161,18 @@ public class DatosFichas_DAO implements BiosLisDAO {
     });
 
     for (OrdenInformeResultadoDTO ordenInformeResultadoDTO : lstOrdenes) {
-      
+
       Integer nOrden = ordenInformeResultadoDTO.getDF_NORDEN();
       ordenInformeResultadoDTO.setHayExamenesPendientes(hmOrdenesConExamenPendiente.get(nOrden));
       ordenInformeResultadoDTO.setHayExamenesUrgentes(hmOrdenesConExamenUrgente.get(nOrden));
     }
- 
+
     return lstOrdenes;
   }
 
-//CAMBIO REALIZADOS POR CRISTIAN 14-11  SE VA A BUSCAR CONDICION DE FILTRO A DAOHELPER
-
-
-  private List<OrdenExamenCapturaResultadoDTO> getOrdenesConSeccionesCapturaResultados(BCFichaFiltroDTO  ffDto)
+  private List<OrdenExamenCapturaResultadoDTO> getOrdenesConSeccionesCapturaResultados(BOOrdenesFiltroDTO ffDto)
       throws BiosLISException {
     String sCond = "";
-   
-    DaoHelper dh = new DaoHelper();
-    sCond = dh.genSqlCondicionBOFull(ffDto);
-   
-   
-    //agregado por cristian 11-11  para buscar por filtro
-    //normalizando fechas
-    /*
-    if (ffDto.getBo_fIni() == null || ffDto.getBo_fIni().trim().equals("")) {
-        ffDto.setBo_fIni(null);
-    } else {
-        logger.debug(BiosLisCalendarService.getInstance().estandariza(ffDto.getBo_fIni()));
-        ffDto.setBo_fIni(BiosLisCalendarService.getInstance().estandariza(ffDto.getBo_fIni()));
-    }
-    if (ffDto.getBo_fFin() == null || ffDto.getBo_fFin().trim().equals("")) {
-        ffDto.setBo_fFin(null);
-    } else {
-        ffDto.setBo_fFin(BiosLisCalendarService.getInstance().estandariza(ffDto.getBo_fFin()));
-    }
-    
-    if (ffDto.getBo_nOrdenIni() != null && ffDto.getBo_nOrdenFin() != null) {
-        sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
-        sCond += " df.DF_NORDEN <= :nOrdenFin AND ";            
-    } else {
-        if (ffDto.getBo_nOrdenIni() != null || ffDto.getBo_nOrdenFin() != null) {
-            if (ffDto.getBo_nOrdenIni() != null) {
-                sCond += " df.DF_NORDEN >= :nOrdenIni AND ";
-                sCond += " df.DF_NORDEN <= :nOrdenIni AND ";
-            }
-            if (ffDto.getBo_nOrdenFin() != null) {
-                sCond += " df.DF_NORDEN >= :nOrdenFin AND ";
-                sCond += " df.DF_NORDEN <= :nOrdenFin AND ";
-            }
-        }
-    }
-    if (ffDto.getBo_procedencia() != null && ffDto.getBo_procedencia() != -1) {
-        sCond += " df.DF_IDPROCEDENCIA = :idProcedencia AND ";
-    }
-
-      
-    if ((ffDto.getBo_nOrdenIni() != null && ffDto.getBo_nOrdenFin() != null)
-            || (ffDto.getBo_nOrdenIni() == null && ffDto.getBo_nOrdenFin() == null)) {
-  
-        if  (ffDto.getBo_fIni() != null  &&  ffDto.getBo_fFin() != null ) {          
-            sCond += " df.DF_FECHAORDEN >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
-            sCond += " df.DF_FECHAORDEN <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') + 1 AND ";
-        } else {
-            
-            if (ffDto.getBo_fIni() != null || ffDto.getBo_fFin() != null) {
-                if (ffDto.getBo_fIni() != null) {
-                    System.out.println("entre a fecha inicial");
-                    sCond += " df.DF_FECHAORDEN like TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
-                    
-                }
-                if (ffDto.getBo_fFin() != null) {
-                    System.out.println("entre afecha final");
-                    sCond += " df.DF_FECHAORDEN like TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
-               }
-            }
-        }         
-    }              
-        
-        
-    //**********************************************************
-    
-    
-   
     if (ffDto.getBo_apellido() != null && !ffDto.getBo_apellido().trim().equals("")) {
       sCond += " ( UPPER(dp.DP_PRIMERAPELLIDO) like UPPER(:apellido) OR "
           + " UPPER(dp.DP_SEGUNDOAPELLIDO) like UPPER(:apellido)) AND ";
@@ -1382,8 +1180,6 @@ public class DatosFichas_DAO implements BiosLisDAO {
     if (ffDto.getBo_nombre() != null && !ffDto.getBo_nombre().trim().isEmpty()) {
       sCond += " UPPER(dp.DP_NOMBRES) like UPPER(:nombre) AND ";
     }
-    
-    /*
     if (ffDto.getBo_fFin() != null && !ffDto.getBo_fFin().trim().isEmpty()) {
       sCond += " df.DF_FECHAORDEN <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
     }
@@ -1397,9 +1193,6 @@ public class DatosFichas_DAO implements BiosLisDAO {
     if (ffDto.getBo_nOrdenFin() != null) {
       sCond += " df.DF_NORDEN <= :nOrdenFin AND ";
     }
-   */
-    /*
-   
     if (ffDto.getBo_tipoDocumento() != null && ffDto.getBo_tipoDocumento() != -1) {
       sCond += " dp.DP_IDTIPODOCUMENTO = :tipoDoc AND ";
     }
@@ -1410,20 +1203,9 @@ public class DatosFichas_DAO implements BiosLisDAO {
     if (ffDto.getBo_tipoAtencion() != null && ffDto.getBo_tipoAtencion() != -1) {
       sCond += " df.DF_IDTIPOATENCION = :tipoAtencion AND ";
     }
-    
-    if (ffDto.getBo_examen() != null && ffDto.getBo_examen() != -1) {
-        sCond += " ce.ce_codigoexamen= :idExamen AND ";
-    }
-    if (ffDto.getBo_servicio() != null ) {
-        sCond += " df.df_idservicio= :idServicio AND ";
-    }
-   
-    if (ffDto.getBo_seccion() != null ) {
-        sCond += " ce.CE_IDSECCION= :idSeccion AND ";
-      }
     if (ffDto.getBo_localizacion() != null && ffDto.getBo_localizacion() != -1) {
-        sCond += " df.DF_IDLOCALIZACION = :idLocalizacion AND ";
-    } 
+      sCond += " df.DF_IDLOCALIZACION = :idLocalizacion AND ";
+    }
 
     int pos = sCond.lastIndexOf("AND");
 
@@ -1431,41 +1213,18 @@ public class DatosFichas_DAO implements BiosLisDAO {
       sCond = sCond.substring(0, pos);
       sCond = " WHERE " + sCond;
     }
-   */ 
- 
-
 
     String sCondRecepcionMuestra = "";
-    
-    if  (ffDto.getBo_fIni() != null  &&  ffDto.getBo_fFin() != null ) {          
-        sCondRecepcionMuestra  += " df.DF_FECHAORDEN >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
-        sCondRecepcionMuestra  += " df.DF_FECHAORDEN <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') + 1 AND ";
-    } else {
-        
-        if (ffDto.getBo_fIni() != null || ffDto.getBo_fFin() != null) {
-            if (ffDto.getBo_fIni() != null) {               
-                sCondRecepcionMuestra  += " df.DF_FECHAORDEN like TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND ";
-                
-            }
-            if (ffDto.getBo_fFin() != null) {
-                sCondRecepcionMuestra  += " df.DF_FECHAORDEN like TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
-           }
-        }
-    }         
 
-    /*
+    if (ffDto.getBo_fFin() != null && !ffDto.getBo_fFin().trim().isEmpty()) {
+      sCondRecepcionMuestra += " dfm.DFM_FECHARM <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') AND ";
+    }
     if (ffDto.getBo_fIni() != null && !ffDto.getBo_fIni().trim().isEmpty()) {
 
-        sCondRecepcionMuestra += " dfm.DFM_FECHARM >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND  ";
-      }
-    if (ffDto.getBo_fFin() != null && !ffDto.getBo_fFin().trim().isEmpty()) {    
-   
-      sCondRecepcionMuestra += " dfm.DFM_FECHARM <= TO_DATE(:ffin,'DD-MM-YYYY HH24:MI:SS') +1 AND ";
+      sCondRecepcionMuestra += " dfm.DFM_FECHARM >= TO_DATE(:fini,'DD-MM-YYYY HH24:MI:SS') AND  ";
     }
-    
-  */ 
 
-    int pos = sCondRecepcionMuestra.lastIndexOf("AND");
+    pos = sCondRecepcionMuestra.lastIndexOf("AND");
 
     if (pos != -1) {
       sCondRecepcionMuestra = sCondRecepcionMuestra.substring(0, pos);
@@ -1480,24 +1239,10 @@ public class DatosFichas_DAO implements BiosLisDAO {
     logger.debug("Condiciones recepcion {}", sCondRecepcionMuestra);
     logger.debug("\n SQL {}", _sqlOrdenesConSeccionesCapturaResultados + sCond + sCondRecepcionMuestra
         + "ORDER BY dfe.DFE_EXAMENESURGENTE DESC");
-    
-    if (ffDto.getBo_fIni() == null || ffDto.getBo_fIni().trim().equals("")) {
-        ffDto.setBo_fIni(null);
-    } else {
-        logger.debug(BiosLisCalendarService.getInstance().estandariza(ffDto.getBo_fIni()));
-        ffDto
-                .setBo_fIni(BiosLisCalendarService.getInstance().estandariza(ffDto.getBo_fIni()));
-    }
-    if (ffDto.getBo_fFin() == null || ffDto.getBo_fFin().trim().equals("")) {
-        ffDto.setBo_fFin(null);
-    } else {
-        ffDto
-                .setBo_fFin(BiosLisCalendarService.getInstance().estandariza(ffDto.getBo_fFin()));
-    }
 
     List<OrdenExamenCapturaResultadoDTO> lst = null;
     Session sesion = HibernateUtil.getSessionFactory().openSession();
-    Query qry = sesion.createSQLQuery(_sqlOrdenesConSeccionesCapturaResultados + sCond + sCondRecepcionMuestra + "ORDER BY dfe.DFE_EXAMENESURGENTE , df.DF_FECHAORDEN DESC  ")
+    Query qry = sesion.createSQLQuery(_sqlOrdenesConSeccionesCapturaResultados + sCond + sCondRecepcionMuestra)
         .setResultTransformer(Transformers.aliasToBean(OrdenExamenCapturaResultadoDTO.class));
 
     if (ffDto.getBo_apellido() != null && !ffDto.getBo_apellido().trim().isEmpty()) {
@@ -1530,19 +1275,7 @@ public class DatosFichas_DAO implements BiosLisDAO {
     if (ffDto.getBo_localizacion() != null && ffDto.getBo_localizacion() != -1) {
       qry.setParameter("idLocalizacion", ffDto.getBo_localizacion());
     }
-    if (ffDto.getBo_examen() != null ) {        
-        qry.setParameter("idExamen", ffDto.getBo_examen().toString() );
-    }
 
-    if (ffDto.getBo_seccion() != null ) {        
-        qry.setParameter("idSeccion", ffDto.getBo_seccion() );
-    }
-    if (ffDto.getBo_servicio() != null ) {        
-        qry.setParameter("idServicio", ffDto.getBo_servicio() );
-    }
-    if (ffDto.getBo_procedencia()!= null ) {        
-        qry.setParameter("idProcedencia", ffDto.getBo_procedencia());
-    }
     lst = (List<OrdenExamenCapturaResultadoDTO>) qry.list();
 
     for (OrdenExamenCapturaResultadoDTO oecr : lst) {
@@ -1555,7 +1288,6 @@ public class DatosFichas_DAO implements BiosLisDAO {
     return lst;
   }
 
-
   private static final String sqlExamenesOrden = "" +
 
       "SELECT " + "ce.CE_ABREVIADO,ce.CE_CODIGOEXAMEN,"
@@ -1609,15 +1341,14 @@ public class DatosFichas_DAO implements BiosLisDAO {
       + "dp.DP_EMAIL, dp.DP_IDPACIENTE,dp.DP_PRIMERAPELLIDO, dp.DP_SEGUNDOAPELLIDO,"
       + "cd.CD_DESCRIPCION, df.DF_OBSERVACION, cm.CM_NOMBRES,cm.CM_PRIMERAPELLIDO, cm.CM_SEGUNDOAPELLIDO, ce.CE_IDSECCION ,"
       + "dfe.DFE_CODIGOESTADOEXAMEN,cee.CEE_DESCRIPCIONESTADOEXAMEN, dfe.DFE_EXAMENESURGENTE,ce.CE_CODIGOEXAMEN, ce.CE_ABREVIADO, "
-      + "csec.CSEC_DESCRIPCION,dfe.DFE_IDEXAMEN,  cl.cl_codigolocalizacion as Localizacion " 
-      + "FROM  DATOS_FICHAS df       "
+      + "csec.CSEC_DESCRIPCION,dfe.DFE_IDEXAMEN " + "FROM  DATOS_FICHAS df       "
       + "JOIN DATOS_PACIENTES dp ON (dp.DP_IDPACIENTE = df.DF_IDPACIENTE)    "
       + "JOIN DATOS_FICHASEXAMENES dfe ON (dfe.DFE_NORDEN = df.DF_NORDEN) "
       + "JOIN LDV_TIPOSDOCUMENTOS lt ON (lt.LDVTD_IDTIPODOCUMENTO = dp.DP_IDTIPODOCUMENTO) "
       + "JOIN CFG_TIPOATENCION ct ON (ct.CTA_IDTIPOATENCION = df.DF_IDTIPOATENCION)    "
       + "JOIN CFG_LOCALIZACIONES cl ON (cl.CL_IDLOCALIZACION = df.DF_IDLOCALIZACION ) "
       + "LEFT OUTER JOIN CFG_PROCEDENCIAS cp ON (cp.CP_IDPROCEDENCIA = df.DF_IDPROCEDENCIA )     "
-      + "LEFT OUTER JOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = df.df_IDSERVICIO ) "
+      + "LEFT OUTER JOIN  CFG_SERVICIOS cs ON (cs.CS_IDSERVICIO = cl.CL_IDSERVICIO ) "
       + "JOIN CFG_EXAMENES ce ON (ce.CE_IDEXAMEN = dfe.DFE_IDEXAMEN) "
       + "JOIN LDV_SEXO ls ON (ls.LDVS_IDSEXO = dp.DP_IDSEXO) "
       + "JOIN CFG_ESTADOSEXAMENES cee ON (dfe.DFE_CODIGOESTADOEXAMEN = cee.CEE_CODIGOESTADOEXAMEN) "
diff --git a/src/main/java/com/grupobios/bioslis/dao/DatosFichasmuestrasDAO.java b/src/main/java/com/grupobios/bioslis/dao/DatosFichasmuestrasDAO.java
index ac31ab15..61e76910 100755
--- a/src/main/java/com/grupobios/bioslis/dao/DatosFichasmuestrasDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/DatosFichasmuestrasDAO.java
@@ -75,7 +75,7 @@ public class DatosFichasmuestrasDAO {
                 dfet.setDfetIdtipomuestra(idTomaMuestra);
                 dfet.setDfetIdseccion((short) idSeccion);
                 dfet.setDfetFechaorden(date);
-                // dfet.setDfetIdpaciente(1);  
+                // dfet.setDfetIdpaciente(1);
 
                 sesion.save(dfet);
 
@@ -111,7 +111,6 @@ public class DatosFichasmuestrasDAO {
     }
 
     public void updateDatosFichasmuestras(DatosFichasmuestras dfm) throws BiosLISDAOException {
-        System.out.println(dfm.getDfmIdusuariorm());
         Session sesion = HibernateUtil.getSessionFactory().openSession();
         try {
             sesion.beginTransaction();
@@ -451,7 +450,7 @@ public class DatosFichasmuestrasDAO {
         }
 
         sqlQueryMuestras += " order by FECHATM desc";
-        System.out.println("sqlQueryMuestras: "+sqlQueryMuestras);
+        logger.debug("sqlQueryMuestras: "+sqlQueryMuestras);
         
         Query query = sesion.createSQLQuery(sqlQueryMuestras).setResultTransformer(Transformers.aliasToBean(MuestrasDTO.class));
         if (!fecha.equals("HOY")){
diff --git a/src/main/java/com/grupobios/bioslis/dao/DatosPacientesDAO.java b/src/main/java/com/grupobios/bioslis/dao/DatosPacientesDAO.java
index 344aec23..c2901570 100755
--- a/src/main/java/com/grupobios/bioslis/dao/DatosPacientesDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/DatosPacientesDAO.java
@@ -4,7 +4,6 @@ package com.grupobios.bioslis.dao;
 import java.math.BigDecimal;
 import java.sql.Timestamp;
 import java.text.ParseException;
-import java.util.ArrayList;
 import java.util.List;
 
 import org.apache.logging.log4j.LogManager;
@@ -31,7 +30,6 @@ import com.grupobios.bioslis.dto.PacientePatologiaEditarOrdenDTO;
 import com.grupobios.bioslis.dto.PatologiaDTO;
 import com.grupobios.bioslis.dto.PortalDatosPacienteOrdenExamenDTO;
 import com.grupobios.bioslis.dto.PortalExamenesDTO;
-import com.grupobios.bioslis.dto.TestEdicionOrdenDTO;
 import com.grupobios.bioslis.entity.DatosContactos;
 import com.grupobios.bioslis.entity.DatosPacientes;
 import com.grupobios.bioslis.entity.DatosPacientespatologias;
@@ -967,13 +965,12 @@ public class DatosPacientesDAO implements BiosLisDAO {
   private static final String sqlPortalDatosExamenesListaMuestra = "select df.dfe_idexamen as idexamen, ce.ce_abreviado as nombre , cee.cee_descripcionestadoexamen as estado ,  "
       + "(select NVL2(dm.dmr_idcausarechazo, 'Rechazada', ' ') as muest from BIOSLIS.datos_muestrasrechazadas dm where dm.dmr_idmuestra = (select d.dfet_idmuestra from datos_fichasexamenestest d  "
       + "where df.dfe_norden = d.dfet_norden and df.dfe_idexamen = d.dfet_idexamen "
-      + "FETCH FIRST 1 ROWS ONLY) ) as muestra , ce.ce_disponibleweb as disponibleweb, ce.ce_nombreweb as nombreweb , df.dfe_examenanulado as examenanulado "
-      + "from datos_fichasexamenes df " + "inner join  cfg_examenes ce  on ce.ce_idexamen = df.dfe_idexamen "
+      + "FETCH FIRST 1 ROWS ONLY) ) as muestra , ce.ce_disponibleweb as disponibleweb, ce.ce_nombreweb as nombreweb "
+      + "from datos_fichasexamenes df " + "inner join  cfg_examenes ce  on ce.ce_idexamen = df.dfe_idexamen  "
       + "inner join cfg_estadosexamenes  cee  on cee.cee_codigoestadoexamen = df.dfe_codigoestadoexamen  "
       + " where df.dfe_norden =:nOrden ";
   private static final String sqlPortalDatosExamenesListaVisualizacion = "select df.dfe_idexamen as idexamen, ce.ce_abreviado as nombre , cee.cee_descripcionestadoexamen as estado,"
-      + "df.dfe_impreso as muestra, ce.ce_disponibleweb as disponibleweb, ce.ce_nombreweb as nombreweb , df.dfe_examenanulado as examenanulado "
-      + "from datos_fichasexamenes df  inner join  cfg_examenes ce  on ce.ce_idexamen = df.dfe_idexamen "
+      + "df.dfe_impreso as muestra, ce.ce_disponibleweb as disponibleweb, ce.ce_nombreweb as nombreweb from datos_fichasexamenes df  inner join  cfg_examenes ce  on ce.ce_idexamen = df.dfe_idexamen "
       + " inner join cfg_estadosexamenes  cee  on cee.cee_codigoestadoexamen = df.dfe_codigoestadoexamen "
       + " where df.dfe_norden =:nOrden ";
 
@@ -1105,7 +1102,7 @@ public class DatosPacientesDAO implements BiosLisDAO {
           + "on lvdpat.ldvpat_idpatologia = dpp.dpp_idpatologia "
           + "where dpp.dpp_idpaciente =:idPaciente ";
   
-  private static final String sqlExamenesEditarOrden ="select ce.ce_idexamen as idexamen, ce.ce_codigoexamen as codexamen, ce.ce_abreviado as examenabreviado,"
+          private static final String sqlExamenesEditarOrden ="select ce.ce_idexamen as idexamen, ce.ce_codigoexamen as codexamen, ce.ce_abreviado as examenabreviado,"
           + " ce.ce_idtipomuestra as idmuestra, ce.ce_descripcion as cedescripcion, dfe.dfe_codigoestadoexamen as CODESTADOEXAMEN ,dfe.dfe_examenanulado as EXAMENANULADO ,"
           + "DFE.DFE_IDUSUARIOANULA IDUSUARIOANULA ,"
           +" cmue.cmue_descripcionabreviada as descripcionmuestra, ldvie.ldvie_descripcion as ldviedescripcion, ldvie.ldvie_idindicacionesexamen as ldvieidindicacionesexamen ,"
@@ -1131,8 +1128,6 @@ public class DatosPacientesDAO implements BiosLisDAO {
     DatosEditarOrdenDTO result;
     List<PacientePatologiaEditarOrdenDTO> result2;
     List<ExamenEditarOrdenDTO> result3;
-    List<TestEdicionOrdenDTO> result4 = new ArrayList<TestEdicionOrdenDTO>();
-    List<TestEdicionOrdenDTO> result5 = new ArrayList<TestEdicionOrdenDTO>();
     try {
       Query qry = sesion.createSQLQuery(sqlDatosPacienteMedicoEditarOrden)
           .setResultTransformer(Transformers.aliasToBean(DatosEditarOrdenDTO.class));
@@ -1151,68 +1146,7 @@ public class DatosPacientesDAO implements BiosLisDAO {
       qry.setLong("nOrden", nOrden);
       result3 =  qry.list();
       result.setExamenes(result3);
-
-      //agregado por cristian 21-11 *****************************
-      
-      
-      qry = sesion.createSQLQuery("select dfet_idmuestra as idmuestra, dfet_idenvase as idenvase , dfet_idtipomuestra as idtipomuestra from datos_fichasexamenestest "
-      + " where dfet_norden =:nOrden GROUP BY dfet_idmuestra,  dfet_idenvase, dfet_idtipomuestra")             
-      .setResultTransformer(Transformers.aliasToBean(TestEdicionOrdenDTO.class));
-      qry.setLong("nOrden", nOrden);
-      result4 = qry.list();
-      result.setTests(result4);
-
-      String consulta="select  ce.ce_idexamen as idexamen ,ct.ct_idtest as idtest, ct.ct_idenvase as idenvase, ct.ct_idtipomuestra as idtipomuestra "
-        + "from cfg_test ct "
-        + "join cfg_examenestest cet on cet.cet_idtest = ct.ct_idtest "
-        + "inner join cfg_examenes ce on ce.ce_idexamen = cet.cet_idexamen "
-        + "where (";
-      String consulta2 = "and ce.ce_idexamen not in "
-        + "(select  ce.ce_idexamen "
-        + "from cfg_test ct  join cfg_examenestest cet on cet.cet_idtest = ct.ct_idtest  "
-        + "inner join cfg_examenes ce on ce.ce_idexamen = cet.cet_idexamen  "
-        + "where ";
-      int contador = 0;
-
-      if(result.getTests().get(0).getIDMUESTRA() == null) {
-      result.setMUESTRATOMADA("N");
-      }else {
-      result.setMUESTRATOMADA("S");
-      for(TestEdicionOrdenDTO test : result4) {
-
-          if(contador > 0) {
-              consulta +=  " or ";
-              consulta2+= " and ";
-          }
-          
-          consulta += "  (ct.ct_idenvase ="+test.getIDENVASE() +" and ct.ct_idtipomuestra ="+ test.getIDTIPOMUESTRA()+" )";
-          consulta2+= " (ct.ct_idenvase !="+test.getIDENVASE() +" and ct.ct_idtipomuestra !="+test.getIDTIPOMUESTRA() +" ) ";
-          contador ++;             
-      }
-      consulta += ")"+ consulta2 + ")";
       
-      qry = sesion.createSQLQuery(consulta).setResultTransformer(Transformers.aliasToBean(TestEdicionOrdenDTO.class));
-      result5 = qry.list();
-
-
-      }
-
-      for(TestEdicionOrdenDTO resp : result4) {
-     
-      contador = 0;
-      for(TestEdicionOrdenDTO resp2 : result5) {                 
-          if(resp.getIDENVASE().equals(resp2.getIDENVASE()) && resp.getIDTIPOMUESTRA().equals(resp2.getIDTIPOMUESTRA())) {                 
-              resp2.setIDMUESTRA(resp.getIDMUESTRA());
-              result5.get(contador).setIDMUESTRA(resp.getIDMUESTRA());
-              
-          }
-          contador++;
-      }
-      }
-      result.setTests(result5);
-      //**********************************************     
-      System.out.println(consulta);
-
       return result;
     } catch (HibernateException he) {
       logger.error(he.getMessage());
diff --git a/src/main/java/com/grupobios/bioslis/dao/LdvIncidentesExamenesDAO.java b/src/main/java/com/grupobios/bioslis/dao/LdvIncidentesExamenesDAO.java
deleted file mode 100644
index 9ac36c15..00000000
--- a/src/main/java/com/grupobios/bioslis/dao/LdvIncidentesExamenesDAO.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * To change this license header, choose License Headers in Project Properties.
- * To change this template file, choose Tools | Templates
- * and open the template in the editor.
- */
-package com.grupobios.bioslis.dao;
-
-import com.grupobios.bioslis.config.HibernateUtil;
-import com.grupobios.bioslis.entity.CfgAntecedentestest;
-import com.grupobios.bioslis.entity.LdvIndicacionesexamenes;
-import java.util.List;
-import org.hibernate.Query;
-import org.hibernate.Session;
-
-/**
- *
- * @author Nacho
- */
-public class LdvIncidentesExamenesDAO {
-
-    public void insertIndicacionesExamen(LdvIndicacionesexamenes cat) {
-        Session sesion = HibernateUtil.getSessionFactory().openSession();
-        sesion.beginTransaction();
-        sesion.saveOrUpdate(cat);
-        sesion.getTransaction().commit();
-        sesion.close();
-    }
-
-    public List<LdvIndicacionesexamenes> getIndicacionesExamen(String descripcion) {
-        Session sesion = HibernateUtil.getSessionFactory().openSession();
-        sesion.beginTransaction();
-        Query query = sesion.createQuery("select ca"
-                + " from com.grupobios.bioslis.entity.LdvIndicacionesexamenes ca"
-                + " where ca.ldvieDescripcion like '%"+descripcion.toUpperCase()+"%'");
-        List<LdvIndicacionesexamenes> listaAntecedentes = query.list();
-        sesion.getTransaction().commit();
-        sesion.close();
-        return listaAntecedentes;
-    }
-        public byte getLastId() {
-        Session sesion = HibernateUtil.getSessionFactory().openSession();
-        try {
-
-            sesion.beginTransaction();
-            Query query = sesion.createQuery("select med.ldvieIdindicacionesexamen from com.grupobios.bioslis.entity.LdvIndicacionesexamenes med "
-                    + "order by med.ldvieIdindicacionesexamen desc").setMaxResults(1);
-            byte indice;
-            try {
-                indice = ((byte) query.list().get(0));
-            } catch (Exception e) {
-                indice = 1;
-            }
-            sesion.getTransaction().commit();
-            sesion.close();
-            return  (byte)(indice + 1);
-        } catch (Exception e) {
-            return 1;
-        }
-    }
-}
diff --git a/src/main/java/com/grupobios/bioslis/dao/LdvIncidentesTMDAO.java b/src/main/java/com/grupobios/bioslis/dao/LdvIncidentesTMDAO.java
deleted file mode 100644
index 1c2416f9..00000000
--- a/src/main/java/com/grupobios/bioslis/dao/LdvIncidentesTMDAO.java
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * To change this license header, choose License Headers in Project Properties.
- * To change this template file, choose Tools | Templates
- * and open the template in the editor.
- */
-package com.grupobios.bioslis.dao;
-
-import com.grupobios.bioslis.config.HibernateUtil;
-import com.grupobios.bioslis.entity.CfgAntecedentestest;
-import com.grupobios.bioslis.entity.LdvIndicacionesexamenes;
-import com.grupobios.bioslis.entity.LdvIndicacionestm;
-import java.util.List;
-import org.hibernate.Query;
-import org.hibernate.Session;
-
-/**
- *
- * @author Nacho
- */
-public class LdvIncidentesTMDAO {
-
-    public void insertIndicacionesTM(LdvIndicacionestm cat) {
-        Session sesion = HibernateUtil.getSessionFactory().openSession();
-        sesion.beginTransaction();
-        sesion.saveOrUpdate(cat);
-        sesion.getTransaction().commit();
-        sesion.close();
-    }
-
-    public List<LdvIndicacionestm> getIndicacionesTM(String descripcion) {
-        Session sesion = HibernateUtil.getSessionFactory().openSession();
-        sesion.beginTransaction();
-        Query query = sesion.createQuery("select ca"
-                + " from com.grupobios.bioslis.entity.LdvIndicacionestm ca"
-                + " where ca.ldvitmDescripcionindicacion like '%"+descripcion.toUpperCase()+"%'");
-        List<LdvIndicacionestm> listaAntecedentes = query.list();
-        sesion.getTransaction().commit();
-        sesion.close();
-        return listaAntecedentes;
-    }
-        public short getLastId() {
-        Session sesion = HibernateUtil.getSessionFactory().openSession();
-        try {
-
-            sesion.beginTransaction();
-            Query query = sesion.createQuery("select med.ldvitmIdindicacionestm from com.grupobios.bioslis.entity.LdvIndicacionestm med "
-                    + "order by med.ldvitmIdindicacionestm desc").setMaxResults(1);
-            short indice;
-            try {
-                indice = ((short) query.list().get(0));
-            } catch (Exception e) {
-                indice = 1;
-            }
-            sesion.getTransaction().commit();
-            sesion.close();
-            return (short)(indice + 1);
-        } catch (Exception e) {
-            return 1;
-        }
-    }
-}
diff --git a/src/main/java/com/grupobios/bioslis/dao/LdvOperacionesMathDAO.java b/src/main/java/com/grupobios/bioslis/dao/LdvOperacionesMathDAO.java
index 2f2b23d6..349132d3 100644
--- a/src/main/java/com/grupobios/bioslis/dao/LdvOperacionesMathDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/LdvOperacionesMathDAO.java
@@ -42,4 +42,25 @@ public class LdvOperacionesMathDAO {
         }
     }
     
+    public LdvOperacionesmath getOperacionesMathById(byte idOperadorMath) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            String sql = "from LdvOperacionesmath"
+                    + " where ldvomIdoperadormath = :idOperadorMath";
+            Query query = sesion.createQuery(sql);
+            query.setParameter("idOperadorMath", idOperadorMath);
+            LdvOperacionesmath list = (LdvOperacionesmath) query.uniqueResult();
+            sesion.getTransaction().commit();
+            return list;
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
+    
 }
diff --git a/src/main/java/com/grupobios/bioslis/dao/LdvTiposCondicionDAO.java b/src/main/java/com/grupobios/bioslis/dao/LdvTiposCondicionDAO.java
index dfc3e68b..f3199a7a 100644
--- a/src/main/java/com/grupobios/bioslis/dao/LdvTiposCondicionDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/LdvTiposCondicionDAO.java
@@ -40,4 +40,25 @@ public class LdvTiposCondicionDAO {
             }
         }
     }
+    
+    public LdvTiposcondicion getTipoCondicionById(byte idtipocondicion) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            String sql = "from LdvTiposcondicion" 
+                    + " where ldvtcondIdtipocondicion = :idtipocondicion";
+            Query query = sesion.createQuery(sql);
+            query.setParameter("idtipocondicion", idtipocondicion);
+            LdvTiposcondicion list = (LdvTiposcondicion) query.uniqueResult();
+            sesion.getTransaction().commit();
+            return list;
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
 }
diff --git a/src/main/java/com/grupobios/bioslis/dao/MicrobiologiaDAO.java b/src/main/java/com/grupobios/bioslis/dao/MicrobiologiaDAO.java
index 12488826..4494e220 100755
--- a/src/main/java/com/grupobios/bioslis/dao/MicrobiologiaDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/MicrobiologiaDAO.java
@@ -1,13 +1,11 @@
 package com.grupobios.bioslis.dao;
 
 import java.util.List;
-
-import com.grupobios.bioslis.microbiologia.dto.MicrobiologiaOrdenPacienteDTO;
 import com.grupobios.bioslis.entity.Microbiologia;
 
 public interface MicrobiologiaDAO {
     List<Microbiologia> getAll();
     Microbiologia getByName(String name);
     void save(Microbiologia microbiologia);
-    void delete(Microbiologia microbiologia);   
- }
+    void delete(Microbiologia microbiologia);
+}
diff --git a/src/main/java/com/grupobios/bioslis/dao/MicrobiologiaOrdenDAO.java b/src/main/java/com/grupobios/bioslis/dao/MicrobiologiaOrdenDAO.java
deleted file mode 100644
index 4b2ecaf9..00000000
--- a/src/main/java/com/grupobios/bioslis/dao/MicrobiologiaOrdenDAO.java
+++ /dev/null
@@ -1,94 +0,0 @@
-package com.grupobios.bioslis.dao;
-
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.List;
-
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-import org.hibernate.HibernateException;
-import org.hibernate.Query;
-import org.hibernate.Session;
-import org.hibernate.transform.Transformers;
-import com.grupobios.bioslis.config.HibernateUtil;
-import com.grupobios.bioslis.microbiologia.dto.MicrobiologiaOrdenPacienteDTO;
-
-//se crea  pero por el momento no se esta utilizando  **creada 08-11 por cristian
-
-
-public class MicrobiologiaOrdenDAO {
-
-    private static Logger logger = LogManager.getLogger(MicrobiologiaOrdenDAO.class);
-    
-   private static final String sqlGetMicrobiologiaOrden = "select df.df_norden, df.df_fechaorden, dp.dp_nombres , dp.dp_primerapellido, dp.dp_segundoapellido, dp.dp_fnacimiento, ldvs.ldvs_descripcion ,"
-           + "cta.cta_descripcion, cs.cs_descripcion, (select  ce.ce_escultivo from cfg_examenes ce "
-           + "inner join datos_fichasexamenes dfesel "
-           + "on ce.ce_idexamen = dfesel.dfe_idexamen "
-           + "where dfesel.dfe_norden = df.df_norden "
-           + "order by ce.ce_escultivo DESC "
-           + "FETCH FIRST 1 ROWS Only) as ce_escultivo "
-           + "from datos_fichas df "
-           + "inner join datos_pacientes dp "
-           + "on dp.dp_idpaciente = df.df_idpaciente "
-           + "inner join ldv_sexo ldvs "
-           + "on ldvs.ldvs_idsexo = dp.dp_idsexo "
-           + "inner join cfg_tipoatencion cta "
-           + "on cta.cta_idtipoatencion = df.df_idtipoatencion "
-           + "inner join cfg_servicios cs "
-           + "on cs.cs_idservicio = df.df_idservicio "
-           + "where  ";
-           //df.df_norden >= :startId and df.df_norden  <= :endId "
-          // " and  df.df_fechaorden >=:startDate  and df.df_fechaorden <=:endDate "
-          // + "order by df.df_norden Desc";
-    
-   
-
-
-
-    public List<MicrobiologiaOrdenPacienteDTO> getListOrder(Long  startId, Long endId, Date startDate, Date endDate, Long atentionType,
-            Long exam, Long section, String names, String surname, Long documentType, Long documentId, Long serviceId) throws BiosLISDAOException{
-        
-        String sql= sqlGetMicrobiologiaOrden;
-        Session sesion = HibernateUtil.getSessionFactory().openSession();
-        List<MicrobiologiaOrdenPacienteDTO> mopDTO = new ArrayList<MicrobiologiaOrdenPacienteDTO>();
-       
-       
-     
-        
-        try {
-          
-   
-          
-          Query query = sesion.createSQLQuery(sql)
-                  .setResultTransformer(Transformers.aliasToBean(MicrobiologiaOrdenPacienteDTO.class));
-              query.setParameter("startId", startId);
-              if(endId != null) {
-                  query.setParameter("endId", endId);     
-              }
-              if(startDate !=null) {
-                 query.setDate("startDate", startDate);
-                            }
-              if(endDate !=null) {
-                  query.setDate("endDate", endDate);
-              }   
-          
-              
-         // query.setParameter("endId", endId);
-         //query.setDate("startDate", startDate);
-        //query.setDate("endDate",endDate);
-          mopDTO = query.list();
-         System.out.println(mopDTO.size() );
-         
-        } catch (HibernateException he) {
-          logger.error("No se pudo obtener datos microbiologiaOrden", he.getMessage());
-          he.printStackTrace();
-          throw new BiosLISDAOException(he.getLocalizedMessage());
-        } finally {
-          if (sesion.isOpen()) {
-            sesion.close();
-          }
-        }
-        
-        return mopDTO;
-    }
-}
diff --git a/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosAlarmasDAO.java b/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosAlarmasDAO.java
new file mode 100644
index 00000000..5020af1c
--- /dev/null
+++ b/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosAlarmasDAO.java
@@ -0,0 +1,101 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package com.grupobios.bioslis.dao;
+
+import com.grupobios.bioslis.config.HibernateUtil;
+import com.grupobios.bioslis.entity.SigmaProcesosalarmas;
+import java.util.List;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.hibernate.HibernateException;
+import org.hibernate.Query;
+import org.hibernate.Session;
+
+/**
+ *
+ * @author Marco Caracciolo
+ */
+public class SigmaProcesosAlarmasDAO {
+    
+    private static Logger logger = LogManager.getLogger(SigmaProcesosAlarmasDAO.class);
+    
+    public List<SigmaProcesosalarmas> getAlarmasByProceso(String codigoProceso) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            String sql = "from SigmaProcesosalarmas spa"
+                    + " where spa.sigmaProcesos.spCodigoproceso = :codigoProceso";
+            Query query = sesion.createQuery(sql);
+            query.setParameter("codigoProceso", codigoProceso);
+            List<SigmaProcesosalarmas> list = query.list();
+            sesion.getTransaction().commit();
+            return list;
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
+    
+    public SigmaProcesosalarmas getAlarmasById(short idAlarma) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            String sql = "from SigmaProcesosalarmas spa"
+                    + " where spa.spaIdprocesoalarma = :idAlarma";
+            Query query = sesion.createQuery(sql);
+            query.setParameter("idAlarma", idAlarma);
+            SigmaProcesosalarmas alarma = (SigmaProcesosalarmas) query.uniqueResult();
+            sesion.getTransaction().commit();
+            return alarma;
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
+    
+    public void insertAlarma(SigmaProcesosalarmas spa) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            sesion.save(spa);
+            sesion.getTransaction().commit();
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+
+    }
+    
+    public void updateAlarma(SigmaProcesosalarmas spa) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            sesion.update(spa);
+            sesion.getTransaction().commit();
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+
+    }
+    
+}
diff --git a/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosDAO.java b/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosDAO.java
index ba83824e..2397d50e 100644
--- a/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosDAO.java
@@ -131,4 +131,22 @@ public class SigmaProcesosDAO {
         }
     }
     
+    public List<SigmaProcesos> getProcesoByCodigo(String codigoProceso) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            Query query = sesion.createQuery("from SigmaProcesos"
+                    + " where spCodigoproceso = :codigoProceso");
+            query.setParameter("codigoProceso", codigoProceso);
+            List<SigmaProcesos> list = query.list();
+            return list;
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
+    
 }
diff --git a/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosTestConversionDAO.java b/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosTestConversionDAO.java
new file mode 100644
index 00000000..29a546b2
--- /dev/null
+++ b/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosTestConversionDAO.java
@@ -0,0 +1,105 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package com.grupobios.bioslis.dao;
+
+import com.grupobios.bioslis.config.HibernateUtil;
+import com.grupobios.bioslis.entity.SigmaProcesotestconversion;
+import java.util.List;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.hibernate.HibernateException;
+import org.hibernate.Query;
+import org.hibernate.Session;
+
+/**
+ *
+ * @author Marco Caracciolo
+ */
+public class SigmaProcesosTestConversionDAO {
+    
+    private static Logger logger = LogManager.getLogger(SigmaProcesosTestConversionDAO.class);
+    
+    public void insertProceso(SigmaProcesotestconversion sptc) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            sesion.save(sptc);
+            sesion.getTransaction().commit();
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+
+    }
+    
+    public void updateProceso(SigmaProcesotestconversion sptc) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            sesion.update(sptc);
+            sesion.getTransaction().commit();
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+
+    }
+    
+    public List<SigmaProcesotestconversion> getConversionesFromProcesoTest(short idProceso, long idTest) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            Query query = sesion.createQuery("from SigmaProcesotestconversion sptc"
+                    + " where sptc.id.sptcIdproceso = :idProceso"
+                    + " and sptc.id.sptcIdtest = :idTest"
+                    + " order by sptc.id.sptcNumerocondicion");
+            query.setParameter("idProceso", idProceso);
+            query.setParameter("idTest", idTest);
+            sesion.getTransaction().commit();
+            List<SigmaProcesotestconversion> list = query.list();
+            return list;
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
+    
+    public boolean existeConversionProcesoTest(short idProceso, long idTest, byte numeroCondicion) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            Query query = sesion.createQuery("from SigmaProcesotestconversion sptc"
+                    + " where sptc.id.sptcIdproceso = :idProceso"
+                    + " and sptc.id.sptcIdtest = :idTest"
+                    + " and sptc.id.sptcNumerocondicion = :numeroCondicion");
+            query.setParameter("idProceso", idProceso);
+            query.setParameter("idTest", idTest);
+            query.setParameter("numeroCondicion", numeroCondicion);
+            sesion.getTransaction().commit();
+            List<SigmaProcesotestconversion> list = query.list();
+            return !list.isEmpty();
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
+}
diff --git a/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosTestDAO.java b/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosTestDAO.java
index 2b130d74..2537f3b4 100644
--- a/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosTestDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/SigmaProcesosTestDAO.java
@@ -6,7 +6,6 @@
 package com.grupobios.bioslis.dao;
 
 import com.grupobios.bioslis.config.HibernateUtil;
-import com.grupobios.bioslis.dto.ProcesosTestsDTO;
 import com.grupobios.bioslis.entity.SigmaProcesostest;
 import java.util.List;
 import org.apache.logging.log4j.LogManager;
@@ -76,17 +75,19 @@ public class SigmaProcesosTestDAO {
         }
     }
     
-    public List<ProcesosTestsDTO> getProcesosTestDTOById(short idProceso) throws BiosLISDAOException{
+    public boolean existeProcesoTest(short idProceso, long idTest) throws BiosLISDAOException{
         Session sesion = HibernateUtil.getSessionFactory().openSession();
         try {
             sesion.beginTransaction();
             String sql = "from SigmaProcesostest spt"
-                    + " where spt.id.sptIdproceso = :idProceso";
+                    + " where spt.id.sptIdproceso = :idProceso"
+                    + " and spt.id.sptIdtest = :idTest";
             Query query = sesion.createQuery(sql);
             query.setParameter("idProceso", idProceso);
-            List<ProcesosTestsDTO> list = query.list();
+            query.setParameter("idTest", idTest);
+            List<SigmaProcesostest> list = query.list();
             sesion.getTransaction().commit();
-            return list;
+            return !list.isEmpty();
         } catch (HibernateException he) {
             logger.error(he.getMessage());
             throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
diff --git a/src/main/java/com/grupobios/bioslis/dao/SigmaTiposMuestrasDAO.java b/src/main/java/com/grupobios/bioslis/dao/SigmaTiposMuestrasDAO.java
index 8149d3c4..1b4399e0 100644
--- a/src/main/java/com/grupobios/bioslis/dao/SigmaTiposMuestrasDAO.java
+++ b/src/main/java/com/grupobios/bioslis/dao/SigmaTiposMuestrasDAO.java
@@ -42,4 +42,25 @@ public class SigmaTiposMuestrasDAO {
         }
     }
     
+    public SigmaTiposmuestras getSigmaTiposMuestrasById(byte idTipoMuestra) throws BiosLISDAOException{
+        Session sesion = HibernateUtil.getSessionFactory().openSession();
+        try {
+            sesion.beginTransaction();
+            String sql = "from SigmaTiposmuestras"
+                    + " where stmIdsigmatipomuestra = :idTipoMuestra";
+            Query query = sesion.createQuery(sql);
+            query.setParameter("idTipoMuestra", idTipoMuestra);
+            SigmaTiposmuestras stm = (SigmaTiposmuestras) query.uniqueResult();
+            sesion.getTransaction().commit();
+            return stm;
+        } catch (HibernateException he) {
+            logger.error(he.getMessage());
+            throw new BiosLISDAOException("".concat(he.getLocalizedMessage()));
+        } finally {
+            if (sesion.isOpen()) {
+                sesion.close();
+            }
+        }
+    }
+    
 }
diff --git a/src/main/java/com/grupobios/bioslis/dao/memory/MicrobiologiaDAOMemory.java b/src/main/java/com/grupobios/bioslis/dao/memory/MicrobiologiaDAOMemory.java
index 177c1c07..cf38c647 100755
--- a/src/main/java/com/grupobios/bioslis/dao/memory/MicrobiologiaDAOMemory.java
+++ b/src/main/java/com/grupobios/bioslis/dao/memory/MicrobiologiaDAOMemory.java
@@ -4,7 +4,6 @@ import java.util.ArrayList;
 import java.util.List;
 
 import com.grupobios.bioslis.microbiologia.dao.MicrobiologiaDAO;
-import com.grupobios.bioslis.microbiologia.dto.MicrobiologiaOrdenPacienteDTO;
 import com.grupobios.bioslis.entity.Microbiologia;
 
 import org.apache.commons.lang3.SerializationUtils;
@@ -54,6 +53,5 @@ public class MicrobiologiaDAOMemory implements MicrobiologiaDAO{
             mList.remove(mToDelete);
         }
     }
-
-   
+    
 }
diff --git a/src/main/java/com/grupobios/bioslis/dao/rdbms/MicrobiologiaDAORDBMS.java b/src/main/java/com/grupobios/bioslis/dao/rdbms/MicrobiologiaDAORDBMS.java
index b6c33bcd..4a3be84e 100755
--- a/src/main/java/com/grupobios/bioslis/dao/rdbms/MicrobiologiaDAORDBMS.java
+++ b/src/main/java/com/grupobios/bioslis/dao/rdbms/MicrobiologiaDAORDBMS.java
@@ -3,7 +3,6 @@ package com.grupobios.bioslis.dao.rdbms;
 import java.util.List;
 
 import com.grupobios.bioslis.microbiologia.dao.MicrobiologiaDAO;
-import com.grupobios.bioslis.microbiologia.dto.MicrobiologiaOrdenPacienteDTO;
 import com.grupobios.bioslis.entity.Microbiologia;
 import com.grupobios.bioslis.config.HibernateUtil;
 
@@ -77,6 +76,5 @@ public class MicrobiologiaDAORDBMS implements MicrobiologiaDAO{
         }
 
     }
-
-  
+    
 }
diff --git a/src/main/java/com/grupobios/bioslis/dao/rdbms/microbiologia/MBOrderDAORDBMS.java b/src/main/java/com/grupobios/bioslis/dao/rdbms/microbiologia/MBOrderDAORDBMS.java
index 11bd78f6..5eccceb3 100755
--- a/src/main/java/com/grupobios/bioslis/dao/rdbms/microbiologia/MBOrderDAORDBMS.java
+++ b/src/main/java/com/grupobios/bioslis/dao/rdbms/microbiologia/MBOrderDAORDBMS.java
@@ -70,11 +70,11 @@ public class MBOrderDAORDBMS implements MBOrderDAO {
       + "INNER JOIN BIOSLIS.CFG_LOCALIZACIONES "
       + "ON BIOSLIS.DATOS_FICHAS.DF_IDLOCALIZACION = BIOSLIS.CFG_LOCALIZACIONES.CL_IDLOCALIZACION "
       + "INNER JOIN BIOSLIS.CFG_SERVICIOS "
-      + "ON BIOSLIS.DATOS_FICHAS.DF_IDSERVICIO = BIOSLIS.CFG_SERVICIOS.CS_IDSERVICIO "
+      + "ON BIOSLIS.CFG_LOCALIZACIONES.CL_IDSERVICIO = BIOSLIS.CFG_SERVICIOS.CS_IDSERVICIO "
       + "INNER JOIN BIOSLIS.CFG_CENTROSDESALUD "
       + "ON BIOSLIS.CFG_LOCALIZACIONES.CL_IDCENTRODESALUD = BIOSLIS.CFG_CENTROSDESALUD.CCDS_IDCENTRODESALUD "
       + "INNER JOIN BIOSLIS.CFG_PROCEDENCIAS "
-      + "ON BIOSLIS.CFG_PROCEDENCIAS.CP_IDPROCEDENCIA = BIOSLIS.DATOS_FICHAS.DF_IDPROCEDENCIA "  
+      + "ON BIOSLIS.CFG_PROCEDENCIAS.CP_IDPROCEDENCIA = BIOSLIS.DATOS_FICHAS.DF_IDPROCEDENCIA "
 
       + "WHERE BIOSLIS.DATOS_FICHAS.DF_NORDEN = :orderId";
 
@@ -147,7 +147,7 @@ public class MBOrderDAORDBMS implements MBOrderDAO {
             (String) orderData.get("service"), (String) orderData.get("contract"),
             (String) orderData.get("observation"), (String) orderData.get("diagnostic"), getPatientForOrder(orderId),
             getEventsForOrder(orderId), getExamForOrder(orderId), getPhysicianForOrder(orderId),
-            (String) orderData.get("origin"), (String) orderData.get("procedencia") );   //agregado por cristian 09-11
+            (String) orderData.get("origin"));
       } else {
         result = null;
       }
@@ -311,9 +311,7 @@ public class MBOrderDAORDBMS implements MBOrderDAO {
       result.put("observation", orderData[6] == null ? "" : orderData[6].toString());
       result.put("diagnostic", orderData[7] == null ? "" : orderData[7].toString());
       result.put("service", orderData[8] == null ? "" : orderData[8].toString());
-      result.put("procedencia", orderData[9] == null ? "" : orderData[10].toString());
-      result.put("proced", orderData[8] == null ? "" : orderData[8].toString());
-      } catch (ParseException e) {
+    } catch (ParseException e) {
       e.printStackTrace();
     }
     return result;
diff --git a/src/main/java/com/grupobios/bioslis/dto/CfgExamenesDTO.java b/src/main/java/com/grupobios/bioslis/dto/CfgExamenesDTO.java
index ccafb714..94b30a9f 100644
--- a/src/main/java/com/grupobios/bioslis/dto/CfgExamenesDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/CfgExamenesDTO.java
@@ -111,7 +111,6 @@ public class CfgExamenesDTO implements java.io.Serializable {
   private String ceCompartemuestra;
   private CfgCentrosdesalud cfgCentrosdesalud;
 
-
   public CfgExamenesDTO() {
   }
 
@@ -718,7 +717,7 @@ public class CfgExamenesDTO implements java.io.Serializable {
       String ceNombreweb, String ceDisponibleweb, String ceDiagnosticoobligatorio, String ceHojatrabajo,
       String ceEscurvatolerancia, String cePlanillahistorica, Integer ceDiasdevalidez, Short ceDiasvalidezhospitalizado,
       String ceDiasvalidezambulatorioblq, String ceDiasvalidezhospitalizadoblq, String ceEsexamenmultiseccion,
-      String ceAutovalidar, String ceCompartemuestra , String dfeExamenanulado) {
+      String ceAutovalidar, String ceCompartemuestra) {
     super();
     this.ceIdexamen = ceIdexamen;
     this.cfgGruposmuestras = cfgGruposmuestras;
@@ -792,7 +791,7 @@ public class CfgExamenesDTO implements java.io.Serializable {
     this.ceDiasvalidezhospitalizadoblq = ceDiasvalidezhospitalizadoblq;
     this.ceEsexamenmultiseccion = ceEsexamenmultiseccion;
     this.ceAutovalidar = ceAutovalidar;
-    this.ceCompartemuestra = ceCompartemuestra;  
+    this.ceCompartemuestra = ceCompartemuestra;
   }
 
   public CfgExamenesDTO(CfgExamenes original) {
@@ -869,7 +868,6 @@ public class CfgExamenesDTO implements java.io.Serializable {
     this.ceEsexamenmultiseccion = original.getCeEsexamenmultiseccion();
     this.ceAutovalidar = original.getCeAutovalidar();
     this.ceCompartemuestra = original.getCeCompartemuestra();
-   
   }
 
   public CfgCentrosdesalud getCfgCentrosdesalud() {
@@ -881,6 +879,4 @@ public class CfgExamenesDTO implements java.io.Serializable {
 
   }
 
-
-
 }
diff --git a/src/main/java/com/grupobios/bioslis/dto/DatosEditarOrdenDTO.java b/src/main/java/com/grupobios/bioslis/dto/DatosEditarOrdenDTO.java
index 9687992f..5566270b 100644
--- a/src/main/java/com/grupobios/bioslis/dto/DatosEditarOrdenDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/DatosEditarOrdenDTO.java
@@ -37,11 +37,6 @@ public class DatosEditarOrdenDTO {
     private List<PacientePatologiaEditarOrdenDTO> patologias;
     private List<ExamenEditarOrdenDTO> examenes;
     
-    //agregado por cristian 21-11
-    private String MUESTRATOMADA;
-
-    //agregado por cristian 21-11
-    private List<TestEdicionOrdenDTO> tests;
     
     public DatosEditarOrdenDTO() {   
         this.patologias = new ArrayList<PacientePatologiaEditarOrdenDTO>();
@@ -245,9 +240,6 @@ public class DatosEditarOrdenDTO {
     }
 
 
-    
-    
-    
 
     public String getENVIARRESULTADOSEMAIL() {
         return ENVIARRESULTADOSEMAIL;
@@ -286,22 +278,6 @@ public class DatosEditarOrdenDTO {
     
     
     
-
-    public String getMUESTRATOMADA() {
-        return this.MUESTRATOMADA;
-    }
-
-    public void setMUESTRATOMADA(String MUESTRATOMADA) {
-        this.MUESTRATOMADA = MUESTRATOMADA;
-    }
-
-    public List<TestEdicionOrdenDTO> getTests() {
-        return this.tests;
-    }
-
-    public void setTests(List<TestEdicionOrdenDTO> tests) {
-        this.tests = tests;
-    }
     
     
     
diff --git a/src/main/java/com/grupobios/bioslis/dto/DatosFichasDTO.java b/src/main/java/com/grupobios/bioslis/dto/DatosFichasDTO.java
index 96096713..3b3c9d7a 100755
--- a/src/main/java/com/grupobios/bioslis/dto/DatosFichasDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/DatosFichasDTO.java
@@ -1,7 +1,6 @@
 package com.grupobios.bioslis.dto;
 
 import java.util.Date;
-import java.util.List;
 
 import com.grupobios.bioslis.entity.DatosFichas;
 
@@ -30,8 +29,6 @@ public class DatosFichasDTO implements java.io.Serializable {
   private String camas;
   private Integer[] lstExamenes;
   private CfgExamenesDTO[] lstExamenesDto;
-  //agregado por cristian 22-11 *****
-  private List<TestEdicionOrdenDTO> tests;
 
   public DatosFichasDTO() {
   }
@@ -259,14 +256,4 @@ public String getDfCodigolocalizacion() {
     this.lstExamenesDto = lstExamenesDto;
   }
 
-
-  public List<TestEdicionOrdenDTO> getTests() {
-    return this.tests;
-  }
-
-  public void setTests(List<TestEdicionOrdenDTO> tests) {
-    this.tests = tests;
-  }
-
-
 }
diff --git a/src/main/java/com/grupobios/bioslis/dto/EtiquetaCodigoBarraDTO.java b/src/main/java/com/grupobios/bioslis/dto/EtiquetaCodigoBarraDTO.java
deleted file mode 100644
index 10415ac2..00000000
--- a/src/main/java/com/grupobios/bioslis/dto/EtiquetaCodigoBarraDTO.java
+++ /dev/null
@@ -1,1683 +0,0 @@
-package com.grupobios.bioslis.dto;
-
-import java.math.BigDecimal;
-import java.util.Date;
-
-public class EtiquetaCodigoBarraDTO {
-    
-    private String CECB_CODIGO;
-    private String CECB_DESCRIPCION;
-    private String CECB_FONTCODIGOBARRA;
-    private BigDecimal CECB_TAMANOFONTCODIGOBARRAS;
-    private BigDecimal CECB_FILACODIGOBARRAS;    
-    private BigDecimal CECB_COLUMNACODIGOBARRAS;
-    private String CECB_ACTIVOCODIGOBARRAS;
-    private BigDecimal CECB_TEXTO0FILA;
-    private BigDecimal CECB_TEXTO0COLUMNA;
-    private String CECB_ACTIVOTEXTO0;
-    private String CECB_NEGRITA0;
-    private String CECB_TAMANO0;
-    private BigDecimal CECB_TEXTO1FILA;
-    private BigDecimal CECB_TEXTO1COLUMNA;
-    private BigDecimal CECB_TEXTO1LARGO;
-    private BigDecimal CECB_TEXTO1TAMANO;
-    private String CECB_ACTIVOTEXTO1;
-    private String CECB_NEGRITA1;
-    private BigDecimal CECB_TEXTO2FILA;
-    private BigDecimal CECB_TEXTO2COLUMNA;
-    private BigDecimal CECB_TEXTO2LARGO;
-    private BigDecimal CECB_TEXTO2TAMANO;
-    private String CECB_ACTIVOTEXTO2;
-    private String CECB_NEGRITA2;
-    private BigDecimal CECB_TEXTO3FILA;
-    private BigDecimal CECB_TEXTO3COLUMNA;
-    private BigDecimal CECB_TEXTO3LARGO;
-    private BigDecimal CECB_TEXTO3TAMANO;
-    private String CECB_ACTIVOTEXTO3;
-    private String CECB_NEGRITA3;
-    private BigDecimal CECB_TEXTO4FILA;
-    private BigDecimal CECB_TEXTO4COLUMNA;
-    private BigDecimal CECB_TEXTO4LARGO;
-    private BigDecimal CECB_TEXTO4TAMANO;
-    private String CECB_ACTIVOTEXTO4;
-    private String CECB_NEGRITA4;
-    private BigDecimal CECB_TEXTO5FILA;
-    private BigDecimal CECB_TEXTO5COLUMNA;
-    private BigDecimal CECB_TEXTO5LARGO;
-    private BigDecimal CECB_TEXTO5TAMANO;
-    private String CECB_ACTIVOTEXTO5;
-    private String CECB_NEGRITA5;
-    private BigDecimal CECB_TEXTO6FILA;
-    private BigDecimal CECB_TEXTO6COLUMNA;
-    private BigDecimal CECB_TEXTO6LARGO;
-    private BigDecimal CECB_TEXTO6TAMANO;
-    private String CECB_ACTIVOTEXTO6;
-    private String CECB_NEGRITA6;
-    private BigDecimal CECB_TEXTO7FILA;
-    private BigDecimal CECB_TEXTO7COLUMNA;
-    private BigDecimal CECB_TEXTO7LARGO;
-    private BigDecimal CECB_TEXTO7TAMANO;
-    private String CECB_ACTIVOTEXTO7;
-    private String CECB_NEGRITA7;
-    private BigDecimal CECB_TEXTO8FILA;
-    private BigDecimal CECB_TEXTO8COLUMNA;
-    private BigDecimal CECB_TEXTO8LARGO;
-    private BigDecimal CECB_TEXTO8TAMANO;
-    private String CECB_ACTIVOTEXTO8;
-    private String CECB_NEGRITA8;
-    private BigDecimal CECB_TEXTO9FILA;
-    private BigDecimal CECB_TEXTO9COLUMNA;
-    private BigDecimal CECB_TEXTO9LARGO;
-    private BigDecimal CECB_TEXTO9TAMANO;
-    private String CECB_ACTIVOTEXTO9;
-    private String CECB_NEGRITA9;
-    private BigDecimal CECB_TEXTO10FILA;
-    private BigDecimal CECB_TEXTO10COLUMNA;
-    private BigDecimal CECB_TEXTO10LARGO;
-    private BigDecimal CECB_TEXTO10TAMANO;
-    private String CECB_ACTIVOTEXTO10;
-    private String CECB_NEGRITA10;
-    private BigDecimal CECB_TEXTO11FILA;
-    private BigDecimal CECB_TEXTO11COLUMNA;
-    private BigDecimal CECB_TEXTO11LARGO;
-    private BigDecimal CECB_TEXTO11TAMANO;
-    private String CECB_ACTIVOTEXTO11;
-    private String CECB_NEGRITA11;
-    private BigDecimal CECB_TEXTO12FILA;
-    private BigDecimal CECB_TEXTO12COLUMNA;
-    private BigDecimal CECB_TEXTO12LARGO;
-    private BigDecimal CECB_TEXTO12TAMANO;
-    private String CECB_ACTIVOTEXTO12;
-    private String CECB_NEGRITA12;
-    private BigDecimal CECB_SORT;
-    private String CECB_NOTA;
-    private String CECB_USUARIOREGISTRO;
-    private Date CECB_FECHAREGISTRO;
-    private String CECB_PROCEDENCIA;
-    private String CECB_SERVICIO;
-    private String CECB_TIPOPACPREFIJO;
-    private String CECB_TIPOPACSUFIJO;
-    private String CECB_PROCEPREFIJO;
-    private String CECB_PROCESUFIJO;
-    private String CECB_SERVPREFIJO;
-    private String CECB_SERVSUFIJO;
-    private String CECB_NOMBPREFIJO;
-    private String CECB_NOMBSUFIJO;
-    private String CECB_SEXOPREFIJO;
-    private String CECB_SEXOSUFIJO;
-    private String CECB_EDADPREFIJO;
-    private String CECB_EDADSUFIJO;
-    private String CECB_TIPMUEPREFIJO;
-    private String CECB_TIPMUESUFIJO;
-    private String CECB_ENVAPREFIJO;
-    private String CECB_ENVASUFIJO;
-    private String CECB_FECHAPREFIJO;
-    private String CECB_FECHASUFIJO;
-    private String CECB_PARAMETRIZADA;
-    private String CECB_RUTPREFIJO;
-    private String CECB_RUTSUFIJO;
-    
-    
-    
-    
-    public EtiquetaCodigoBarraDTO() {
-    }
-
-
-
-
-    public String getCECB_CODIGO() {
-        return CECB_CODIGO;
-    }
-
-
-
-
-    public void setCECB_CODIGO(String cECB_CODIGO) {
-        CECB_CODIGO = cECB_CODIGO;
-    }
-
-
-
-
-    public String getCECB_DESCRIPCION() {
-        return CECB_DESCRIPCION;
-    }
-
-
-
-
-    public void setCECB_DESCRIPCION(String cECB_DESCRIPCION) {
-        CECB_DESCRIPCION = cECB_DESCRIPCION;
-    }
-
-
-
-
-    public String getCECB_FONTCODIGOBARRA() {
-        return CECB_FONTCODIGOBARRA;
-    }
-
-
-
-
-    public void setCECB_FONTCODIGOBARRA(String cECB_FONTCODIGOBARRA) {
-        CECB_FONTCODIGOBARRA = cECB_FONTCODIGOBARRA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TAMANOFONTCODIGOBARRAS() {
-        return CECB_TAMANOFONTCODIGOBARRAS;
-    }
-
-
-
-
-    public void setCECB_TAMANOFONTCODIGOBARRAS(BigDecimal cECB_TAMANOFONTCODIGOBARRAS) {
-        CECB_TAMANOFONTCODIGOBARRAS = cECB_TAMANOFONTCODIGOBARRAS;
-    }
-
-
-
-
-    public BigDecimal getCECB_FILACODIGOBARRAS() {
-        return CECB_FILACODIGOBARRAS;
-    }
-
-
-
-
-    public void setCECB_FILACODIGOBARRAS(BigDecimal cECB_FILACODIGOBARRAS) {
-        CECB_FILACODIGOBARRAS = cECB_FILACODIGOBARRAS;
-    }
-
-
-
-
-    public BigDecimal getCECB_COLUMNACODIGOBARRAS() {
-        return CECB_COLUMNACODIGOBARRAS;
-    }
-
-
-
-
-    public void setCECB_COLUMNACODIGOBARRAS(BigDecimal cECB_COLUMNACODIGOBARRAS) {
-        CECB_COLUMNACODIGOBARRAS = cECB_COLUMNACODIGOBARRAS;
-    }
-
-
-
-
-    public String getCECB_ACTIVOCODIGOBARRAS() {
-        return CECB_ACTIVOCODIGOBARRAS;
-    }
-
-
-
-
-    public void setCECB_ACTIVOCODIGOBARRAS(String cECB_ACTIVOCODIGOBARRAS) {
-        CECB_ACTIVOCODIGOBARRAS = cECB_ACTIVOCODIGOBARRAS;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO0FILA() {
-        return CECB_TEXTO0FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO0FILA(BigDecimal cECB_TEXTO0FILA) {
-        CECB_TEXTO0FILA = cECB_TEXTO0FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO0COLUMNA() {
-        return CECB_TEXTO0COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO0COLUMNA(BigDecimal cECB_TEXTO0COLUMNA) {
-        CECB_TEXTO0COLUMNA = cECB_TEXTO0COLUMNA;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO0() {
-        return CECB_ACTIVOTEXTO0;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO0(String cECB_ACTIVOTEXTO0) {
-        CECB_ACTIVOTEXTO0 = cECB_ACTIVOTEXTO0;
-    }
-
-
-
-
-    public String getCECB_NEGRITA0() {
-        return CECB_NEGRITA0;
-    }
-
-
-
-
-    public void setCECB_NEGRITA0(String cECB_NEGRITA0) {
-        CECB_NEGRITA0 = cECB_NEGRITA0;
-    }
-
-
-
-
-    public String getCECB_TAMANO0() {
-        return CECB_TAMANO0;
-    }
-
-
-
-
-    public void setCECB_TAMANO0(String cECB_TAMANO0) {
-        CECB_TAMANO0 = cECB_TAMANO0;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO1FILA() {
-        return CECB_TEXTO1FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO1FILA(BigDecimal cECB_TEXTO1FILA) {
-        CECB_TEXTO1FILA = cECB_TEXTO1FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO1COLUMNA() {
-        return CECB_TEXTO1COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO1COLUMNA(BigDecimal cECB_TEXTO1COLUMNA) {
-        CECB_TEXTO1COLUMNA = cECB_TEXTO1COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO1LARGO() {
-        return CECB_TEXTO1LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO1LARGO(BigDecimal cECB_TEXTO1LARGO) {
-        CECB_TEXTO1LARGO = cECB_TEXTO1LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO1TAMANO() {
-        return CECB_TEXTO1TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO1TAMANO(BigDecimal cECB_TEXTO1TAMANO) {
-        CECB_TEXTO1TAMANO = cECB_TEXTO1TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO1() {
-        return CECB_ACTIVOTEXTO1;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO1(String cECB_ACTIVOTEXTO1) {
-        CECB_ACTIVOTEXTO1 = cECB_ACTIVOTEXTO1;
-    }
-
-
-
-
-    public String getCECB_NEGRITA1() {
-        return CECB_NEGRITA1;
-    }
-
-
-
-
-    public void setCECB_NEGRITA1(String cECB_NEGRITA1) {
-        CECB_NEGRITA1 = cECB_NEGRITA1;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO2FILA() {
-        return CECB_TEXTO2FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO2FILA(BigDecimal cECB_TEXTO2FILA) {
-        CECB_TEXTO2FILA = cECB_TEXTO2FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO2COLUMNA() {
-        return CECB_TEXTO2COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO2COLUMNA(BigDecimal cECB_TEXTO2COLUMNA) {
-        CECB_TEXTO2COLUMNA = cECB_TEXTO2COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO2LARGO() {
-        return CECB_TEXTO2LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO2LARGO(BigDecimal cECB_TEXTO2LARGO) {
-        CECB_TEXTO2LARGO = cECB_TEXTO2LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO2TAMANO() {
-        return CECB_TEXTO2TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO2TAMANO(BigDecimal cECB_TEXTO2TAMANO) {
-        CECB_TEXTO2TAMANO = cECB_TEXTO2TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO2() {
-        return CECB_ACTIVOTEXTO2;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO2(String cECB_ACTIVOTEXTO2) {
-        CECB_ACTIVOTEXTO2 = cECB_ACTIVOTEXTO2;
-    }
-
-
-
-
-    public String getCECB_NEGRITA2() {
-        return CECB_NEGRITA2;
-    }
-
-
-
-
-    public void setCECB_NEGRITA2(String cECB_NEGRITA2) {
-        CECB_NEGRITA2 = cECB_NEGRITA2;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO3FILA() {
-        return CECB_TEXTO3FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO3FILA(BigDecimal cECB_TEXTO3FILA) {
-        CECB_TEXTO3FILA = cECB_TEXTO3FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO3COLUMNA() {
-        return CECB_TEXTO3COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO3COLUMNA(BigDecimal cECB_TEXTO3COLUMNA) {
-        CECB_TEXTO3COLUMNA = cECB_TEXTO3COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO3LARGO() {
-        return CECB_TEXTO3LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO3LARGO(BigDecimal cECB_TEXTO3LARGO) {
-        CECB_TEXTO3LARGO = cECB_TEXTO3LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO3TAMANO() {
-        return CECB_TEXTO3TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO3TAMANO(BigDecimal cECB_TEXTO3TAMANO) {
-        CECB_TEXTO3TAMANO = cECB_TEXTO3TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO3() {
-        return CECB_ACTIVOTEXTO3;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO3(String cECB_ACTIVOTEXTO3) {
-        CECB_ACTIVOTEXTO3 = cECB_ACTIVOTEXTO3;
-    }
-
-
-
-
-    public String getCECB_NEGRITA3() {
-        return CECB_NEGRITA3;
-    }
-
-
-
-
-    public void setCECB_NEGRITA3(String cECB_NEGRITA3) {
-        CECB_NEGRITA3 = cECB_NEGRITA3;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO4FILA() {
-        return CECB_TEXTO4FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO4FILA(BigDecimal cECB_TEXTO4FILA) {
-        CECB_TEXTO4FILA = cECB_TEXTO4FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO4COLUMNA() {
-        return CECB_TEXTO4COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO4COLUMNA(BigDecimal cECB_TEXTO4COLUMNA) {
-        CECB_TEXTO4COLUMNA = cECB_TEXTO4COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO4LARGO() {
-        return CECB_TEXTO4LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO4LARGO(BigDecimal cECB_TEXTO4LARGO) {
-        CECB_TEXTO4LARGO = cECB_TEXTO4LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO4TAMANO() {
-        return CECB_TEXTO4TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO4TAMANO(BigDecimal cECB_TEXTO4TAMANO) {
-        CECB_TEXTO4TAMANO = cECB_TEXTO4TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO4() {
-        return CECB_ACTIVOTEXTO4;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO4(String cECB_ACTIVOTEXTO4) {
-        CECB_ACTIVOTEXTO4 = cECB_ACTIVOTEXTO4;
-    }
-
-
-
-
-    public String getCECB_NEGRITA4() {
-        return CECB_NEGRITA4;
-    }
-
-
-
-
-    public void setCECB_NEGRITA4(String cECB_NEGRITA4) {
-        CECB_NEGRITA4 = cECB_NEGRITA4;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO5FILA() {
-        return CECB_TEXTO5FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO5FILA(BigDecimal cECB_TEXTO5FILA) {
-        CECB_TEXTO5FILA = cECB_TEXTO5FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO5COLUMNA() {
-        return CECB_TEXTO5COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO5COLUMNA(BigDecimal cECB_TEXTO5COLUMNA) {
-        CECB_TEXTO5COLUMNA = cECB_TEXTO5COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO5LARGO() {
-        return CECB_TEXTO5LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO5LARGO(BigDecimal cECB_TEXTO5LARGO) {
-        CECB_TEXTO5LARGO = cECB_TEXTO5LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO5TAMANO() {
-        return CECB_TEXTO5TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO5TAMANO(BigDecimal cECB_TEXTO5TAMANO) {
-        CECB_TEXTO5TAMANO = cECB_TEXTO5TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO5() {
-        return CECB_ACTIVOTEXTO5;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO5(String cECB_ACTIVOTEXTO5) {
-        CECB_ACTIVOTEXTO5 = cECB_ACTIVOTEXTO5;
-    }
-
-
-
-
-    public String getCECB_NEGRITA5() {
-        return CECB_NEGRITA5;
-    }
-
-
-
-
-    public void setCECB_NEGRITA5(String cECB_NEGRITA5) {
-        CECB_NEGRITA5 = cECB_NEGRITA5;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO6FILA() {
-        return CECB_TEXTO6FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO6FILA(BigDecimal cECB_TEXTO6FILA) {
-        CECB_TEXTO6FILA = cECB_TEXTO6FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO6COLUMNA() {
-        return CECB_TEXTO6COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO6COLUMNA(BigDecimal cECB_TEXTO6COLUMNA) {
-        CECB_TEXTO6COLUMNA = cECB_TEXTO6COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO6LARGO() {
-        return CECB_TEXTO6LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO6LARGO(BigDecimal cECB_TEXTO6LARGO) {
-        CECB_TEXTO6LARGO = cECB_TEXTO6LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO6TAMANO() {
-        return CECB_TEXTO6TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO6TAMANO(BigDecimal cECB_TEXTO6TAMANO) {
-        CECB_TEXTO6TAMANO = cECB_TEXTO6TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO6() {
-        return CECB_ACTIVOTEXTO6;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO6(String cECB_ACTIVOTEXTO6) {
-        CECB_ACTIVOTEXTO6 = cECB_ACTIVOTEXTO6;
-    }
-
-
-
-
-    public String getCECB_NEGRITA6() {
-        return CECB_NEGRITA6;
-    }
-
-
-
-
-    public void setCECB_NEGRITA6(String cECB_NEGRITA6) {
-        CECB_NEGRITA6 = cECB_NEGRITA6;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO7FILA() {
-        return CECB_TEXTO7FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO7FILA(BigDecimal cECB_TEXTO7FILA) {
-        CECB_TEXTO7FILA = cECB_TEXTO7FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO7COLUMNA() {
-        return CECB_TEXTO7COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO7COLUMNA(BigDecimal cECB_TEXTO7COLUMNA) {
-        CECB_TEXTO7COLUMNA = cECB_TEXTO7COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO7LARGO() {
-        return CECB_TEXTO7LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO7LARGO(BigDecimal cECB_TEXTO7LARGO) {
-        CECB_TEXTO7LARGO = cECB_TEXTO7LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO7TAMANO() {
-        return CECB_TEXTO7TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO7TAMANO(BigDecimal cECB_TEXTO7TAMANO) {
-        CECB_TEXTO7TAMANO = cECB_TEXTO7TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO7() {
-        return CECB_ACTIVOTEXTO7;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO7(String cECB_ACTIVOTEXTO7) {
-        CECB_ACTIVOTEXTO7 = cECB_ACTIVOTEXTO7;
-    }
-
-
-
-
-    public String getCECB_NEGRITA7() {
-        return CECB_NEGRITA7;
-    }
-
-
-
-
-    public void setCECB_NEGRITA7(String cECB_NEGRITA7) {
-        CECB_NEGRITA7 = cECB_NEGRITA7;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO8FILA() {
-        return CECB_TEXTO8FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO8FILA(BigDecimal cECB_TEXTO8FILA) {
-        CECB_TEXTO8FILA = cECB_TEXTO8FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO8COLUMNA() {
-        return CECB_TEXTO8COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO8COLUMNA(BigDecimal cECB_TEXTO8COLUMNA) {
-        CECB_TEXTO8COLUMNA = cECB_TEXTO8COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO8LARGO() {
-        return CECB_TEXTO8LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO8LARGO(BigDecimal cECB_TEXTO8LARGO) {
-        CECB_TEXTO8LARGO = cECB_TEXTO8LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO8TAMANO() {
-        return CECB_TEXTO8TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO8TAMANO(BigDecimal cECB_TEXTO8TAMANO) {
-        CECB_TEXTO8TAMANO = cECB_TEXTO8TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO8() {
-        return CECB_ACTIVOTEXTO8;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO8(String cECB_ACTIVOTEXTO8) {
-        CECB_ACTIVOTEXTO8 = cECB_ACTIVOTEXTO8;
-    }
-
-
-
-
-    public String getCECB_NEGRITA8() {
-        return CECB_NEGRITA8;
-    }
-
-
-
-
-    public void setCECB_NEGRITA8(String cECB_NEGRITA8) {
-        CECB_NEGRITA8 = cECB_NEGRITA8;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO9FILA() {
-        return CECB_TEXTO9FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO9FILA(BigDecimal cECB_TEXTO9FILA) {
-        CECB_TEXTO9FILA = cECB_TEXTO9FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO9COLUMNA() {
-        return CECB_TEXTO9COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO9COLUMNA(BigDecimal cECB_TEXTO9COLUMNA) {
-        CECB_TEXTO9COLUMNA = cECB_TEXTO9COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO9LARGO() {
-        return CECB_TEXTO9LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO9LARGO(BigDecimal cECB_TEXTO9LARGO) {
-        CECB_TEXTO9LARGO = cECB_TEXTO9LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO9TAMANO() {
-        return CECB_TEXTO9TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO9TAMANO(BigDecimal cECB_TEXTO9TAMANO) {
-        CECB_TEXTO9TAMANO = cECB_TEXTO9TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO9() {
-        return CECB_ACTIVOTEXTO9;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO9(String cECB_ACTIVOTEXTO9) {
-        CECB_ACTIVOTEXTO9 = cECB_ACTIVOTEXTO9;
-    }
-
-
-
-
-    public String getCECB_NEGRITA9() {
-        return CECB_NEGRITA9;
-    }
-
-
-
-
-    public void setCECB_NEGRITA9(String cECB_NEGRITA9) {
-        CECB_NEGRITA9 = cECB_NEGRITA9;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO10FILA() {
-        return CECB_TEXTO10FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO10FILA(BigDecimal cECB_TEXTO10FILA) {
-        CECB_TEXTO10FILA = cECB_TEXTO10FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO10COLUMNA() {
-        return CECB_TEXTO10COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO10COLUMNA(BigDecimal cECB_TEXTO10COLUMNA) {
-        CECB_TEXTO10COLUMNA = cECB_TEXTO10COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO10LARGO() {
-        return CECB_TEXTO10LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO10LARGO(BigDecimal cECB_TEXTO10LARGO) {
-        CECB_TEXTO10LARGO = cECB_TEXTO10LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO10TAMANO() {
-        return CECB_TEXTO10TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO10TAMANO(BigDecimal cECB_TEXTO10TAMANO) {
-        CECB_TEXTO10TAMANO = cECB_TEXTO10TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO10() {
-        return CECB_ACTIVOTEXTO10;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO10(String cECB_ACTIVOTEXTO10) {
-        CECB_ACTIVOTEXTO10 = cECB_ACTIVOTEXTO10;
-    }
-
-
-
-
-    public String getCECB_NEGRITA10() {
-        return CECB_NEGRITA10;
-    }
-
-
-
-
-    public void setCECB_NEGRITA10(String cECB_NEGRITA10) {
-        CECB_NEGRITA10 = cECB_NEGRITA10;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO11FILA() {
-        return CECB_TEXTO11FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO11FILA(BigDecimal cECB_TEXTO11FILA) {
-        CECB_TEXTO11FILA = cECB_TEXTO11FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO11COLUMNA() {
-        return CECB_TEXTO11COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO11COLUMNA(BigDecimal cECB_TEXTO11COLUMNA) {
-        CECB_TEXTO11COLUMNA = cECB_TEXTO11COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO11LARGO() {
-        return CECB_TEXTO11LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO11LARGO(BigDecimal cECB_TEXTO11LARGO) {
-        CECB_TEXTO11LARGO = cECB_TEXTO11LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO11TAMANO() {
-        return CECB_TEXTO11TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO11TAMANO(BigDecimal cECB_TEXTO11TAMANO) {
-        CECB_TEXTO11TAMANO = cECB_TEXTO11TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO11() {
-        return CECB_ACTIVOTEXTO11;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO11(String cECB_ACTIVOTEXTO11) {
-        CECB_ACTIVOTEXTO11 = cECB_ACTIVOTEXTO11;
-    }
-
-
-
-
-    public String getCECB_NEGRITA11() {
-        return CECB_NEGRITA11;
-    }
-
-
-
-
-    public void setCECB_NEGRITA11(String cECB_NEGRITA11) {
-        CECB_NEGRITA11 = cECB_NEGRITA11;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO12FILA() {
-        return CECB_TEXTO12FILA;
-    }
-
-
-
-
-    public void setCECB_TEXTO12FILA(BigDecimal cECB_TEXTO12FILA) {
-        CECB_TEXTO12FILA = cECB_TEXTO12FILA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO12COLUMNA() {
-        return CECB_TEXTO12COLUMNA;
-    }
-
-
-
-
-    public void setCECB_TEXTO12COLUMNA(BigDecimal cECB_TEXTO12COLUMNA) {
-        CECB_TEXTO12COLUMNA = cECB_TEXTO12COLUMNA;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO12LARGO() {
-        return CECB_TEXTO12LARGO;
-    }
-
-
-
-
-    public void setCECB_TEXTO12LARGO(BigDecimal cECB_TEXTO12LARGO) {
-        CECB_TEXTO12LARGO = cECB_TEXTO12LARGO;
-    }
-
-
-
-
-    public BigDecimal getCECB_TEXTO12TAMANO() {
-        return CECB_TEXTO12TAMANO;
-    }
-
-
-
-
-    public void setCECB_TEXTO12TAMANO(BigDecimal cECB_TEXTO12TAMANO) {
-        CECB_TEXTO12TAMANO = cECB_TEXTO12TAMANO;
-    }
-
-
-
-
-    public String getCECB_ACTIVOTEXTO12() {
-        return CECB_ACTIVOTEXTO12;
-    }
-
-
-
-
-    public void setCECB_ACTIVOTEXTO12(String cECB_ACTIVOTEXTO12) {
-        CECB_ACTIVOTEXTO12 = cECB_ACTIVOTEXTO12;
-    }
-
-
-
-
-    public String getCECB_NEGRITA12() {
-        return CECB_NEGRITA12;
-    }
-
-
-
-
-    public void setCECB_NEGRITA12(String cECB_NEGRITA12) {
-        CECB_NEGRITA12 = cECB_NEGRITA12;
-    }
-
-
-
-
-    public BigDecimal getCECB_SORT() {
-        return CECB_SORT;
-    }
-
-
-
-
-    public void setCECB_SORT(BigDecimal cECB_SORT) {
-        CECB_SORT = cECB_SORT;
-    }
-
-
-
-
-    public String getCECB_NOTA() {
-        return CECB_NOTA;
-    }
-
-
-
-
-    public void setCECB_NOTA(String cECB_NOTA) {
-        CECB_NOTA = cECB_NOTA;
-    }
-
-
-
-
-    public String getCECB_USUARIOREGISTRO() {
-        return CECB_USUARIOREGISTRO;
-    }
-
-
-
-
-    public void setCECB_USUARIOREGISTRO(String cECB_USUARIOREGISTRO) {
-        CECB_USUARIOREGISTRO = cECB_USUARIOREGISTRO;
-    }
-
-
-
-
-    public Date getCECB_FECHAREGISTRO() {
-        return CECB_FECHAREGISTRO;
-    }
-
-
-
-
-    public void setCECB_FECHAREGISTRO(Date cECB_FECHAREGISTRO) {
-        CECB_FECHAREGISTRO = cECB_FECHAREGISTRO;
-    }
-
-
-
-
-    public String getCECB_PROCEDENCIA() {
-        return CECB_PROCEDENCIA;
-    }
-
-
-
-
-    public void setCECB_PROCEDENCIA(String cECB_PROCEDENCIA) {
-        CECB_PROCEDENCIA = cECB_PROCEDENCIA;
-    }
-
-
-
-
-    public String getCECB_SERVICIO() {
-        return CECB_SERVICIO;
-    }
-
-
-
-
-    public void setCECB_SERVICIO(String cECB_SERVICIO) {
-        CECB_SERVICIO = cECB_SERVICIO;
-    }
-
-
-
-
-    public String getCECB_TIPOPACPREFIJO() {
-        return CECB_TIPOPACPREFIJO;
-    }
-
-
-
-
-    public void setCECB_TIPOPACPREFIJO(String cECB_TIPOPACPREFIJO) {
-        CECB_TIPOPACPREFIJO = cECB_TIPOPACPREFIJO;
-    }
-
-
-
-
-    public String getCECB_TIPOPACSUFIJO() {
-        return CECB_TIPOPACSUFIJO;
-    }
-
-
-
-
-    public void setCECB_TIPOPACSUFIJO(String cECB_TIPOPACSUFIJO) {
-        CECB_TIPOPACSUFIJO = cECB_TIPOPACSUFIJO;
-    }
-
-
-
-
-    public String getCECB_PROCEPREFIJO() {
-        return CECB_PROCEPREFIJO;
-    }
-
-
-
-
-    public void setCECB_PROCEPREFIJO(String cECB_PROCEPREFIJO) {
-        CECB_PROCEPREFIJO = cECB_PROCEPREFIJO;
-    }
-
-
-
-
-    public String getCECB_PROCESUFIJO() {
-        return CECB_PROCESUFIJO;
-    }
-
-
-
-
-    public void setCECB_PROCESUFIJO(String cECB_PROCESUFIJO) {
-        CECB_PROCESUFIJO = cECB_PROCESUFIJO;
-    }
-
-
-
-
-    public String getCECB_SERVPREFIJO() {
-        return CECB_SERVPREFIJO;
-    }
-
-
-
-
-    public void setCECB_SERVPREFIJO(String cECB_SERVPREFIJO) {
-        CECB_SERVPREFIJO = cECB_SERVPREFIJO;
-    }
-
-
-
-
-    public String getCECB_SERVSUFIJO() {
-        return CECB_SERVSUFIJO;
-    }
-
-
-
-
-    public void setCECB_SERVSUFIJO(String cECB_SERVSUFIJO) {
-        CECB_SERVSUFIJO = cECB_SERVSUFIJO;
-    }
-
-
-
-
-    public String getCECB_NOMBPREFIJO() {
-        return CECB_NOMBPREFIJO;
-    }
-
-
-
-
-    public void setCECB_NOMBPREFIJO(String cECB_NOMBPREFIJO) {
-        CECB_NOMBPREFIJO = cECB_NOMBPREFIJO;
-    }
-
-
-
-
-    public String getCECB_NOMBSUFIJO() {
-        return CECB_NOMBSUFIJO;
-    }
-
-
-
-
-    public void setCECB_NOMBSUFIJO(String cECB_NOMBSUFIJO) {
-        CECB_NOMBSUFIJO = cECB_NOMBSUFIJO;
-    }
-
-
-
-
-    public String getCECB_SEXOPREFIJO() {
-        return CECB_SEXOPREFIJO;
-    }
-
-
-
-
-    public void setCECB_SEXOPREFIJO(String cECB_SEXOPREFIJO) {
-        CECB_SEXOPREFIJO = cECB_SEXOPREFIJO;
-    }
-
-
-
-
-    public String getCECB_SEXOSUFIJO() {
-        return CECB_SEXOSUFIJO;
-    }
-
-
-
-
-    public void setCECB_SEXOSUFIJO(String cECB_SEXOSUFIJO) {
-        CECB_SEXOSUFIJO = cECB_SEXOSUFIJO;
-    }
-
-
-
-
-    public String getCECB_EDADPREFIJO() {
-        return CECB_EDADPREFIJO;
-    }
-
-
-
-
-    public void setCECB_EDADPREFIJO(String cECB_EDADPREFIJO) {
-        CECB_EDADPREFIJO = cECB_EDADPREFIJO;
-    }
-
-
-
-
-    public String getCECB_EDADSUFIJO() {
-        return CECB_EDADSUFIJO;
-    }
-
-
-
-
-    public void setCECB_EDADSUFIJO(String cECB_EDADSUFIJO) {
-        CECB_EDADSUFIJO = cECB_EDADSUFIJO;
-    }
-
-
-
-
-    public String getCECB_TIPMUEPREFIJO() {
-        return CECB_TIPMUEPREFIJO;
-    }
-
-
-
-
-    public void setCECB_TIPMUEPREFIJO(String cECB_TIPMUEPREFIJO) {
-        CECB_TIPMUEPREFIJO = cECB_TIPMUEPREFIJO;
-    }
-
-
-
-
-    public String getCECB_TIPMUESUFIJO() {
-        return CECB_TIPMUESUFIJO;
-    }
-
-
-
-
-    public void setCECB_TIPMUESUFIJO(String cECB_TIPMUESUFIJO) {
-        CECB_TIPMUESUFIJO = cECB_TIPMUESUFIJO;
-    }
-
-
-
-
-    public String getCECB_ENVAPREFIJO() {
-        return CECB_ENVAPREFIJO;
-    }
-
-
-
-
-    public void setCECB_ENVAPREFIJO(String cECB_ENVAPREFIJO) {
-        CECB_ENVAPREFIJO = cECB_ENVAPREFIJO;
-    }
-
-
-
-
-    public String getCECB_ENVASUFIJO() {
-        return CECB_ENVASUFIJO;
-    }
-
-
-
-
-    public void setCECB_ENVASUFIJO(String cECB_ENVASUFIJO) {
-        CECB_ENVASUFIJO = cECB_ENVASUFIJO;
-    }
-
-
-
-
-    public String getCECB_FECHAPREFIJO() {
-        return CECB_FECHAPREFIJO;
-    }
-
-
-
-
-    public void setCECB_FECHAPREFIJO(String cECB_FECHAPREFIJO) {
-        CECB_FECHAPREFIJO = cECB_FECHAPREFIJO;
-    }
-
-
-
-
-    public String getCECB_FECHASUFIJO() {
-        return CECB_FECHASUFIJO;
-    }
-
-
-
-
-    public void setCECB_FECHASUFIJO(String cECB_FECHASUFIJO) {
-        CECB_FECHASUFIJO = cECB_FECHASUFIJO;
-    }
-
-
-
-
-    public String getCECB_PARAMETRIZADA() {
-        return CECB_PARAMETRIZADA;
-    }
-
-
-
-
-    public void setCECB_PARAMETRIZADA(String cECB_PARAMETRIZADA) {
-        CECB_PARAMETRIZADA = cECB_PARAMETRIZADA;
-    }
-
-
-
-
-    public String getCECB_RUTPREFIJO() {
-        return CECB_RUTPREFIJO;
-    }
-
-
-
-
-    public void setCECB_RUTPREFIJO(String cECB_RUTPREFIJO) {
-        CECB_RUTPREFIJO = cECB_RUTPREFIJO;
-    }
-
-
-
-
-    public String getCECB_RUTSUFIJO() {
-        return CECB_RUTSUFIJO;
-    }
-
-
-
-
-    public void setCECB_RUTSUFIJO(String cECB_RUTSUFIJO) {
-        CECB_RUTSUFIJO = cECB_RUTSUFIJO;
-    }
-
-
-
-
-}
\ No newline at end of file
diff --git a/src/main/java/com/grupobios/bioslis/dto/ExamenEditarOrdenDTO.java b/src/main/java/com/grupobios/bioslis/dto/ExamenEditarOrdenDTO.java
index 6dcdfd27..5665218e 100644
--- a/src/main/java/com/grupobios/bioslis/dto/ExamenEditarOrdenDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/ExamenEditarOrdenDTO.java
@@ -178,29 +178,29 @@ public class ExamenEditarOrdenDTO {
     public void setFECHAEXAMEN(Date FECHAEXAMEN) {
         this.FECHAEXAMEN = FECHAEXAMEN;
     }
-
+    
     public String getCEDESCRIPCION() {
-        return CEDESCRIPCION;
+        return this.CEDESCRIPCION;
     }
 
-    public void setCEDESCRIPCION(String cEDESCRIPCION) {
-        CEDESCRIPCION = cEDESCRIPCION;
+    public void setCEDESCRIPCION(String CEDESCRIPCION) {
+        this.CEDESCRIPCION = CEDESCRIPCION;
     }
-
+    
     public String getCODESTADOEXAMEN() {
-        return CODESTADOEXAMEN;
+        return this.CODESTADOEXAMEN;
     }
 
-    public void setCODESTADOEXAMEN(String cODESTADOEXAMEN) {
-        CODESTADOEXAMEN = cODESTADOEXAMEN;
+    public void setCODESTADOEXAMEN(String CODESTADOEXAMEN) {
+        this.CODESTADOEXAMEN = CODESTADOEXAMEN;
     }
 
     public String getEXAMENANULADO() {
-        return EXAMENANULADO;
+        return this.EXAMENANULADO;
     }
 
-    public void setEXAMENANULADO(String eXAMENANULADO) {
-        EXAMENANULADO = eXAMENANULADO;
+    public void setEXAMENANULADO(String EXAMENANULADO) {
+        this.EXAMENANULADO = EXAMENANULADO;
     }
 
 
@@ -214,26 +214,19 @@ public class ExamenEditarOrdenDTO {
 
 
     public String getLDVIEDESCRIPCION() {
-        return LDVIEDESCRIPCION;
+        return this.LDVIEDESCRIPCION;
     }
 
-    public void setLDVIEDESCRIPCION(String lDVIEDESCRIPCION) {
-        LDVIEDESCRIPCION = lDVIEDESCRIPCION;
+    public void setLDVIEDESCRIPCION(String LDVIEDESCRIPCION) {
+        this.LDVIEDESCRIPCION = LDVIEDESCRIPCION;
     }
 
     public BigDecimal getLDVIEIDINDICACIONESEXAMEN() {
-        return LDVIEIDINDICACIONESEXAMEN;
+        return this.LDVIEIDINDICACIONESEXAMEN;
     }
 
-    public void setLDVIEIDINDICACIONESEXAMEN(BigDecimal lDVIEIDINDICACIONESEXAMEN) {
-        LDVIEIDINDICACIONESEXAMEN = lDVIEIDINDICACIONESEXAMEN;
+    public void setLDVIEIDINDICACIONESEXAMEN(BigDecimal LDVIEIDINDICACIONESEXAMEN) {
+        this.LDVIEIDINDICACIONESEXAMEN = LDVIEIDINDICACIONESEXAMEN;
     }
-
-
-   
-   
-    
-    
-    
 }
 
diff --git a/src/main/java/com/grupobios/bioslis/dto/ExamenesMuestrasDeUnaOrdenDTO.java b/src/main/java/com/grupobios/bioslis/dto/ExamenesMuestrasDeUnaOrdenDTO.java
index 3c5db1f5..9c231a82 100755
--- a/src/main/java/com/grupobios/bioslis/dto/ExamenesMuestrasDeUnaOrdenDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/ExamenesMuestrasDeUnaOrdenDTO.java
@@ -20,24 +20,6 @@ public class ExamenesMuestrasDeUnaOrdenDTO {
   private String DFM_CODIGOBARRA;
   private String CE_CODIGOEXAMEN;
   private String CT_FORMULA;
-  private String DFE_EXAMENANULADO;
-  private BigDecimal CE_IDSECCION;
-
-  public BigDecimal getCE_IDSECCION() {
-    return CE_IDSECCION;
-  }
-
-  public void setCE_IDSECCION(BigDecimal cE_IDSECCION) {
-    CE_IDSECCION = cE_IDSECCION;
-  }
-
-  public String getDFE_EXAMENANULADO() {
-    return DFE_EXAMENANULADO;
-  }
-
-  public void setDFE_EXAMENANULADO(String dFE_EXAMENANULADO) {
-    DFE_EXAMENANULADO = dFE_EXAMENANULADO;
-  }
 
   public String getDFM_CODIGOBARRA() {
     return DFM_CODIGOBARRA;
diff --git a/src/main/java/com/grupobios/bioslis/dto/ExamenesResultadosDeUnaOrdenDTO.java b/src/main/java/com/grupobios/bioslis/dto/ExamenesResultadosDeUnaOrdenDTO.java
index 9a5943a5..f0503fa3 100755
--- a/src/main/java/com/grupobios/bioslis/dto/ExamenesResultadosDeUnaOrdenDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/ExamenesResultadosDeUnaOrdenDTO.java
@@ -68,15 +68,6 @@ public class ExamenesResultadosDeUnaOrdenDTO {
   private String CT_RESULTADOOBLIGADO;
   private String CT_ESCULTIVO;
   private BigDecimal CT_IDSECCION;
-  private String DFE_EXAMENANULADO;
-
-  public String getDFE_EXAMENANULADO() {
-    return DFE_EXAMENANULADO;
-  }
-
-  public void setDFE_EXAMENANULADO(String dFE_EXAMENANULADO) {
-    DFE_EXAMENANULADO = dFE_EXAMENANULADO;
-  }
 
   private List<DeltaCheckDTO> deltaCheckLst;
   private DeltaCheckDTO deltaCheckCalculated;
diff --git a/src/main/java/com/grupobios/bioslis/dto/FilaExamenesMuestrasDeUnaOrdenDTO.java b/src/main/java/com/grupobios/bioslis/dto/FilaExamenesMuestrasDeUnaOrdenDTO.java
index e0704b3a..c0e1b2ed 100755
--- a/src/main/java/com/grupobios/bioslis/dto/FilaExamenesMuestrasDeUnaOrdenDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/FilaExamenesMuestrasDeUnaOrdenDTO.java
@@ -21,24 +21,6 @@ public class FilaExamenesMuestrasDeUnaOrdenDTO {
   private String DFM_CODIGOBARRA;
   private String CE_CODIGOEXAMEN;
   private String CT_FORMULA;
-  private String DFE_EXAMENANULADO;
-  private BigDecimal CE_IDSECCION;
-
-  public BigDecimal getCE_IDSECCION() {
-    return CE_IDSECCION;
-  }
-
-  public void setCE_IDSECCION(BigDecimal cE_IDSECCION) {
-    CE_IDSECCION = cE_IDSECCION;
-  }
-
-  public String getDFE_EXAMENANULADO() {
-    return DFE_EXAMENANULADO;
-  }
-
-  public void setDFE_EXAMENANULADO(String dFE_EXAMENANULADO) {
-    DFE_EXAMENANULADO = dFE_EXAMENANULADO;
-  }
 
   public String getDFM_CODIGOBARRA() {
     return DFM_CODIGOBARRA;
diff --git a/src/main/java/com/grupobios/bioslis/dto/MicrobiologiaOrdenPacienteDTO.java b/src/main/java/com/grupobios/bioslis/dto/MicrobiologiaOrdenPacienteDTO.java
deleted file mode 100644
index ac4da257..00000000
--- a/src/main/java/com/grupobios/bioslis/dto/MicrobiologiaOrdenPacienteDTO.java
+++ /dev/null
@@ -1,135 +0,0 @@
-package com.grupobios.bioslis.dto;
-
-import java.math.BigDecimal;
-import java.util.Date;
-
-public class MicrobiologiaOrdenPacienteDTO {
-
-    
-    public BigDecimal DF_NORDEN;
-    public Date DF_FECHAORDEN;
-    public Date  DP_FNACIMIENTO;
-    public String DP_NOMBRES;
-    public String DP_PRIMERAPELLIDO;
-    public String DP_SEGUNDOAPELLIDO;
-    public String LDVS_DESCRIPCION;
-    public String CCDS_DESCRIPCION;
-    public String CTA_DESCRIPCION;
-    public String CS_DESCRIPCION;
-    public String CE_ESCULTIVO;
-    public String CEE_CODIGOESTADOEXAMEN;
-    public String CBET_BACESTADOTEST;
-    
-    public MicrobiologiaOrdenPacienteDTO() {
-
-    }
-
-    public BigDecimal getDF_NORDEN() {
-        return DF_NORDEN;
-    }
-
-    public void setDF_NORDEN(BigDecimal dF_NORDEN) {
-        DF_NORDEN = dF_NORDEN;
-    }
-
-    public Date getDF_FECHAORDEN() {
-        return DF_FECHAORDEN;
-    }
-
-    public void setDF_FECHAORDEN(Date dF_FECHAORDEN) {
-        DF_FECHAORDEN = dF_FECHAORDEN;
-    }
-
-    public Date getDP_FNACIMIENTO() {
-        return DP_FNACIMIENTO;
-    }
-
-    public void setDP_FNACIMIENTO(Date dP_FNACIMIENTO) {
-        DP_FNACIMIENTO = dP_FNACIMIENTO;
-    }
-
-    public String getDP_NOMBRES() {
-        return DP_NOMBRES;
-    }
-
-    public void setDP_NOMBRES(String dP_NOMBRES) {
-        DP_NOMBRES = dP_NOMBRES;
-    }
-
-    public String getDP_PRIMERAPELLIDO() {
-        return DP_PRIMERAPELLIDO;
-    }
-
-    public void setDP_PRIMERAPELLIDO(String dP_PRIMERAPELLIDO) {
-        DP_PRIMERAPELLIDO = dP_PRIMERAPELLIDO;
-    }
-
-    public String getDP_SEGUNDOAPELLIDO() {
-        return DP_SEGUNDOAPELLIDO;
-    }
-
-    public void setDP_SEGUNDOAPELLIDO(String dP_SEGUNDOAPELLIDO) {
-        DP_SEGUNDOAPELLIDO = dP_SEGUNDOAPELLIDO;
-    }
-
-   
-    public String getLDVS_DESCRIPCION() {
-        return LDVS_DESCRIPCION;
-    }
-
-    public void setLDVS_DESCRIPCION(String lDVS_DESCRIPCION) {
-        LDVS_DESCRIPCION = lDVS_DESCRIPCION;
-    }
-
-    public String getCCDS_DESCRIPCION() {
-        return CCDS_DESCRIPCION;
-    }
-
-    public void setCCDS_DESCRIPCION(String cCDS_DESCRIPCION) {
-        CCDS_DESCRIPCION = cCDS_DESCRIPCION;
-    }
-
-    public String getCTA_DESCRIPCION() {
-        return CTA_DESCRIPCION;
-    }
-
-    public void setCTA_DESCRIPCION(String cTA_DESCRIPCION) {
-        CTA_DESCRIPCION = cTA_DESCRIPCION;
-    }
-
-    public String getCS_DESCRIPCION() {
-        return CS_DESCRIPCION;
-    }
-
-    public void setCS_DESCRIPCION(String cS_DESCRIPCION) {
-        CS_DESCRIPCION = cS_DESCRIPCION;
-    }
-
-    public String getCE_ESCULTIVO() {
-        return CE_ESCULTIVO;
-    }
-
-    public void setCE_ESCULTIVO(String cE_ESCULTIVO) {
-        CE_ESCULTIVO = cE_ESCULTIVO;
-    }
-
-    public String getCEE_CODIGOESTADOEXAMEN() {
-        return CEE_CODIGOESTADOEXAMEN;
-    }
-
-    public void setCEE_CODIGOESTADOEXAMEN(String cEE_CODIGOESTADOEXAMEN) {
-        CEE_CODIGOESTADOEXAMEN = cEE_CODIGOESTADOEXAMEN;
-    }
-
-    public String getCBET_BACESTADOTEST() {
-        return CBET_BACESTADOTEST;
-    }
-
-    public void setCBET_BACESTADOTEST(String cBET_BACESTADOTEST) {
-        CBET_BACESTADOTEST = cBET_BACESTADOTEST;
-    }
-
-   
-    
-    
-}
diff --git a/src/main/java/com/grupobios/bioslis/dto/OrdenExamenCapturaResultadoDTO.java b/src/main/java/com/grupobios/bioslis/dto/OrdenExamenCapturaResultadoDTO.java
index a8f8dc0a..20421a30 100755
--- a/src/main/java/com/grupobios/bioslis/dto/OrdenExamenCapturaResultadoDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/OrdenExamenCapturaResultadoDTO.java
@@ -47,16 +47,8 @@ public class OrdenExamenCapturaResultadoDTO {
   private String CSEC_DESCRIPCION;
   private BigDecimal DFE_IDEXAMEN;
   private String DF_HOST;
-  private String LOCALIZACION;
   private List<BigDecimal> lstSecciones;
-  //agregado por cristian 09-11
-  private BigDecimal DF_IDPREVISION;
-  private BigDecimal DF_IDLOCALIZACION;
-  private BigDecimal DF_IDCENTRODESALUD;
-  private BigDecimal DF_IDPRIORIDADATENCION;
-  private BigDecimal DF_IDFICHAESTADOTM;
-  private String  LDVFET_DESCRIPCION;
-  
+
   public OrdenExamenCapturaResultadoDTO() {
 
     this.ordenInformeResultadoDTO = new OrdenInformeResultadoDTO();
@@ -405,61 +397,4 @@ public class OrdenExamenCapturaResultadoDTO {
     this.lstSecciones = lstSecciones;
   }
 
-public String getLOCALIZACION() {
-    return LOCALIZACION;
-}
-
-public void setLOCALIZACION(String lOCALIZACION) {
-    this.ordenInformeResultadoDTO.setLOCALIZACION(lOCALIZACION);
-    LOCALIZACION = lOCALIZACION;
-}
-
-public BigDecimal getDF_IDPREVISION() {
-    return DF_IDPREVISION;
-}
-
-public void setDF_IDPREVISION(BigDecimal dF_IDPREVISION) {
-    DF_IDPREVISION = dF_IDPREVISION;
-}
-
-public BigDecimal getDF_IDLOCALIZACION() {
-    return DF_IDLOCALIZACION;
-}
-
-public void setDF_IDLOCALIZACION(BigDecimal dF_IDLOCALIZACION) {
-    DF_IDLOCALIZACION = dF_IDLOCALIZACION;
-}
-
-public BigDecimal getDF_IDCENTRODESALUD() {
-    return DF_IDCENTRODESALUD;
-}
-
-public void setDF_IDCENTRODESALUD(BigDecimal dF_IDCENTRODESALUD) {
-    DF_IDCENTRODESALUD = dF_IDCENTRODESALUD;
-}
-
-public BigDecimal getDF_IDPRIORIDADATENCION() {
-    return DF_IDPRIORIDADATENCION;
-}
-
-public void setDF_IDPRIORIDADATENCION(BigDecimal dF_IDPRIORIDADATENCION) {
-    DF_IDPRIORIDADATENCION = dF_IDPRIORIDADATENCION;
-}
-
-public BigDecimal getDF_IDFICHAESTADOTM() {
-    return DF_IDFICHAESTADOTM;
-}
-
-public void setDF_IDFICHAESTADOTM(BigDecimal dF_IDFICHAESTADOTM) {
-    DF_IDFICHAESTADOTM = dF_IDFICHAESTADOTM;
-}
-
-public String getLDVFET_DESCRIPCION() {
-    return LDVFET_DESCRIPCION;
-}
-
-public void setLDVFET_DESCRIPCION(String lDVFET_DESCRIPCION) {
-    LDVFET_DESCRIPCION = lDVFET_DESCRIPCION;
-}
-
 }
diff --git a/src/main/java/com/grupobios/bioslis/dto/OrdenInformeResultadoDTO.java b/src/main/java/com/grupobios/bioslis/dto/OrdenInformeResultadoDTO.java
index b1561409..143a4bd3 100755
--- a/src/main/java/com/grupobios/bioslis/dto/OrdenInformeResultadoDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/OrdenInformeResultadoDTO.java
@@ -18,60 +18,33 @@ public class OrdenInformeResultadoDTO {
   private String SDF_FECHAORDEN;
   private BigDecimal DF_NORDEN;
   private String DP_NOMBRES;
-  //tipo de documento 
   private String LDVTD_DESCRIPCION;
   private String DP_NRODOCUMENTO;
-  //tipo de atencion
   private String CTA_DESCRIPCION;
-  //procedencia
   private String CP_DESCRIPCION;
-  //servicio
   private String CS_DESCRIPCION;
   private String DP_EMAIL;
   private BigDecimal DP_IDPACIENTE;
   private String DP_PRIMERAPELLIDO;
   private String DP_SEGUNDOAPELLIDO;
-  //sexo paciente
   private String LDVS_DESCRIPCION;
-  //observacion paciente
   private String DP_OBSERVACION;
-  //convenios
   private String CC_ABREVIADO;
-  //diagnostico
   private String CD_DESCRIPCION;
-  //observacion orden
   private String DF_OBSERVACION;
   private String CM_NOMBRES;
   private String CM_PRIMERAPELLIDO;
   private String CM_SEGUNDOAPELLIDO;
-  //fecha nacimiento paciente
   private String SDP_FNACIMIENTO;
   private String DFE_CODIGOESTADOEXAMEN;
   private String CEE_DESCRIPCIONESTADOEXAMEN;
   private String DFE_EXAMENESURGENTE;
   private String CE_CODIGOEXAMEN;
-  //descripcion abreviada examen
   private String CE_ABREVIADO;
-  //descripcion seccion
   private String CSEC_DESCRIPCION;
   private BigDecimal DFE_IDEXAMEN;
   private String hayExamenesPendientes;
   private String hayExamenesUrgentes;
-  private String LOCALIZACION;
-  //agregado por cristian 09-11
-  private BigDecimal DF_IDPREVISION;
-  private BigDecimal DF_IDLOCALIZACION;
-  private BigDecimal DF_IDCENTRODESALUD;
-  private BigDecimal DF_IDPRIORIDADATENCION;
-  private BigDecimal DF_IDFICHAESTADOTM;
-  //estado toma muestra descripcion
-  private String  LDVFET_DESCRIPCION;
-  private String TIENECULTIVO;
-  private BigDecimal DFE_IDBACESTADO;
-  //descripcion bacestado examen
-  private String CBE_DESCRIPCION;
-
-
 
   private List<BigDecimal> lstSecciones;
 
@@ -368,88 +341,4 @@ public class OrdenInformeResultadoDTO {
     this.hayExamenesUrgentes = hayExamenesUrgentes;
   }
 
-public String getLOCALIZACION() {
-    return LOCALIZACION;
-}
-
-public void setLOCALIZACION(String lOCALIZACION) {
-    LOCALIZACION = lOCALIZACION;
-}
-
-public BigDecimal getDF_IDPREVISION() {
-    return DF_IDPREVISION;
-}
-
-public void setDF_IDPREVISION(BigDecimal dF_IDPREVISION) {
-    DF_IDPREVISION = dF_IDPREVISION;
-}
-
-public BigDecimal getDF_IDLOCALIZACION() {
-    return DF_IDLOCALIZACION;
-}
-
-public void setDF_IDLOCALIZACION(BigDecimal dF_IDLOCALIZACION) {
-    DF_IDLOCALIZACION = dF_IDLOCALIZACION;
-}
-
-public BigDecimal getDF_IDCENTRODESALUD() {
-    return DF_IDCENTRODESALUD;
-}
-
-public void setDF_IDCENTRODESALUD(BigDecimal dF_IDCENTRODESALUD) {
-    DF_IDCENTRODESALUD = dF_IDCENTRODESALUD;
-}
-
-public BigDecimal getDF_IDPRIORIDADATENCION() {
-    return DF_IDPRIORIDADATENCION;
-}
-
-public void setDF_IDPRIORIDADATENCION(BigDecimal dF_IDPRIORIDADATENCION) {
-    DF_IDPRIORIDADATENCION = dF_IDPRIORIDADATENCION;
-}
-
-public BigDecimal getDF_IDFICHAESTADOTM() {
-    return DF_IDFICHAESTADOTM;
-}
-
-public void setDF_IDFICHAESTADOTM(BigDecimal dF_IDFICHAESTADOTM) {
-    DF_IDFICHAESTADOTM = dF_IDFICHAESTADOTM;
-}
-
-public String getLDVFET_DESCRIPCION() {
-    return LDVFET_DESCRIPCION;
-}
-
-public void setLDVFET_DESCRIPCION(String lDVFET_DESCRIPCION) {
-    LDVFET_DESCRIPCION = lDVFET_DESCRIPCION;
-}
-
-public String getTIENECULTIVO() {
-    return TIENECULTIVO;
-}
-
-public void setTIENECULTIVO(String tIENECULTIVO) {
-    TIENECULTIVO = tIENECULTIVO;
-}
-
-public BigDecimal getDFE_IDBACESTADO() {
-    return DFE_IDBACESTADO;
-}
-
-public void setDFE_IDBACESTADO(BigDecimal dFE_IDBACESTADO) {
-    DFE_IDBACESTADO = dFE_IDBACESTADO;
-}
-
-public String getCBE_DESCRIPCION() {
-    return CBE_DESCRIPCION;
-}
-
-public void setCBE_DESCRIPCION(String cBE_DESCRIPCION) {
-    CBE_DESCRIPCION = cBE_DESCRIPCION;
-}
-
-
-
-
-  
 }
diff --git a/src/main/java/com/grupobios/bioslis/dto/PortalDatosPacienteOrdenExamenDTO.java b/src/main/java/com/grupobios/bioslis/dto/PortalDatosPacienteOrdenExamenDTO.java
index 395669f1..0104ea61 100644
--- a/src/main/java/com/grupobios/bioslis/dto/PortalDatosPacienteOrdenExamenDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/PortalDatosPacienteOrdenExamenDTO.java
@@ -17,7 +17,6 @@ public class PortalDatosPacienteOrdenExamenDTO {
 	     private Date FECHA;
 	     private String MEDICO;
 	     private BigDecimal ORDEN;
-	  
 	    
 	     private List<PortalExamenesDTO> examenes;
 	    
@@ -97,9 +96,6 @@ public class PortalDatosPacienteOrdenExamenDTO {
 		}
 
 
-    
-
-
 
 
 	     
diff --git a/src/main/java/com/grupobios/bioslis/dto/PortalExamenesDTO.java b/src/main/java/com/grupobios/bioslis/dto/PortalExamenesDTO.java
index a99186cb..1261aefb 100644
--- a/src/main/java/com/grupobios/bioslis/dto/PortalExamenesDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/PortalExamenesDTO.java
@@ -11,7 +11,6 @@ public class PortalExamenesDTO {
 	 private String MUESTRA;
 	 private String DISPONIBLEWEB;
 	 private String NOMBREWEB;
-	 private String EXAMENANULADO;
 	
 	public BigDecimal getIDEXAMEN() {
 		return IDEXAMEN;
@@ -53,11 +52,5 @@ public class PortalExamenesDTO {
 	public void setNOMBREWEB(String nOMBREWEB) {
 		NOMBREWEB = nOMBREWEB;
 	}
-    public String getEXAMENANULADO() {
-        return EXAMENANULADO;
-    }
-    public void setEXAMENANULADO(String eXAMENANULADO) {
-        EXAMENANULADO = eXAMENANULADO;
-    }
 
 }
\ No newline at end of file
diff --git a/src/main/java/com/grupobios/bioslis/dto/ProcesosDTO.java b/src/main/java/com/grupobios/bioslis/dto/ProcesosDTO.java
index 085f90d5..249e6c33 100644
--- a/src/main/java/com/grupobios/bioslis/dto/ProcesosDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/ProcesosDTO.java
@@ -7,6 +7,7 @@ package com.grupobios.bioslis.dto;
 
 import com.grupobios.bioslis.entity.LdvTipocomunicacion;
 import com.grupobios.bioslis.entity.SigmaProcesos;
+import com.grupobios.bioslis.entity.SigmaProcesosalarmas;
 
 /**
  *
@@ -16,6 +17,7 @@ public class ProcesosDTO {
     private SigmaProcesos sigmaProcesos;
     private LdvTipocomunicacion ldvTipocomunicacion;
     private ProcesosTestsDTO[] procesosTests;
+    private SigmaProcesosalarmas[] procesosAlarmas;
 
     public SigmaProcesos getSigmaProcesos() {
         return sigmaProcesos;
@@ -40,5 +42,13 @@ public class ProcesosDTO {
     public void setProcesosTests(ProcesosTestsDTO[] procesosTests) {
         this.procesosTests = procesosTests;
     }
+
+    public SigmaProcesosalarmas[] getProcesosAlarmas() {
+        return procesosAlarmas;
+    }
+
+    public void setProcesosAlarmas(SigmaProcesosalarmas[] procesosAlarmas) {
+        this.procesosAlarmas = procesosAlarmas;
+    }
     
 }
diff --git a/src/main/java/com/grupobios/bioslis/dto/ProcesosTestsConversionDTO.java b/src/main/java/com/grupobios/bioslis/dto/ProcesosTestsConversionDTO.java
new file mode 100644
index 00000000..a9819f6c
--- /dev/null
+++ b/src/main/java/com/grupobios/bioslis/dto/ProcesosTestsConversionDTO.java
@@ -0,0 +1,151 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package com.grupobios.bioslis.dto;
+
+import com.grupobios.bioslis.entity.LdvOperacionesmath;
+import com.grupobios.bioslis.entity.LdvTiposcondicion;
+import com.grupobios.bioslis.entity.SigmaProcesostest;
+import com.grupobios.bioslis.entity.SigmaProcesotestconversion;
+import com.grupobios.bioslis.entity.SigmaProcesotestconversionId;
+
+/**
+ *
+ * @author Marco Caracciolo
+ */
+public class ProcesosTestsConversionDTO {
+    private String sptcValorentrada;
+    private String sptcValorsalida;
+    private String sptcCriticosn;
+    private String sptcReprocesarsn;
+    private String sptcBloquearsn;
+    private String sptcFirmarsn;
+    private String sptcCondicionalsn;
+    private String sptcCalculosn;
+    private Integer sptcValoroperando;
+    private byte sptcNumerocondicion;
+    private byte ldvtcondIdtipocondicion;
+    private byte ldvomIdoperadormath;
+
+    public String getSptcValorentrada() {
+        return sptcValorentrada;
+    }
+
+    public void setSptcValorentrada(String sptcValorentrada) {
+        this.sptcValorentrada = sptcValorentrada;
+    }
+
+    public String getSptcValorsalida() {
+        return sptcValorsalida;
+    }
+
+    public void setSptcValorsalida(String sptcValorsalida) {
+        this.sptcValorsalida = sptcValorsalida;
+    }
+
+    public String getSptcCriticosn() {
+        return sptcCriticosn;
+    }
+
+    public void setSptcCriticosn(String sptcCriticosn) {
+        this.sptcCriticosn = sptcCriticosn;
+    }
+
+    public String getSptcReprocesarsn() {
+        return sptcReprocesarsn;
+    }
+
+    public void setSptcReprocesarsn(String sptcReprocesarsn) {
+        this.sptcReprocesarsn = sptcReprocesarsn;
+    }
+
+    public String getSptcBloquearsn() {
+        return sptcBloquearsn;
+    }
+
+    public void setSptcBloquearsn(String sptcBloquearsn) {
+        this.sptcBloquearsn = sptcBloquearsn;
+    }
+
+    public String getSptcFirmarsn() {
+        return sptcFirmarsn;
+    }
+
+    public void setSptcFirmarsn(String sptcFirmarsn) {
+        this.sptcFirmarsn = sptcFirmarsn;
+    }
+
+    public String getSptcCondicionalsn() {
+        return sptcCondicionalsn;
+    }
+
+    public void setSptcCondicionalsn(String sptcCondicionalsn) {
+        this.sptcCondicionalsn = sptcCondicionalsn;
+    }
+
+    public String getSptcCalculosn() {
+        return sptcCalculosn;
+    }
+
+    public void setSptcCalculosn(String sptcCalculosn) {
+        this.sptcCalculosn = sptcCalculosn;
+    }
+
+    public Integer getSptcValoroperando() {
+        return sptcValoroperando;
+    }
+
+    public void setSptcValoroperando(Integer sptcValoroperando) {
+        this.sptcValoroperando = sptcValoroperando;
+    }
+
+    
+
+    public byte getSptcNumerocondicion() {
+        return sptcNumerocondicion;
+    }
+
+    public void setSptcNumerocondicion(byte sptcNumerocondicion) {
+        this.sptcNumerocondicion = sptcNumerocondicion;
+    }
+
+    public byte getLdvtcondIdtipocondicion() {
+        return ldvtcondIdtipocondicion;
+    }
+
+    public void setLdvtcondIdtipocondicion(byte ldvtcondIdtipocondicion) {
+        this.ldvtcondIdtipocondicion = ldvtcondIdtipocondicion;
+    }
+
+    public byte getLdvomIdoperadormath() {
+        return ldvomIdoperadormath;
+    }
+
+    public void setLdvomIdoperadormath(byte ldvomIdoperadormath) {
+        this.ldvomIdoperadormath = ldvomIdoperadormath;
+    }
+    
+    public SigmaProcesotestconversion toSigmaProcesotestconversion(SigmaProcesotestconversionId sptcId,
+            SigmaProcesostest sigmaProcesostest, LdvTiposcondicion ldvTiposcondicion, LdvOperacionesmath ldvOperacionesmath){
+        
+        SigmaProcesotestconversion target = new SigmaProcesotestconversion();
+        target.setSptcBloquearsn(this.sptcBloquearsn);
+        target.setSptcCalculosn(this.sptcCalculosn);
+        target.setSptcCondicionalsn(this.sptcCondicionalsn);
+        target.setSptcCriticosn(this.sptcCriticosn);
+        target.setSptcFirmarsn(this.sptcFirmarsn);
+        target.setSptcReprocesarsn(this.sptcReprocesarsn);
+        target.setSptcValorentrada(this.sptcValorentrada);
+        target.setSptcValorentrada(this.sptcValorentrada);
+        target.setSptcValoroperando(this.sptcValoroperando);
+        target.setSptcValorsalida(this.sptcValorsalida);
+        target.setId(sptcId);
+        target.setSigmaProcesostest(sigmaProcesostest);
+        target.setLdvTiposcondicion(ldvTiposcondicion);
+        target.setLdvOperacionesmath(ldvOperacionesmath);
+        return target;
+    }
+    
+}
diff --git a/src/main/java/com/grupobios/bioslis/dto/ProcesosTestsDTO.java b/src/main/java/com/grupobios/bioslis/dto/ProcesosTestsDTO.java
index de0d172f..27c720b4 100644
--- a/src/main/java/com/grupobios/bioslis/dto/ProcesosTestsDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/ProcesosTestsDTO.java
@@ -16,7 +16,9 @@ public class ProcesosTestsDTO {
     private long idTest;
     private byte idSigmaTipoMuestra;
     private int idtiporesultado;
+    private short cmueIdtipomuestra;
     private String prefijoTipoMuestra;
+    private ProcesosTestsConversionDTO[] conversiones;
 
     public SigmaProcesostest getSigmaProcesostest() {
         return sigmaProcesostest;
@@ -50,6 +52,14 @@ public class ProcesosTestsDTO {
         this.idtiporesultado = idtiporesultado;
     }
 
+    public short getCmueIdtipomuestra() {
+        return cmueIdtipomuestra;
+    }
+
+    public void setCmueIdtipomuestra(short cmueIdtipomuestra) {
+        this.cmueIdtipomuestra = cmueIdtipomuestra;
+    }
+
     public String getPrefijoTipoMuestra() {
         return prefijoTipoMuestra;
     }
@@ -57,5 +67,13 @@ public class ProcesosTestsDTO {
     public void setPrefijoTipoMuestra(String prefijoTipoMuestra) {
         this.prefijoTipoMuestra = prefijoTipoMuestra;
     }
+
+    public ProcesosTestsConversionDTO[] getConversiones() {
+        return conversiones;
+    }
+
+    public void setConversiones(ProcesosTestsConversionDTO[] conversiones) {
+        this.conversiones = conversiones;
+    }
     
 }
diff --git a/src/main/java/com/grupobios/bioslis/dto/ResultadoActualizacionTestDTO.java b/src/main/java/com/grupobios/bioslis/dto/ResultadoActualizacionTestDTO.java
index 937c7dc4..0c838024 100644
--- a/src/main/java/com/grupobios/bioslis/dto/ResultadoActualizacionTestDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/ResultadoActualizacionTestDTO.java
@@ -4,22 +4,23 @@ import com.grupobios.bioslis.common.RangoValorResultado;
 
 public class ResultadoActualizacionTestDTO {
 
-    private RangoValorResultado rangoValorResultado;
-    private ExamenesResultadosDeUnaOrdenDTO resultadoExamen;
+  private RangoValorResultado rangoValorResultado;
+  private ExamenesResultadosDeUnaOrdenDTO resultadoExamen;
 
-    public RangoValorResultado getRangoValorResultado() {
-      return rangoValorResultado;
-    }
+  public RangoValorResultado getRangoValorResultado() {
+    return rangoValorResultado;
+  }
 
-    public void setRangoValorResultado(RangoValorResultado rangoValorResultado) {
-      this.rangoValorResultado = rangoValorResultado;
-    }
+  public void setRangoValorResultado(RangoValorResultado rangoValorResultado) {
+    this.rangoValorResultado = rangoValorResultado;
+  }
 
-    public ExamenesResultadosDeUnaOrdenDTO getResultadoExamen() {
-      return resultadoExamen;
-    }
+  public ExamenesResultadosDeUnaOrdenDTO getResultadoExamen() {
+    return resultadoExamen;
+  }
+
+  public void setResultadoExamen(ExamenesResultadosDeUnaOrdenDTO resultadoExamen) {
+    this.resultadoExamen = resultadoExamen;
+  }
 
-    public void setResultadoExamen(ExamenesResultadosDeUnaOrdenDTO resultadoExamen) {
-      this.resultadoExamen = resultadoExamen;
-    }
 }
diff --git a/src/main/java/com/grupobios/bioslis/dto/ResultadoNumericoTestExamenOrdenDTO.java b/src/main/java/com/grupobios/bioslis/dto/ResultadoNumericoTestExamenOrdenDTO.java
index d1dea6c4..60a66410 100755
--- a/src/main/java/com/grupobios/bioslis/dto/ResultadoNumericoTestExamenOrdenDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/ResultadoNumericoTestExamenOrdenDTO.java
@@ -1,7 +1,6 @@
 package com.grupobios.bioslis.dto;
 
 import java.math.BigDecimal;
-import java.util.Date;
 
 public class ResultadoNumericoTestExamenOrdenDTO {
 
@@ -10,9 +9,6 @@ public class ResultadoNumericoTestExamenOrdenDTO {
   private String DFET_RESULTADO;
   private BigDecimal DFET_IDTEST;
   private String CTR_CODIGO;
-  //agregado por cristian 04-11
-  private Long idUsuarioDigita;
-  private Date fechaDigita;
 
   /**
    * @return the dF_NORDEN
@@ -78,30 +74,10 @@ public class ResultadoNumericoTestExamenOrdenDTO {
     CTR_CODIGO = cTR_CODIGO;
   }
 
- 
-@Override
+  @Override
   public String toString() {
     return "ResultadoNumericoTestExamenOrdenDTO [DF_NORDEN=" + DF_NORDEN + ", DFE_IDEXAMEN=" + DFE_IDEXAMEN
         + ", DFET_RESULTADO=" + DFET_RESULTADO + ", DFET_IDTEST=" + DFET_IDTEST + ", CTR_CODIGO=" + CTR_CODIGO + "]";
   }
 
-  //**agregado por cristian 07-11/*******************
-public Long getIdUsuarioDigita() {
-    return idUsuarioDigita;
-}
-
-public void setIdUsuarioDigita(Long idUsuarioDigita) {
-    this.idUsuarioDigita = idUsuarioDigita;
-}
-
-public Date getFechaDigita() {
-    return fechaDigita;
-}
-
-public void setFechaDigita(Date fechaDigita) {
-    this.fechaDigita = fechaDigita;
-}
-
-//****************************************************** 
-  
 }
diff --git a/src/main/java/com/grupobios/bioslis/dto/TestEdicionOrdenDTO.java b/src/main/java/com/grupobios/bioslis/dto/TestEdicionOrdenDTO.java
index 83c817c1..68dbb859 100644
--- a/src/main/java/com/grupobios/bioslis/dto/TestEdicionOrdenDTO.java
+++ b/src/main/java/com/grupobios/bioslis/dto/TestEdicionOrdenDTO.java
@@ -13,8 +13,6 @@ public class TestEdicionOrdenDTO {
     private BigDecimal IDSECCION;
     private BigDecimal IDMETODO;
     private String VALORPORDEFECTO;
-    //AGREGADO POR CRISTIAN 21-11
-    private BigDecimal IDMUESTRA;
     
     public TestEdicionOrdenDTO() {
      }
@@ -91,14 +89,6 @@ public class TestEdicionOrdenDTO {
     }
     
     
-
-    public BigDecimal getIDMUESTRA() {
-        return this.IDMUESTRA;
-    }
-
-    public void setIDMUESTRA(BigDecimal IDMUESTRA) {
-        this.IDMUESTRA = IDMUESTRA;
-    }
     
     
     
diff --git a/src/main/java/com/grupobios/bioslis/entity/CfgEtiquetacodigobarras.java b/src/main/java/com/grupobios/bioslis/entity/CfgEtiquetacodigobarras.java
deleted file mode 100644
index d72dc56e..00000000
--- a/src/main/java/com/grupobios/bioslis/entity/CfgEtiquetacodigobarras.java
+++ /dev/null
@@ -1,1027 +0,0 @@
-package com.grupobios.bioslis.entity;
-
-import java.math.BigDecimal;
-import java.util.Date;
-
-/**
-* generated by cristian
-*/
-
-
-
-public class CfgEtiquetacodigobarras implements java.io.Serializable { 
-    
-    
-    
-    private String cecbCodigo; 
-    private String cecbDescripcion; 
-    private String cecbFontcodigobarra;
-    private BigDecimal cecbTamanofontcodigobarras;
-    private BigDecimal cecbFilacodigobarras;    
-    private BigDecimal cecbColumnacodigobarras;
-    private String  cecbActivocodigobarras;
-    private BigDecimal cecbTexto0fila;
-    private BigDecimal cecbTexto0columna;
-    private String cecbActivotexto0;
-    private String cecbNegrita0;
-    private String cecbtamano0;
-    private BigDecimal cecbTexto1fila;
-    private BigDecimal cecbTexto1columna;
-    private BigDecimal cecbTexto1largo;
-    private BigDecimal cecbTexto1tamano;
-    private String  cecbActivotexto1;
-    private String cecbNegrita1;
-    private BigDecimal cecbTexto2fila;
-    private BigDecimal cecbTexto2columna;
-    private BigDecimal cecbTexto2largo;
-    private BigDecimal cecbTexto2tamano;
-    private String cecbActivotexto2;
-    private String cecbNegrita2;
-    private BigDecimal cecbTexto3fila;
-    private BigDecimal cecbTexto3columna;
-    private BigDecimal cecbTexto3largo;
-    private BigDecimal cecbTexto3tamano;
-    private String cecbActivotexto3;
-    private String cecbNegrita3;
-    private BigDecimal cecbTexto4fila;
-    private BigDecimal cecbTexto4columna;
-    private BigDecimal cecbTexto4largo;
-    private BigDecimal cecbTexto4tamano;
-    private String cecbActivotexto4;
-    private String cecbNegrita4;
-    private BigDecimal cecbTexto5fila;
-    private BigDecimal cecbTexto5columna;
-    private BigDecimal cecbTexto5largo;
-    private BigDecimal cecbTexto5tamano;
-    private String cecbActivotexto5;
-    private String  cecbNegrita5;
-    private BigDecimal cecbTexto6fila;
-    private BigDecimal cecbTexto6columna;
-    private BigDecimal cecbTexto6largo;
-    private BigDecimal cecbTexto6tamano;
-    private String cecbActivotexto6;
-    private String cecbNegrita6;
-    private BigDecimal cecbTexto7fila;
-    private BigDecimal cecbTexto7columna;
-    private BigDecimal cecbTexto7largo;
-    private BigDecimal cecbTexto7tamano;
-    private String cecbActivotexto7;
-    private String cecbNegrita7;
-    private BigDecimal cecbTexto8fila;
-    private BigDecimal cecbTexto8columna;
-    private BigDecimal cecbTexto8largo;
-    private BigDecimal cecbTexto8tamano;
-    private String cecbActivotexto8;
-    private String cecbNegrita8;
-    private BigDecimal cecbTexto9fila;
-    private BigDecimal cecbTexto9columna;
-    private BigDecimal  cecbTexto9largo;
-    private BigDecimal cecbTexto9tamano;
-    private String cecbActivotexto9;
-    private String cecbNegrita9;
-    private BigDecimal cecbTexto10fila;
-    private BigDecimal cecbTexto10columna;
-    private BigDecimal cecbTexto10largo;
-    private BigDecimal cecbTexto10tamano;
-    private String cecbActivotexto10;
-    private String cecbNegrita10;
-    private BigDecimal cecbTexto11fila;
-    private BigDecimal cecbTexto11columna;
-    private BigDecimal cecbTexto11largo;
-    private BigDecimal cecbTexto11tamano;
-    private String cecbActivotexto11;
-    private String cecbNegrita11;
-    private BigDecimal cecbTexto12fila;;
-    private BigDecimal cecbTexto12columna;;
-    private BigDecimal cecbTexto12largo;
-    private BigDecimal cecbTexto12tamano;
-    private String cecbActivotexto12;
-    private String cecbNegrita12;
-    private BigDecimal cecbSort;
-    private String cecbNota;
-    private String cecbUsuarioregistro;
-    private Date  cecbFecharegistro;
-    private String cecbProcedencia;
-    private String cecbServicio;
-    private String cecbTipopacprefijo;
-    private String cecbTipopacsufijo;
-    private String cecbProceprefijo;
-    private String cecbProcesufijo;
-    private String cecbServprefijo;
-    private String cecbServsufijo;
-    private String cecbNombprefijo;
-    private String cecbNombsufijo;
-    private String cecbSexoprefijo;
-    private String cecbSexosufijo;
-    private String cecbEdadprefijo;
-    private String cecbEdadsufijo;
-    private String cecbTipmueprefijo;
-    private String cecbTipmuesufijo;
-    private String cecbEnvaprefijo;
-    private String cecbEnvasufijo;
-    private String cecbFechaprefijo;
-    private String cecbFechasufijo;
-    private String cecbParametrizada;
-    private String cecbRutprefijo;
-    private String cecbRutsufijo;
-    
-    public CfgEtiquetacodigobarras() {
-    }
-
-    public String getCecbCodigo() {
-        return cecbCodigo;
-    }
-
-    public void setCecbCodigo(String cecbCodigo) {
-        this.cecbCodigo = cecbCodigo;
-    }
-
-    public String getCecbDescripcion() {
-        return cecbDescripcion;
-    }
-
-    public void setCecbDescripcion(String cecbDescripcion) {
-        this.cecbDescripcion = cecbDescripcion;
-    }
-
-    public String getCecbFontcodigobarra() {
-        return cecbFontcodigobarra;
-    }
-
-    public void setCecbFontcodigobarra(String cecbFontcodigobarra) {
-        this.cecbFontcodigobarra = cecbFontcodigobarra;
-    }
-
-    public BigDecimal getCecbTamanofontcodigobarras() {
-        return cecbTamanofontcodigobarras;
-    }
-
-    public void setCecbTamanofontcodigobarras(BigDecimal cecbTamanofontcodigobarras) {
-        this.cecbTamanofontcodigobarras = cecbTamanofontcodigobarras;
-    }
-
-    public BigDecimal getCecbFilacodigobarras() {
-        return cecbFilacodigobarras;
-    }
-
-    public void setCecbFilacodigobarras(BigDecimal cecbFilacodigobarras) {
-        this.cecbFilacodigobarras = cecbFilacodigobarras;
-    }
-
-    public BigDecimal getCecbColumnacodigobarras() {
-        return cecbColumnacodigobarras;
-    }
-
-    public void setCecbColumnacodigobarras(BigDecimal cecbColumnacodigobarras) {
-        this.cecbColumnacodigobarras = cecbColumnacodigobarras;
-    }
-
-    public String getCecbActivocodigobarras() {
-        return cecbActivocodigobarras;
-    }
-
-    public void setCecbActivocodigobarras(String cecbActivocodigobarras) {
-        this.cecbActivocodigobarras = cecbActivocodigobarras;
-    }
-
-    public BigDecimal getCecbTexto0fila() {
-        return cecbTexto0fila;
-    }
-
-    public void setCecbTexto0fila(BigDecimal cecbTexto0fila) {
-        this.cecbTexto0fila = cecbTexto0fila;
-    }
-
-    public BigDecimal getCecbTexto0columna() {
-        return cecbTexto0columna;
-    }
-
-    public void setCecbTexto0columna(BigDecimal cecbTexto0columna) {
-        this.cecbTexto0columna = cecbTexto0columna;
-    }
-
-    public String getCecbActivotexto0() {
-        return cecbActivotexto0;
-    }
-
-    public void setCecbActivotexto0(String cecbActivotexto0) {
-        this.cecbActivotexto0 = cecbActivotexto0;
-    }
-
-    public String getCecbNegrita0() {
-        return cecbNegrita0;
-    }
-
-    public void setCecbNegrita0(String cecbNegrita0) {
-        this.cecbNegrita0 = cecbNegrita0;
-    }
-
-    public String getCecbtamano0() {
-        return cecbtamano0;
-    }
-
-    public void setCecbtamano0(String cecbtamano0) {
-        this.cecbtamano0 = cecbtamano0;
-    }
-
-    public BigDecimal getCecbTexto1fila() {
-        return cecbTexto1fila;
-    }
-
-    public void setCecbTexto1fila(BigDecimal cecbTexto1fila) {
-        this.cecbTexto1fila = cecbTexto1fila;
-    }
-
-    public BigDecimal getCecbTexto1columna() {
-        return cecbTexto1columna;
-    }
-
-    public void setCecbTexto1columna(BigDecimal cecbTexto1columna) {
-        this.cecbTexto1columna = cecbTexto1columna;
-    }
-
-    public BigDecimal getCecbTexto1largo() {
-        return cecbTexto1largo;
-    }
-
-    public void setCecbTexto1largo(BigDecimal cecbTexto1largo) {
-        this.cecbTexto1largo = cecbTexto1largo;
-    }
-
-    public BigDecimal getCecbTexto1tamano() {
-        return cecbTexto1tamano;
-    }
-
-    public void setCecbTexto1tamano(BigDecimal cecbTexto1tamano) {
-        this.cecbTexto1tamano = cecbTexto1tamano;
-    }
-
-    public String getCecbActivotexto1() {
-        return cecbActivotexto1;
-    }
-
-    public void setCecbActivotexto1(String cecbActivotexto1) {
-        this.cecbActivotexto1 = cecbActivotexto1;
-    }
-
-    public String getCecbNegrita1() {
-        return cecbNegrita1;
-    }
-
-    public void setCecbNegrita1(String cecbNegrita1) {
-        this.cecbNegrita1 = cecbNegrita1;
-    }
-
-    public BigDecimal getCecbTexto2fila() {
-        return cecbTexto2fila;
-    }
-
-    public void setCecbTexto2fila(BigDecimal cecbTexto2fila) {
-        this.cecbTexto2fila = cecbTexto2fila;
-    }
-
-    public BigDecimal getCecbTexto2columna() {
-        return cecbTexto2columna;
-    }
-
-    public void setCecbTexto2columna(BigDecimal cecbTexto2columna) {
-        this.cecbTexto2columna = cecbTexto2columna;
-    }
-
-    public BigDecimal getCecbTexto2largo() {
-        return cecbTexto2largo;
-    }
-
-    public void setCecbTexto2largo(BigDecimal cecbTexto2largo) {
-        this.cecbTexto2largo = cecbTexto2largo;
-    }
-
-    public BigDecimal getCecbTexto2tamano() {
-        return cecbTexto2tamano;
-    }
-
-    public void setCecbTexto2tamano(BigDecimal cecbTexto2tamano) {
-        this.cecbTexto2tamano = cecbTexto2tamano;
-    }
-
-    public String getCecbActivotexto2() {
-        return cecbActivotexto2;
-    }
-
-    public void setCecbActivotexto2(String cecbActivotexto2) {
-        this.cecbActivotexto2 = cecbActivotexto2;
-    }
-
-    public String getCecbNegrita2() {
-        return cecbNegrita2;
-    }
-
-    public void setCecbNegrita2(String cecbNegrita2) {
-        this.cecbNegrita2 = cecbNegrita2;
-    }
-
-    public BigDecimal getCecbTexto3fila() {
-        return cecbTexto3fila;
-    }
-
-    public void setCecbTexto3fila(BigDecimal cecbTexto3fila) {
-        this.cecbTexto3fila = cecbTexto3fila;
-    }
-
-    public BigDecimal getCecbTexto3columna() {
-        return cecbTexto3columna;
-    }
-
-    public void setCecbTexto3columna(BigDecimal cecbTexto3columna) {
-        this.cecbTexto3columna = cecbTexto3columna;
-    }
-
-    public BigDecimal getCecbTexto3largo() {
-        return cecbTexto3largo;
-    }
-
-    public void setCecbTexto3largo(BigDecimal cecbTexto3largo) {
-        this.cecbTexto3largo = cecbTexto3largo;
-    }
-
-    public BigDecimal getCecbTexto3tamano() {
-        return cecbTexto3tamano;
-    }
-
-    public void setCecbTexto3tamano(BigDecimal cecbTexto3tamano) {
-        this.cecbTexto3tamano = cecbTexto3tamano;
-    }
-
-    public String getCecbActivotexto3() {
-        return cecbActivotexto3;
-    }
-
-    public void setCecbActivotexto3(String cecbActivotexto3) {
-        this.cecbActivotexto3 = cecbActivotexto3;
-    }
-
-    public String getCecbNegrita3() {
-        return cecbNegrita3;
-    }
-
-    public void setCecbNegrita3(String cecbNegrita3) {
-        this.cecbNegrita3 = cecbNegrita3;
-    }
-
-    public BigDecimal getCecbTexto4fila() {
-        return cecbTexto4fila;
-    }
-
-    public void setCecbTexto4fila(BigDecimal cecbTexto4fila) {
-        this.cecbTexto4fila = cecbTexto4fila;
-    }
-
-    public BigDecimal getCecbTexto4columna() {
-        return cecbTexto4columna;
-    }
-
-    public void setCecbTexto4columna(BigDecimal cecbTexto4columna) {
-        this.cecbTexto4columna = cecbTexto4columna;
-    }
-
-    public BigDecimal getCecbTexto4largo() {
-        return cecbTexto4largo;
-    }
-
-    public void setCecbTexto4largo(BigDecimal cecbTexto4largo) {
-        this.cecbTexto4largo = cecbTexto4largo;
-    }
-
-    public BigDecimal getCecbTexto4tamano() {
-        return cecbTexto4tamano;
-    }
-
-    public void setCecbTexto4tamano(BigDecimal cecbTexto4tamano) {
-        this.cecbTexto4tamano = cecbTexto4tamano;
-    }
-
-    public String getCecbActivotexto4() {
-        return cecbActivotexto4;
-    }
-
-    public void setCecbActivotexto4(String cecbActivotexto4) {
-        this.cecbActivotexto4 = cecbActivotexto4;
-    }
-
-    public String getCecbNegrita4() {
-        return cecbNegrita4;
-    }
-
-    public void setCecbNegrita4(String cecbNegrita4) {
-        this.cecbNegrita4 = cecbNegrita4;
-    }
-
-    public BigDecimal getCecbTexto5fila() {
-        return cecbTexto5fila;
-    }
-
-    public void setCecbTexto5fila(BigDecimal cecbTexto5fila) {
-        this.cecbTexto5fila = cecbTexto5fila;
-    }
-
-    public BigDecimal getCecbTexto5columna() {
-        return cecbTexto5columna;
-    }
-
-    public void setCecbTexto5columna(BigDecimal cecbTexto5columna) {
-        this.cecbTexto5columna = cecbTexto5columna;
-    }
-
-    public BigDecimal getCecbTexto5largo() {
-        return cecbTexto5largo;
-    }
-
-    public void setCecbTexto5largo(BigDecimal cecbTexto5largo) {
-        this.cecbTexto5largo = cecbTexto5largo;
-    }
-
-    public BigDecimal getCecbTexto5tamano() {
-        return cecbTexto5tamano;
-    }
-
-    public void setCecbTexto5tamano(BigDecimal cecbTexto5tamano) {
-        this.cecbTexto5tamano = cecbTexto5tamano;
-    }
-
-    public String getCecbActivotexto5() {
-        return cecbActivotexto5;
-    }
-
-    public void setCecbActivotexto5(String cecbActivotexto5) {
-        this.cecbActivotexto5 = cecbActivotexto5;
-    }
-
-    public String getCecbNegrita5() {
-        return cecbNegrita5;
-    }
-
-    public void setCecbNegrita5(String cecbNegrita5) {
-        this.cecbNegrita5 = cecbNegrita5;
-    }
-
-    public BigDecimal getCecbTexto6fila() {
-        return cecbTexto6fila;
-    }
-
-    public void setCecbTexto6fila(BigDecimal cecbTexto6fila) {
-        this.cecbTexto6fila = cecbTexto6fila;
-    }
-
-    public BigDecimal getCecbTexto6columna() {
-        return cecbTexto6columna;
-    }
-
-    public void setCecbTexto6columna(BigDecimal cecbTexto6columna) {
-        this.cecbTexto6columna = cecbTexto6columna;
-    }
-
-    public BigDecimal getCecbTexto6largo() {
-        return cecbTexto6largo;
-    }
-
-    public void setCecbTexto6largo(BigDecimal cecbTexto6largo) {
-        this.cecbTexto6largo = cecbTexto6largo;
-    }
-
-    public BigDecimal getCecbTexto6tamano() {
-        return cecbTexto6tamano;
-    }
-
-    public void setCecbTexto6tamano(BigDecimal cecbTexto6tamano) {
-        this.cecbTexto6tamano = cecbTexto6tamano;
-    }
-
-    public String getCecbActivotexto6() {
-        return cecbActivotexto6;
-    }
-
-    public void setCecbActivotexto6(String cecbActivotexto6) {
-        this.cecbActivotexto6 = cecbActivotexto6;
-    }
-
-    public String getCecbNegrita6() {
-        return cecbNegrita6;
-    }
-
-    public void setCecbNegrita6(String cecbNegrita6) {
-        this.cecbNegrita6 = cecbNegrita6;
-    }
-
-    public BigDecimal getCecbTexto7fila() {
-        return cecbTexto7fila;
-    }
-
-    public void setCecbTexto7fila(BigDecimal cecbTexto7fila) {
-        this.cecbTexto7fila = cecbTexto7fila;
-    }
-
-    public BigDecimal getCecbTexto7columna() {
-        return cecbTexto7columna;
-    }
-
-    public void setCecbTexto7columna(BigDecimal cecbTexto7columna) {
-        this.cecbTexto7columna = cecbTexto7columna;
-    }
-
-    public BigDecimal getCecbTexto7largo() {
-        return cecbTexto7largo;
-    }
-
-    public void setCecbTexto7largo(BigDecimal cecbTexto7largo) {
-        this.cecbTexto7largo = cecbTexto7largo;
-    }
-
-    public BigDecimal getCecbTexto7tamano() {
-        return cecbTexto7tamano;
-    }
-
-    public void setCecbTexto7tamano(BigDecimal cecbTexto7tamano) {
-        this.cecbTexto7tamano = cecbTexto7tamano;
-    }
-
-    public String getCecbActivotexto7() {
-        return cecbActivotexto7;
-    }
-
-    public void setCecbActivotexto7(String cecbActivotexto7) {
-        this.cecbActivotexto7 = cecbActivotexto7;
-    }
-
-    public String getCecbNegrita7() {
-        return cecbNegrita7;
-    }
-
-    public void setCecbNegrita7(String cecbNegrita7) {
-        this.cecbNegrita7 = cecbNegrita7;
-    }
-
-    public BigDecimal getCecbTexto8fila() {
-        return cecbTexto8fila;
-    }
-
-    public void setCecbTexto8fila(BigDecimal cecbTexto8fila) {
-        this.cecbTexto8fila = cecbTexto8fila;
-    }
-
-    public BigDecimal getCecbTexto8columna() {
-        return cecbTexto8columna;
-    }
-
-    public void setCecbTexto8columna(BigDecimal cecbTexto8columna) {
-        this.cecbTexto8columna = cecbTexto8columna;
-    }
-
-    public BigDecimal getCecbTexto8largo() {
-        return cecbTexto8largo;
-    }
-
-    public void setCecbTexto8largo(BigDecimal cecbTexto8largo) {
-        this.cecbTexto8largo = cecbTexto8largo;
-    }
-
-    public BigDecimal getCecbTexto8tamano() {
-        return cecbTexto8tamano;
-    }
-
-    public void setCecbTexto8tamano(BigDecimal cecbTexto8tamano) {
-        this.cecbTexto8tamano = cecbTexto8tamano;
-    }
-
-    public String getCecbActivotexto8() {
-        return cecbActivotexto8;
-    }
-
-    public void setCecbActivotexto8(String cecbActivotexto8) {
-        this.cecbActivotexto8 = cecbActivotexto8;
-    }
-
-    public String getCecbNegrita8() {
-        return cecbNegrita8;
-    }
-
-    public void setCecbNegrita8(String cecbNegrita8) {
-        this.cecbNegrita8 = cecbNegrita8;
-    }
-
-    public BigDecimal getCecbTexto9fila() {
-        return cecbTexto9fila;
-    }
-
-    public void setCecbTexto9fila(BigDecimal cecbTexto9fila) {
-        this.cecbTexto9fila = cecbTexto9fila;
-    }
-
-    public BigDecimal getCecbTexto9columna() {
-        return cecbTexto9columna;
-    }
-
-    public void setCecbTexto9columna(BigDecimal cecbTexto9columna) {
-        this.cecbTexto9columna = cecbTexto9columna;
-    }
-
-    public BigDecimal getCecbTexto9largo() {
-        return cecbTexto9largo;
-    }
-
-    public void setCecbTexto9largo(BigDecimal cecbTexto9largo) {
-        this.cecbTexto9largo = cecbTexto9largo;
-    }
-
-    public BigDecimal getCecbTexto9tamano() {
-        return cecbTexto9tamano;
-    }
-
-    public void setCecbTexto9tamano(BigDecimal cecbTexto9tamano) {
-        this.cecbTexto9tamano = cecbTexto9tamano;
-    }
-
-    public String getCecbActivotexto9() {
-        return cecbActivotexto9;
-    }
-
-    public void setCecbActivotexto9(String cecbActivotexto9) {
-        this.cecbActivotexto9 = cecbActivotexto9;
-    }
-
-    public String getCecbNegrita9() {
-        return cecbNegrita9;
-    }
-
-    public void setCecbNegrita9(String cecbNegrita9) {
-        this.cecbNegrita9 = cecbNegrita9;
-    }
-
-    public BigDecimal getCecbTexto10fila() {
-        return cecbTexto10fila;
-    }
-
-    public void setCecbTexto10fila(BigDecimal cecbTexto10fila) {
-        this.cecbTexto10fila = cecbTexto10fila;
-    }
-
-    public BigDecimal getCecbTexto10columna() {
-        return cecbTexto10columna;
-    }
-
-    public void setCecbTexto10columna(BigDecimal cecbTexto10columna) {
-        this.cecbTexto10columna = cecbTexto10columna;
-    }
-
-    public BigDecimal getCecbTexto10largo() {
-        return cecbTexto10largo;
-    }
-
-    public void setCecbTexto10largo(BigDecimal cecbTexto10largo) {
-        this.cecbTexto10largo = cecbTexto10largo;
-    }
-
-    public BigDecimal getCecbTexto10tamano() {
-        return cecbTexto10tamano;
-    }
-
-    public void setCecbTexto10tamano(BigDecimal cecbTexto10tamano) {
-        this.cecbTexto10tamano = cecbTexto10tamano;
-    }
-
-    public String getCecbActivotexto10() {
-        return cecbActivotexto10;
-    }
-
-    public void setCecbActivotexto10(String cecbActivotexto10) {
-        this.cecbActivotexto10 = cecbActivotexto10;
-    }
-
-    public String getCecbNegrita10() {
-        return cecbNegrita10;
-    }
-
-    public void setCecbNegrita10(String cecbNegrita10) {
-        this.cecbNegrita10 = cecbNegrita10;
-    }
-
-    public BigDecimal getCecbTexto11fila() {
-        return cecbTexto11fila;
-    }
-
-    public void setCecbTexto11fila(BigDecimal cecbTexto11fila) {
-        this.cecbTexto11fila = cecbTexto11fila;
-    }
-
-    public BigDecimal getCecbTexto11columna() {
-        return cecbTexto11columna;
-    }
-
-    public void setCecbTexto11columna(BigDecimal cecbTexto11columna) {
-        this.cecbTexto11columna = cecbTexto11columna;
-    }
-
-    public BigDecimal getCecbTexto11largo() {
-        return cecbTexto11largo;
-    }
-
-    public void setCecbTexto11largo(BigDecimal cecbTexto11largo) {
-        this.cecbTexto11largo = cecbTexto11largo;
-    }
-
-    public BigDecimal getCecbTexto11tamano() {
-        return cecbTexto11tamano;
-    }
-
-    public void setCecbTexto11tamano(BigDecimal cecbTexto11tamano) {
-        this.cecbTexto11tamano = cecbTexto11tamano;
-    }
-
-    public String getCecbActivotexto11() {
-        return cecbActivotexto11;
-    }
-
-    public void setCecbActivotexto11(String cecbActivotexto11) {
-        this.cecbActivotexto11 = cecbActivotexto11;
-    }
-
-    public String getCecbNegrita11() {
-        return cecbNegrita11;
-    }
-
-    public void setCecbNegrita11(String cecbNegrita11) {
-        this.cecbNegrita11 = cecbNegrita11;
-    }
-
-    public BigDecimal getCecbTexto12fila() {
-        return cecbTexto12fila;
-    }
-
-    public void setCecbTexto12fila(BigDecimal cecbTexto12fila) {
-        this.cecbTexto12fila = cecbTexto12fila;
-    }
-
-    public BigDecimal getCecbTexto12columna() {
-        return cecbTexto12columna;
-    }
-
-    public void setCecbTexto12columna(BigDecimal cecbTexto12columna) {
-        this.cecbTexto12columna = cecbTexto12columna;
-    }
-
-    public BigDecimal getCecbTexto12largo() {
-        return cecbTexto12largo;
-    }
-
-    public void setCecbTexto12largo(BigDecimal cecbTexto12largo) {
-        this.cecbTexto12largo = cecbTexto12largo;
-    }
-
-    public BigDecimal getCecbTexto12tamano() {
-        return cecbTexto12tamano;
-    }
-
-    public void setCecbTexto12tamano(BigDecimal cecbTexto12tamano) {
-        this.cecbTexto12tamano = cecbTexto12tamano;
-    }
-
-    public String getCecbActivotexto12() {
-        return cecbActivotexto12;
-    }
-
-    public void setCecbActivotexto12(String cecbActivotexto12) {
-        this.cecbActivotexto12 = cecbActivotexto12;
-    }
-
-    public String getCecbNegrita12() {
-        return cecbNegrita12;
-    }
-
-    public void setCecbNegrita12(String cecbNegrita12) {
-        this.cecbNegrita12 = cecbNegrita12;
-    }
-
-    public BigDecimal getCecbSort() {
-        return cecbSort;
-    }
-
-    public void setCecbSort(BigDecimal cecbSort) {
-        this.cecbSort = cecbSort;
-    }
-
-    public String getCecbNota() {
-        return cecbNota;
-    }
-
-    public void setCecbNota(String cecbNota) {
-        this.cecbNota = cecbNota;
-    }
-
-    public String getCecbUsuarioregistro() {
-        return cecbUsuarioregistro;
-    }
-
-    public void setCecbUsuarioregistro(String cecbUsuarioregistro) {
-        this.cecbUsuarioregistro = cecbUsuarioregistro;
-    }
-
-    public Date getCecbFecharegistro() {
-        return cecbFecharegistro;
-    }
-
-    public void setCecbFecharegistro(Date cecbFecharegistro) {
-        this.cecbFecharegistro = cecbFecharegistro;
-    }
-
-    public String getCecbProcedencia() {
-        return cecbProcedencia;
-    }
-
-    public void setCecbProcedencia(String cecbProcedencia) {
-        this.cecbProcedencia = cecbProcedencia;
-    }
-
-    public String getCecbServicio() {
-        return cecbServicio;
-    }
-
-    public void setCecbServicio(String cecbServicio) {
-        this.cecbServicio = cecbServicio;
-    }
-
-    public String getCecbTipopacprefijo() {
-        return cecbTipopacprefijo;
-    }
-
-    public void setCecbTipopacprefijo(String cecbTipopacprefijo) {
-        this.cecbTipopacprefijo = cecbTipopacprefijo;
-    }
-
-    public String getCecbTipopacsufijo() {
-        return cecbTipopacsufijo;
-    }
-
-    public void setCecbTipopacsufijo(String cecbTipopacsufijo) {
-        this.cecbTipopacsufijo = cecbTipopacsufijo;
-    }
-
-    public String getCecbProceprefijo() {
-        return cecbProceprefijo;
-    }
-
-    public void setCecbProceprefijo(String cecbProceprefijo) {
-        this.cecbProceprefijo = cecbProceprefijo;
-    }
-
-    public String getCecbProcesufijo() {
-        return cecbProcesufijo;
-    }
-
-    public void setCecbProcesufijo(String cecbProcesufijo) {
-        this.cecbProcesufijo = cecbProcesufijo;
-    }
-
-    public String getCecbServprefijo() {
-        return cecbServprefijo;
-    }
-
-    public void setCecbServprefijo(String cecbServprefijo) {
-        this.cecbServprefijo = cecbServprefijo;
-    }
-
-    public String getCecbServsufijo() {
-        return cecbServsufijo;
-    }
-
-    public void setCecbServsufijo(String cecbServsufijo) {
-        this.cecbServsufijo = cecbServsufijo;
-    }
-
-   
-
-    public String getCecbNombprefijo() {
-        return cecbNombprefijo;
-    }
-
-    public void setCecbNombprefijo(String cecbNombprefijo) {
-        this.cecbNombprefijo = cecbNombprefijo;
-    }
-
-    public String getCecbNombsufijo() {
-        return cecbNombsufijo;
-    }
-
-    public void setCecbNombsufijo(String cecbNombsufijo) {
-        this.cecbNombsufijo = cecbNombsufijo;
-    }
-
-    public String getCecbSexoprefijo() {
-        return cecbSexoprefijo;
-    }
-
-    public void setCecbSexoprefijo(String cecbSexoprefijo) {
-        this.cecbSexoprefijo = cecbSexoprefijo;
-    }
-
-    public String getCecbSexosufijo() {
-        return cecbSexosufijo;
-    }
-
-    public void setCecbSexosufijo(String cecbSexosufijo) {
-        this.cecbSexosufijo = cecbSexosufijo;
-    }
-
-    public String getCecbEdadprefijo() {
-        return cecbEdadprefijo;
-    }
-
-    public void setCecbEdadprefijo(String cecbEdadprefijo) {
-        this.cecbEdadprefijo = cecbEdadprefijo;
-    }
-
-    public String getCecbEdadsufijo() {
-        return cecbEdadsufijo;
-    }
-
-    public void setCecbEdadsufijo(String cecbEdadsufijo) {
-        this.cecbEdadsufijo = cecbEdadsufijo;
-    }
-
-    public String getCecbTipmueprefijo() {
-        return cecbTipmueprefijo;
-    }
-
-    public void setCecbTipmueprefijo(String cecbTipmueprefijo) {
-        this.cecbTipmueprefijo = cecbTipmueprefijo;
-    }
-
-    public String getCecbTipmuesufijo() {
-        return cecbTipmuesufijo;
-    }
-
-    public void setCecbTipmuesufijo(String cecbTipmuesufijo) {
-        this.cecbTipmuesufijo = cecbTipmuesufijo;
-    }
-
-    public String getCecbEnvaprefijo() {
-        return cecbEnvaprefijo;
-    }
-
-    public void setCecbEnvaprefijo(String cecbEnvaprefijo) {
-        this.cecbEnvaprefijo = cecbEnvaprefijo;
-    }
-
-    public String getCecbEnvasufijo() {
-        return cecbEnvasufijo;
-    }
-
-    public void setCecbEnvasufijo(String cecbEnvasufijo) {
-        this.cecbEnvasufijo = cecbEnvasufijo;
-    }
-
-    public String getCecbFechaprefijo() {
-        return cecbFechaprefijo;
-    }
-
-    public void setCecbFechaprefijo(String cecbFechaprefijo) {
-        this.cecbFechaprefijo = cecbFechaprefijo;
-    }
-
-    public String getCecbFechasufijo() {
-        return cecbFechasufijo;
-    }
-
-    public void setCecbFechasufijo(String cecbFechasufijo) {
-        this.cecbFechasufijo = cecbFechasufijo;
-    }
-
-    public String getCecbParametrizada() {
-        return cecbParametrizada;
-    }
-
-    public void setCecbParametrizada(String cecbParametrizada) {
-        this.cecbParametrizada = cecbParametrizada;
-    }
-
-    public String getCecbRutprefijo() {
-        return cecbRutprefijo;
-    }
-
-    public void setCecbRutprefijo(String cecbRutprefijo) {
-        this.cecbRutprefijo = cecbRutprefijo;
-    }
-
-    public String getCecbRutsufijo() {
-        return cecbRutsufijo;
-    }
-
-    public void setCecbRutsufijo(String cecbRutsufijo) {
-        this.cecbRutsufijo = cecbRutsufijo;
-    }
-    
-    
-    
-    
-    
-    
-    
-}
diff --git a/src/main/java/com/grupobios/bioslis/entity/CfgExamenes.java b/src/main/java/com/grupobios/bioslis/entity/CfgExamenes.java
index 01ec29a4..77c832e5 100755
--- a/src/main/java/com/grupobios/bioslis/entity/CfgExamenes.java
+++ b/src/main/java/com/grupobios/bioslis/entity/CfgExamenes.java
@@ -100,7 +100,6 @@ public class CfgExamenes implements java.io.Serializable {
   private String ceCompartemuestra;
   private String ceTienegrupomuestra;
   private String ceCellcounter;
-
   //@JsonIgnore
   //private CfgExamenesindicacionestm cfgExamenesindicacionestm;
   @JsonIgnore
diff --git a/src/main/java/com/grupobios/bioslis/entity/DatosFichas.java b/src/main/java/com/grupobios/bioslis/entity/DatosFichas.java
index 843efa67..5edad0e1 100755
--- a/src/main/java/com/grupobios/bioslis/entity/DatosFichas.java
+++ b/src/main/java/com/grupobios/bioslis/entity/DatosFichas.java
@@ -32,7 +32,6 @@ public class DatosFichas  implements java.io.Serializable {
      private String dfHost;
      private String dfEnviarresultadosemail;
      private String dfTmclick;
-  
 
     public DatosFichas() {
     }
@@ -186,8 +185,7 @@ public class DatosFichas  implements java.io.Serializable {
 	public void setCfgLocalizaciones(Integer cfgLocalizaciones) {
 		this.cfgLocalizaciones = cfgLocalizaciones;
 	}
-
-  
+    
     
 
 }
diff --git a/src/main/java/com/grupobios/bioslis/entity/DatosFichasexamenesId.java b/src/main/java/com/grupobios/bioslis/entity/DatosFichasexamenesId.java
index d9afa13e..76257bb7 100755
--- a/src/main/java/com/grupobios/bioslis/entity/DatosFichasexamenesId.java
+++ b/src/main/java/com/grupobios/bioslis/entity/DatosFichasexamenesId.java
@@ -11,7 +11,6 @@ public class DatosFichasexamenesId implements java.io.Serializable {
 
 	public DatosFichasexamenesId() {
 	}
-	
 
 	public DatosFichasexamenesId(long dfeNorden, long dfeIdexamen) {
         this.dfeNorden = dfeNorden;
diff --git a/src/main/java/com/grupobios/bioslis/entity/DatosFichasexamenestest.java b/src/main/java/com/grupobios/bioslis/entity/DatosFichasexamenestest.java
index 7b6da836..0ef13e7d 100755
--- a/src/main/java/com/grupobios/bioslis/entity/DatosFichasexamenestest.java
+++ b/src/main/java/com/grupobios/bioslis/entity/DatosFichasexamenestest.java
@@ -55,8 +55,6 @@ public class DatosFichasexamenestest implements java.io.Serializable {
   private String dfetTestfirmado;
   private String dfetComentarionadie;
   private String dfetComentariootro;
-  //agregado por cristian 04-11
-  private BigDecimal dfetIdmetodo;
 
   // AGREGADO A MANO, NO TRAE DESDE BD
   private String valoresReferencias;
@@ -440,13 +438,5 @@ public class DatosFichasexamenestest implements java.io.Serializable {
   public String toString() {
     return "DatosFichasexamenestest{" + "id=" + id.toString() + '}';
   }
-//agregado por cristian 04-11  
-public BigDecimal getDfetIdmetodo() {
-    return dfetIdmetodo;
-}
-
-public void setDfetIdmetodo(BigDecimal dfetIdmetodo) {
-    this.dfetIdmetodo = dfetIdmetodo;
-}
 
 }
diff --git a/src/main/java/com/grupobios/bioslis/entity/SigmaPrefijostest.java b/src/main/java/com/grupobios/bioslis/entity/SigmaPrefijostest.java
deleted file mode 100644
index 127de5a9..00000000
--- a/src/main/java/com/grupobios/bioslis/entity/SigmaPrefijostest.java
+++ /dev/null
@@ -1,59 +0,0 @@
-package com.grupobios.bioslis.entity;
-// Generated 16-08-2021 14:22:20 by Hibernate Tools 4.3.1
-
-
-import java.util.HashSet;
-import java.util.Set;
-
-/**
- * SigmaPrefijostest generated by hbm2java
- */
-public class SigmaPrefijostest  implements java.io.Serializable {
-
-
-     private int sptIdprefijostest;
-     private String sptPrefijotest;
-     private Set sigmaProcesosanalizadorestests = new HashSet(0);
-
-    public SigmaPrefijostest() {
-    }
-
-	
-    public SigmaPrefijostest(int sptIdprefijostest, String sptPrefijotest) {
-        this.sptIdprefijostest = sptIdprefijostest;
-        this.sptPrefijotest = sptPrefijotest;
-    }
-    public SigmaPrefijostest(int sptIdprefijostest, String sptPrefijotest, Set sigmaProcesosanalizadorestests) {
-       this.sptIdprefijostest = sptIdprefijostest;
-       this.sptPrefijotest = sptPrefijotest;
-       this.sigmaProcesosanalizadorestests = sigmaProcesosanalizadorestests;
-    }
-   
-    public int getSptIdprefijostest() {
-        return this.sptIdprefijostest;
-    }
-    
-    public void setSptIdprefijostest(int sptIdprefijostest) {
-        this.sptIdprefijostest = sptIdprefijostest;
-    }
-    public String getSptPrefijotest() {
-        return this.sptPrefijotest;
-    }
-    
-    public void setSptPrefijotest(String sptPrefijotest) {
-        this.sptPrefijotest = sptPrefijotest;
-    }
-    public Set getSigmaProcesosanalizadorestests() {
-        return this.sigmaProcesosanalizadorestests;
-    }
-    
-    public void setSigmaProcesosanalizadorestests(Set sigmaProcesosanalizadorestests) {
-        this.sigmaProcesosanalizadorestests = sigmaProcesosanalizadorestests;
-    }
-
-
-
-
-}
-
-
diff --git a/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosalarmas.java b/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosalarmas.java
index b3bf599b..8c3b5bad 100644
--- a/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosalarmas.java
+++ b/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosalarmas.java
@@ -1,6 +1,9 @@
 package com.grupobios.bioslis.entity;
 // Generated 08-11-2022 1:16:04 by Hibernate Tools 4.3.1
 
+import com.fasterxml.jackson.annotation.JsonIgnore;
+
+
 
 
 /**
@@ -10,6 +13,7 @@ public class SigmaProcesosalarmas  implements java.io.Serializable {
 
 
      private short spaIdprocesoalarma;
+     @JsonIgnore
      private SigmaProcesos sigmaProcesos;
      private String spaCodigoalarma;
      private String spaAlarmadescripcion;
diff --git a/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosanalizadores.java b/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosanalizadores.java
deleted file mode 100644
index 4c523ac1..00000000
--- a/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosanalizadores.java
+++ /dev/null
@@ -1,257 +0,0 @@
-package com.grupobios.bioslis.entity;
-// Generated 16-08-2021 14:22:20 by Hibernate Tools 4.3.1
-
-
-import java.util.HashSet;
-import java.util.Set;
-
-/**
- * SigmaProcesosanalizadores generated by hbm2java
- */
-public class SigmaProcesosanalizadores  implements java.io.Serializable {
-
-
-     private int spaIdanalizador;
-     private LdvTipocomunicacion ldvTipocomunicacion;
-     private String spaCodigoanalizador;
-     private String spaDescripcion;
-     private Byte spaEstacionsigma;
-     private String spaParametros;
-     private String spaCargatemporal;
-     private Short spaTiempocargatemporalseg;
-     private String spaCargaanalizador;
-     private Short spaTiempocargaanalizadorseg;
-     private String spaActivo;
-     private String spaCodigohost;
-     private String spaCodigobarras;
-     private String spaResultadostemporales;
-     private String spaNmuestralargo12;
-     private String spaMuestrarecepcionada;
-     private String spaControlalarmas;
-     private String spaPrefijo;
-     private Integer spaSort;
-     private String spaCodigoqc;
-     private Byte spaIdformatoimagen;
-     private String spaQc;
-     private String spaFirmaexamenes;
-     private String spaAutorizaexamenes;
-     private Set sigmaProcesosanalizadorestests = new HashSet(0);
-
-    public SigmaProcesosanalizadores() {
-    }
-
-	
-    public SigmaProcesosanalizadores(int spaIdanalizador, String spaCodigoanalizador) {
-        this.spaIdanalizador = spaIdanalizador;
-        this.spaCodigoanalizador = spaCodigoanalizador;
-    }
-    public SigmaProcesosanalizadores(int spaIdanalizador, LdvTipocomunicacion ldvTipocomunicacion, String spaCodigoanalizador, String spaDescripcion, Byte spaEstacionsigma, String spaParametros, String spaCargatemporal, Short spaTiempocargatemporalseg, String spaCargaanalizador, Short spaTiempocargaanalizadorseg, String spaActivo, String spaCodigohost, String spaCodigobarras, String spaResultadostemporales, String spaNmuestralargo12, String spaMuestrarecepcionada, String spaControlalarmas, String spaPrefijo, Integer spaSort, String spaCodigoqc, Byte spaIdformatoimagen, String spaQc, String spaFirmaexamenes, String spaAutorizaexamenes, Set sigmaProcesosanalizadorestests) {
-       this.spaIdanalizador = spaIdanalizador;
-       this.ldvTipocomunicacion = ldvTipocomunicacion;
-       this.spaCodigoanalizador = spaCodigoanalizador;
-       this.spaDescripcion = spaDescripcion;
-       this.spaEstacionsigma = spaEstacionsigma;
-       this.spaParametros = spaParametros;
-       this.spaCargatemporal = spaCargatemporal;
-       this.spaTiempocargatemporalseg = spaTiempocargatemporalseg;
-       this.spaCargaanalizador = spaCargaanalizador;
-       this.spaTiempocargaanalizadorseg = spaTiempocargaanalizadorseg;
-       this.spaActivo = spaActivo;
-       this.spaCodigohost = spaCodigohost;
-       this.spaCodigobarras = spaCodigobarras;
-       this.spaResultadostemporales = spaResultadostemporales;
-       this.spaNmuestralargo12 = spaNmuestralargo12;
-       this.spaMuestrarecepcionada = spaMuestrarecepcionada;
-       this.spaControlalarmas = spaControlalarmas;
-       this.spaPrefijo = spaPrefijo;
-       this.spaSort = spaSort;
-       this.spaCodigoqc = spaCodigoqc;
-       this.spaIdformatoimagen = spaIdformatoimagen;
-       this.spaQc = spaQc;
-       this.spaFirmaexamenes = spaFirmaexamenes;
-       this.spaAutorizaexamenes = spaAutorizaexamenes;
-       this.sigmaProcesosanalizadorestests = sigmaProcesosanalizadorestests;
-    }
-   
-    public int getSpaIdanalizador() {
-        return this.spaIdanalizador;
-    }
-    
-    public void setSpaIdanalizador(int spaIdanalizador) {
-        this.spaIdanalizador = spaIdanalizador;
-    }
-    public LdvTipocomunicacion getLdvTipocomunicacion() {
-        return this.ldvTipocomunicacion;
-    }
-    
-    public void setLdvTipocomunicacion(LdvTipocomunicacion ldvTipocomunicacion) {
-        this.ldvTipocomunicacion = ldvTipocomunicacion;
-    }
-    public String getSpaCodigoanalizador() {
-        return this.spaCodigoanalizador;
-    }
-    
-    public void setSpaCodigoanalizador(String spaCodigoanalizador) {
-        this.spaCodigoanalizador = spaCodigoanalizador;
-    }
-    public String getSpaDescripcion() {
-        return this.spaDescripcion;
-    }
-    
-    public void setSpaDescripcion(String spaDescripcion) {
-        this.spaDescripcion = spaDescripcion;
-    }
-    public Byte getSpaEstacionsigma() {
-        return this.spaEstacionsigma;
-    }
-    
-    public void setSpaEstacionsigma(Byte spaEstacionsigma) {
-        this.spaEstacionsigma = spaEstacionsigma;
-    }
-    public String getSpaParametros() {
-        return this.spaParametros;
-    }
-    
-    public void setSpaParametros(String spaParametros) {
-        this.spaParametros = spaParametros;
-    }
-    public String getSpaCargatemporal() {
-        return this.spaCargatemporal;
-    }
-    
-    public void setSpaCargatemporal(String spaCargatemporal) {
-        this.spaCargatemporal = spaCargatemporal;
-    }
-    public Short getSpaTiempocargatemporalseg() {
-        return this.spaTiempocargatemporalseg;
-    }
-    
-    public void setSpaTiempocargatemporalseg(Short spaTiempocargatemporalseg) {
-        this.spaTiempocargatemporalseg = spaTiempocargatemporalseg;
-    }
-    public String getSpaCargaanalizador() {
-        return this.spaCargaanalizador;
-    }
-    
-    public void setSpaCargaanalizador(String spaCargaanalizador) {
-        this.spaCargaanalizador = spaCargaanalizador;
-    }
-    public Short getSpaTiempocargaanalizadorseg() {
-        return this.spaTiempocargaanalizadorseg;
-    }
-    
-    public void setSpaTiempocargaanalizadorseg(Short spaTiempocargaanalizadorseg) {
-        this.spaTiempocargaanalizadorseg = spaTiempocargaanalizadorseg;
-    }
-    public String getSpaActivo() {
-        return this.spaActivo;
-    }
-    
-    public void setSpaActivo(String spaActivo) {
-        this.spaActivo = spaActivo;
-    }
-    public String getSpaCodigohost() {
-        return this.spaCodigohost;
-    }
-    
-    public void setSpaCodigohost(String spaCodigohost) {
-        this.spaCodigohost = spaCodigohost;
-    }
-    public String getSpaCodigobarras() {
-        return this.spaCodigobarras;
-    }
-    
-    public void setSpaCodigobarras(String spaCodigobarras) {
-        this.spaCodigobarras = spaCodigobarras;
-    }
-    public String getSpaResultadostemporales() {
-        return this.spaResultadostemporales;
-    }
-    
-    public void setSpaResultadostemporales(String spaResultadostemporales) {
-        this.spaResultadostemporales = spaResultadostemporales;
-    }
-    public String getSpaNmuestralargo12() {
-        return this.spaNmuestralargo12;
-    }
-    
-    public void setSpaNmuestralargo12(String spaNmuestralargo12) {
-        this.spaNmuestralargo12 = spaNmuestralargo12;
-    }
-    public String getSpaMuestrarecepcionada() {
-        return this.spaMuestrarecepcionada;
-    }
-    
-    public void setSpaMuestrarecepcionada(String spaMuestrarecepcionada) {
-        this.spaMuestrarecepcionada = spaMuestrarecepcionada;
-    }
-    public String getSpaControlalarmas() {
-        return this.spaControlalarmas;
-    }
-    
-    public void setSpaControlalarmas(String spaControlalarmas) {
-        this.spaControlalarmas = spaControlalarmas;
-    }
-    public String getSpaPrefijo() {
-        return this.spaPrefijo;
-    }
-    
-    public void setSpaPrefijo(String spaPrefijo) {
-        this.spaPrefijo = spaPrefijo;
-    }
-    public Integer getSpaSort() {
-        return this.spaSort;
-    }
-    
-    public void setSpaSort(Integer spaSort) {
-        this.spaSort = spaSort;
-    }
-    public String getSpaCodigoqc() {
-        return this.spaCodigoqc;
-    }
-    
-    public void setSpaCodigoqc(String spaCodigoqc) {
-        this.spaCodigoqc = spaCodigoqc;
-    }
-    public Byte getSpaIdformatoimagen() {
-        return this.spaIdformatoimagen;
-    }
-    
-    public void setSpaIdformatoimagen(Byte spaIdformatoimagen) {
-        this.spaIdformatoimagen = spaIdformatoimagen;
-    }
-    public String getSpaQc() {
-        return this.spaQc;
-    }
-    
-    public void setSpaQc(String spaQc) {
-        this.spaQc = spaQc;
-    }
-    public String getSpaFirmaexamenes() {
-        return this.spaFirmaexamenes;
-    }
-    
-    public void setSpaFirmaexamenes(String spaFirmaexamenes) {
-        this.spaFirmaexamenes = spaFirmaexamenes;
-    }
-    public String getSpaAutorizaexamenes() {
-        return this.spaAutorizaexamenes;
-    }
-    
-    public void setSpaAutorizaexamenes(String spaAutorizaexamenes) {
-        this.spaAutorizaexamenes = spaAutorizaexamenes;
-    }
-    public Set getSigmaProcesosanalizadorestests() {
-        return this.sigmaProcesosanalizadorestests;
-    }
-    
-    public void setSigmaProcesosanalizadorestests(Set sigmaProcesosanalizadorestests) {
-        this.sigmaProcesosanalizadorestests = sigmaProcesosanalizadorestests;
-    }
-
-
-
-
-}
-
-
diff --git a/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosanalizadorestest.java b/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosanalizadorestest.java
deleted file mode 100644
index 6f81cfc5..00000000
--- a/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosanalizadorestest.java
+++ /dev/null
@@ -1,123 +0,0 @@
-package com.grupobios.bioslis.entity;
-// Generated 16-08-2021 14:22:20 by Hibernate Tools 4.3.1
-
-
-
-/**
- * SigmaProcesosanalizadorestest generated by hbm2java
- */
-public class SigmaProcesosanalizadorestest  implements java.io.Serializable {
-
-
-     private SigmaProcesosanalizadorestestId id;
-     private SigmaPrefijostest sigmaPrefijostest;
-     private SigmaTiposmuestras sigmaTiposmuestras;
-     private SigmaProcesosanalizadores sigmaProcesosanalizadores;
-     private CfgTiposderesultado cfgTiposderesultado;
-     private String spatCodigorecepcion;
-     private String spatCodigoenvio;
-     private String spatActivo;
-     private String spatConversion;
-     private String spatConversiondatos;
-
-    public SigmaProcesosanalizadorestest() {
-    }
-
-	
-    public SigmaProcesosanalizadorestest(SigmaProcesosanalizadorestestId id, SigmaPrefijostest sigmaPrefijostest, SigmaTiposmuestras sigmaTiposmuestras, SigmaProcesosanalizadores sigmaProcesosanalizadores, CfgTiposderesultado cfgTiposderesultado) {
-        this.id = id;
-        this.sigmaPrefijostest = sigmaPrefijostest;
-        this.sigmaTiposmuestras = sigmaTiposmuestras;
-        this.sigmaProcesosanalizadores = sigmaProcesosanalizadores;
-        this.cfgTiposderesultado = cfgTiposderesultado;
-    }
-    public SigmaProcesosanalizadorestest(SigmaProcesosanalizadorestestId id, SigmaPrefijostest sigmaPrefijostest, SigmaTiposmuestras sigmaTiposmuestras, SigmaProcesosanalizadores sigmaProcesosanalizadores, CfgTiposderesultado cfgTiposderesultado, String spatCodigorecepcion, String spatCodigoenvio, String spatActivo, String spatConversion, String spatConversiondatos) {
-       this.id = id;
-       this.sigmaPrefijostest = sigmaPrefijostest;
-       this.sigmaTiposmuestras = sigmaTiposmuestras;
-       this.sigmaProcesosanalizadores = sigmaProcesosanalizadores;
-       this.cfgTiposderesultado = cfgTiposderesultado;
-       this.spatCodigorecepcion = spatCodigorecepcion;
-       this.spatCodigoenvio = spatCodigoenvio;
-       this.spatActivo = spatActivo;
-       this.spatConversion = spatConversion;
-       this.spatConversiondatos = spatConversiondatos;
-    }
-   
-    public SigmaProcesosanalizadorestestId getId() {
-        return this.id;
-    }
-    
-    public void setId(SigmaProcesosanalizadorestestId id) {
-        this.id = id;
-    }
-    public SigmaPrefijostest getSigmaPrefijostest() {
-        return this.sigmaPrefijostest;
-    }
-    
-    public void setSigmaPrefijostest(SigmaPrefijostest sigmaPrefijostest) {
-        this.sigmaPrefijostest = sigmaPrefijostest;
-    }
-    public SigmaTiposmuestras getSigmaTiposmuestras() {
-        return this.sigmaTiposmuestras;
-    }
-    
-    public void setSigmaTiposmuestras(SigmaTiposmuestras sigmaTiposmuestras) {
-        this.sigmaTiposmuestras = sigmaTiposmuestras;
-    }
-    public SigmaProcesosanalizadores getSigmaProcesosanalizadores() {
-        return this.sigmaProcesosanalizadores;
-    }
-    
-    public void setSigmaProcesosanalizadores(SigmaProcesosanalizadores sigmaProcesosanalizadores) {
-        this.sigmaProcesosanalizadores = sigmaProcesosanalizadores;
-    }
-    public CfgTiposderesultado getCfgTiposderesultado() {
-        return this.cfgTiposderesultado;
-    }
-    
-    public void setCfgTiposderesultado(CfgTiposderesultado cfgTiposderesultado) {
-        this.cfgTiposderesultado = cfgTiposderesultado;
-    }
-    public String getSpatCodigorecepcion() {
-        return this.spatCodigorecepcion;
-    }
-    
-    public void setSpatCodigorecepcion(String spatCodigorecepcion) {
-        this.spatCodigorecepcion = spatCodigorecepcion;
-    }
-    public String getSpatCodigoenvio() {
-        return this.spatCodigoenvio;
-    }
-    
-    public void setSpatCodigoenvio(String spatCodigoenvio) {
-        this.spatCodigoenvio = spatCodigoenvio;
-    }
-    public String getSpatActivo() {
-        return this.spatActivo;
-    }
-    
-    public void setSpatActivo(String spatActivo) {
-        this.spatActivo = spatActivo;
-    }
-    public String getSpatConversion() {
-        return this.spatConversion;
-    }
-    
-    public void setSpatConversion(String spatConversion) {
-        this.spatConversion = spatConversion;
-    }
-    public String getSpatConversiondatos() {
-        return this.spatConversiondatos;
-    }
-    
-    public void setSpatConversiondatos(String spatConversiondatos) {
-        this.spatConversiondatos = spatConversiondatos;
-    }
-
-
-
-
-}
-
-
diff --git a/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosanalizadorestestId.java b/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosanalizadorestestId.java
deleted file mode 100644
index ab42b568..00000000
--- a/src/main/java/com/grupobios/bioslis/entity/SigmaProcesosanalizadorestestId.java
+++ /dev/null
@@ -1,43 +0,0 @@
-package com.grupobios.bioslis.entity;
-// Generated 16-08-2021 14:22:20 by Hibernate Tools 4.3.1
-
-
-
-/**
- * SigmaProcesosanalizadorestestId generated by hbm2java
- */
-public class SigmaProcesosanalizadorestestId  implements java.io.Serializable {
-
-
-     private short spatIdanalizador;
-     private long spatIdtest;
-
-    public SigmaProcesosanalizadorestestId() {
-    }
-
-    public SigmaProcesosanalizadorestestId(short spatIdanalizador, long spatIdtest) {
-       this.spatIdanalizador = spatIdanalizador;
-       this.spatIdtest = spatIdtest;
-    }
-   
-    public short getSpatIdanalizador() {
-        return this.spatIdanalizador;
-    }
-    
-    public void setSpatIdanalizador(short spatIdanalizador) {
-        this.spatIdanalizador = spatIdanalizador;
-    }
-    public long getSpatIdtest() {
-        return this.spatIdtest;
-    }
-    
-    public void setSpatIdtest(long spatIdtest) {
-        this.spatIdtest = spatIdtest;
-    }
-
-
-
-
-}
-
-
diff --git a/src/main/java/com/grupobios/bioslis/entity/microbiologia/MBOrder.java b/src/main/java/com/grupobios/bioslis/entity/microbiologia/MBOrder.java
index 59f0f61c..a3adb3d9 100755
--- a/src/main/java/com/grupobios/bioslis/entity/microbiologia/MBOrder.java
+++ b/src/main/java/com/grupobios/bioslis/entity/microbiologia/MBOrder.java
@@ -19,15 +19,13 @@ public class MBOrder {
   private Patient patient;
   private Physician physician;
   private String origin;
-  //agregado por cristian 09-11
-  private String procedencia;
 
   private List<HashMap<String, String>> events;
   private HashMap<String, MBExam> exams;
 
   public MBOrder(String id, Date date, String attentionType, String institution, String service, String contract,
       String observation, String diagnostic, Patient patient, List<HashMap<String, String>> events,
-      HashMap<String, MBExam> exams, Physician physician, String origin, String procedencia) {
+      HashMap<String, MBExam> exams, Physician physician, String origin) {
 
     this.id = id;
     this.date = date;
@@ -42,7 +40,6 @@ public class MBOrder {
     this.exams = exams;
     this.physician = physician;
     this.origin = origin;
-    this.procedencia =procedencia;
   }
 
   public String getId() {
@@ -153,14 +150,4 @@ public class MBOrder {
     this.origin = origin;
   }
 
-public String getProcedencia() {
-    return procedencia;
-}
-
-public void setProcedencia(String procedencia) {
-    this.procedencia = procedencia;
-}
-
-  
-  
 }
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/CapturaResultadosRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/CapturaResultadosRestController.java
index 2c856f29..197700dd 100755
--- a/src/main/java/com/grupobios/bioslis/rest/controller/CapturaResultadosRestController.java
+++ b/src/main/java/com/grupobios/bioslis/rest/controller/CapturaResultadosRestController.java
@@ -115,20 +115,10 @@ public class CapturaResultadosRestController {
     return new ResponseTemplateGen<Long>(new Long(lista.size()), 200, "OK");
   }
 
-  //**actualizado por cristian 07-11 *** se agrega idusuario  
   @PostMapping("/api/orden/update/examen/test/resultado")
   public ResponseTemplateGen<ResultadoActualizacionTestDTO> updateResultadoTestExamenOrden(
-      @RequestBody ResultadoNumericoTestExamenOrdenDTO resultado , @Context HttpServletRequest context) {
-
-//*************  se toma usuario para agregar a resultado *********agregado 11-11
-      HttpSession sesion = (HttpSession) context.getSession();
+      @RequestBody ResultadoNumericoTestExamenOrdenDTO resultado) {
 
-      Long idUsuario = 0L;
-      DatosUsuarios usuario = null;
-      usuario = (DatosUsuarios) sesion.getAttribute("usuario");
-      idUsuario = usuario.getDuIdusuario();
-      resultado.setIdUsuarioDigita(idUsuario);
- //***********************************     
     ResultadoActualizacionTestDTO rpta = new ResultadoActualizacionTestDTO();
     try {
       rpta.setRangoValorResultado(ordenService.updateResultadoTestExamenOrden(resultado));
@@ -265,17 +255,10 @@ public class CapturaResultadosRestController {
     }
   }
 
-  //Cambios realizados por cristian 07-11 ***  agrega usuario que agrega resultados cellcoounter
   @PostMapping("/api/orden/update/examen/resultado/transmitido")
   public ResponseTemplateGen<Long> updateResultadoExameneOrdeneTransmitido(
-      @RequestBody ResultadoNumericoTestExamenOrdenDTO resultado, @Context HttpServletRequest context) {
+      @RequestBody ResultadoNumericoTestExamenOrdenDTO resultado) {
 
-      HttpSession sesion = (HttpSession) context.getSession();
-      Long idUsuario = 0L;
-      DatosUsuarios usuario = null;
-      usuario = (DatosUsuarios) sesion.getAttribute("usuario");
-      idUsuario = usuario.getDuIdusuario();
-      resultado.setIdUsuarioDigita(idUsuario);
     try {
       ordenService.updateEstadoTransmitidoResultadoTestExamenOrden(resultado);
     } catch (BiosLISDAOException e) {
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/ConfiguracionEtiquetasRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/ConfiguracionEtiquetasRestController.java
deleted file mode 100644
index 122dca3a..00000000
--- a/src/main/java/com/grupobios/bioslis/rest/controller/ConfiguracionEtiquetasRestController.java
+++ /dev/null
@@ -1,99 +0,0 @@
-package com.grupobios.bioslis.rest.controller;
-
-import java.util.List;
-
-import jakarta.servlet.http.HttpServletRequest;
-import jakarta.servlet.http.HttpSession;
-import javax.ws.rs.core.Context;
-
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.web.bind.annotation.GetMapping;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.PostMapping;
-import org.springframework.web.bind.annotation.RequestBody;
-import org.springframework.web.bind.annotation.RestController;
-
-import com.grupobios.bioslis.bs.ConfiguracionEtiquetasService;
-import com.grupobios.bioslis.common.ResponseTemplateGen;
-import com.grupobios.bioslis.dao.BiosLISDAOException;
-import com.grupobios.bioslis.dto.EtiquetaCodigoBarraDTO;
-import com.grupobios.bioslis.entity.CfgEtiquetacodigobarras;
-import com.grupobios.bioslis.entity.DatosUsuarios;
-
-
-@RestController
-public class ConfiguracionEtiquetasRestController {
-
-    private static Logger logger = LogManager.getLogger(ConfiguracionEtiquetasRestController.class);
-    
-    
-    @Autowired
-    ConfiguracionEtiquetasService configuracionEtiquetasService;    
-    
-    
-    public ConfiguracionEtiquetasService getConfiguracionEtiquetasService() {
-        return configuracionEtiquetasService;
-    }
-    public void setConfiguracionEtiquetasService(ConfiguracionEtiquetasService configuracionEtiquetasService) {
-        this.configuracionEtiquetasService = configuracionEtiquetasService;
-    }
-
-
-
-    @GetMapping("/api/configuracionetiquetas")
-    public ResponseTemplateGen<List<EtiquetaCodigoBarraDTO>> getAllEtiquetas() {
-        List<EtiquetaCodigoBarraDTO> lstConfgEtiquetas;
-        try {
-            lstConfgEtiquetas = configuracionEtiquetasService.getAllEtiquetas();
-          } catch (BiosLISDAOException e) {
-              logger.error(e.getMessage());
-              return new ResponseTemplateGen<List<EtiquetaCodigoBarraDTO>>(null, 505, "No se pudo traer informacion Configuracion Etiquetas");
-          }
-     
-          return new ResponseTemplateGen<List<EtiquetaCodigoBarraDTO>>(lstConfgEtiquetas, 200, "Ok");
-    }
-    
-  
-    @GetMapping("/api/configuracionetiquetas/codigo/{codigo}")
-    public ResponseTemplateGen<EtiquetaCodigoBarraDTO> getEtiquetaByCodigo( @PathVariable String codigo) {
-        EtiquetaCodigoBarraDTO confgEtiquetas;
-        try {
-           confgEtiquetas = configuracionEtiquetasService.getEtiquetaBycodigo(codigo);
-          } catch (BiosLISDAOException e) {
-              logger.error(e.getMessage());
-              return new ResponseTemplateGen<EtiquetaCodigoBarraDTO>(null, 505, "No se pudo traer informacion Configuracion Etiquetas");
-          }
-          return new ResponseTemplateGen<EtiquetaCodigoBarraDTO>(confgEtiquetas, 200, "Ok");
-    }
-   
-
-    @PostMapping("/api/configuracionetiquetas/insertUpdate")
-    public ResponseTemplateGen<String> insertUpdateEtiqueta( @RequestBody  CfgEtiquetacodigobarras etiquetaCodigoBarra , @Context HttpServletRequest context) {
-        
-        HttpSession sesion = (HttpSession) context.getSession();
-       Long idUsuario = 0L;        
-        DatosUsuarios usuario = null;
-        String id = "0";
-        try {
-         
-            usuario = (DatosUsuarios) sesion.getAttribute("usuario");
-            if(!usuario.equals(null)) {
-                idUsuario = usuario.getDuIdusuario();
-                id = idUsuario.toString();
-            }
-         
-            System.out.println("estoy en controlador");
-            System.out.println(id);
-            System.out.println(etiquetaCodigoBarra.getCecbFechaprefijo());
-            System.out.println(etiquetaCodigoBarra.getCecbNegrita1());
-           configuracionEtiquetasService.insertUpdateEtiqueta(etiquetaCodigoBarra , id);
-           } catch (BiosLISDAOException e) {
-               logger.error(e.getMessage());
-               return new ResponseTemplateGen<String>(null, 505, "No se pudo guardar informacion Configuracion Etiquetas");
-           }     
-          
-          return new ResponseTemplateGen<String>(null, 200, "Ok");
-    }
-}
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/DominiosRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/DominiosRestController.java
index 5318040f..3fdecdab 100755
--- a/src/main/java/com/grupobios/bioslis/rest/controller/DominiosRestController.java
+++ b/src/main/java/com/grupobios/bioslis/rest/controller/DominiosRestController.java
@@ -171,7 +171,7 @@ public class DominiosRestController {
 
     List<CfgEstadosexamenes> lstCfgEstados = dominiosService.getEstadosExamenes();
     lstCfgEstados.forEach(e -> {
-     // System.out.println(e.getCeeCodigoestadoexamen());
+      System.out.println(e.getCeeCodigoestadoexamen());
     });
     return ResponseEntity.ok(lstCfgEstados);
 
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/MicrobiologiaRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/MicrobiologiaRestController.java
deleted file mode 100644
index defc64f8..00000000
--- a/src/main/java/com/grupobios/bioslis/rest/controller/MicrobiologiaRestController.java
+++ /dev/null
@@ -1,85 +0,0 @@
-package com.grupobios.bioslis.rest.controller;
-
-
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.List;
-
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
-import org.springframework.web.bind.annotation.GetMapping;
-import org.springframework.web.bind.annotation.RequestParam;
-import org.springframework.web.bind.annotation.RestController;
-
-import com.grupobios.bioslis.bs.MicrobiologiaService;
-import com.grupobios.bioslis.common.ResponseTemplateGen;
-import com.grupobios.bioslis.dao.BiosLISDAOException;
-
-import com.grupobios.bioslis.microbiologia.dto.MicrobiologiaOrdenPacienteDTO;
-
-@RestController
-public class MicrobiologiaRestController {
-
-    static Logger log = LogManager.getLogger(MicrobiologiaRestController.class.getName());
-    
- private MicrobiologiaService microbiologiaService;   
-    
-    
-    public MicrobiologiaService getMicrobiologiaService() {
-        return microbiologiaService;
-    }
-
-
-
-
-    public void setMicrobiologiaService(MicrobiologiaService microbiologiaService) {
-        this.microbiologiaService = microbiologiaService;
-    }
-
-  //se crea esta api, pero por el momento no se esta utilizando  **creada 08-11 por cristian
-    @GetMapping("/api/microbiologia/getListOrder")
-    public  ResponseTemplateGen<List<MicrobiologiaOrdenPacienteDTO>> getListOrder(
-            @RequestParam(value = "startId", defaultValue = "") Long startId,
-            @RequestParam(value = "endId", defaultValue = "") Long endId,
-            @RequestParam(value = "startDate", defaultValue = "") String startDate,
-            @RequestParam(value = "endDate", defaultValue = "") String endDate,
-            @RequestParam(value = "atentionType", defaultValue = "") Long atentionType,
-            @RequestParam(value = "exam", defaultValue = "") Long exam,
-            @RequestParam(value = "section", defaultValue = "") Long section,
-            @RequestParam(value = "names", defaultValue = "") String names,
-            @RequestParam(value = "surname", defaultValue = "") String surname,
-            @RequestParam(value = "documentType", defaultValue = "") Long documentType,
-            @RequestParam(value = "documentId", defaultValue = "") Long documentId,
-            @RequestParam(value = "serviceId", defaultValue = "") Long serviceId)  {
-   
-        System.out.println(startId);
-        
-        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy"); 
-        Date fechaStart = null;
-        Date fechaEnd= null;
-      
-        try {
-           fechaStart = formato.parse(startDate);
-           fechaEnd = formato.parse(endDate);
-        } catch (ParseException e1) {
-            // TODO Auto-generated catch block
-            e1.printStackTrace();
-        }
-      System.out.println(fechaStart);
-        List<MicrobiologiaOrdenPacienteDTO>  result = new ArrayList<MicrobiologiaOrdenPacienteDTO>();
-        try {
-          result = microbiologiaService.getListOrder ( startId, endId, fechaStart, fechaEnd, atentionType, exam, section, names, surname, documentType, documentId, serviceId);
-          log.debug(result);
-        } catch (BiosLISDAOException  e) {
-          log.error(e.getMessage());
-          return  new ResponseTemplateGen<List<MicrobiologiaOrdenPacienteDTO> >(null, 505, "No se pudo traer registros");
-        }
-        return new ResponseTemplateGen<List<MicrobiologiaOrdenPacienteDTO> >(result, 200, "Ok");
-         
-    }
-    
-    
-    
-}
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/OrdenRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/OrdenRestController.java
index 625749c0..80cca4b0 100755
--- a/src/main/java/com/grupobios/bioslis/rest/controller/OrdenRestController.java
+++ b/src/main/java/com/grupobios/bioslis/rest/controller/OrdenRestController.java
@@ -40,7 +40,6 @@ import com.grupobios.bioslis.dto.OrdenExamenValidoDTO;
 import com.grupobios.bioslis.dto.OrdenFullDTO;
 import com.grupobios.bioslis.dto.OrdenInformeResultadoDTO;
 import com.grupobios.bioslis.dto.ParamRgoFechasPacienteDTO;
-import com.grupobios.bioslis.dto.TestEdicionOrdenDTO;
 import com.grupobios.bioslis.entity.CfgTest;
 import com.grupobios.bioslis.entity.DatosFichas;
 import com.grupobios.bioslis.entity.DatosPacientes;
@@ -134,7 +133,7 @@ public class OrdenRestController {
   @PostMapping("/api/common/ordenes/examenes")
   public ResponseTemplateGen<List<OrdenExamenCapturaResultadoDTO>> getOrdenesxFiltro(
       @RequestBody BCFichaFiltroDTO bcFichaFiltroDTO) {
- 
+
     logger.debug("Hola   {}", bcFichaFiltroDTO);
 
     List<OrdenExamenCapturaResultadoDTO> lstOrdenes;
@@ -150,7 +149,7 @@ public class OrdenRestController {
   @PostMapping("/api/common/ordenes/examenes/secciones")
   public ResponseTemplateGen<List<OrdenExamenCapturaResultadoDTO>> getOrdenesExamenesSeccionesxFiltro(
       @RequestBody BCFichaFiltroDTO bcFichaFiltroDTO, @Context HttpServletRequest req) {
-System.out.println("entre a buscar secciones");
+
     logger.debug("Hola   {}", bcFichaFiltroDTO);
 
     List<OrdenExamenCapturaResultadoDTO> lstOrdenes;
@@ -176,19 +175,18 @@ System.out.println("entre a buscar secciones");
     }
   }
 
-  //se cambio de ordenfulldto  a OrdenInformeResultadoDTO
   @PostMapping("/api/common/ordenes")
-  public ResponseTemplateGen<List<OrdenInformeResultadoDTO>> getSoloOrdenesxFiltro(@RequestBody BCFichaFiltroDTO bcFichaFiltroDTO) {
-System.out.println("emnyre a buscar ordenes");
+  public ResponseTemplateGen<List<OrdenFullDTO>> getSoloOrdenesxFiltro(@RequestBody BCFichaFiltroDTO bcFichaFiltroDTO) {
+
     logger.debug("Hola   {}", bcFichaFiltroDTO);
 
-    List<OrdenInformeResultadoDTO> lstOrdenes;
+    List<OrdenFullDTO> lstOrdenes;
     try {
       lstOrdenes = ordenService.getSoloOrdenesxFiltro(bcFichaFiltroDTO);
-      return new ResponseTemplateGen<List<OrdenInformeResultadoDTO>>(lstOrdenes, 200, "Ok");
+      return new ResponseTemplateGen<List<OrdenFullDTO>>(lstOrdenes, 200, "Ok");
     } catch (BiosLISException e) {
       logger.error(e);
-      return new ResponseTemplateGen<List<OrdenInformeResultadoDTO>>(null, 503, "Ok");
+      return new ResponseTemplateGen<List<OrdenFullDTO>>(null, 503, "Ok");
     }
   }
 
@@ -296,12 +294,11 @@ System.out.println("emnyre a buscar ordenes");
 
   @PostMapping("/api/bordenes/examenes/secciones")
   public ResponseTemplateGen<List<OrdenInformeResultadoDTO>> getBOOrdenesConSecciones(
-      @RequestBody BCFichaFiltroDTO fichaFiltroDTO) {
-System.out.println("examenes / secciones ");
+      @RequestBody BOOrdenesFiltroDTO fichaFiltroDTO) {
+
     List<OrdenInformeResultadoDTO> lstOrdenes = null;
     try {
       lstOrdenes = ordenService.getBOOrdenesConSecciones(fichaFiltroDTO);
-     
       return new ResponseTemplateGen<List<OrdenInformeResultadoDTO>>(lstOrdenes, 200, "Ok");
     } catch (BiosLISException e) {
       logger.error(e.getMessage());
@@ -364,22 +361,26 @@ System.out.println("examenes / secciones ");
   @PostMapping("/api/ordenes/update")
   public ResponseTemplateGen<Object> UpdateOrdenes(@RequestBody DatosFichasDTO ordenExamenUpdate, @Context HttpServletRequest req) {
 
-          
-      
+   System.out.println(ordenExamenUpdate.getDfNorden());
+       
    try {
        Long idUsuario = 0L;
        DatosUsuarios usuario = null;
        HttpSession sesion = req.getSession();
-      
+
        if (sesion.getAttribute("usuario") != null) {
          usuario = (DatosUsuarios) sesion.getAttribute("usuario");
-         idUsuario = usuario.getDuIdusuario();    
+         idUsuario = usuario.getDuIdusuario();
         
-        this.ordenService.updatefichaExamenTest(ordenExamenUpdate,idUsuario );         
-       } else {           
+        
+         System.out.println(this.ordenService.updatefichaExamenTest(ordenExamenUpdate,idUsuario ));
+         System.out.println("sali de controller");
+       } else {
+           
          return new ResponseTemplateGen<Object>(null, 500, "Error: SesiÃ³n ha expirado");
        }
-       logger.debug("usuario : {} - id : {} ", usuario.getDuNombres(), idUsuario);        
+       logger.debug("usuario : {} - id : {} ", usuario.getDuNombres(), idUsuario);
+        
         
       return new ResponseTemplateGen<Object>(null, 200, "Ok");
     } catch (Exception e) {
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/ProcesosRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/ProcesosRestController.java
index 427513f5..24582400 100644
--- a/src/main/java/com/grupobios/bioslis/rest/controller/ProcesosRestController.java
+++ b/src/main/java/com/grupobios/bioslis/rest/controller/ProcesosRestController.java
@@ -14,6 +14,7 @@ import com.grupobios.bioslis.entity.LdvOperacionesmath;
 import com.grupobios.bioslis.entity.LdvTipocomunicacion;
 import com.grupobios.bioslis.entity.LdvTiposcondicion;
 import com.grupobios.bioslis.entity.SigmaProcesos;
+import com.grupobios.bioslis.entity.SigmaProcesosalarmas;
 import com.grupobios.bioslis.entity.SigmaTiposmuestras;
 import java.io.IOException;
 import java.util.HashMap;
@@ -84,7 +85,7 @@ public class ProcesosRestController {
     public ResponseTemplateGen<ProcesosDTO> actualizarProceso(@RequestBody ProcesosDTO procesoDTO){
         try {
             procesosService.updateProceso(procesoDTO);
-            return new ResponseTemplateGen<>(procesoDTO, 200, "Se registrÃ³ el proceso satisfactoriamente");
+            return new ResponseTemplateGen<>(procesoDTO, 200, "Se actualizÃ³ el proceso satisfactoriamente");
         } catch (BiosLISDAOException ex) {
             Logger.getLogger(ProcesosRestController.class.getName()).log(Level.SEVERE, null, ex);
             return new ResponseTemplateGen<>(null, 500, ex.getMessage());
@@ -134,4 +135,29 @@ public class ProcesosRestController {
             return new ResponseTemplateGen<>(null, 500, ex.getMessage());
         }
     }
+    
+    @GetMapping("/api/proceso/busquedacodigo/{codigoProceso}")
+    public ResponseTemplateGen<List<SigmaProcesos>> getProcesoByCodigo(@PathVariable("codigoProceso") String codigoProceso){
+        try {
+            List<SigmaProcesos> procesos = procesosService.getProcesoByCodigo(codigoProceso);
+            if (!procesos.isEmpty()){
+                return new ResponseTemplateGen<>(procesos, 200, "CÃ³digo de proceso ya existe");
+            }
+            return new ResponseTemplateGen<>(procesos, 404, "");
+        } catch (BiosLISDAOException ex) {
+            Logger.getLogger(ProcesosRestController.class.getName()).log(Level.SEVERE, null, ex);
+            return new ResponseTemplateGen<>(null, 500, ex.getMessage());
+        }
+    }
+    
+    @GetMapping("/api/alarmas/proceso/{codigoProceso}")
+    public ResponseTemplateGen<List<SigmaProcesosalarmas>> getAlarmasByProceso(@PathVariable("codigoProceso") String codigoProceso){
+        try {
+            List<SigmaProcesosalarmas> procesos = procesosService.getAlarmasByCodigoProceso(codigoProceso);
+            return new ResponseTemplateGen<>(procesos, 200, "");
+        } catch (BiosLISDAOException ex) {
+            Logger.getLogger(ProcesosRestController.class.getName()).log(Level.SEVERE, null, ex);
+            return new ResponseTemplateGen<>(null, 500, ex.getMessage());
+        }
+    }
 }
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/RecepcionMuestrasRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/RecepcionMuestrasRestController.java
index b12c33c9..8e1cb15e 100755
--- a/src/main/java/com/grupobios/bioslis/rest/controller/RecepcionMuestrasRestController.java
+++ b/src/main/java/com/grupobios/bioslis/rest/controller/RecepcionMuestrasRestController.java
@@ -19,6 +19,8 @@ import com.grupobios.bioslis.common.ResponseTemplateGen;
 import com.grupobios.bioslis.dao.BiosLISDAOException;
 import com.grupobios.bioslis.dto.MuestrasDTO;
 import com.grupobios.bioslis.entity.DatosUsuarios;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 
 /**
  *
@@ -27,6 +29,7 @@ import com.grupobios.bioslis.entity.DatosUsuarios;
 @RestController
 public class RecepcionMuestrasRestController {
     
+    private static Logger logger = LogManager.getLogger(TomaMuestrasRestController.class);
     @Autowired
     RecepcionMuestrasService recepcionMuestrasService;
     
@@ -36,7 +39,7 @@ public class RecepcionMuestrasRestController {
         if (Integer.parseInt(dia) == 0 && Integer.parseInt(mes) == 0 && Integer.parseInt(year) == 0){
             fecha = "HOY";
         }
-        System.out.println("Fecha: "+fecha);
+        logger.debug("Fecha: "+fecha);
         
         List<MuestrasDTO> listaMuestrasRM = recepcionMuestrasService.getListaMuestrasRM(fecha);
         
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/RegistroDocumentosRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/RegistroDocumentosRestController.java
index 8a2f9036..8d93320c 100644
--- a/src/main/java/com/grupobios/bioslis/rest/controller/RegistroDocumentosRestController.java
+++ b/src/main/java/com/grupobios/bioslis/rest/controller/RegistroDocumentosRestController.java
@@ -41,9 +41,8 @@ public class RegistroDocumentosRestController {
   public ResponseTemplateGen<String> guardarDocumento(@PathVariable("nOrden") int nOrden,
       @PathVariable("tipoDocumentoAnexo") byte tipoDocumentoAnexo, @RequestParam("documento") MultipartFile documento) {
 
-    // No colocar System.out
-//    System.out.println("nro orden: " + nOrden);
-//    System.out.println("tipo documento anexo: " + tipoDocumentoAnexo);
+    logger.debug("nro orden: " + nOrden);
+    logger.debug("tipo documento anexo: " + tipoDocumentoAnexo);
     try {
       byte[] documentBytes = documento.getBytes();
       Blob docuBlob = new SerialBlob(documentBytes);
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/RegistroUsuariosRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/RegistroUsuariosRestController.java
index c28dbb49..2c97bccf 100644
--- a/src/main/java/com/grupobios/bioslis/rest/controller/RegistroUsuariosRestController.java
+++ b/src/main/java/com/grupobios/bioslis/rest/controller/RegistroUsuariosRestController.java
@@ -17,10 +17,7 @@ import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.sql.Blob;
 import java.sql.SQLException;
-import java.util.HashMap;
 import java.util.List;
-import java.util.Map;
-
 import javax.imageio.ImageIO;
 import javax.sql.rowset.serial.SerialBlob;
 import org.apache.logging.log4j.LogManager;
@@ -59,7 +56,7 @@ public class RegistroUsuariosRestController {
             return new ResponseTemplateGen<>(lista, 404, "No encontrado");
         }
         return new ResponseTemplateGen<>(lista, 200, "OK");
-    }  
+    }
     
     @GetMapping("/api/usuario/{id}")
     public ResponseTemplateGen<UsuariosPerfilesDTO> getUsuarioById(@PathVariable("id") Long idUsuario){
@@ -272,19 +269,5 @@ public class RegistroUsuariosRestController {
             return null;
         }
     }
-
-    //creado por cristian 17-11  solo entrega nombre de usuario.
-    @SuppressWarnings("unused")
-    @GetMapping("/api/datosusuario/{id}")
-    public ResponseTemplateGen<Map<String, String>> getDatosUsuarioById(@PathVariable("id") Long idUsuario){
-        UsuariosPerfilesDTO user = registroUsuariosService.getUsuarioById(idUsuario);
-        Map<String, String> DatoUsuario = new HashMap<String, String>();
-        DatoUsuario.put("nombre", user.getDatosUsuarios().getDuNombres());
-        DatoUsuario.put("primerApellido", user.getDatosUsuarios().getDuPrimerapellido());
-        DatoUsuario.put("segundoApellido", user.getDatosUsuarios().getDuSegundoapellido());
-        if (user==null){
-            return  new ResponseTemplateGen<Map<String, String>>( null, 404, "No encontrado");
-        }
-        return new ResponseTemplateGen<Map<String, String>>(DatoUsuario, 200, "OK");
-    }
+    
 }
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/TestRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/TestRestController.java
index 75cd59ac..86dc5467 100755
--- a/src/main/java/com/grupobios/bioslis/rest/controller/TestRestController.java
+++ b/src/main/java/com/grupobios/bioslis/rest/controller/TestRestController.java
@@ -21,7 +21,6 @@ import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RestController;
 
-import com.grupobios.bioslis.bs.BiosLISBSException;
 import com.grupobios.bioslis.bs.TestService;
 import com.grupobios.bioslis.common.BiosLISException;
 import com.grupobios.bioslis.common.BiosLisExecutorException;
@@ -119,9 +118,10 @@ public class TestRestController {
 
   @PostMapping("/api/test/action/list/{actionCode}")
   public ResponseTemplateGen<DatosFichasexamenestest> doListAction(@PathVariable("actionCode") String actionCode,
-      @RequestBody List<ResultadoNumericoTestExamenOrdenDTO> examenes, @Context HttpServletRequest req) {
+      @RequestBody List<ResultadoNumericoTestExamenOrdenDTO> examenes, @Context HttpServletRequest req)
+      throws BiosLISDAOException {
 
-    Long idUsuario;
+    Long idUsuario = 0L;
     DatosUsuarios usuario = null;
     HttpSession sesion = req.getSession();
 
@@ -132,11 +132,9 @@ public class TestRestController {
     } else {
       return new ResponseTemplateGen<DatosFichasexamenestest>(null, 408, "Error: SesiÃ³n ha expirado");
     }
-    try {
-      testService.doListAction(actionCode, examenes, idUsuario);
-    } catch (BiosLISBSException e) {
-      return new ResponseTemplateGen<DatosFichasexamenestest>(null, 503, e.getMessage());
-    }
+
+    DatosFichasexamenestest dfet;
+    List<String> lstResult = testService.doListAction(actionCode, examenes, idUsuario);
     return new ResponseTemplateGen<DatosFichasexamenestest>(null, 200, "OK");
 
   }
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/TomaMuestrasRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/TomaMuestrasRestController.java
index 08a2d4a1..7d80112d 100755
--- a/src/main/java/com/grupobios/bioslis/rest/controller/TomaMuestrasRestController.java
+++ b/src/main/java/com/grupobios/bioslis/rest/controller/TomaMuestrasRestController.java
@@ -32,6 +32,9 @@ import com.grupobios.bioslis.entity.DatosFichasmuestras;
 import com.grupobios.bioslis.entity.DatosUsuarios;
 import java.util.HashMap;
 import java.util.logging.Level;
+import jakarta.servlet.http.HttpServletRequest;
+import jakarta.servlet.http.HttpSession;
+import javax.ws.rs.core.Context;
 import org.springframework.web.bind.annotation.RequestBody;
 
 /*
@@ -54,48 +57,72 @@ public class TomaMuestrasRestController {
 
   @PostMapping("/api/tomaMuestras/ordenes/{dia}/{mes}/{year}")
   public ResponseTemplateGen<List<OrdenesTMDTO>> rellenarTablaOrdenesTM(@PathVariable("dia") String dia,
-      @PathVariable("mes") String mes, @PathVariable("year") String year) throws ParseException {
-    String fecha = dia + "/" + mes + "/" + year;
-    String fechaInicio = null;
-    String fechaFin = null;
-
-    // Fecha vacÃ­a
-    if (Integer.parseInt(dia) == 0 && Integer.parseInt(mes) == 0 && Integer.parseInt(year) == 0) {
-      //Date hoy = new Date();
-      Date hoy = BiosLisCalendarService.getInstance().getTS();
-      Calendar cal = Calendar.getInstance();
-      cal.setTime(hoy);
-      // se crea una fecha a partir de la actual contando la hora, y se le resta 48
-      // hrs, esto es para ajustar el parÃ¡m. fechaInicio
-      cal.set(Calendar.HOUR, cal.get(Calendar.HOUR) - 48);
-      Date tempDate = cal.getTime();
-      SimpleDateFormat sdformat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
-      fechaInicio = sdformat.format(tempDate);
-      SimpleDateFormat sdformat2 = new SimpleDateFormat("dd/MM/yyyy");
-      fechaFin = sdformat2.format(hoy);
-    } else {
-      fechaInicio = fecha + " 00:00:00";
-      fechaFin = fecha;
-    }
-    logger.debug("Fecha Inicio: " + fechaInicio);
-    logger.debug("Fecha Fin: " + fechaFin);
+      @PathVariable("mes") String mes, @PathVariable("year") String year, @Context HttpServletRequest req) throws ParseException {
 
-    List<OrdenesTMDTO> listaOrdenes = tomaMuestrasService.getListaOrdenesTM(fechaInicio, fechaFin);
+      try {
+          Long idUsuario = 0L;
+          DatosUsuarios usuario = null;
+          HttpSession sesion = req.getSession();
+          
+          if (sesion.getAttribute("usuario") != null) {
+            usuario = (DatosUsuarios) sesion.getAttribute("usuario");
+            idUsuario = usuario.getDuIdusuario();
 
-    listaOrdenes.forEach((otd) -> {
-      logger.debug("Lista Ã³rdenes: " + otd.toString());
-    });
+          } else {
 
-    return new ResponseTemplateGen<>(listaOrdenes, 200, "Ok");
+            return new ResponseTemplateGen<>(null, 408, "Error: SesiÃ³n ha expirado");
+          }
+          
+          String fecha = dia + "/" + mes + "/" + year;
+          String fechaInicio = null;
+          String fechaFin = null;
+          
+          // Fecha vacÃ­a
+          if (Integer.parseInt(dia) == 0 && Integer.parseInt(mes) == 0 && Integer.parseInt(year) == 0) {
+              //Date hoy = new Date();
+              Date hoy = BiosLisCalendarService.getInstance().getTS();
+              Calendar cal = Calendar.getInstance();
+              cal.setTime(hoy);
+              // se crea una fecha a partir de la actual contando la hora, y se le resta 48
+              // hrs, esto es para ajustar el parÃ¡m. fechaInicio
+              cal.set(Calendar.HOUR, cal.get(Calendar.HOUR) - 48);
+              Date tempDate = cal.getTime();
+              SimpleDateFormat sdformat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
+              fechaInicio = sdformat.format(tempDate);
+              SimpleDateFormat sdformat2 = new SimpleDateFormat("dd/MM/yyyy");
+              fechaFin = sdformat2.format(hoy);
+          } else {
+              fechaInicio = fecha + " 00:00:00";
+              fechaFin = fecha;
+          }
+          logger.debug("Fecha Inicio: " + fechaInicio);
+          logger.debug("Fecha Fin: " + fechaFin);
+          
+          List<OrdenesTMDTO> listaOrdenes = tomaMuestrasService.getListaOrdenesTM(fechaInicio, fechaFin);
+          
+          /*listaOrdenes.forEach((otd) -> {
+              logger.debug("Lista Ã³rdenes: " + otd.toString());
+          });*/
+          
+          return new ResponseTemplateGen<>(listaOrdenes, 200, "Ok");
+      } catch (BiosLISDAOException ex) {
+          java.util.logging.Logger.getLogger(TomaMuestrasRestController.class.getName()).log(Level.SEVERE, null, ex);
+          return new ResponseTemplateGen<>(null, 500, ex.getMessage());
+      }
   }
 
   @PostMapping("/api/tomaMuestras/muestras/{nOrden}")
-  public ResponseEntity<List<MuestrasDTO>> rellenarTablaMuestrasTM(@PathVariable("nOrden") Long nOrden) {
-    List<MuestrasDTO> listaTest = tomaMuestrasService.getListaMuestrasTM(nOrden);
-    listaTest.forEach((lm) -> {
-      logger.debug("Lista Muestras: " + lm.toString());
-    });
-    return ResponseEntity.ok(listaTest);
+  public ResponseTemplateGen<List<MuestrasDTO>> rellenarTablaMuestrasTM(@PathVariable("nOrden") Long nOrden) {
+      try {
+          List<MuestrasDTO> listaTest = tomaMuestrasService.getListaMuestrasTM(nOrden);
+          /*listaTest.forEach((lm) -> {
+              logger.debug("Lista Muestras: " + lm.toString());
+          });*/
+          return new ResponseTemplateGen<>(listaTest, 200, "Ok");
+      } catch (BiosLISDAOException ex) {
+          java.util.logging.Logger.getLogger(TomaMuestrasRestController.class.getName()).log(Level.SEVERE, null, ex);
+          return new ResponseTemplateGen<>(null, 500, ex.getMessage());
+      }
   }
 
   /*
@@ -159,8 +186,8 @@ public class TomaMuestrasRestController {
   @PostMapping("/api/tomaMuestras/tmClick/{nOrden}/{idUsuario}")
   public ResponseEntity<TMClickDTO> validaTmClick(@PathVariable("nOrden") Integer nOrden,
       @PathVariable("idUsuario") Long idUsuario) {
-    System.out.println("Nro Orden: " + nOrden);
-    System.out.println("idUsuario: " + idUsuario);
+    logger.debug("Nro Orden: " + nOrden);
+    logger.debug("ID Usuario: " + idUsuario);
     TMClickDTO tmClick = tomaMuestrasService.validarTmClick(nOrden, idUsuario);
     return ResponseEntity.ok(tmClick);
   }
@@ -203,7 +230,7 @@ public class TomaMuestrasRestController {
   public ResponseEntity<List<CfgExamenes>> obtenerExamenesMuestraAntiguo(@PathVariable("idMuestra") Long idMuestra) {
     List<CfgExamenes> lista = tomaMuestrasService.getExamenesMuestraAntiguo(idMuestra);
     for (CfgExamenes ce : lista) {
-      System.out.println("examen: " + ce.getCfgMuestras().getCmueDescripcion());
+      logger.debug("examen: " + ce.getCfgMuestras().getCmueDescripcion());
     }
     return ResponseEntity.ok(lista);
   }
diff --git a/src/main/java/com/grupobios/bioslis/rest/controller/ValoresReferenciaRestController.java b/src/main/java/com/grupobios/bioslis/rest/controller/ValoresReferenciaRestController.java
index 9d8d6ed0..ce2a4b54 100644
--- a/src/main/java/com/grupobios/bioslis/rest/controller/ValoresReferenciaRestController.java
+++ b/src/main/java/com/grupobios/bioslis/rest/controller/ValoresReferenciaRestController.java
@@ -60,7 +60,6 @@ public class ValoresReferenciaRestController {
     @PostMapping("/api/valoresReferencia/save")
     public ResponseTemplateGen<String> guardarValoresReferencia(@RequestParam("data") String data){
         try {
-            System.out.println("***DATA***");
             ObjectMapper om = new ObjectMapper();
             List<CfgValoresreferencia> lista = om.readValue(data, om.getTypeFactory().constructCollectionType(List.class, CfgValoresreferencia.class));
             valoresReferenciaService.guardarValoresReferencia(lista);
diff --git a/src/main/resources/com/grupobios/bioslis/entity/CfgEtiquetacodigobarras.hbm.xml b/src/main/resources/com/grupobios/bioslis/entity/CfgEtiquetacodigobarras.hbm.xml
deleted file mode 100644
index f6ed1182..00000000
--- a/src/main/resources/com/grupobios/bioslis/entity/CfgEtiquetacodigobarras.hbm.xml
+++ /dev/null
@@ -1,343 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
-"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
-<!-- Generated 09-07-2020 11:38:15 by Hibernate Tools 4.3.1 -->
-<hibernate-mapping>
-    <class name="com.grupobios.bioslis.entity.CfgEtiquetacodigobarras" table="CFG_ETIQUETACODIGOBARRAS" schema="BIOSLIS" optimistic-lock="version">
-        <id name="cecbCodigo"  type="string">
-            <column name="CECB_CODIGO" length="20" />
-            <generator class="assigned" />
-        </id>
-        <property name="cecbDescripcion" type="string">
-            <column  name="CECB_DESCRIPCION" length="30" />
-        </property>
-         <property name="cecbFontcodigobarra" type="string">
-            <column name="CECB_FONTCODIGOBARRA" length="30" />
-        </property>
-        <property name="cecbTamanofontcodigobarras" type="big_decimal">
-            <column name="CECB_TAMANOFONTCODIGOBARRAS"   />
-        </property>
-                
-         <property name="cecbFilacodigobarras" type="big_decimal">
-            <column name="CECB_FILACODIGOBARRAS"  />
-        </property>
-         <property name="cecbColumnacodigobarras" type="big_decimal">
-            <column name="CECB_COLUMNACODIGOBARRAS"  />
-        </property>
-        <property name="cecbActivocodigobarras" type="string">
-            <column name="CECB_ACTIVOCODIGOBARRAS" length="1" />
-        </property>
-         <property name="cecbTexto0fila" type="big_decimal">
-            <column name="CECB_TEXTO0FILA"  />
-        </property>
-         <property name="cecbTexto0columna" type="big_decimal">
-            <column name="CECB_TEXTO0COLUMNA"  />
-        </property>
-        <property name="cecbActivotexto0" type="string">
-            <column name="CECB_ACTIVOTEXTO0" length="1" />
-        </property>
-        <property name="cecbNegrita0" type="string">
-            <column name="CECB_NEGRITA0" length="1" />
-        </property>
-        <property name="cecbtamano0" type="string">
-            <column name="CECB_TAMANO0" length="2" />
-        </property>
-        <property name="cecbTexto1fila" type="big_decimal">
-            <column name="CECB_TEXTO1FILA"  />
-        </property>
-         <property name="cecbTexto1columna" type="big_decimal">
-            <column name="CECB_TEXTO1COLUMNA"  />
-        </property>
-        <property name="cecbTexto1largo" type="big_decimal">
-            <column name="CECB_TEXTO1LARGO"  />
-        </property>
-         <property name="cecbTexto1tamano" type="big_decimal">
-            <column name="CECB_TEXTO1TAMANO"  />
-        </property>
-         <property name="cecbActivotexto1" type="string">
-            <column name="CECB_ACTIVOTEXTO1" length="1" />
-        </property>
-        <property name="cecbNegrita1" type="string">
-            <column name="CECB_NEGRITA1" length="1" />
-        </property>
-        <property name="cecbTexto2fila" type="big_decimal">
-            <column name="CECB_TEXTO2FILA"  />
-        </property>
-         <property name="cecbTexto2columna" type="big_decimal">
-            <column name="CECB_TEXTO2COLUMNA"  />
-        </property>
-        <property name="cecbTexto2largo" type="big_decimal">
-            <column name="CECB_TEXTO2LARGO"  />
-        </property>
-         <property name="cecbTexto2tamano" type="big_decimal">
-            <column name="CECB_TEXTO2TAMANO"  />
-        </property>
-         <property name="cecbActivotexto2" type="string">
-            <column name="CECB_ACTIVOTEXTO2" length="1" />
-        </property>
-        <property name="cecbNegrita2" type="string">
-            <column name="CECB_NEGRITA2" length="1" />
-        </property>
-        <property name="cecbTexto3fila" type="big_decimal">
-            <column name="CECB_TEXTO3FILA"  />
-        </property>
-         <property name="cecbTexto3columna" type="big_decimal">
-            <column name="CECB_TEXTO3COLUMNA"  />
-        </property>
-        <property name="cecbTexto3largo" type="big_decimal">
-            <column name="CECB_TEXTO3LARGO"  />
-        </property>
-         <property name="cecbTexto3tamano" type="big_decimal">
-            <column name="CECB_TEXTO3TAMANO"  />
-        </property>
-         <property name="cecbActivotexto3" type="string">
-            <column name="CECB_ACTIVOTEXTO3" length="1" />
-        </property>
-        <property name="cecbNegrita3" type="string">
-            <column name="CECB_NEGRITA3" length="1" />
-        </property>
-        <property name="cecbTexto4fila" type="big_decimal">
-            <column name="CECB_TEXTO4FILA"  />
-        </property>
-         <property name="cecbTexto4columna" type="big_decimal">
-            <column name="CECB_TEXTO4COLUMNA"  />
-        </property>
-        <property name="cecbTexto4largo" type="big_decimal">
-            <column name="CECB_TEXTO4LARGO"  />
-        </property>
-         <property name="cecbTexto4tamano" type="big_decimal">
-            <column name="CECB_TEXTO4TAMANO"  />
-        </property>
-         <property name="cecbActivotexto4" type="string">
-            <column name="CECB_ACTIVOTEXTO4" length="1" />
-        </property>
-        <property name="cecbNegrita4" type="string">
-            <column name="CECB_NEGRITA4" length="1" />
-        </property>
-        <property name="cecbTexto5fila" type="big_decimal">
-            <column name="CECB_TEXTO5FILA"  />
-        </property>
-         <property name="cecbTexto5columna" type="big_decimal">
-            <column name="CECB_TEXTO5COLUMNA"  />
-        </property>
-        <property name="cecbTexto5largo" type="big_decimal">
-            <column name="CECB_TEXTO5LARGO"  />
-        </property>
-         <property name="cecbTexto5tamano" type="big_decimal">
-            <column name="CECB_TEXTO5TAMANO"  />
-        </property>
-         <property name="cecbActivotexto5" type="string">
-            <column name="CECB_ACTIVOTEXTO5" length="1" />
-        </property>
-        <property name="cecbNegrita5" type="string">
-            <column name="CECB_NEGRITA5" length="1" />
-        </property>
-        <property name="cecbTexto6fila" type="big_decimal">
-            <column name="CECB_TEXTO6FILA"  />
-        </property>
-         <property name="cecbTexto6columna" type="big_decimal">
-            <column name="CECB_TEXTO6COLUMNA"  />
-        </property>
-        <property name="cecbTexto6largo" type="big_decimal">
-            <column name="CECB_TEXTO6LARGO"  />
-        </property>
-         <property name="cecbTexto6tamano" type="big_decimal">
-            <column name="CECB_TEXTO6TAMANO"  />
-        </property>
-         <property name="cecbActivotexto6" type="string">
-            <column name="CECB_ACTIVOTEXTO6" length="1" />
-        </property>
-        <property name="cecbNegrita6" type="string">
-            <column name="CECB_NEGRITA6" length="1" />
-        </property>
-        <property name="cecbTexto7fila" type="big_decimal">
-            <column name="CECB_TEXTO7FILA"  />
-        </property>
-         <property name="cecbTexto7columna" type="big_decimal">
-            <column name="CECB_TEXTO7COLUMNA"  />
-        </property>
-        <property name="cecbTexto7largo" type="big_decimal">
-            <column name="CECB_TEXTO7LARGO"  />
-        </property>
-         <property name="cecbTexto7tamano" type="big_decimal">
-            <column name="CECB_TEXTO7TAMANO"  />
-        </property>
-         <property name="cecbActivotexto7" type="string">
-            <column name="CECB_ACTIVOTEXTO7" length="1" />
-        </property>
-        <property name="cecbNegrita7" type="string">
-            <column name="CECB_NEGRITA7" length="1" />
-        </property>
-        <property name="cecbTexto8fila" type="big_decimal">
-            <column name="CECB_TEXTO8FILA"  />
-        </property>
-         <property name="cecbTexto8columna" type="big_decimal">
-            <column name="CECB_TEXTO8COLUMNA"  />
-        </property>
-        <property name="cecbTexto8largo" type="big_decimal">
-            <column name="CECB_TEXTO8LARGO"  />
-        </property>
-         <property name="cecbTexto8tamano" type="big_decimal">
-            <column name="CECB_TEXTO8TAMANO"  />
-        </property>
-         <property name="cecbActivotexto8" type="string">
-            <column name="CECB_ACTIVOTEXTO8" length="1" />
-        </property>
-        <property name="cecbNegrita8" type="string">
-            <column name="CECB_NEGRITA8" length="1" />
-        </property>
-        <property name="cecbTexto9fila" type="big_decimal">
-            <column name="CECB_TEXTO9FILA"  />
-        </property>
-         <property name="cecbTexto9columna" type="big_decimal">
-            <column name="CECB_TEXTO9COLUMNA"  />
-        </property>
-        <property name="cecbTexto9largo" type="big_decimal">
-            <column name="CECB_TEXTO9LARGO"  />
-        </property>
-         <property name="cecbTexto9tamano" type="big_decimal">
-            <column name="CECB_TEXTO9TAMANO"  />
-        </property>
-         <property name="cecbActivotexto9" type="string">
-            <column name="CECB_ACTIVOTEXTO9" length="1" />
-        </property>
-        <property name="cecbNegrita9" type="string">
-            <column name="CECB_NEGRITA9" length="1" />
-        </property>
-        <property name="cecbTexto10fila" type="big_decimal">
-            <column name="CECB_TEXTO10FILA"  />
-        </property>
-         <property name="cecbTexto10columna" type="big_decimal">
-            <column name="CECB_TEXTO10COLUMNA"  />
-        </property>
-        <property name="cecbTexto10largo" type="big_decimal">
-            <column name="CECB_TEXTO10LARGO"  />
-        </property>
-         <property name="cecbTexto10tamano" type="big_decimal">
-            <column name="CECB_TEXTO10TAMANO"  />
-        </property>
-         <property name="cecbActivotexto10" type="string">
-            <column name="CECB_ACTIVOTEXTO10" length="1" />
-        </property>
-        <property name="cecbNegrita10" type="string">
-            <column name="CECB_NEGRITA10" length="1" />
-        </property>
-        <property name="cecbTexto11fila" type="big_decimal">
-            <column name="CECB_TEXTO11FILA"  />
-        </property>
-         <property name="cecbTexto11columna" type="big_decimal">
-            <column name="CECB_TEXTO11COLUMNA"  />
-        </property>
-        <property name="cecbTexto11largo" type="big_decimal">
-            <column name="CECB_TEXTO11LARGO"  />
-        </property>
-         <property name="cecbTexto11tamano" type="big_decimal">
-            <column name="CECB_TEXTO11TAMANO"  />
-        </property>
-         <property name="cecbActivotexto11" type="string">
-            <column name="CECB_ACTIVOTEXTO11" length="1" />
-        </property>
-        <property name="cecbNegrita11" type="string">
-            <column name="CECB_NEGRITA11" length="1" />
-        </property>
-        <property name="cecbTexto12fila" type="big_decimal">
-            <column name="CECB_TEXTO12FILA"  />
-        </property>
-         <property name="cecbTexto12columna" type="big_decimal">
-            <column name="CECB_TEXTO12COLUMNA"  />
-        </property>
-        <property name="cecbTexto12largo" type="big_decimal">
-            <column name="CECB_TEXTO12LARGO"  />
-        </property>
-         <property name="cecbTexto12tamano" type="big_decimal">
-            <column name="CECB_TEXTO12TAMANO"  />
-        </property>
-         <property name="cecbActivotexto12" type="string">
-            <column name="CECB_ACTIVOTEXTO12" length="1" />
-        </property>
-        <property name="cecbNegrita12" type="string">
-            <column name="CECB_NEGRITA12" length="1" />
-        </property>
-         <property name="cecbSort" type="big_decimal">
-            <column name="CECB_SORT"  />
-        </property>
-        <property name="cecbNota" type="string">
-            <column name="CECB_NOTA" length="200" />
-        </property>
-         <property name="cecbUsuarioregistro" type="string">
-            <column name="CECB_USUARIOREGISTRO" length="20" />
-        </property>
-         <property name="cecbFecharegistro" type="timestamp">
-            <column name="CECB_FECHAREGISTRO" length="7" />
-        </property>
-        <property name="cecbProcedencia" type="string">
-            <column name="CECB_PROCEDENCIA" length="1" />
-        </property>
-         <property name="cecbServicio" type="string">
-            <column name="CECB_SERVICIO" length="1" />
-        </property>
-        <property name="cecbTipopacprefijo" type="string">
-            <column name="CECB_TIPOPACPREFIJO" length="25" />
-        </property>
-        <property name="cecbTipopacsufijo" type="string">
-            <column name="CECB_TIPOPACSUFIJO" length="25" />
-        </property>
-        <property name="cecbProceprefijo" type="string">
-            <column name="CECB_PROCEPREFIJO" length="25" />
-        </property>
-          <property name="cecbProcesufijo" type="string">
-            <column name="CECB_PROCESUFIJO" length="25" />
-        </property>
-         <property name="cecbServprefijo" type="string">
-            <column name="CECB_SERVPREFIJO" length="25" />
-        </property>
-        <property name="cecbServsufijo" type="string">
-            <column name="CECB_SERVSUFIJO" length="25" />
-        </property>
-         <property name="cecbNombprefijo" type="string">
-            <column name="CECB_NOMBPREFIJO" length="25" />
-        </property>
-         <property name="cecbNombsufijo" type="string">
-            <column name="CECB_NOMBSUFIJO" length="25" />
-        </property>
-         <property name="cecbSexoprefijo" type="string">
-            <column name="CECB_SEXOPREFIJO" length="25" />
-        </property>
-         <property name="cecbSexosufijo" type="string">
-            <column name="CECB_SEXOSUFIJO" length="25" />
-        </property>
-         <property name="cecbEdadprefijo" type="string">
-            <column name="CECB_EDADPREFIJO" length="25" />
-        </property>
-         <property name="cecbEdadsufijo" type="string">
-            <column name="CECB_EDADSUFIJO" length="25" />
-        </property>
-         <property name="cecbTipmueprefijo" type="string">
-            <column name="CECB_TIPMUEPREFIJO" length="25" />
-        </property>
-        <property name="cecbTipmuesufijo" type="string">
-            <column name="CECB_TIPMUESUFIJO" length="25" />
-        </property>
-         <property name="cecbEnvaprefijo" type="string">
-            <column name="CECB_ENVAPREFIJO" length="25" />
-        </property>
-        <property name="cecbEnvasufijo" type="string">
-            <column name="CECB_ENVASUFIJO" length="25" />
-        </property>
-        <property name="cecbFechaprefijo" type="string">
-            <column name="CECB_FECHAPREFIJO" length="20" />
-        </property>
-         <property name="cecbFechasufijo" type="string">
-            <column name="CECB_FECHASUFIJO" length="20" />
-        </property>
-         <property name="cecbParametrizada" type="string">
-            <column name="CECB_PARAMETRIZADA" length="1" />
-        </property>
-         <property name="cecbRutprefijo" type="string"  >
-            <column name="CECB_RUTPREFIJO" length="20"  />
-        </property>
-         <property name="cecbRutsufijo" type="string">
-            <column name="CECB_RUTSUFIJO" length="20" />
-        </property>
-    </class>
-</hibernate-mapping>
\ No newline at end of file
diff --git a/src/main/resources/com/grupobios/bioslis/entity/DatosFichas.hbm.xml b/src/main/resources/com/grupobios/bioslis/entity/DatosFichas.hbm.xml
index 9c965a0c..783868aa 100644
--- a/src/main/resources/com/grupobios/bioslis/entity/DatosFichas.hbm.xml
+++ b/src/main/resources/com/grupobios/bioslis/entity/DatosFichas.hbm.xml
@@ -66,6 +66,6 @@
         </property>
         <property name="dfTmclick" type="string">
             <column name="DF_TMCLICK" length="25" not-null="true" />
-        </property>      
+        </property>
     </class>
 </hibernate-mapping>
diff --git a/src/main/resources/com/grupobios/bioslis/entity/DatosFichasexamenes.hbm.xml b/src/main/resources/com/grupobios/bioslis/entity/DatosFichasexamenes.hbm.xml
index 72eab22e..02bbc544 100644
--- a/src/main/resources/com/grupobios/bioslis/entity/DatosFichasexamenes.hbm.xml
+++ b/src/main/resources/com/grupobios/bioslis/entity/DatosFichasexamenes.hbm.xml
@@ -179,8 +179,8 @@
             </key>
             <one-to-many class="com.grupobios.bioslis.entity.DatosFichasexamenestest" />
         </set>
-        <property name="dfeExamenAnulado" type="string" insert="false" >
-            <column name="DFE_EXAMENANULADO"   />
+        <property name="dfeExamenAnulado" type="string">
+            <column name="DFE_EXAMENANULADO"  />
         </property>
          <property name="dfeIdusuarioAnula" type="java.lang.Long">
             <column name="DFE_IDUSUARIOANULA" precision="10" scale="0" />
diff --git a/src/main/resources/com/grupobios/bioslis/entity/DatosFichasexamenestest.hbm.xml b/src/main/resources/com/grupobios/bioslis/entity/DatosFichasexamenestest.hbm.xml
index f11b3e59..84b907fa 100644
--- a/src/main/resources/com/grupobios/bioslis/entity/DatosFichasexamenestest.hbm.xml
+++ b/src/main/resources/com/grupobios/bioslis/entity/DatosFichasexamenestest.hbm.xml
@@ -142,10 +142,6 @@
             <column name="DFET_" length="200" />
         </property>
         -->
-        <!-- agregado por cristian 14-11 -->
-         <property name="dfetIdmetodo" type="big_decimal">
-            <column name="DFET_IDMETODO" precision="4" scale="0" />
-        </property>        
         
     </class>
 </hibernate-mapping>
diff --git a/src/main/resources/com/grupobios/bioslis/entity/SigmaPrefijostest.hbm.xml b/src/main/resources/com/grupobios/bioslis/entity/SigmaPrefijostest.hbm.xml
deleted file mode 100644
index 328f5e50..00000000
--- a/src/main/resources/com/grupobios/bioslis/entity/SigmaPrefijostest.hbm.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
-"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
-<!-- Generated 16-08-2021 14:22:23 by Hibernate Tools 4.3.1 -->
-<hibernate-mapping>
-    <class name="com.grupobios.bioslis.entity.SigmaPrefijostest" table="SIGMA_PREFIJOSTEST" schema="BIOSLIS">
-        <id name="sptIdprefijostest" type="int">
-            <column name="SPT_IDPREFIJOSTEST" precision="5" scale="0" />
-            <generator class="assigned"></generator>
-        </id>
-        <property name="sptPrefijotest" type="string">
-            <column name="SPT_PREFIJOTEST" length="16" not-null="true" />
-        </property>
-        <set name="sigmaProcesosanalizadorestests" table="SIGMA_PROCESOSANALIZADORESTEST" inverse="true" lazy="true" fetch="select">
-            <key>
-                <column name="SPAT_IDPREFIJOTEST" precision="5" scale="0" not-null="true" />
-            </key>
-            <one-to-many class="com.grupobios.bioslis.entity.SigmaProcesosanalizadorestest" />
-        </set>
-    </class>
-</hibernate-mapping>
diff --git a/src/main/resources/com/grupobios/bioslis/entity/SigmaProcesosalarmas.hbm.xml b/src/main/resources/com/grupobios/bioslis/entity/SigmaProcesosalarmas.hbm.xml
index 90cd5488..881b2398 100644
--- a/src/main/resources/com/grupobios/bioslis/entity/SigmaProcesosalarmas.hbm.xml
+++ b/src/main/resources/com/grupobios/bioslis/entity/SigmaProcesosalarmas.hbm.xml
@@ -6,7 +6,11 @@
     <class name="com.grupobios.bioslis.entity.SigmaProcesosalarmas" table="SIGMA_PROCESOSALARMAS" schema="BIOSLIS" optimistic-lock="version">
         <id name="spaIdprocesoalarma" type="short">
             <column name="SPA_IDPROCESOALARMA" precision="4" scale="0" />
-            <generator class="assigned" />
+            <generator class="sequence" >
+                <param name="sequence">
+                    BIOSLIS.SEQ_SIGMA_PROCESOSALARMAS
+                </param>
+            </generator>
         </id>
         <many-to-one name="sigmaProcesos" class="com.grupobios.bioslis.entity.SigmaProcesos" fetch="select">
             <column name="SPA_CODIGOPROCESO" length="48" not-null="true" />
diff --git a/src/main/resources/com/grupobios/bioslis/entity/SigmaProcesosanalizadores.hbm.xml b/src/main/resources/com/grupobios/bioslis/entity/SigmaProcesosanalizadores.hbm.xml
deleted file mode 100644
index 8e5ea0a9..00000000
--- a/src/main/resources/com/grupobios/bioslis/entity/SigmaProcesosanalizadores.hbm.xml
+++ /dev/null
@@ -1,87 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
-"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
-<!-- Generated 16-08-2021 14:22:23 by Hibernate Tools 4.3.1 -->
-<hibernate-mapping>
-    <class name="com.grupobios.bioslis.entity.SigmaProcesosanalizadores" table="SIGMA_PROCESOSANALIZADORES" schema="BIOSLIS">
-        <id name="spaIdanalizador" type="int">
-            <column name="SPA_IDANALIZADOR" precision="8" scale="0" />
-            <generator class="assigned"></generator>
-        </id>
-        <many-to-one name="ldvTipocomunicacion" class="com.grupobios.bioslis.entity.LdvTipocomunicacion" fetch="select">
-            <column name="SPA_IDTIPOCOMUNICACION" precision="2" scale="0" />
-        </many-to-one>
-        <property name="spaCodigoanalizador" type="string">
-            <column name="SPA_CODIGOANALIZADOR" length="48" not-null="true" />
-        </property>
-        <property name="spaDescripcion" type="string">
-            <column name="SPA_DESCRIPCION" length="200" />
-        </property>
-        <property name="spaEstacionsigma" type="java.lang.Byte">
-            <column name="SPA_ESTACIONSIGMA" precision="2" scale="0" />
-        </property>
-        <property name="spaParametros" type="string">
-            <column name="SPA_PARAMETROS" length="100" />
-        </property>
-        <property name="spaCargatemporal" type="string">
-            <column name="SPA_CARGATEMPORAL" length="1" />
-        </property>
-        <property name="spaTiempocargatemporalseg" type="java.lang.Short">
-            <column name="SPA_TIEMPOCARGATEMPORALSEG" precision="3" scale="0" />
-        </property>
-        <property name="spaCargaanalizador" type="string">
-            <column name="SPA_CARGAANALIZADOR" length="1" />
-        </property>
-        <property name="spaTiempocargaanalizadorseg" type="java.lang.Short">
-            <column name="SPA_TIEMPOCARGAANALIZADORSEG" precision="3" scale="0" />
-        </property>
-        <property name="spaActivo" type="string">
-            <column name="SPA_ACTIVO" length="1" />
-        </property>
-        <property name="spaCodigohost" type="string">
-            <column name="SPA_CODIGOHOST" length="80" />
-        </property>
-        <property name="spaCodigobarras" type="string">
-            <column name="SPA_CODIGOBARRAS" length="80" />
-        </property>
-        <property name="spaResultadostemporales" type="string">
-            <column name="SPA_RESULTADOSTEMPORALES" length="1" />
-        </property>
-        <property name="spaNmuestralargo12" type="string">
-            <column name="SPA_NMUESTRALARGO12" length="1" />
-        </property>
-        <property name="spaMuestrarecepcionada" type="string">
-            <column name="SPA_MUESTRARECEPCIONADA" length="1" />
-        </property>
-        <property name="spaControlalarmas" type="string">
-            <column name="SPA_CONTROLALARMAS" length="1" />
-        </property>
-        <property name="spaPrefijo" type="string">
-            <column name="SPA_PREFIJO" length="40" />
-        </property>
-        <property name="spaSort" type="java.lang.Integer">
-            <column name="SPA_SORT" precision="8" scale="0" />
-        </property>
-        <property name="spaCodigoqc" type="string">
-            <column name="SPA_CODIGOQC" length="200" />
-        </property>
-        <property name="spaIdformatoimagen" type="java.lang.Byte">
-            <column name="SPA_IDFORMATOIMAGEN" precision="2" scale="0" />
-        </property>
-        <property name="spaQc" type="string">
-            <column name="SPA_QC" length="1" />
-        </property>
-        <property name="spaFirmaexamenes" type="string">
-            <column name="SPA_FIRMAEXAMENES" length="1" />
-        </property>
-        <property name="spaAutorizaexamenes" type="string">
-            <column name="SPA_AUTORIZAEXAMENES" length="1" />
-        </property>
-        <set name="sigmaProcesosanalizadorestests" table="SIGMA_PROCESOSANALIZADORESTEST" inverse="true" lazy="true" fetch="select">
-            <key>
-                <column name="SPAT_IDANALIZADOR" precision="4" scale="0" not-null="true" />
-            </key>
-            <one-to-many class="com.grupobios.bioslis.entity.SigmaProcesosanalizadorestest" />
-        </set>
-    </class>
-</hibernate-mapping>
diff --git a/src/main/resources/com/grupobios/bioslis/entity/SigmaProcesosanalizadorestest.hbm.xml b/src/main/resources/com/grupobios/bioslis/entity/SigmaProcesosanalizadorestest.hbm.xml
deleted file mode 100644
index 59635f6e..00000000
--- a/src/main/resources/com/grupobios/bioslis/entity/SigmaProcesosanalizadorestest.hbm.xml
+++ /dev/null
@@ -1,43 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
-"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
-<!-- Generated 16-08-2021 14:22:23 by Hibernate Tools 4.3.1 -->
-<hibernate-mapping>
-    <class name="com.grupobios.bioslis.entity.SigmaProcesosanalizadorestest" table="SIGMA_PROCESOSANALIZADORESTEST" schema="BIOSLIS">
-        <composite-id name="id" class="com.grupobios.bioslis.entity.SigmaProcesosanalizadorestestId">
-            <key-property name="spatIdanalizador" type="short">
-                <column name="SPAT_IDANALIZADOR" precision="4" scale="0" />
-            </key-property>
-            <key-property name="spatIdtest" type="long">
-                <column name="SPAT_IDTEST" precision="10" scale="0" />
-            </key-property>
-        </composite-id>
-        <many-to-one name="sigmaPrefijostest" class="com.grupobios.bioslis.entity.SigmaPrefijostest" fetch="select">
-            <column name="SPAT_IDPREFIJOTEST" precision="5" scale="0" not-null="true" />
-        </many-to-one>
-        <many-to-one name="sigmaTiposmuestras" class="com.grupobios.bioslis.entity.SigmaTiposmuestras" fetch="select">
-            <column name="SPAT_IDSIGMATIPOMUESTRA" precision="2" scale="0" not-null="true" />
-        </many-to-one>
-        <many-to-one name="sigmaProcesosanalizadores" class="com.grupobios.bioslis.entity.SigmaProcesosanalizadores" update="false" insert="false" fetch="select">
-            <column name="SPAT_IDANALIZADOR" precision="4" scale="0" not-null="true" />
-        </many-to-one>
-        <many-to-one name="cfgTiposderesultado" class="com.grupobios.bioslis.entity.CfgTiposderesultado" fetch="select">
-            <column name="SPAT_IDTIPORESULTADO" precision="2" scale="0" not-null="true" />
-        </many-to-one>
-        <property name="spatCodigorecepcion" type="string">
-            <column name="SPAT_CODIGORECEPCION" length="140" />
-        </property>
-        <property name="spatCodigoenvio" type="string">
-            <column name="SPAT_CODIGOENVIO" length="140" />
-        </property>
-        <property name="spatActivo" type="string">
-            <column name="SPAT_ACTIVO" length="1" />
-        </property>
-        <property name="spatConversion" type="string">
-            <column name="SPAT_CONVERSION" length="1" />
-        </property>
-        <property name="spatConversiondatos" type="string">
-            <column name="SPAT_CONVERSIONDATOS" length="1600" />
-        </property>
-    </class>
-</hibernate-mapping>
diff --git a/src/main/resources/hibernate.cfg.xml b/src/main/resources/hibernate.cfg.xml
index 0f5e450e..ca448f0e 100755
--- a/src/main/resources/hibernate.cfg.xml
+++ b/src/main/resources/hibernate.cfg.xml
@@ -198,9 +198,6 @@ Contributor(s):
     <mapping resource="com/grupobios/bioslis/entity/LdvOperacionesmath.hbm.xml"/>
     <mapping resource="com/grupobios/bioslis/entity/CfgMuestrasprefijos.hbm.xml"/>
     <mapping resource="com/grupobios/bioslis/entity/SigmaProcesosalarmas.hbm.xml"/>    
-    
-     <mapping resource="com/grupobios/bioslis/entity/CfgEtiquetacodigobarras.hbm.xml"/>
-    
   </session-factory>
 </hibernate-configuration>
 
diff --git a/src/main/webapp/WEB-INF/applicationContext.xml b/src/main/webapp/WEB-INF/applicationContext.xml
index 9c13cdb8..61aa5b51 100644
--- a/src/main/webapp/WEB-INF/applicationContext.xml
+++ b/src/main/webapp/WEB-INF/applicationContext.xml
@@ -407,8 +407,6 @@
 		<property name="cfgBacgrupostestDAO"
 			ref="cfgBacgrupostestDAO" />
 		<property name="cfgaDAO" ref="cfgaDAO" />
-		
-        
 		<property name="cfgAntecedentestestDAO" ref="cfgAntecedentestestDAO" />
 		<property name="cfgUnidadesdemedidaDAO" ref="cfgUnidadesdemedidaDAO" />
 		<property name="gruposExamenesFonasaDAO" ref="gruposExamenesFonasaDAO" />
@@ -453,16 +451,8 @@
                 <property name="tiposCondicionDAO" ref="tiposCondicionDAO" />
                 <property name="operacionesMathDAO" ref="operacionesMathDAO" />
                 <property name="muestrasPrefijosDAO" ref="muestrasPrefijosDAO" />
-        </bean>
-         
-        <bean id="configuracionEtiquetasService"
-                class="com.grupobios.bioslis.bs.ConfiguracionEtiquetasServiceImpl"
-                name="configuracionEtiquetasService">
-                <property name="cfgEtiquetaCodigoBarrasDAO" ref="cfgEtiquetaCodigoBarrasDAO" />
-        </bean>
-         <bean id="microbiologiaService"
-                class="com.grupobios.bioslis.bs.MicrobiologiaServiceImpl"
-                name="microbiologiaService">
-                <property name="microbiologiaOrdenDAO" ref="microbiologiaOrdenDAO" />
+                <property name="cfgTiposderesultadoDAO" ref="cfgTiposderesultadoDAO" />
+                <property name="procesosTestConversionDAO" ref="procesosTestConversionDAO" />
+                <property name="procesosAlarmasDAO" ref="procesosAlarmasDAO" />
         </bean>
 </beans>
diff --git a/src/main/webapp/WEB-INF/biosdaos.xml b/src/main/webapp/WEB-INF/biosdaos.xml
index 28c8a83f..584527b6 100755
--- a/src/main/webapp/WEB-INF/biosdaos.xml
+++ b/src/main/webapp/WEB-INF/biosdaos.xml
@@ -288,9 +288,6 @@
   <bean id="sistemaConfiguracionesDAO"
     class="com.grupobios.bioslis.dao.SistemaConfiguracionesDAO"
     name="sistemaConfiguracionesDAO" />
- <bean id="cfgEtiquetaCodigoBarrasDAO"
-		class="com.grupobios.bioslis.dao.CfgEtiquetaCodigoBarrasDAO"
-		name="cfgEtiquetaCodigoBarrasDAO" />
 
 
         
@@ -345,10 +342,6 @@
         <bean id="analizadoresDAO"
 		class="com.grupobios.bioslis.dao.SigmaAnalizadoresDAO"
 		name="analizadoresDAO" />
-		
-		 <bean id="microbiologiaOrdenDAO"
-		class="com.grupobios.bioslis.microbiologia.dao.MicrobiologiaOrdenDAO"
-		name="microbiologiaOrdenDAO" />
         
         <bean id="sigmaImagenesDAO"
 		class="com.grupobios.bioslis.dao.CfgSigmaImagenesDAO"
@@ -382,4 +375,12 @@
 		class="com.grupobios.bioslis.dao.CfgMuestrasPrefijosDAO"
 		name="muestrasPrefijosDAO" />
         
+        <bean id="procesosTestConversionDAO"
+		class="com.grupobios.bioslis.dao.SigmaProcesosTestConversionDAO"
+		name="procesosTestConversionDAO" />
+        
+        <bean id="procesosAlarmasDAO"
+		class="com.grupobios.bioslis.dao.SigmaProcesosAlarmasDAO"
+		name="procesosAlarmasDAO" />
+        
 </beans>
diff --git a/src/main/webapp/WEB-INF/dispatcher-servlet.xml b/src/main/webapp/WEB-INF/dispatcher-servlet.xml
index 00091aef..28117277 100755
--- a/src/main/webapp/WEB-INF/dispatcher-servlet.xml
+++ b/src/main/webapp/WEB-INF/dispatcher-servlet.xml
@@ -27,7 +27,6 @@
 		<property name="mappings">
 			<props>
 				<prop key="/">def</prop>
-				<prop key="/ConfiguracionEtiquetas">configuracionEtiquetas</prop>
 		<prop key="/PortalPacientes">portalPacientes</prop>
 			<prop key="/PortalResultado">portalResultado</prop>
 			<prop key="/PortalPacienteLogin">portalPacienteLogin</prop>
@@ -357,10 +356,6 @@
   <bean name="ordenBuscador"
     class="com.grupobios.bioslis.front.OrdenBuscadorController" />
 
-
-  <bean name="configuracionEtiquetas"
-    class="com.grupobios.bioslis.front.ConfiguracionEtiquetasController" />
-    
   <bean name="portalPacientes"
     class="com.grupobios.bioslis.controller.PortalPacientesController" />
 
@@ -410,15 +405,7 @@
 		<property name="procesosService" ref="procesosService" />
 	</bean> 
 
-   <bean name="configuracionEtiquetasRestController"
-		class="com.grupobios.bioslis.back.api.ConfiguracionEtiquetasRestController">
-		<property name="configuracionEtiquetasService" ref="configuracionEtiquetasService" />
-	</bean> 
         
-         <bean name="microbiologiaRest"
-		class="com.grupobios.bioslis.microbiologia.rest.MicrobiologiaRestController">		
-		<property name="microbiologiaService" ref="microbiologiaService" />
-	</bean> 
 	<mvc:resources mapping="/resources/**"
 		location="/resources/" />
 	<mvc:annotation-driven />
diff --git a/src/main/webapp/WEB-INF/jsp/CapturaResultados.jsp b/src/main/webapp/WEB-INF/jsp/CapturaResultados.jsp
index 175f1e7f..d367bc8c 100755
--- a/src/main/webapp/WEB-INF/jsp/CapturaResultados.jsp
+++ b/src/main/webapp/WEB-INF/jsp/CapturaResultados.jsp
@@ -62,7 +62,7 @@
               <div class="card-header mb-0">
                 <!-- ********************************* panel Seleccion de orden *************************************************************************************-->
                 <div class="card-title d-flex justify-content-between pt-1 pb-1">
-                  <h3 id="#accordionPanelSeleccionOrden1" class="icon-accordion mb-0 btn-block text-left pl-0 col-3"
+                  <h3 class="icon-accordion mb-0 btn-block text-left pl-0 col-3"
                     data-toggle="collapse"
                     data-target="#accordionPanelSeleccionOrden">
                     Selecci&oacute;n de Orden</h3>
@@ -179,8 +179,6 @@
                             <th>Estado</th>
                             <th>Urgente</th>
                             <th>Acciones&nbsp;&nbsp;&nbsp;&nbsp;</th>
-                            <th>Seccion</th>
-                            <th>Anulado</th>
                           </tr>
                         </thead>
                         <tbody>
@@ -399,9 +397,7 @@
                         <th># Muestra</th>
                         <th>M&eacute;todo</th>
                         <th>Acciones</th>
-                        <th>SecciÃ³n</th>
-                        <th>Anulllado</th>
-
+                        <th>14</th>
                       </tr>
                     </thead>
                   </table>
diff --git a/src/main/webapp/WEB-INF/jsp/ConfiguracionEtiquetas.jsp b/src/main/webapp/WEB-INF/jsp/ConfiguracionEtiquetas.jsp
deleted file mode 100644
index 63906c56..00000000
--- a/src/main/webapp/WEB-INF/jsp/ConfiguracionEtiquetas.jsp
+++ /dev/null
@@ -1,560 +0,0 @@
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
-<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
-<%@ taglib prefix="spring" uri="http://www.springframework.org/tags"%>
-
-<%@page contentType="text/html" pageEncoding="UTF-8"%>
-<!DOCTYPE html>
-<html>
-    <head>
-        <meta charset="UTF-8">
-        <meta name="viewport" content="width=device-width, initial-scale=1.0">
-        <title>Configuraci&oacute;n Etiquetas</title>
-        <jsp:include page="common/Styles_1.jsp"/>
-    </head>
-    <body>
-        <div class="row menu-container">
-            <div class="col-md-6">
-                    <jsp:include page="common/Menu_dinamico.jsp"/>
-            </div>
-            <div class="col-md-6">
-                    <jsp:include page="common/Header_1.jsp" />
-            </div>
-	    </div>
-        <jsp:include page="common/AlertaSession.jsp"/>
-	<!--  <div class="container container-main-content container-edicion-ordenes"> -->
-	<div class="container "> 
-		<div class="row d-flex justify-content-center">
-			<div class="accordion col-12 pl-0 pr-0" >
-				<div  class="card">
-					<div class="card-header" >
-						<div class="card-title row col-12 d-flex justify-content-between">
-							<h3 	data-toggle="collapse" data-target="#panelBusquedaOrden"
-								aria-expanded="true" aria-controls="panelBusquedaOrden">ConfiguraciÃ³n
-								de Etiquetas:</h3>
-								
-							 <div class="col-4 justify-content-right ml-4 pl-4 pr-0">
-                            <div class="ml-1 float-right" id="divBtnLimpiar">
-                                <a id="btnLimpiar" class="navi-link" href="#">
-                                    <span class="symbol symbol-50 symbol-circle mr-3 ">
-                                        <span id="circuloLimpiar" class="symbol-label bg-hover-primary hoverIcon" data-toggle="tooltip" title="Limpiar"><i id="iLimpiar" class="la la-broom icon-xl  text-primary"></i></span>
-                                    </span>
-                                    <span class="navi-text"></span>
-                                </a>
-                            </div>   
-                             <div class="ml-1 float-right" id="divBtnLimpiar2">
-                                <a id="btnLimpiar2" class="navi-link" href="#">
-                                    <span class="symbol symbol-50 symbol-circle mr-3 ">
-                                        <span id="circuloLimpiar2" class="symbol-label bg-hover-primary hoverIcon" data-toggle="tooltip" title="Limpiar"><i id="iLimpiar" class="la la-broom icon-xl  text-primary"></i></span>
-                                    </span>
-                                    <span class="navi-text"></span>
-                                </a>
-                            </div>   
-                            <div id="divBtnEditar" class="ml-1 float-right" >
-                                <a id="btnUpdater" class="navi-link" href="#" >
-                                    <span class='symbol symbol-50 symbol-circle mr-3' >
-                                        <span id="circuloEditarPaciente" class='symbol-label bg-hover-primary circuloIcon' data-toggle="tooltip" title="Editar Etiqueta"><i id="iEditEtiqueta" class="far fa-edit text-primary"></i></span>
-                                    </span>
-                                </a>
-                            </div>
-                            <div id="divCancelEdit" class="ml-1 float-right neverSeen"  >
-                                <a id="btnCancelarUpdate" class="navi-link" href="#" >
-                                    <span class='symbol symbol-50 symbol-circle mr-3' >
-                                        <span id="circuloCancelEdit" class='symbol-label bg-hover-danger circuloIcon' data-toggle="tooltip" title="Cancelar ediciÃ³n"><i id="iCancelEdit" class="fas fa-times icon-xl text-danger"></i></span>
-                                    </span>
-                                </a>
-                            </div>
-                            <div class="ml-1 float-right" >
-                            <a id="agregarEtiqueta" class="navi-link collapseMedico"> 
-                                            <span  class='symbol symbol-50 symbol-circle  mr-3'> 
-                                                <span id="circuloBuscarPaciente" class='symbol-label bg-hover-primary   hoverIcon' href="#" data-toggle="tooltip" title="Agregar Etiqueta"> 
-                                                    <i id="iAgregarTest" class='fas fa-plus text-primary'></i>
-                                                </span>
-                                            </span>
-                                        </a> 
-                               
-                            </div>
-                            
-                            
-                            </div>
-                            
-							
-						</div>
-					</div>
-					<div id="panelConfigurarEtiqueta" class="h-70">
-						<div class="card-body">
-							<div class="col-12 h-80">
-								<input type="hidden" id="procedenciaUsuario"
-									name="procedenciaUsuario"
-									value="${perfilUsuario.cpuIdprocedencia}" />
-								<div id="" class=" row">
-
-									<div class="col-4">
-										<div class="card card-2 h-80">
-											<div class="card-body ">
-												<table id="ce_t_etiquetas"
-													class="table table-striped table-bordered display nowrap"
-													width="100%">
-													<thead id="bo_th_ordenes">
-														<tr>
-															<th>#</th>
-															<th>Modelo</th>
-														</tr>
-													</thead>
-													<tbody id="bodyEtiquetas">
-														
-													</tbody>
-
-												</table>
-											</div>
-										</div>
-									</div>
-
-									<div class="col-4">
-										<div class="card card-2">
-											<div class="card-body">
-
-												<table class="col-12 mt-1">
-
-													<form id="bo_formFiltro">
-														<fieldset>
-															<tr>
-																<td>
-																	<div id="bo_div_nOrdenIni" class="bo_row">
-																		<label for="bo_nOrdenIni"
-																			class="col-form-label text-left col-4 pl-0">CÃ³digo</label>
-																		<div class="col-8">
-																			<input type="text" class="form-control limpiarEtiqueta "
-																				id="codigoEtiqueta" tittle="Nro de orden inicial" />
-																		</div>
-																	</div>
-																</td>
-															</tr>
-
-															<tr>
-																<td>
-																	<div id="avance_div_nombre" class="bo_row">
-																		<label for="nombre-Avance"
-																			class="col-form-label text-left col-4 pl-0">Nombre</label>
-																		<div class="col-8">
-																			<input type="text" id="nombreEtiqueta"
-																				class="form-control limpiarEtiqueta" />
-																		</div>
-																	</div>
-																</td>
-															</tr>
-															<tr>
-																<td>
-																	<div id="avance_div_font" class="bo_row">
-																	
-																		<label for="font-Avance"
-																			class="col-form-label text-left col-4 pl-0">Font</label>
-																	<div class="col-8">		
-																	<Select  id="selectFont" class="form-select form-select-sm" aria-label=".form-select-sm example">
-																	<option value="Sin especificar" >Sin especificar</option>		
-																	<option value="Code 128">Code 128 </option>	
-																								
-																</Select>
-																	</div>
-																</td>
-															</tr>
-
-
-															<tr>
-																<td></td>
-															</tr>
-														</fieldset>
-													</form>
-
-												</table>
-											</div>
-										</div>
-									</div>
-
-									<div class="col-4">
-										<div class="card card-2 h-80">
-											<div class="card-body ">
-
-												<table id="bo_t_ordenes"
-													class="table "
-													width="100%">
-													<thead id="bo_th_ordenes">
-														
-													</thead>
-													<tbody>
-													<tr>
-													<td><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxProcedencia" value="" aria-label="..." />
-												</div></td>
-												<td><label>Procedencia</label>
-													</tr>
-													<tr>
-													<td><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxServicio" value="" aria-label="..." />
-												</div></td>
-												<td><label>Servicio</label>
-													</tr>
-													<tr>
-													<td><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxParametrizada" value="" aria-label="..." />
-												</div></td>
-												<td><label>Parametrizada</label>
-													</tr>
-													<tr>
-													<td><label> Nota :</label></td>
-													<td><input class="limpiarEtiqueta"  type="text" id="textNota" placeholder="....." /></td>
-													</tr>
-													
-													</tbody>
-
-												</table>
-											</div>
-										</div>
-									</div>
-
-
-								</div>
-
-
-
-							</div>
-
-
-
-
-
-							<div id="" class=" row">
-								<table id="bo_tt_ordenes" class="table table-bordered"
-									width="90">
-									<thead id="ordenes">
-										<tr>
-											<th style="width:15%"></th>
-											<th class="text-center" style="width:9%"><label>Fila</label></th>
-											<th class="text-center" style="width:9%"><label>Columna</label></th>
-											<th class="text-center" style="width:9%"><label>Largo</label></th>
-											<th class="text-center" style="width:9%"><label>Activo</label></th>
-											<th class="text-center" style="width:9%"><label>Negrita</label></th>
-											<th class="text-center" style="width:9%"><label>TamaÃ±o</label></th>
-											<th class="text-center" style="width:9%"><label>Prefijo</label></th>
-											<th class="text-center" style="width:9%"><label>Sufijo</label></th>
-										</tr>
-									</thead>
-									<tbody>
-
-										<tr>
-											<td>Codigo de Barras</td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idCodigoBarraF0" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idCodigoBarraC0"
-												style="width: 50%" /></td>
-											<td></td>
-											<td class="text-center"><div  class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxCodigoBarraA0" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idCodigoBarraT0"
-												style="width: 50%" /></td>
-											<td class="text-center"></td>
-											<td class="text-center"></td>
-										</tr>
-										<tr>
-											<td>NÂ°Codigo de Barras</td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idNumeroCodigoBarraF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idNumeroCodigoBarraC"
-												style="width: 50%" /></td>
-											<td></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxNumeroCodigoBarraA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxNumeroCodigoBarraN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idNumeroCodigoBarraT"
-												style="width: 50%" /></td>
-											<td class="text-center"></td>
-											<td class="text-center"></td>
-										</tr>
-										<tr>
-											<td>Tipo de AtenciÃ³n</td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="iTipoAtencionF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="iTipoAtencionC"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="iTipoAtencionL"
-												style="width: 50%" /></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxTipoAtencionA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxTipoAtencionN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idTipoAtencionT"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idTipoAtencionPrefijo"
-												style="width: 80%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idTipoAtencionSufijo"
-												style="width: 80%" /></td>
-										</tr>
-										<tr>
-											<td>Procedencia</td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idProcedenciaF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idProcedenciaC"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idProcedenciaL"
-												style="width: 50%" /></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxProcedenciaA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxProcedenciaN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idProcedenciaT"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idProcedenciaPrefijo"
-												style="width: 80%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idProcedenciaSufijo"
-												style="width: 80%" /></td>
-										</tr>
-										<tr>
-											<td>Servicio</td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idServicioF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idServicioC"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idServicioL"
-												style="width: 50%" /></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxServicioA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxServicioN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idServicioT"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idServicioPrefijo"
-												style="width: 80%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idServicioSufijo"
-												style="width: 80%" /></td>
-										</tr>
-										<tr>
-											<td>Nombre de Paciente</td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idNombrePacienteF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idNombrePacienteC"
-												style="width: 50%" /></td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idNombrePacienteL"
-												style="width: 50%" /></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxNombrePacienteA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxNombrePacienteN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idNombrePacienteT"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idNombrePacientePrefijo"
-												style="width: 80%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idNombrePacienteSufijo"
-												style="width: 80%" /></td>
-										</tr>
-										<tr>
-											<td>RUN</td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idRunF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idRunC"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta"  type="number" id="idRunL"
-												style="width: 50%" /></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxRunA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxRunN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idRunT"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idRunSufijo"
-												style="width: 80%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idRunPrefijo"
-												style="width: 80%" /></td>
-										</tr>
-										<tr>
-											<td>Sexo</td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idSexoF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idSexoC"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idSexoL"
-												style="width: 50%" /></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxSexoA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxSexoN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idSexoT"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idSexoPrefijo"
-												style="width: 80%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idSexoSufijo"
-												style="width: 80%" /></td>
-										</tr>
-										<tr>
-											<td>Edad</td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idEdadF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idEdadC"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idEdadL"
-												style="width: 50%" /></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxEdadA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input" type="checkbox" id="checkboxEdadN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idEdadT"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idEdadPrefijo"
-												style="width: 80%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idEdadSufijo"
-												style="width: 80%" /></td>
-										</tr>
-										<tr>
-											<td>Tipo de Muestra</td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idTipoMuestraF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idTipoMuestraC"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idTipoMuestraL"
-												style="width: 50%" /></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input " type="checkbox" id="checkboxTipoMuestraA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input " type="checkbox" id="checkboxTipoMuestraN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idTipoMuestraT"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idTipoMuestraPrefijo"
-												style="width: 80%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idTipoMuestraSufijo"
-												style="width: 80%" /></td>
-										</tr>
-										<tr>
-											<td>Envase</td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idEnvaseF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idEnvaseC"
-												style="width: 50%" /></td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idEnvaseL"
-												style="width: 50%" /></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input " type="checkbox" id="checkboxEnvaseA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input " type="checkbox" id="checkboxEnvaseN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idEnvaseT"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idEnvasePrefijo"
-												style="width: 80%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idEnvaseSufijo"
-												style="width: 80%" /></td>
-										</tr>
-										<tr>
-											<td>Fecha de Registro</td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idFechaRegistroF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idFechaRegistroC"
-												style="width: 50%" /></td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idFechaRegistroL"
-												style="width: 50%" /></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input " type="checkbox" id="checkboxFechaRegistroA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input " type="checkbox" id="checkboxFechaRegistroN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><input  class="limpiarEtiqueta" type="number" id="idFechaRegistroT"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idFechaRegistroPrefijo"
-												style="width: 80%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="text" id="idFechaRegistroSufijo"
-												style="width: 80%" /></td>
-										</tr>
-										<tr>
-											<td>ExÃ¡menes</td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idExamenesF" min="0"
-												style="width: 50%" /></td>
-											<td class="text-center"><input class="limpiarEtiqueta" type="number" id="idExamenesC"
-												style="width: 50%" /></td>
-											<td class="text-center"></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input " type="checkbox" id="checkboxExamenesA" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"><div class="form-check">
-													 <input class="form-check-input " type="checkbox" id="checkboxExamenesN" value="" aria-label="..." />
-												</div></td>
-											<td class="text-center"></td>
-											<td class="text-center"></td>
-											<td class="text-center"></td>
-										</tr>
-									</tbody>
-
-								</table>
-							</div>
-							<button id="ce_btnVisualizarEtiqueta"
-								Class="btn btn-blue-primary btn-lg font-weight-bold mt-5 mr-2 ">
-								<i class="la la-search"></i>Visualizar
-							</button>
-							<button id="ce_btnImprimirEtiqueta"
-								Class="btn btn-blue-primary btn-lg font-weight-bold mt-5 mr-2 ">
-								<i class="la la-search"></i>Imprimir
-							</button>
-							<button id="ce_btnGuardarEtiqueta"
-								Class="btn btn-blue-primary btn-lg font-weight-bold mt-5 mr-2 ">
-								<i class="la la-search"></i>Guardar
-							</button>
-						</div>
-
-					</div>
-
-				</div>
-
-
-
-
-
-
-				<!-- FIN FORMULARIO PACIENTE -->
-		<jsp:include page="common/Scripts.jsp"/>
-
-<!--begin::Global Theme Bundle(used by all pages)-->
-<script
-  src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
-<!--end::Global Theme Bundle-->
-<script src="https://unpkg.com/imask"></script>
-<script
-  src="https://cdn.datatables.net/scroller/2.0.6/js/dataTables.scroller.min.js"></script>
-<script
-  src="https://cdn.datatables.net/select/1.4.0/js/dataTables.select.min.js"></script>
-<link rel="stylesheet"
-  href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/css/bootstrap-select.min.css"
-  integrity="sha512-ARJR74swou2y0Q2V9k0GbzQ/5vJ2RBSoCWokg4zkfM29Fb3vZEQyv0iWBMW/yvKgyHSR/7D64pFMmU8nYmbRkg=="
-  crossorigin="anonymous" referrerpolicy="no-referrer" />
-  <script
-  src="<%=request.getContextPath()%>/resources/js/typeahead/typeahead.bundle.js"></script>
-<script src="<%=request.getContextPath()%>/resources/js/Constantes.js"></script>
-<script src="<%=request.getContextPath()%>/resources/js/jquery.rut.js"></script>
-
-<script
-  src="<%=request.getContextPath()%>/resources/js/common/dual-data.js"></script>
-
-					<script
-						src="<%=request.getContextPath()%>/resources/js/ConfiguracionEtiquetas.js"></script>
-
-</body>
-</html>
-
diff --git a/src/main/webapp/WEB-INF/jsp/ConfiguracionProcesos.jsp b/src/main/webapp/WEB-INF/jsp/ConfiguracionProcesos.jsp
index b3c36fbd..181508ff 100644
--- a/src/main/webapp/WEB-INF/jsp/ConfiguracionProcesos.jsp
+++ b/src/main/webapp/WEB-INF/jsp/ConfiguracionProcesos.jsp
@@ -216,8 +216,12 @@
                                                     </div>
                                                     <div class="col-4">
                                                         <label>C&oacute;digo de barras *</label>
-                                                        <input id="txtCodigoBarras" type="text" class="form-control formProceso"   autocomplete="off" />
-                                                        <div class="d-md-none mb-2"></div>
+                                                        <!--<input id="txtCodigoBarras" type="text" class="form-control formProceso"   autocomplete="off" />
+                                                        <div class="d-md-none mb-2"></div>-->
+                                                        <select class="form-control formProceso" id="selectCodigoBarras">
+                                                            <option value="N">-- SELECCIONAR --</option>
+                                                            <option value="CODE128">CODE128</option>
+                                                        </select>
                                                     </div>
                                                     <div class="col-4">
                                                         <label>C&oacute;digo Host</label>
@@ -294,7 +298,7 @@
                                                         </button>
                                                     </div>
                                                     <div class="col-4 mt-2">
-                                                        <button id="btnAddAlarmas" type="button" class="btn btn-blue-primary btn-lg font-weight-bold mt-2 mr-2 " data-toggle="modal" data-target="#modalAlarmas">
+                                                        <button id="btnModalAlarmas" type="button" class="btn btn-blue-primary btn-lg font-weight-bold mt-2 mr-2 " data-toggle="modal" data-target="#modalAlarmas">
                                                             A&ntilde;adir Alarmas
                                                         </button>
                                                     </div>
@@ -415,9 +419,7 @@
                                                 </div>
                                                 <div class="modal-body">
 
-                                                    <h5 class="tituloRegistro card-label text-center">
-                                                        Proceso:
-                                                    </h5>
+                                                    <h5 id="tituloProceso" class="card-label text-center"></h5>
                                                     <h5 id="tituloTest" class="card-label text-center"></h5>
                                                     <div class="row mt-5">
                                                         <input id="txtIdTest" type="text" class="form-control ocultar" />
@@ -442,17 +444,17 @@
                                                                 <h5 class="pl-3 mt-3 mb-3">Datos del test</h5>
                                                                 <div class="form-group row pl-3">
                                                                     <label class="col-4">C&oacute;digo de test</label>
-                                                                    <input id="txtCodigoTest" type="text" class="col-7 form-control formProceso" autocomplete="off" disabled />
+                                                                    <input id="txtCodigoTest" type="text" class="col-7 form-control" autocomplete="off" disabled />
                                                                     <div class="d-md-none mb-2"></div>
                                                                 </div>
                                                                 <div class="form-group row pl-3">
                                                                     <label class="col-4">Descripci&oacute;n de test</label>
-                                                                    <input id="txtDescripcionTest" type="text" class="col-7 form-control formProceso" autocomplete="off" disabled />
+                                                                    <input id="txtDescripcionTest" type="text" class="col-7 form-control" autocomplete="off" disabled />
                                                                     <div class="d-md-none mb-2"></div>
                                                                 </div>
                                                                 <div class="form-group row pl-3">
                                                                     <label class="col-4">Ex&aacute;menes</label>
-                                                                    <input id="txtExamenes" type="text" class="col-7 form-control formProceso" autocomplete="off" disabled />
+                                                                    <input id="txtExamenes" type="text" class="col-7 form-control" autocomplete="off" disabled />
                                                                     <div class="d-md-none mb-2"></div>
                                                                 </div>
                                                                 <div class="form-group row pl-3">
@@ -462,7 +464,7 @@
                                                                 </div>
                                                                 <div class="form-group row pl-3">
                                                                     <label class="col-4">Decimales</label>
-                                                                    <input id="txtDecimales" type="text" class="col-7 form-control formProceso"  disabled autocomplete="off" />
+                                                                    <input id="txtDecimales" type="text" class="col-7 form-control"  disabled autocomplete="off" />
                                                                     <div class="d-md-none mb-2"></div>
                                                                 </div>
                                                             </div>
@@ -477,28 +479,30 @@
                                                                     </label>
                                                                 </div>
                                                                 <ul class="nav nav-tabs" id="myTab" role="tablist">
-                                                                    <li class="nav-item" role="presentation" id="presentacion">
+                                                                    <li class="nav-item condition" role="presentation" id="presentacion">
                                                                       <button class="nav-link active" id="condicion" data-toggle="tab" data-target="#condicion-sub" type="button" role="tab" aria-controls="condicion-sub" aria-selected="true">Condicion 1</button>
                                                                     </li>
                                                                     <li class="nav-item" id="nav-item-agregar">
-                                                                      <a class="nav-link" id="agregar-tab" onclick="agregarTabs(2)">+</a>
+                                                                      <!--<a class="nav-link formConditional" id="agregar-tab" onclick="agregarTabs(2)" disabled>+</a>-->
+                                                                      <button type="button" class="nav-link formConditional" id="agregar-tab" onclick="agregarTabs(2)" disabled>+</button>
                                                                     </li>
                                                                 </ul>
                                                                 <div class="tab-content border" id="myTabContent">
                                                                     <div class="tab-pane fade show active" id="condicion-sub" role="tabpanel" aria-labelledby="condicion">
                                                                         <div class="form-group row ml-3">
                                                                             <label class="col-11">Si resultado</label>
-                                                                            <select class="form-control formProceso col-4" id="selectOperando"></select>&nbsp;
-                                                                            <input id="numComparador" type="number" class="col-7 form-control formProceso" autocomplete="off" />
+                                                                            <select class="form-control formConditional col-4" id="selectOperando" disabled></select>&nbsp;
+                                                                            <input id="textValorEntrada" type="text" class="col-7 form-control formConditional" autocomplete="off" disabled />
                                                                         </div>
+                                                                        <input id="chbxCritico" type="checkbox" class="formConditional" disabled />&nbsp;Marcar como crÃ­tico&nbsp;&nbsp;
                                                                         <div class="form-group row ml-3">
                                                                             <label class="col-11">Entonces</label>
-                                                                            <input id="numValorFinal" type="number" class="col-11 form-control formProceso" autocomplete="off" />
+                                                                            <input id="textValorSalida" type="text" class="col-11 form-control formConditional" autocomplete="off" disabled />
                                                                         </div>
                                                                         <div class="form-group row ml-3">
-                                                                            <input id="chbxReprocesar" type="checkbox" class="formProceso" />&nbsp;Reprocesar&nbsp;&nbsp;
-                                                                            <input id="chbxBloquear" type="checkbox" class="formProceso" />&nbsp;Bloquear&nbsp;&nbsp;
-                                                                            <input id="chbxFirmar" type="checkbox" class="formProceso" />&nbsp;Firmar&nbsp;&nbsp;
+                                                                            <input id="chbxReprocesar" type="checkbox" class="formConditional" disabled />&nbsp;Reprocesar&nbsp;&nbsp;
+                                                                            <input id="chbxBloquear" type="checkbox" class="formConditional" disabled />&nbsp;Bloquear&nbsp;&nbsp;
+                                                                            <input id="chbxFirmar" type="checkbox" class="formConditional" disabled />&nbsp;Firmar&nbsp;&nbsp;
                                                                         </div>
                                                                     </div>
                                                                 </div>
@@ -508,12 +512,23 @@
                                                                 </label>
                                                                 <div class="form-group row pl-3">
                                                                     <label class="col-3">Resultado</label>
-                                                                    <select class="form-control formProceso col-4" id="selectOperador"></select>
+                                                                    <select class="form-control formCalculo col-4" id="selectOperador" disabled></select>
                                                                     &nbsp;
-                                                                    <input id="numValorOperando" type="number" class="col-11 form-control formProceso" autocomplete="off" />
+                                                                    <input id="numValorOperando" type="number" class="col-11 form-control formCalculo" autocomplete="off" disabled />
                                                                 </div>
                                                             </div>
                                                         </div>
+                                                        <div class="col-12">
+                                                            <label id="lblEstadoTest" class="col-4 col-form-label">Activo</label>
+                                                            <div class="col-3">
+                                                                <span id="spanCheckTest" class="switch switch-outline switch-icon switch-primary">
+                                                                    <label>
+                                                                        <input id='checkBoxTestActivo' class="formProceso" type='checkbox' />
+                                                                        <span></span>
+                                                                    </label>
+                                                                </span>
+                                                            </div>
+                                                        </div>
                                                     </div>
                                                 </div>
                                                 <div class="modal-footer">
@@ -523,6 +538,39 @@
                                         </div>
                                     </div>
                                     
+                                    <!-- MODAL ALARMAS -->
+                                    <div class="modal fade" id="modalAlarmas" tabindex="-1" role="dialog" aria-labelledby="modalAlarmasProceso" aria-hidden="true">
+                                        <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
+                                            <div class="modal-content">
+                                                <div class="modal-header">
+                                                    <h5 class="modal-title" id="exampleModalLabel">Alarmas para Proceso</h5>
+                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
+                                                        <i aria-hidden="true" class="ki ki-close"></i>
+                                                    </button>
+                                                </div>
+                                                <div class="modal-body ">
+                                                    <button id="btnAddAlarma" type="button" class="btn btn-blue-primary">Agregar</button>
+                                                    <table id="tablaAlarmasProceso" class="table">
+                                                        <thead>
+                                                            <tr>
+                                                                <th>Id</th>
+                                                                <th>C&oacute;digo</th>
+                                                                <th>Descripci&oacute;n</th>
+                                                                <th>Bloquear</th>
+                                                                <th>Activo</th>
+                                                                <th>Editar</th>
+                                                            </tr>
+                                                        </thead>
+                                                    </table>   
+                                                    
+                                                </div>
+                                                <div class="modal-footer">
+                                                    <button id="btnCerrarModalAlarma" type="button" class="btn btn-light-primary font-weight-bold" data-dismiss="modal">OK</button>
+                                                </div>
+                                            </div>
+                                        </div>
+                                    </div>
+                                    <!-- END MODAL ALARMAS-->
                                 </div>
                             </form>
                         </div>
@@ -535,8 +583,9 @@
         <script src="<%=request.getContextPath()%>/resources/js/dataTables.cellEdit.js"></script>
         <script src="<%=request.getContextPath()%>/resources/js/Dto/CfgTests.js"></script>
         <script src="<%=request.getContextPath()%>/resources/js/procesos/ConfiguracionProcesos.tests.js"></script>
-        <script src="<%=request.getContextPath()%>/resources/js/procesos/ConfiguracionProcesos.tablatests.js"></script>
         <script src="<%=request.getContextPath()%>/resources/js/procesos/ConfiguracionProcesos.binding.js"></script>
+        <script src="<%=request.getContextPath()%>/resources/js/procesos/ConfiguracionProcesos.tablatests.js"></script>
+        <script src="<%=request.getContextPath()%>/resources/js/procesos/ConfiguracionProcesos.alarmas.js"></script>
         <script src="<%=request.getContextPath()%>/resources/js/procesos/ConfiguracionProcesos.js"></script>
         <script src="<%=request.getContextPath()%>/resources/js/procesos/ConfiguracionProcesosForm.js"></script>
     </body>
diff --git a/src/main/webapp/WEB-INF/jsp/EdicionOrdenes.jsp b/src/main/webapp/WEB-INF/jsp/EdicionOrdenes.jsp
index 3bb33ea6..af97be59 100755
--- a/src/main/webapp/WEB-INF/jsp/EdicionOrdenes.jsp
+++ b/src/main/webapp/WEB-INF/jsp/EdicionOrdenes.jsp
@@ -52,8 +52,7 @@
                             <div class="card-body">
                                 <div class="col-12">
                                     <input type="hidden" id="procedenciaUsuario" name="procedenciaUsuario" value="${perfilUsuario.cpuIdprocedencia}" />
-                                     <input type="hidden" id="pideautorizeditorden" name="pideautorizeditorden" value="${perfilUsuario.cpuPideautorizeditorden}" />
-                                      <input type="hidden" id="eliminarexamenes" name="eliminarexamenes" value="${perfilUsuario.cpuEliminarexamenes}" />
+                                    <!-- <input type="hidden" id="procedenciaUsuario" name="procedenciaUsuario" value="1" /> -->
                                     <jsp:include page="desarrollo/Bios_OrdenesEdicion.jsp"></jsp:include>
                                 </div>
                             </div>
@@ -384,7 +383,7 @@
                                         <!-- Fin Formulario registro -->
                                         <div class="col-12">
 
-                                            <button id="btnEditarOrden" name="insert" type="button"
+                                            <button id="btnEditarOrden" name="insert" type="submit"
                                                 class="btn btn-blue-primary btn-lg font-weight-bold mt-2 mr-2 d-none">
                                                 <i class="far fa-save"></i>Guardar
                                             </button>
diff --git a/src/main/webapp/WEB-INF/jsp/Orden.jsp b/src/main/webapp/WEB-INF/jsp/Orden.jsp
index 6229e356..1ae50e5a 100644
--- a/src/main/webapp/WEB-INF/jsp/Orden.jsp
+++ b/src/main/webapp/WEB-INF/jsp/Orden.jsp
@@ -638,7 +638,7 @@
 										<thead>
 											<tr>
 												<th>Examen</th>
-												<th>Indicaci&oacute;n</th>
+												<th>Indicaci&oacute?n</th>
 											</tr>
 										</thead>
 										<tbody>
diff --git a/src/main/webapp/WEB-INF/jsp/PortalPacienteLogin.jsp b/src/main/webapp/WEB-INF/jsp/PortalPacienteLogin.jsp
index 89223dff..16435829 100644
--- a/src/main/webapp/WEB-INF/jsp/PortalPacienteLogin.jsp
+++ b/src/main/webapp/WEB-INF/jsp/PortalPacienteLogin.jsp
@@ -9,7 +9,7 @@
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <meta http-equiv="X-UA-Compatible" content="IE=edge">
 <meta name="viewport" content="width=device-width,initial-scale=1" />
-<title>Portal Paciente</title>
+<title>Portal Pacientes</title>
 <link rel="icon" type="image/jpg"
 	href="<%=request.getContextPath()%>/resources/img/gbios.png">
                     <jsp:include page="common/Styles_1.jsp" />
diff --git a/src/main/webapp/WEB-INF/jsp/PruebaEstadistica.jsp b/src/main/webapp/WEB-INF/jsp/PruebaEstadistica.jsp
deleted file mode 100644
index 7ac4e666..00000000
--- a/src/main/webapp/WEB-INF/jsp/PruebaEstadistica.jsp
+++ /dev/null
@@ -1,93 +0,0 @@
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
-<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
-<%@ taglib prefix="spring" uri="http://www.springframework.org/tags"%>
-
-<%@page contentType="text/html" pageEncoding="UTF-8"%>
-<!DOCTYPE html>
-<html>
-    <head>
-        <meta charset="UTF-8">
-        <meta name="viewport" content="width=device-width, initial-scale=1.0">
-        <title>Prueba Estadistica</title>
-  
-   <style>
-        table {
-            border-collapse: collapse;
-            text-align: center;
-            vertical-align: middle;
-            width: 800px;
-            font-size: 20px;
-        }
-        
-        button {
-            height: 30px;
-            width: 100px;
-            margin: 20px 20px;
-            background: yellowgreen;
-            border-radius: 10px;
-            outline: none;
-        }
-        
-        input {
-            height: 30px;
-            padding-left: 10px;
-            margin: 10px;
-        }
-    </style>
-</head>
-
-<body>
-    <div id="wrap" style="width:900px;margin:20px auto;">
-        <h3>Estadistica</h3>
-        <table id="tb" border="1" cellspacing="0" cellpadding="0">
-            <thead>
-                <tr>
-                    <th>ID</th>
-                    <th>Nombre</td>
-                        <th>Edad</td>
-                            <th>Cargo</th>
-                </tr>
-            </thead>
-            <tbody>
-                <tr>
-                    <td>1</td>
-                    <td>Juan</td>
-                    <td>18</td>
-                    <td>Ingeniero</td>
-                </tr>
-                <tr>
-                    <td>2</td>
-                    <td>Pedro</td>
-                    <td>88</td>
-                    <td>Medico</td>
-                </tr>
-                <tr>
-                    <td>3</td>
-                    <td>Ivan</td>
-                    <td>81</td>
-                    <td>Portero</td>
-                </tr>
-            </tbody>
-        </table>
-
-      
-        <button id="btnEstadistica">Crear Excel</button>
-         <button id="btnCancelar">Volver Sin Crearr</button>
-    </div>
-   
-   
-   
-   
-	<jsp:include page="common/Scripts.jsp"/>
-
-<script
-    src="<%=request.getContextPath()%>/resources/js/pruebasCristian/xlsx.mini.js"></script>
-    <script
-    src="<%=request.getContextPath()%>/resources/js/pruebasCristian/EstadisticaExcel.js"></script>
-      <script
-    src="<%=request.getContextPath()%>/resources/js/PruebasCristian/xlsx.core.min.js"></script>
-  
-   
-
-</body>
-</html>
\ No newline at end of file
diff --git a/src/main/webapp/WEB-INF/jsp/RechazoMuestras.jsp b/src/main/webapp/WEB-INF/jsp/RechazoMuestras.jsp
index 889d4cf2..29164d31 100755
--- a/src/main/webapp/WEB-INF/jsp/RechazoMuestras.jsp
+++ b/src/main/webapp/WEB-INF/jsp/RechazoMuestras.jsp
@@ -26,131 +26,179 @@
         <jsp:include page="modal/ModalDatosPaciente.jsp"/>
         <jsp:include page="modal/ModalDatosOrden.jsp"/>
 
-        <div class="container container-main-content">
-
-            <div class="row d-flex justify-content-center">
-                <div class="accordion col-12 pl-0 pr-0" id="rechazo-main">
-                    <div id="divTablaOrdenes" class="card border-15">
+        <div class="mt-5">
+            <div class="row mr-5 ml-20">
+                <div class="col-12">
+                    <div class="card card-custom gutter-b" id="divTablaOrdenes">
+                        <!--<input class="col-12 " id="volverNomalidad" type="button" value="TMclick activo" />-->
                         <input class="col-12 ocultar" id="volverNomalidad" type="button" value="TMclick activo" style="visibility: hidden" />
                         <input type="hidden" id="sesionUsuario" name="sesionUsuario" value="${usuario.duIdusuario}" />
                         <input type="hidden" id="estadosPacienteLoad" name="estadosPacienteLoad" value="${listaEstadosStr}" />
-                        <div class="card-header mb-0 border-15">
-                            <div class="card-title d-flex justify-content-between pt-2 pb-2">
-                                <h3 class="mb-0 btn-block text-left pl-0 col-10"
-                                    data-toggle="collapse"
-                                    data-target="#divBuscadorOrdenes" aria-expanded="true"
-                                    aria-controls="divBuscadorOrdenes">B&uacute;squeda de Orden</h3>
-                                <div class="card-buttons col-2 d-flex justify-content-end">
-                                    <a id="btnLimpiarFiltro" class="navi-link"> <span
-                                        class="symbol symbol-30 symbol-circle "> <span
-                                            id="circuloLimpiarFiltro"
-                                            class="symbol-label bg-hover-blue  hoverIcon" href="#"
-                                            data-toggle="tooltip" title="Limpiar"> <i
-                                                id="iLimpiarFiltro" class="la la-broom icon-xl text-blue"></i>
-                                        </span>
-                                    </span> <span class="navi-text"></span>
-                                    </a>
-                                </div>
+                        <div class="card-header" data-toggle="collapse" data-target="#tablaOrdenesCollapse" aria-expanded="true">
+                            <div class="card-title">
+                                <h3 class="card-label" data-toggle="collapse" data-target="#divBuscadorOrdenes">
+                                    Rechazo de muestra - Ãrdenes
+                                </h3>
                             </div>
                         </div>
-                        <div id="divBuscadorOrdenes"
-                        class="collapse container-content show"
-                        aria-labelledby="rechazo-title"
-                        data-parent="#rechazo-main">
-                            <div class="card-body">
-                                <div class="col-12">
-                                    <jsp:include page="desarrollo/Bios_OrdenesEdicion.jsp"></jsp:include>
-                                </div>
+                        <div class="card-body">
+                            <div id="divBuscadorOrdenes" class="collapse show">
+                                <jsp:include page="desarrollo/Bios_OrdenesEdicion.jsp"></jsp:include>
                             </div>
                         </div>
-                    </div>
-                    <!-- fin buscador -->
-                    <div id="divTablaMuestras" class="card border-15 mt-4" style="display: none">
-                        <div class="card-header mb-0 border-15">
-                            <div class="card-title d-flex justify-content-between pt-2 pb-2">
-                                <h3 class="mb-0 btn-block text-left pl-0 col-10">  Rechazo de muestra - Muestras (Nro. Orden: <label id="lblNroOrden"></label>)</h3>
-                            </div>
-                        </div>
-                        <div id="" class="container-content">
-                            <div class="card-body">
-                                <div class="col-12 pl-0 pr-0">
-                                    <div class="row">
-                                        <div class="col-8 ">
-                                            <div class="card card-2 h-100">
-                                                <div class="card-body container-table-list">
-                                                    <table class='table table-hover compact' id="tablaMuestras">
-                                                        <thead>
-                                                            <tr>
-                                                                <th>SelecciÃ³n</th>
-                                                                <th># Muestra</th>
-                                                                <th>Estado</th>
-                                                                <th>Muestra</th>
-                                                                <th>Envase</th>
-                                                                <th>Veces tomada</th>
-                                                                <th>Flebotomista</th>
-                                                                <th>ObservaciÃ³n</th>
-                                                            </tr>
-                                                            <tr>
-                                                                <th></th>
-                                                                <th></th>
-                                                                <th></th>
-                                                                <th id="filtroMue"></th>
-                                                                <th id="filtroEnv"></th>
-                                                                <th></th>
-                                                                <th></th>
-                                                                <th></th>
-                                                            </tr>
-                                                        </thead>
-                                                    </table>
-                                                </div>
+                            
+                        <!--<div class="row card-body p-0 collapse show" id="tablaOrdenesCollapse">
+                            <div class="mt-5 mb-5 col-12">
+                                <div class="col-12 row" style="margin-right: 50px;" >
+                                    <div class="col-3 mt-10 pl-10">
+                                        <div class="form-group row mb-0 ">
+                                            <label id="lblNOrden" class="col-5 col-form-label">NÂ° Orden:</label>
+                                            <div class="col-7">
+                                                <input class="form-control" placeholder="" id="txtNOrden" type="text" minlength="1" maxlength="10" />
+                                            </div>
+                                        </div> 
+                                        <div class="form-group row mb-0 ">
+                                            <label  class="col-5 col-form-label">Fecha</label>
+                                            <div class="col-7">
+                                                <input id="txtFecha" class="form-control " autocomplete="off"/>
                                             </div>
                                         </div>
-                                        <div class="col-4">
-                                            <div class="card card-2"  id="divRechazo" style="display:none;">
-                                                <div class="card-body">
-                                                    <span id="lblPrimerRechazo" class="btn btn-blue-primary btn-lg font-weight-bold mt-5 mr-2 " style="display:none;">Primer Rechazo</span>
-                                                    <span id="lblSegundoRechazo" class="btn btn-blue-primary btn-lg font-weight-bold mt-5 mr-2 " style="display:none;">Segundo Rechazo</span>
-                                                    <span id="lblNoMasRechazos" class="btn btn-blue-primary btn-lg font-weight-bold mt-5 mr-2 " style="display:none;">No se permiten mÃ¡s rechazos</span>
-                                                    </br></br>
-                                                    <label for="causaRechazoMuestras">Causa de rechazo:</label>
-                                                    <select id="causaRechazoMuestras" name="causaRechazoMuestras" class="form-control pr-5">
-                                                        <option value="0" selected>Seleccionar</option>
-                                                        <c:forEach var="causa" items="${listCausaRechazoMuestras}">
-                                                            <option value="${causa.ccrmIdcausarechazo}">${causa.ccrmDescripcion}</option>
-                                                        </c:forEach>
-                                                    </select>
-                                                    </br></br>
-                                                    <label for="observacion">ObservaciÃ³n:</label>
-                                                    <textarea id="observacion" class="form-control pr-5" name="observacion" rows="3" cols="50"></textarea>
-                                                    </br>
-                                                    <span id="lblNuevaMuestra" class="label label-lg label-inline">Nueva Muestra: <label id="lblIdNuevaMuestra" class="label label-lg label-inline"></label></span>
-                                                    <span id="lblNuevaMuestraPendiente" class="label label-lg label-inline label-danger" style="display:none;">Nueva Muestra Pendiente</span>
-                                                    <span id="lblNuevaMuestraLista" class="label label-lg label-inline label-success" style="display:none;">Nueva Muestra Lista</span>
-                                                    </br></br>
-                                                    <button class="btn" id="btnRechazoParcial" data-toggle="modal" title="Rechazo parcial">
-                                                        <img src="<%=request.getContextPath()%>/resources/img/rechazoparcial.png" width="30" height="30" />
-                                                        Rechazo parcial
-                                                    </button>
-                                                    <button type="button"  id="btnRechazarMuestra" class="btn btn-blue-primary btn-lg font-weight-bold mt-5 mr-2 ">Rechazar</button>
-                                                </div>
+                                        <div class="form-group row mb-0 ">
+                                            <label  class="col-5 col-form-label">Nombre</label>
+                                            <div class="col-7">
+                                                <input class="form-control" placeholder="" id="txtFiltroNombre" type="text"/>
                                             </div>
                                         </div>
+                                        <div class="form-group row mb-0 ">
+                                            <label  class="col-5 col-form-label">Apellidos</label>
+                                            <div class="col-7">
+                                                <input class="form-control" placeholder="" id="txtFiltroApellido" type="text"/>
+                                            </div>
+                                        </div>
+                                        <div class="form-group row mb-0 ">
+                                            <label class="col-form-label col-5 ">Tipo documento</label>
+                                            <div class="col-7">
+                                                <select id="selectTipoDocumentoFiltro" class="form-control">
+                                                    <option value="-1" >TODOS</option>
+                                                    <c:forEach var="documento" items="${listaTiposDocumentos}">
+                                                        <option value="${documento.ldvtdIdtipodocumento}">${documento.ldvtdDescripcion}</option>
+                                                    </c:forEach>
+                                                </select>
+                                            </div>
+                                        </div>
+                                        <div class="form-group row mb-0 ">
+                                            <label id="lblNDocumento" class="col-5 col-form-label">NÂ° Documento:</label>
+                                            <div class="col-7">
+                                                <input class="form-control" placeholder="" id="txtNDocumento" type="text" minlength="11" maxlength="12" onkeyup="this.value = this.value.toUpperCase();" disabled/>
+                                            </div>
+                                        </div>
+                                        <div>
+                                            <a id="btnBuscarFiltro" href="#" class="btn btn-light-primary font-weight-bold mt-5 mr-2 ml-4"><i class="la la-search"></i>Buscar</a>
+                                        </div>
                                     </div>
-                                    <div class="d-none">
-                                        <label id="idPacienteTabla" class=""></label>
-                                        <label id="idOrdenTabla" class=""></label>
-                                        <label id="idUsuario" class=""></label>
+                                    <div class="col-9" >
+                                        <table class='table table-hover table-striped table-condensed table-fit' id="tablaOrdenes" data-page-length="10">
+
+                                            <thead>
+                                                <tr>
+                                                    <th># Orden</th>
+                                                    <th>Fecha</th>
+                                                    <th>Nombre</th>
+                                                    <th>Edad</th>
+                                                    <th>Estado</th>
+                                                    <th>Acciones</th>
+                                                </tr>
+                                            </thead>
+
+
+
+                                        </table>                                   
+
                                     </div>
-            
                                 </div>
                             </div>
                         </div>
+                        -->
+                    </div>
+                        
+                    <div class="card card-custom gutter-b" id="divTablaMuestras" style="display: none">
+                        <div class="card-header">
+                            <div class="card-title">
+                                <h3 class="card-label">
+                                    Rechazo de muestra - Muestras (Nro. Orden: <label id="lblNroOrden"></label>)
+                                </h3>
+                            </div>
+                        </div>
+                        <div class="row ml-5 mb-5 mt-5">
+                            <div class="col-8 kt_datatable">
+                                <div class="col-12">
+                                    <table class='table table-hover table-condensed' id="tablaMuestras">
+                                        <thead>
+                                            <tr>
+                                                <th>SelecciÃ³n</th>
+                                                <th># Muestra</th>
+                                                <th>Estado</th>
+                                                <th>Muestra</th>
+                                                <th>Envase</th>
+                                                <th>Veces tomada</th>
+                                                <th>Flebotomista</th>
+                                                <th>ObservaciÃ³n</th>
+                                            </tr>
+                                            <tr>
+                                                <th></th>
+                                                <th></th>
+                                                <th></th>
+                                                <th id="filtroMue"></th>
+                                                <th id="filtroEnv"></th>
+                                                <th></th>
+                                                <th></th>
+                                                <th></th>
+                                            </tr>
+                                        </thead>
+                                    </table>
+                                </div>
+                            </div>
+                            <div id="divRechazo" class="col-4 kt_datatable" style="display:none;">
+
+                                <span id="lblPrimerRechazo" class="label label-xl label-inline label-primary" style="display:none;">Primer Rechazo</span>
+                                <span id="lblSegundoRechazo" class="label label-xl label-inline label-primary" style="display:none;">Segundo Rechazo</span>
+                                <span id="lblNoMasRechazos" class="label label-xl label-inline label-danger" style="display:none;">No se permiten mÃ¡s rechazos</span>
+                                </br></br>
+                                <label for="causaRechazoMuestras">Causa de rechazo:</label>
+                                <select id="causaRechazoMuestras" name="causaRechazoMuestras" class="form-control pr-5">
+                                    <option value="0" selected>Seleccionar</option>
+                                    <c:forEach var="causa" items="${listCausaRechazoMuestras}">
+                                        <option value="${causa.ccrmIdcausarechazo}">${causa.ccrmDescripcion}</option>
+                                    </c:forEach>
+                                </select>
+                                </br></br>
+                                <label for="observacion">ObservaciÃ³n:</label>
+                                <textarea id="observacion" class="form-control pr-5" name="observacion" rows="3" cols="50"></textarea>
+                                </br>
+                                <span id="lblNuevaMuestra" class="label label-lg label-inline">Nueva Muestra: <label id="lblIdNuevaMuestra" class="label label-lg label-inline"></label></span>
+                                <span id="lblNuevaMuestraPendiente" class="label label-lg label-inline label-danger" style="display:none;">Nueva Muestra Pendiente</span>
+                                <span id="lblNuevaMuestraLista" class="label label-lg label-inline label-success" style="display:none;">Nueva Muestra Lista</span>
+                                </br></br>
+                                <button class="btn" id="btnRechazoParcial" data-toggle="modal" title="Rechazo parcial">
+                                    <img src="<%=request.getContextPath()%>/resources/img/rechazoparcial.png" width="30" height="30" />
+                                    Rechazo parcial
+                                </button>
+                                <button type="button"  id="btnRechazarMuestra" class="btn btn-primary">Rechazar</button>
+
+                            </div>
+                        </div>
+                        <div class="card card-custom mt-5">
+                            <label id="idPacienteTabla" class=""></label>
+                            <label id="idOrdenTabla" class=""></label>
+                            <label id="idUsuario" class=""></label>
+                        </div>
+
                     </div>
+                        
                 </div>
+                
             </div>
         </div>
-
-        
         <div id="modalRechazoParcial" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
             <div class="modal-dialog modal-lg">
                 <div class="modal-content">
diff --git a/src/main/webapp/WEB-INF/jsp/RegistroMedico.jsp b/src/main/webapp/WEB-INF/jsp/RegistroMedico.jsp
index ff9776fd..20b0b1fb 100755
--- a/src/main/webapp/WEB-INF/jsp/RegistroMedico.jsp
+++ b/src/main/webapp/WEB-INF/jsp/RegistroMedico.jsp
@@ -134,14 +134,7 @@
                                     </span>
                                     <span class="navi-text"></span>
                                 </a>
-                                 <a id="btnLimpiar2" class="navi-link" href="#">
-                                    <span class="symbol symbol-50 symbol-circle mr-3 ">
-                                        <span id="circuloLimpiar" class="symbol-label bg-hover-primary hoverIcon" data-toggle="tooltip" title="Limpiar"><i id="iLimpiar" class="la la-broom icon-xl  text-primary"></i></span>
-                                    </span>
-                                    <span class="navi-text"></span>
-                                </a>
                             </div>   
-                            
                             <div id="divBtnEditar" class="ml-1 float-right" >
                                 <a id="btnUpdater" class="navi-link" href="#" >
                                     <span class='symbol symbol-50 symbol-circle mr-3' >
@@ -183,7 +176,7 @@
                                                             minlength="11" maxlength="12" autocomplete="off"
                                                             onkeyup="this.value = this.value.toUpperCase();" />
                                                             
-                                            <div id="invalid-feedback" class="invalid-feedback">RUN invÃ¡lido</div>
+                                            <div class="invalid-feedback">RUN invÃ¡lido</div>
                                             <div class="d-md-none mb-2"></div>
                                         </div>
                                         <div class="col-md-3 mt-3">
@@ -459,7 +452,6 @@
         -->
         <jsp:include page="common/Scripts.jsp"/>
         <script src="<%=request.getContextPath()%>/resources/js/RegistroMedico.js"></script>
-        <script src="<%=request.getContextPath()%>/resources/js/rutValidator.js"></script>
         
     </body>
 </html>
\ No newline at end of file
diff --git a/src/main/webapp/WEB-INF/jsp/common/Header_1.jsp b/src/main/webapp/WEB-INF/jsp/common/Header_1.jsp
index d41963d5..b195f12f 100755
--- a/src/main/webapp/WEB-INF/jsp/common/Header_1.jsp
+++ b/src/main/webapp/WEB-INF/jsp/common/Header_1.jsp
@@ -6,8 +6,7 @@
             <ul class="navbar-nav">
                 <li class="nav-item">
                     <a class="nav-link  position-relative d-flex" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" tabindex="-1">
-                        <span class="nombre-user">${usuario.duNombres} ${usuario.duPrimerapellido} </span> 
-                        <!--  ${procedencia} ${seccion}  ${centro} ${laboratorio} -->
+                        <span class="nombre-user">${usuario.duNombres} ${usuario.duPrimerapellido}</span> 
                         <span class="icono-user">
                             <c:choose>
                                 <c:when test="${base64Foto==null || base64Foto==''}">
diff --git a/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_ModalOrdenesBuscador.jsp b/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_ModalOrdenesBuscador.jsp
index c3d6d410..de11fb0c 100644
--- a/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_ModalOrdenesBuscador.jsp
+++ b/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_ModalOrdenesBuscador.jsp
@@ -6,7 +6,7 @@
 			<tr>
 				<div id="bo_div_nOrdenIni" hidden="true" class="bo_row">
 					<td class="col-6 pl-0"><label for="bo_nOrdenIni" class="mt-3">N.
-							Orden Inicio </label> <input type="text" id="bo_nOrdenIni"
+							Orden Inicio</label> <input type="text" id="bo_nOrdenIni"
 						title="Nro de orden inicial" class="form-control" /></td>
 				</div>
 				<div id="bo_div_fIni" hidden="true" class="bo_row">
diff --git a/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesBuscador.jsp b/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesBuscador.jsp
index b260fec6..33b389cf 100644
--- a/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesBuscador.jsp
+++ b/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesBuscador.jsp
@@ -212,23 +212,21 @@
 				<thead id="bo_th_ordenes">
 					<tr>
 						<th>Selecci&oacute;n</th>
-						<th>N&deg; Orden</th>
+						<th>N. Orden</th>
 						<th>Fecha&nbsp;Orden</th>
-						<th>Estado</th>
-						<th>Observaci&oacute; Orden</th>
+						<th>Observaci&oacute;n Orden</th>
 						<th>Id Paciente</th>
-						<th>Tipo Documento</th>
-						<th>N&deg; Documento</th>
+						<th>T. Documento</th>
+						<th>N. Documento</th>
 						<th>Nombre Completo</th>
 						<th>Nombre</th>
 						<th>A. Paterno</th>
 						<th>A. Materno</th>
-						<th>Fecha Nacimiento</th>
-						<th>Email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
-						<th>Edad</th>
+						<th>F.Nacimiento</th>
+						<th>email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
 						<th>Sexo</th>
 						<th>Observaci&oacute;n Paciente</th>
-						<th>Tipo Atenci&oacute;n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
+						<th>T. Atenci&oacute;n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
 						<th>Procedencia&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
 						<th>Convenio</th>
 						<th>Previsi&oacute;n</th>
@@ -237,6 +235,7 @@
 						<th>Centro de Salud</th>
 						<th>Prioridad</th>
 						<th>Servicio</th>
+						<!--<th>Estado</th>-->
 					</tr>
 				</thead>
 	
diff --git a/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesEdicion.jsp b/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesEdicion.jsp
index 58d444e6..74b4dc26 100644
--- a/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesEdicion.jsp
+++ b/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesEdicion.jsp
@@ -217,7 +217,7 @@
 	</div>
 	<div class="col-7">
 		<div class="card card-2 h-100">
-			<div class="card-body fz-1-3 motor-busqueda overflow-hidden">
+			<div class="card-body fz-1-3 motor-busqueda">
 				<h3 class="col-12 pl-0 pr-0 text-center">Resultados de Ordenes</h3>
 				<table id="bo_t_ordenes" class="table table-striped table-bordered display nowrap" width="100%">
 					<thead id="bo_th_ordenes">
diff --git a/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesPortalBuscador.jsp b/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesPortalBuscador.jsp
index 8b6047f5..95a94428 100644
--- a/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesPortalBuscador.jsp
+++ b/src/main/webapp/WEB-INF/jsp/desarrollo/Bios_OrdenesPortalBuscador.jsp
@@ -227,31 +227,29 @@
 					<thead id="bo_th_ordenes">
 						<tr>
 							<th>Selecci&oacute;n</th>
-						<th>N&deg; Orden</th>
-						<th>Fecha&nbsp;Orden</th>
-						<th>Estado</th>
-						<th>Observaci&oacute; Orden</th>
-						<th>Id Paciente</th>
-						<th>Tipo Documento</th>
-						<th>N&deg; Documento</th>
-						<th>Nombre Completo</th>
-						<th>Nombre</th>
-						<th>A. Paterno</th>
-						<th>A. Materno</th>
-						<th>Fecha Nacimiento</th>
-						<th>Email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
-						<th>Edad</th>
-						<th>Sexo</th>
-						<th>Observaci&oacute;n Paciente</th>
-						<th>Tipo Atenci&oacute;n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
-						<th>Procedencia&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
-						<th>Convenio</th>
-						<th>Previsi&oacute;n</th>
-						<th>Localizaci&oacute;n</th>
-						<th>Diagn&oacute;stico</th>
-						<th>Centro de Salud</th>
-						<th>Prioridad</th>
-						<th>Servicio</th>
+							<th>N. Orden</th>
+							<th>Fecha&nbsp;Orden</th>
+							<th>Observaci&oacute; Orden</th>
+							<th>Id Paciente</th>
+							<th>T. Documento</th>
+							<th>N. Documento</th>
+							<th>Nombre Completo</th>
+							<th>Nombre</th>
+							<th>A. Paterno</th>
+							<th>A. Materno</th>
+							<th>F.Nacimiento</th>
+							<th>email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
+							<th>Sexo</th>
+							<th>Observaciï¿½n Paciente</th>
+							<th>T. Atenciï¿½n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
+							<th>Procedencia&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
+							<th>Convenio</th>
+							<th>Previsiï¿½n</th>
+							<th>Localizaciï¿½n</th>
+							<th>Diagnï¿½stico</th>
+							<th>Centro de Salud</th>
+							<th>Prioridad</th>
+							<th>Servicio</th>
 						</tr>
 					</thead>
 
diff --git a/src/main/webapp/WEB-INF/jsp/test.jsp b/src/main/webapp/WEB-INF/jsp/test.jsp
index fff5e557..4c7198b8 100755
--- a/src/main/webapp/WEB-INF/jsp/test.jsp
+++ b/src/main/webapp/WEB-INF/jsp/test.jsp
@@ -105,7 +105,7 @@
                                             <i class="menu-bullet menu-bullet-line text-white">
                                                 <span></span>
                                             </i>
-                                            <span class="menu-text text-white  text-white ">Editar una orden</span>
+                                            <span class="menu-text text-white  text-white ">Edicitar una orden</span>
                                         </a>
                                     </li>
                                     <li class="menu-item menu-item-submenu" aria-haspopup="true" data-menu-toggle="hover">
diff --git a/src/main/webapp/resources/css/estilo_1.css b/src/main/webapp/resources/css/estilo_1.css
index 3acda96f..96c8f33c 100755
--- a/src/main/webapp/resources/css/estilo_1.css
+++ b/src/main/webapp/resources/css/estilo_1.css
@@ -2848,15 +2848,12 @@ table.dataTable tr.selected td.select-checkbox:after, table.dataTable tr.selecte
  .motor-busqueda th,
  .motor-busqueda td,
  .container-examenes-list th,
- .container-examenes-list td,
- .container-table-list th,
- .container-table-list td 
+ .container-examenes-list td 
 { 
     white-space: nowrap; 
 }
  .motor-busqueda div.dataTables_wrapper,
- .container-examenes-list div.dataTables_wrapper,
- .container-table-list div.dataTables_wrapper {
+ .container-examenes-list div.dataTables_wrapper {
      margin: 0 auto;
  }
 
diff --git a/src/main/webapp/resources/js/CapturaResultados.examenes.js b/src/main/webapp/resources/js/CapturaResultados.examenes.js
new file mode 100644
index 00000000..b92967e3
--- /dev/null
+++ b/src/main/webapp/resources/js/CapturaResultados.examenes.js
@@ -0,0 +1,673 @@
+function obtenerExamenesSeleccionados(pTableInfoExamenesOrden) {
+
+  function tuplaExamen() {
+    this.df_NORDEN = -1;
+    this.dfe_IDEXAMEN = -1;
+  }
+  let inputs = $("input[data-colselector]");
+  let examenesSeleccionados = new Array();
+
+  const nInputs = inputs.length;
+
+  for (let i = 0; i < nInputs; i++) {
+
+    if (inputs[i].checked) {
+      examenesSeleccionados.push(pTableInfoExamenesOrden.row(i).data());
+    }
+  }
+
+  if (examenesSeleccionados === undefined || examenesSeleccionados === null) {
+    handlerMessageError('Revisar selecciÃ³n de mensajes.');
+    return false;
+  }
+  const n = examenesSeleccionados.length;
+  if (n === 0) {
+    handlerMessageError('Verifique si ha seleccionado mensajes.');
+    return false;
+  }
+  let idSeleccionados = new Array();
+  for (let i = 0; i < n; i++) {
+    let tupla = new tuplaExamen();
+    tupla.df_NORDEN = examenesSeleccionados[i].dfe_NORDEN;
+    tupla.dfe_IDEXAMEN = examenesSeleccionados[i].dfe_IDEXAMEN;
+    idSeleccionados.push(tupla);
+  }
+  return idSeleccionados;
+}
+
+function generarQryString(examenesSeleccionados) {
+  let lstIdExamenes = 'pLstExId=';
+  let n = examenesSeleccionados.length;
+  for (let i = 0; i < n; i++) {
+    lstIdExamenes += examenesSeleccionados[i].idExamen + ',';
+  }
+  if (examenesSeleccionados.length > 0) {
+    lstIdExamenes = lstIdExamenes.substr(0, lstIdExamenes.length - 1);
+  }
+  return lstIdExamenes;
+}
+
+function cargarResultadosExamenesTabla(pNroOrden) {
+  loadResultadosExamenesOrden(pNroOrden);
+}
+
+function getExamenesOrden(filtro) {
+  try {
+    datosInfoExamenesOrden = filtro;
+    tableInfoExamenesOrden.ajax.reload(); // con POST
+  } catch (e) {
+    handlerMessageError(e);
+  }
+}
+
+var getParametros = function(d) {
+  return JSON.stringify(d);
+}
+
+
+function genAccion(data, type, row, meta) {
+
+  return '\
+<div class="row">\
+<div class="col-3">\
+              <button onclick="getOpcTestExamenDetail('+ row.dfe_NORDEN + ',' + row.dfe_IDEXAMEN + ');"class="btn btn-sm btn-clean btn-icon" title="Tests Opcionales">\
+                                  <i class="la la-cog"></i>\
+                              </button>\
+</div>\
+<div class="col-3">\
+              <button onclick="getObsExamenDetail('+ row.dfe_NORDEN + ',' + row.dfe_IDEXAMEN + ');"class="btn btn-sm btn-clean btn-icon" title="Observaciones">\
+                <i class="la la-edit"></i>\
+              </button>\
+</div>\
+<div class="col-3">\
+              <button onclick="getNotasExamenDetail('+ row.dfe_NORDEN + ',' + row.dfe_IDEXAMEN + ');"class="btn btn-sm btn-clean btn-icon" title="Notas">\
+                <i class="la la-trash"></i>\
+              </button>\
+</div>\
+<div class="col-3">\
+                <button onclick="getEventExamenDetail('+ row.dfe_NORDEN + ',' + row.dfe_IDEXAMEN + ');" class="btn btn-sm btn-clean btn-icon" title="Eventos">\
+                <i class="la la-trash"></i>\
+              </button>\
+</div>\
+</div>\
+            ';
+
+}
+
+/*
+function ( json ) {
+      rpta = json.dato;
+      for ( var i=0, ien=json.data.length ; i<ien ; i++ ) {
+        json.data[i][0] = '<a href="/message/'+json.data[i][0]+'>View message</a>';
+      }
+      return json.data;
+    }
+*/
+var initTableInfoExamenesOrden = function(jqDtId) {
+  nroOrden = -1;
+  tableInfoExamenesOrden = $(jqDtId).DataTable({
+    ajax: {
+      "url": getctx + "/api/orden/" + nroOrden + "/examenes/muestras",
+      "type": "GET",
+      "dataSrc": "dato"
+    },
+    "language": {
+      "thousands": ".",
+      "decimal": ",",
+      "emptyTable": "No hay datos disponibles",
+      "loadingRecords": "Por favor espere - cargando ..."
+
+    },
+    lengthChange: false,
+    scrollY: '50vh',
+    scrollX: true,
+    scrollCollapse: true,
+    searching: true,
+    autoWidth: false,
+    columnDefs: [{
+      targets: 0,
+      width: '30px',
+      className: 'dt-left',
+      orderable: false,
+      render: function(data, type, full, meta) {
+        return `
+                          <label class="checkbox checkbox-single">
+                              <input type="checkbox" value="" data-colselector='x' class="checkable"/>
+                              <span></span>
+                          </label>`;
+      },
+    },
+    {
+      targets: 7,
+      width: '30px',
+      className: 'dt-left',
+      orderable: false,
+      render: function(data, type, full, meta) {
+        console.table(data);
+        let checked = '';
+        if (data === 'S') {
+          checked = 'checked';
+        }
+
+        return `<label class="checkbox checkbox-single">
+                              <input type="checkbox" ${checked} value="" class="checkable"/>
+                              <span></span>
+                          </label>`;
+      }
+    },
+    {
+      orderable: false,
+      targets: [8],
+      data: null,
+      defaultContent: '',
+      render: genAccion,
+    },
+
+    ],
+    select: {
+      style: 'multi',
+      //selector: 'td:first-child',
+      items: 'cell',
+
+    },
+    columns: [
+      { "": "" },
+      { "data": "ce_ABREVIADO" },
+      { "data": "cmue_DESCRIPCIONABREVIADA" },
+      { "data": "cenv_DESCRIPCION" },
+      { "data": "csec_DESCRIPCION" },
+      { "data": "dfm_CODIGOBARRA" },
+      { "data": "cee_DESCRIPCIONESTADOEXAMEN" },
+      { "data": "dfe_EXAMENESURGENTE" },
+      { "": "" },
+    ],
+
+    "initComplete": function(settings, json) {
+      $("#examenesOrdenesDatatable_filter").hide();
+      let rowFilter = $('<tr id="filterExamen" class="filterExamen"></tr>').appendTo($(tableInfoExamenesOrden.table().header()));
+      this.api().columns().every(function() {
+        let columna = this;
+        genTableColFilter(columna.index(), rowFilter, tableInfoExamenesOrden);
+
+      });
+    }
+
+  });
+
+
+  tableInfoExamenesOrden.on('select', function(e, dt, type, indexes) {
+    if (type === 'cell') {
+      if (indexes[0].column === 7) {
+        doAction('getEventUrgenciaDetail', indexes);
+      }
+      else {
+        console.table(dt);
+      }
+    }
+  });
+
+  tableInfoExamenesOrden.on('xhr', function(e, settings, json, xhr) {
+    if (json !== null && json !== undefined) {
+      setSelect(json, 'ce_ABREVIADO', 1);
+      setSelect(json, 'cmue_DESCRIPCIONABREVIADA', 2);
+      setSelect(json, 'cenv_DESCRIPCION', 3);
+
+   }
+  });
+}
+
+
+function getOpcTestExamenDetail(idOrden, idExamen) {
+  $("#opcTestExamenModal").modal('show');
+  examOpcTest(idExamen, idOrden);
+}
+
+function getObsExamenDetail(idOrden, idExamen) {
+  $("#obsExamenModal").modal('show');
+  examObs(idExamen, idOrden);
+}
+
+function getNotasExamenDetail(idOrden, idExamen) {
+  $("#notasExamenModal").modal('show');
+  examNotes(idExamen, idOrden);
+  localStorage.setItem("idExamen", idExamen);
+}
+
+
+function getEventExamenDetail(idOrden, idExamen) {
+  $("#eventosExamenModal").modal('show');
+  examEvents(idExamen, idOrden);
+}
+
+
+function setUrgenciaDetail(indexes) {
+  var data = tableInfoExamenesOrden.rows(indexes[0].row).data();
+  updateInfoExamenesOrden(data[0].dfe_NORDEN, data[0].dfe_IDEXAMEN, data[0].dfe_EXAMENESURGENTE === 'N' ? 'S' : 'N');
+}
+
+
+function examOpcTest(id, orderId) {
+  localSetCurrentExamId(id);
+  $.getJSON("Microbiologia/api/getExamData", { orderId: orderId, examId: id })
+    .done(function(exam) {
+      $('#ExamCanvasOptionalTests').addClass('show active');
+      showExamOptionalTests(exam.optionalTests);
+    })
+    .fail(function(jqxhr, textStatus, error) {
+      var err = textStatus + ", " + error;
+      console.log("Request Failed: " + err);
+    });
+}
+
+
+
+function examObs(id, orderId) {
+  localSetCurrentExamId(id);
+  $.getJSON("Microbiologia/api/getExamData", { orderId: orderId, examId: id })
+    .done(function(exam) {
+      $('#ExamCanvasObservations').addClass('show active');
+      showExamObservations(exam.observations);
+    })
+    .fail(function(jqxhr, textStatus, error) {
+      var err = textStatus + ", " + error;
+      console.log("Request Failed: " + err);
+    });
+}
+
+
+function examEvents(id, orderId) {
+  localSetCurrentExamId(id);
+  $.getJSON("Microbiologia/api/getExamData", { orderId: orderId, examId: id })
+    .done(function(exam) {
+      $('#ExamCanvasEvents').addClass('show active');
+      showExamEvents(exam.events);
+    })
+    .fail(function(jqxhr, textStatus, error) {
+      var err = textStatus + ", " + error;
+      console.log("Request Failed: " + err);
+    });
+}
+
+
+
+function examNotes(id, orderId) {
+  localSetCurrentExamId(id);
+  $.getJSON("Microbiologia/api/getExamData", { orderId: orderId, examId: id })
+    .done(function(exam) {
+      $('#ExamCanvasNotes').addClass('show active');
+      showExamNotes(exam.notes);
+
+    })
+    .fail(function(jqxhr, textStatus, error) {
+      var err = textStatus + ", " + error;
+      console.log("Request Failed: " + err);
+    });
+}
+
+
+var loadInfoExamenesOrden = function(nroOrden) {
+
+  let url = getctx + "/api/orden/" + nroOrden + "/examenes/muestras";
+  tableInfoExamenesOrden.ajax.url(url).load();
+}
+
+function disable(id) {
+  $(id).val("");
+}
+
+function disableSel(id) {
+  $(id).val("-1");
+}
+
+function setDisablerQueue(enablerQueue) {
+
+  enablerQueue.listen("#txtFInicio", disable);
+  enablerQueue.listen("#txtFFin", disable);
+  enablerQueue.listen("#txtFInicio", disable);
+  enablerQueue.listen("#txtFiltroNombre", disable);
+  enablerQueue.listen("#txtFiltroApellido", disable);
+  enablerQueue.listen("#selectTipoDocumentoFiltro", disable);
+  enablerQueue.listen("#selectTipoAtencionFiltro", disable);
+  enablerQueue.listen("#selectServicio", disable);
+  enablerQueue.listen("#selectServicio", disable);
+  enablerQueue.listen("#txtNDocumento", disable);
+}
+
+function enable(id) {
+  $(id).prop("readonly", "");
+}
+
+function setEnablerQueue(enablerQueue) {
+  enablerQueue.listen("#txtFInicio", enable);
+  enablerQueue.listen("#txtFFin", enable);
+  enablerQueue.listen("#txtFInicio", enable);
+  enablerQueue.listen("#txtFiltroNombre", enable);
+  enablerQueue.listen("#txtFiltroApellido", enable);
+  enablerQueue.listen("#selectTipoDocumentoFiltro", enable);
+  enablerQueue.listen("#selectTipoAtencionFiltro", enable);
+  enablerQueue.listen("#selectServicio", enable);
+  enablerQueue.listen("#txtNDocumento", enable);
+}
+
+
+function genTableColFilter(colIndex, rowFilter, table) {
+
+  switch (colIndex) {
+
+    case 0:
+      genTableColCheckSelector(colIndex, rowFilter, table);
+      break;
+    case 7:
+      genTableColCheckFilter(colIndex, rowFilter, table);
+      break;
+    case 1:
+    case 2:
+    case 3:
+    case 4:
+    case 6:
+      genTableColSelectFilter(colIndex, rowFilter, table);
+      break;
+    case 5:
+      genTableColInputFilter(colIndex, rowFilter, table);
+      break;
+    default:
+      genNoFilter(colIndex, rowFilter);
+  }
+}
+
+function genTableColInputFilter(colIndex, rowFilter, table) {
+  let inputText = $(`<input type="text" class="form-control form-control-sm form-filter datatable-input" data-colexa-index="` + colIndex + `"/>`);
+  $(inputText).appendTo($('<th>').appendTo(rowFilter));
+  let searcher = searchTableKey(table);
+  $(`input[data-colexa-index="` + colIndex + `"]`).on('keyup change clear', searcher);
+}
+
+function genTableColSelectFilter(colIndex, rowFilter, table) {
+  let columnas = table.column(colIndex);
+  console.log("columnas");
+  console.table(columnas);
+  let inputSelect = genTableInputSelect(colIndex);
+  $(inputSelect).appendTo($('<th>').appendTo(rowFilter));
+  let searcher = searchTableKey(table);
+  $(`select[data-colexa-index="` + colIndex + `"]`).change(searcher);
+}
+
+function genTableColCheckFilter(colIndex, rowFilter, table) {
+  let inputSelect = $(`<label class="checkbox checkbox-single"> <input type="checkbox" class="form-control form-control-sm form-filter datatable-input" data-colexa-index="` + colIndex + `"/><span></span></label>`);
+  $(inputSelect).appendTo($('<th>').appendTo(rowFilter));
+  let searcher = searchTableKey(table);
+  $(`input[data-colexa-index="` + colIndex + `"]`).change(searcher);
+}
+
+function genTableColCheckSelector(colIndex, rowFilter, table) {
+  let inputSelect = $(`<label class="checkbox checkbox-single"> <input type="checkbox" class="form-control form-control-sm form-filter datatable-input" data-colexa-index="` + colIndex + `"/><span></span></label>`);
+  $(inputSelect).appendTo($('<th>').appendTo(rowFilter));
+  let selecter = selTableKey(table);
+  $(`input[data-colexa-index="` + colIndex + `"]`).change(selecter);
+}
+
+function genTableInputSelect(colIndex) {
+  return $(`<select class="form-control form-control-sm form-filter datatable-input" data-colexa-index="` + colIndex + `">` + setTableOptionSelCol(colIndex) + `</select>`);
+}
+
+function searchTableKey(table) {
+  function searchTKey(e) {
+
+    let columna = table.column(this.dataset["colexaIndex"]);
+    columna.search(e.target.value, true, false, false).draw();
+    //    if (e.target.checked === undefined) {
+    //      columna.search(e.target.value, true, false, false).draw();
+    //    }
+    //    else {
+    //      if (e.target.checked === true) {
+    //        columna.search('S', true, false, false).draw();
+    //      }
+    //      else {
+    //        columna.search('N', true, false, false).draw();
+    //      }
+    //    }
+  }
+  return searchTKey;
+}
+
+function selTableKey(table) {
+  function selTKey(e) {
+    let columna = table.column(this.dataset["colexaIndex"]);
+    if (e.target.checked) {
+      $('#examenesOrdenesDatatable').find(':checkbox').attr('checked', true);
+    } else {
+      $('#examenesOrdenesDatatable').find(':checkbox').attr('checked', false);
+    }
+  }
+  return selTKey;
+}
+
+function setTableOptionSelCol(colIndex, table) {
+
+  switch (colIndex) {
+    case 1:
+      return setOptionExamen(colIndex);
+    case 2:
+      return setOptionMuestra(colIndex);
+    case 3:
+      return setOptionEnvase(colIndex);
+    case 4:
+      return setOptionSeccion(colIndex);
+    case 6:
+      return setOptionEstadoExamen(colIndex);
+    default:
+      break;
+  }
+  return '<option value="">TODOS</option>';
+}
+
+
+
+function setOptionExamen(colIndex) {
+
+  function fillSelect(jqIdSelect) {
+    function fill(data) {
+
+      data.forEach(exa => {
+        let opt = new Option(exa.ceDescripcion, exa.ceDescripcion);
+        $(jqIdSelect).append($(opt));
+      });
+      let opt = new Option('TODOS', '', true);
+      $(jqIdSelect).append($(opt));
+    }
+    return fill;
+  }
+
+  let fillSelectExamen = fillSelect(`select[data-colexa-index="` + colIndex + `"]`)
+  getCfgExamenes(servicioCfgExamenes, fillSelectExamen);
+}
+
+function setOptionMuestra(colIndex) {
+
+  function fillSelect(jqIdSelect) {
+    function fill(data) {
+
+      data.forEach(muestra => {
+        let opt = new Option(muestra.cmueDescripcion, muestra.cmueDescripcion);
+        $(jqIdSelect).append($(opt));
+      });
+      let opt = new Option('TODOS', '', true, true);
+      $(jqIdSelect).append($(opt));
+    }
+    return fill;
+  }
+
+  let fillSelectMuestra = fillSelect(`select[data-colexa-index="` + colIndex + `"]`)
+  getMuestras(servicioCfgMuestras, fillSelectMuestra);
+}
+
+
+function setOptionEnvase(colIndex) {
+
+  function fillSelect(jqIdSelect) {
+    function fill(data) {
+
+      data.forEach(envase => {
+        let opt = new Option(envase.cenvDescripcion, envase.cenvDescripcion);
+        $(jqIdSelect).append($(opt));
+      });
+      let opt = new Option('TODOS', '', true, true);
+      $(jqIdSelect).append($(opt));
+    }
+    return fill;
+  }
+
+  let fillSelectEnvase = fillSelect(`select[data-colexa-index="` + colIndex + `"]`)
+  getCfgEnvases(servicioCfgEnvases, fillSelectEnvase);
+}
+
+function setOptionSeccion(colIndex) {
+
+  function fillSelect(jqIdSelect) {
+    function fill(data) {
+
+      data.forEach(sec => {
+        let opt = new Option(sec.csecDescripcion, sec.csecDescripcion);
+        $(jqIdSelect).append($(opt));
+      });
+      let opt = new Option('TODOS', '', true, true);
+      $(jqIdSelect).append($(opt));
+    }
+    return fill;
+  }
+
+  let fillSelectSeccion = fillSelect(`select[data-colexa-index="` + colIndex + `"]`)
+  getSeccionesCol(servicioSecciones, fillSelectSeccion);
+}
+
+
+
+function setOptionEstadoExamen(colIndex) {
+
+  function fillSelect(jqIdSelect) {
+    function fill(data) {
+
+      data.forEach(estado => {
+        let opt = new Option(estado.ceeDescripcionestadoexamen, estado.ceeDescripcionestadoexamen);
+        $(jqIdSelect).append($(opt));
+      });
+      let opt = new Option('TODOS', '', true, true);
+      $(jqIdSelect).append($(opt));
+    }
+    return fill;
+  }
+
+  let fillSelectEstadoExamen = fillSelect(`select[data-colexa-index="` + colIndex + `"]`)
+  getEstadosExamen(servicioCfgEstadosExamenes, fillSelectEstadoExamen);
+}
+
+function updateInfoExamenesOrden(nroOrden, idExamen, esUrgente) {
+
+  let url = getctx + '/api/examen/update/';
+  let examen = {
+    "iddatosFichasExamenes": {
+      "dfeNorden": nroOrden,
+      "dfeIdexamen": idExamen
+    },
+    "dfeExamenesurgente": esUrgente
+  };
+
+  let postData = JSON.stringify(examen);
+
+  $.post({
+    type: "POST",
+    url: url,
+    data: postData,
+    success:  function (data ){
+     
+     let status =  data.status;
+     if (status === 200){
+      handleMessageOk(data.message);
+     }
+     else{} 
+      handleMessageError(data.message);
+    },
+      contentType: 'application/json; charset=utf-8'
+  }).fail('Error en actualizacion. Http Error');
+}
+
+$("#examModalNotesButton").click(function() {
+  $.ajax({
+    url: "Microbiologia/api/putExamNotes",
+    data: JSON.stringify({
+      orderId: nroOrdenSeleccionada,
+      examId: localStorage.getItem("idExamen"),
+      internalNote: $("#idExamCanvasNotesInternalNote").val(),
+      examNote: $("#idExamCanvasNotesExamNote").val(),
+      footerNote: $("#idExamCanvasNotesFooterNote").val()
+    }),
+    headers: {
+      'Content-Type': 'application/json'
+    },
+    method: 'put',
+    dataType: 'json',
+    success: function(exam) {
+      handlerMessageOk('Se actualizaron notas. ');
+    },
+    error: function(jqxhr, textStatus, error) {
+      var err = textStatus + ", " + error;
+      console.log("Request Failed: " + err);
+    }
+  });
+})
+
+
+function genMuestrasDisponibles(jsonData) {
+
+  return genOpcionesDisponibles(jsonData.dato, 'cenv_DESCRIPCION');
+}
+
+function genOpcionesDisponibles(datos, fieldName) {
+  let n = datos.length;
+  let muestrasSet = new Set();
+  for (let i = 0; i < n; i++) {
+    let lst = getListaValores(datos[i], fieldName);
+    let m = lst.length;
+    for (let j = 0; j < m; j++) {
+      muestrasSet.add(lst[j]);
+    }
+  }
+  return muestrasSet;
+}
+
+
+function parseBR(examen_i) {
+  let lst = examen_i.cenv_DESCRIPCION.split("<BR\/>");
+  lst.splice(lst.length - 1, 1);
+
+  console.table(lst);
+  return lst;
+}
+
+function getListaValores(examen_i, field) {
+  let lst = examen_i[field].split("<BR\/>");
+  if (lst.length > 1) {
+    lst.splice(lst.length - 1, 1);
+  }
+  console.table(lst);
+  return lst;
+}
+
+
+
+function setSelect(json, fieldName, index) {
+  if (json !== null && json !== undefined) {
+    if ($("select[data-colexa-index=" + index + "]").length !== undefined && $("select[data-colexa-index=" + index + "]").length > 0) {
+      let n = $("select[data-colexa-index=" + index + "]")[0].options.length;
+      for (let i = 0; i < n; i++) {
+        $("select[data-colexa-index=" + index + "]")[0].remove(n - i - 1);
+      }
+      let muestras = genOpcionesDisponibles(json.dato, fieldName);
+      let opc = new Option('TODOS', 'TODOS');
+      $("select[data-colexa-index=" + index + "]")[0].append(opc);
+      muestras.forEach(m => {
+        console.log('Muestra: ' + m); opc = new Option(m, m); $("select[data-colexa-index=" + index + "]")[0].append(opc);
+      });
+    }
+  }
+}
diff --git a/src/main/webapp/resources/js/CausasRechazoMuestras.js b/src/main/webapp/resources/js/CausasRechazoMuestras.js
deleted file mode 100644
index d4d8ee0a..00000000
--- a/src/main/webapp/resources/js/CausasRechazoMuestras.js
+++ /dev/null
@@ -1,186 +0,0 @@
-/* 
- * To change this license header, choose License Headers in Project Properties.
- * To change this template file, choose Tools | Templates
- * and open the template in the editor.
- */
-
-$(document).ready(function () {
-    $(".ocultar").hide();
-    filtrarLike("", "");
-});
-
-$("#txtCodigoFiltro").keyup(function () {
-    filtrarLike($("#txtCodigoFiltro").val().trim(), "");
-    if ($("#txtCodigoFiltro").val().length > 0) {
-        $("#txtCausaFiltro").prop("disabled", true);
-    } else {
-        $("#txtCausaFiltro").prop("disabled", false);
-    }
-});
-
-$("#txtCausaFiltro").keyup(function () {
-    //if (this.value.length > 1){
-        filtrarLike("", $("#txtCausaFiltro").val().trim());
-        if ($("#txtCausaFiltro").val().length > 0) {
-            $("#txtCodigoFiltro").attr("disabled", true);
-        } else {
-            $("#txtCodigoFiltro").attr("disabled", false);
-        }
-    //}
-});
-
-$("#btnLimpiarFiltro").click(function () {
-    $("#txtCodigoFiltro").val("");
-    $("#txtCodigoFiltro").prop("disabled", false);
-    $("#txtCausaFiltro").val("");
-    $("#txtCausaFiltro").prop("disabled", false);
-    filtrarLike("", "");
-});
-
-$("#nuevaCausa").click(function () {
-    $(".collapse").collapse('hide');
-    $('html, body').animate({
-        scrollTop: $("div#divForm").offset().top
-    }, 700);
-    desactivarEdit();
-    limpiarFormulario();
-});
-
-$("#buscarCausa").click(function () {
-    $(".collapse").collapse('show');
-    $('html, body').animate({
-        scrollTop: $("div#accordionExample8").offset().top
-    }, 700);
-    desactivarEdit();
-    $("#btnAgregarCausa").show();
-    $("#btnGuardarUpdate").hide();
-    filtrarLike("", "");
-});
-
-$("#iLimpiar").click(function () {
-    desactivarEdit();
-    limpiarFormulario();
-});
-
-function limpiarFormulario(){
-    $("#txtIdCausaRechazo").val("");
-    $("#txtCodigo").val("");
-    $("#txtDescripcionCausaRechazo").val("");
-    $("#txtOrden").val("");
-    $("#checkBoxActivo").prop("checked", true);
-    
-    $("#txtCodigo").prop("disabled", false);
-    $("#txtDescripcionCausaRechazo").prop("disabled", false);
-    $("#txtOrden").prop("disabled", false);
-    $("#checkBoxActivo").prop("disabled", false);
-    $("#btnAgregarCausa").prop("disabled", false);
-    
-    $("#btnAgregarCausa").show();
-    $("#btnGuardarUpdate").hide();
-    $('.selectpicker').selectpicker('refresh');
-}
-
-$("#spanCheck").click(function () {
-    if ($("#checkBoxActivo").is(":checked")) {
-        $("#lblEstado").text("Activo");
-    }
-    if (!($("#checkBoxActivo").is(":checked"))) {
-        $("#lblEstado").text("Inactivo");
-    }
-});
-
-$("#btnEditarCausa").click(function() {
-    $("#txtCodigo").prop("disabled", false);
-    $("#txtDescripcionCausaRechazo").prop("disabled", false);
-    $("#txtOrden").prop("disabled", false);
-    $("#checkBoxActivo").prop("disabled", false);
-    $("#btnAgregarCausa").prop("disabled", true);
-    $("#btnAgregarCausa").removeClass("disabled");
-    $("#btnAgregarCausa").hide();
-    $("#btnGuardarUpdate").show();
-});
-
-function filtrarLike(codigo, descripcion){
-    $.ajax({
-        type: "post",
-        data: "filtro=1&codigo=" + codigo + "&descripcion=" + descripcion,
-        url: "CausasRechazoMuestras",
-        datatype: "json",
-        success: function (mensaje) {
-            var cont = 0;
-            var dato = JSON.parse(mensaje);
-            //console.log(dato);
-            $("#tbodyFiltro").empty();
-            $("#lblErrorFiltro").hide();
-            if (dato.causa.length > 0) {
-                dato.causa.forEach(function (causa) {
-                    cont++;
-                    $("#tbodyFiltro").append("<tr class='pointer' onclick='selectCausa(this)' ><th class='row mx-auto'>" + cont + "</th><td class=''>" + causa.codigo + "</td><td class=''>" + causa.descripcion + "</td><td class='idCausa' style='display:none'>" + causa.id + "</td></tr>");
-                });
-            } else {
-                $("#lblErrorFiltro").show();
-            }
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });    
-}
-
-function selectCausa(a) {
-    var $row = $(a).closest("tr"); // Find the row
-    var idCausa = $row.find(".idCausa").text();
-    filtrarbyId(idCausa);
-    activarEdit();
-}
-
-function activarEdit() {
-    $("#iEditCausa").removeClass("text-dark-50");
-    $("#iEditCausa").addClass("text-primary");
-    
-    localStorage.setItem("btnEditarCausa", "activo");
-}
-
-function desactivarEdit() {
-    $("#iEditCausa").removeClass("text-primary");
-    $("#iEditCausa").addClass("text-dark-50");
-    
-    localStorage.setItem("btnEditarCausa", "inactivo");
-}
-
-function filtrarbyId(idCausa) {
-    console.log(idCausa);
-    $.ajax({
-        type: "post",
-        data: "filtroId=1&idCausa=" + idCausa,
-        datatype: "json",
-        success: function (mensaje) {
-            var cont = 0;
-            var dato = JSON.parse(mensaje);
-            $("#tbodyFiltro").empty();
-            $("#lblErrorFiltro").hide();
-            var causa = dato.causa[0];
-            $("#txtIdCausaRechazo").val(causa.idCausa);
-            $("#txtCodigo").val(causa.codigo);
-            $("#txtCodigo").prop("disabled", true);
-            $("#txtDescripcionCausaRechazo").val(causa.descripcion);
-            $("#txtDescripcionCausaRechazo").prop("disabled", true);
-            $("#txtOrden").val(causa.orden);
-            $("#txtOrden").prop("disabled", true);
-            if (causa.activo == "S") {
-                $("#checkBoxActivo").prop("checked", true);
-                $("#lblEstado").text("Activo");
-            } else {
-                $("#checkBoxActivo").prop("checked", false);
-                $("#lblEstado").text("Inactivo");
-            }
-            $("#checkBoxActivo").prop("disabled", true);
-            
-            $("#btnAgregarCausa").prop("disabled", true);
-            //$('.selectpicker').selectpicker('refresh');
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/ConfiguracionEtiquetas.js b/src/main/webapp/resources/js/ConfiguracionEtiquetas.js
deleted file mode 100644
index 8172b443..00000000
--- a/src/main/webapp/resources/js/ConfiguracionEtiquetas.js
+++ /dev/null
@@ -1,681 +0,0 @@
-/**
- * 
- */
-
-
-
-$(document).ready(async function() {
-	$("#divCancelEdit").hide();
-	bloquearCampos();
-	let datosEtiquetas = await getDatosEtiquetas();
-	let html = await llenarTablaEtiquetas(datosEtiquetas);
-	$("#divBtnLimpiar2").hide();
-	$("#bodyEtiquetas").html(html);
-	$("#ce_btnGuardarEtiqueta").attr('disabled', true);
-
-});
-
-
-$("#agregarEtiqueta").click(function (){
-	limpiarFormulario();
-	habilitarCampos();
-	$("#codigoEtiqueta").focus();
-	$("#ce_btnGuardarEtiqueta").attr('disabled', false);
-	$("#divBtnEditar").show();
-	$("#divCancelEdit").hide();
-})
-
-$("#ce_btnImprimirEtiqueta").click(function() {
-	alert("entre a imprimir")
-})
-
-$("#ce_btnVisualizarEtiqueta").click(function() {
-	alert("entre a visualizar")
-})
-
-$("#btnLimpiar").click(function() {	
-	limpiarFormulario();
-	$("#ce_btnGuardarEtiqueta").attr('disabled', true);
-	bloquearCampos();
-})
-
-$("#divBtnEditar").click( function (){
-	$("#divBtnEditar").hide();
-	$("#divCancelEdit").show();		
-	habilitarCampos();
-	$("#divBtnLimpiar *").hide();
-	$("#divBtnLimpiar2").show();
-	$("#ce_btnGuardarEtiqueta").attr('disabled', false);
-})
-
-$("#divCancelEdit").click( function (){
-	$("#divCancelEdit").hide();
-	$("#divBtnEditar").show();
-	$("#divBtnLimpiar *").show();
-	$("#divBtnLimpiar2").hide();
-	$("#ce_btnGuardarEtiqueta").attr('disabled', true);
-	
-	
-	bloquearCampos();	
-})
-
-
-
-$("#ce_btnGuardarEtiqueta").click(function (){
-	let data = tomarDatosFormulario();
-	insertUpateEtiqueta(data);
-	limpiarFormulario();
-	$("#divBtnEditar").show();
-	$("#divCancelEdit").hide();
-	$("#ce_btnGuardarEtiqueta").attr('disabled', true);
-	bloquearCampos();	
-})
-
-
- function insertUpateEtiqueta(data){
-    
-    datos = JSON.stringify(data);
-    console.log(datos);
-    $.ajax({
-        type: "post",
-        url: gCte.getctx + "/api/configuracionetiquetas/insertUpdate",
-        data: datos,       
-    	  async: false,
-        contentType: "application/json",
-        success: function (data) {
-            try {
-                if (data.status == 200) {
-                    handlerMessageOk(data.message);
-                    return;
-                }
-                
-            } catch (e) {
-                handlerMessageError("No se pudo agregar Etiqueta");
-            }
-        },
-        error: function (msg) {
-            console.log(msg);
-            handlerMessageError("No se pudo agregar Etiqueta");
-        },
-    });
-    
-}
-
-
-
-async function llenarTablaEtiquetas(datos) {
-
-	console.log(datos)
-	let html = "";
-	for (let i = 0; i < datos.length; i++) {
-		let codigo = datos[i].fontcodigobarra;
-		console.log(codigo)
-		html = html + `<tr onclick ="llenarCamposTablaEtiquetas('${datos[i].cecb_CODIGO}' )"> <td>${i}</td> <td> ${datos[i].cecb_DESCRIPCION}</td></tr>`;
-	}
-
-	return html;
-}
-
-
-let llenarCamposTablaEtiquetas = async (codigo) => {
-	let datosEtiqueta = await getDatoEtiquetaByCodigo(codigo);
-	llenarFormulario(datosEtiqueta);
-}
-
-
-function llenarFormulario(datos) {
-
-	$("#codigoEtiqueta").val(datos.cecb_CODIGO);
-	$("#nombreEtiqueta").val(datos.cecb_DESCRIPCION);	
-	if(datos.cecb_FONTCODIGOBARRA == null){
-		datos.cecb_FONTCODIGOBARRA = "Sin especificar";
-	}
-	$("#selectFont>option[value='" + datos.cecb_FONTCODIGOBARRA + "']").attr("selected", false);
-	$("#selectFont>option[value='" + datos.cecb_FONTCODIGOBARRA + "']").attr("selected", true);
-
-	if (datos.cecb_PROCEDENCIA == "S") {
-		$("#checkboxProcedencia").prop("checked", true);
-	} else {
-		$("#checkboxProcedencia").prop("checked", false);
-	}
-	if (datos.cecb_SERVICIO == "S") {
-		$("#checkboxServicio").prop("checked", true)
-	} else {
-		$("#checkboxServicio").prop("checked", false)
-	}
-	$("#textNota").val(datos.cecb_NOTA);
-	if (datos.cecb_PARAMETRIZADA == "S") {
-		$("#checkboxParametrizada").prop("checked", true)
-	} else {
-		$("#checkboxParametrizada").prop("checked", false)
-	}
-	//***************Linea 1 ************************************ */
-	$("#idCodigoBarraF0").val(datos.cecb_FILACODIGOBARRAS);
-	$("#idCodigoBarraC0").val(datos.cecb_COLUMNACODIGOBARRAS);
-
-	if (datos.cecb_ACTIVOCODIGOBARRAS == "S") {
-		$("#checkboxCodigoBarraA0").prop("checked", true)
-	} else {
-		$("#checkboxCodigoBarraA0").prop("checked", false)
-	}
-	$("#idCodigoBarraT0").val(datos.cecb_TAMANOFONTCODIGOBARRAS);
-
-	//***************Linea 2 ************************************ */
-
-	$("#idNumeroCodigoBarraF").val(datos.cecb_TEXTO1FILA)
-	$("#idNumeroCodigoBarraC").val(datos.cecb_TEXTO1COLUMNA);
-
-	if (datos.cecb_ACTIVOTEXTO1 == "S") {
-		$("#checkboxNumeroCodigoBarraA").prop("checked", true)
-	} else {
-		$("#checkboxNumeroCodigoBarraA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA1 == "S") {
-		$("#checkboxNumeroCodigoBarraN").prop("checked", true)
-	} else {
-		$("#checkboxNumeroCodigoBarraN").prop("checked", false)
-	}
-
-	$("#idNumeroCodigoBarraT").val(datos.cecb_TEXTO1TAMANO);
-
-	//***************Linea 3 ************************************ */
-
-	$("#iTipoAtencionF").val(datos.cecb_TEXTO2FILA)
-	$("#iTipoAtencionC").val(datos.cecb_TEXTO2COLUMNA);
-	$("#iTipoAtencionL").val(datos.cecb_TEXTO2LARGO);
-	if (datos.cecb_ACTIVOTEXTO2 == "S") {
-		$("#checkboxTipoAtencionA").prop("checked", true)
-	} else {
-		$("#checkboxTipoAtencionA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA2 == "S") {
-		$("#checkboxTipoAtencionN").prop("checked", true)
-	} else {
-		$("#checkboxTipoAtencionN").prop("checked", false)
-	}
-	$("#idTipoAtencionT").val(datos.cecb_TEXTO2TAMANO);
-	$("#idTipoAtencionPrefijo").val(datos.cecb_TIPOPACPREFIJO);
-	$("#idTipoAtencionSufijo").val(datos.cecb_TIPOPACSUFIJO);
-	//***************Linea 4 ************************************ */
-	$("#idProcedenciaF").val(datos.cecb_TEXTO3FILA)
-	$("#idProcedenciaC").val(datos.cecb_TEXTO3COLUMNA);
-	$("#idProcedenciaL").val(datos.cecb_TEXTO3LARGO);
-	if (datos.cecb_ACTIVOTEXTO3 == "S") {
-		$("#checkboxProcedenciaA").prop("checked", true)
-	} else {
-		$("#checkboxProcedenciaA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA3 == "S") {
-		$("#checkboxProcedenciaN").prop("checked", true)
-	} else {
-		$("#checkboxProcedenciaN").prop("checked", false)
-	}
-	$("#idProcedenciaT").val(datos.cecb_TEXTO3TAMANO);
-	$("#idProcedenciaPrefijo").val(datos.cecb_PROCEPREFIJO);
-	$("#idProcedenciaSufijo").val(datos.cecb_PROCESUFIJO);
-	//***************Linea 5 ************************************ */
-	$("#idServicioF").val(datos.cecb_TEXTO4FILA)
-	$("#idServicioC").val(datos.cecb_TEXTO4COLUMNA);
-	$("#idServicioL").val(datos.cecb_TEXTO4LARGO);
-	if (datos.cecb_ACTIVOTEXTO4 == "S") {
-		$("#checkboxServicioA").prop("checked", true)
-	} else {
-		$("#checkboxServicioA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA4 == "S") {
-		$("#checkboxServicioN").prop("checked", true)
-	} else {
-		$("#checkboxServicioN").prop("checked", false)
-	}
-	$("#idServicioT").val(datos.cecb_TEXTO4TAMANO);
-	$("#idServicioPrefijo").val(datos.cecb_SERVPREFIJO);
-	$("#idServicioSufijo").val(datos.cecb_SERVSUFIJO);
-	//***************Linea 6 ************************************ */
-	$("#idNombrePacienteF").val(datos.cecb_TEXTO5FILA)
-	$("#idNombrePacienteC").val(datos.cecb_TEXTO5COLUMNA);
-	$("#idNombrePacienteL").val(datos.cecb_TEXTO5LARGO);
-	if (datos.cecb_ACTIVOTEXTO5 == "S") {
-		$("#checkboxNombrePacienteA").prop("checked", true)
-	} else {
-		$("#checkboxNombrePacienteA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA5 == "S") {
-		$("#checkboxNombrePacienteN").prop("checked", true)
-	} else {
-		$("#checkboxNombrePacienteN").prop("checked", false)
-	}
-	$("#idNombrePacienteT").val(datos.cecb_TEXTO5TAMANO);
-	$("#idNombrePacientePrefijo").val(datos.cecb_NOMBPREFIJO);
-	$("#idNombrePacienteSufijo").val(datos.cecb_NOMBSUFIJO);
-	//***************Linea 7 ************************************ */
-	$("#idRunF").val(datos.cecb_TEXTO6FILA)
-	$("#idRunC").val(datos.cecb_TEXTO6COLUMNA);
-	$("#idRunL").val(datos.cecb_TEXTO6LARGO);
-	if (datos.cecb_ACTIVOTEXTO6 == "S") {
-		$("#checkboxRunA").prop("checked", true)
-	} else {
-		$("#checkboxRunA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA6 == "S") {
-		$("#checkboxRunN").prop("checked", true)
-	} else {
-		$("#checkboxRunN").prop("checked", false)
-	}
-	$("#idRunT").val(datos.cecb_TEXTO6TAMANO);
-	$("#idRunPrefijo").val(datos.cecb_RUTPREFIJO);
-	$("#idRunSufijo").val(datos.cecb_RUTSUFIJO);
-	//***************Linea 8 ************************************ */
-	$("#idSexoF").val(datos.cecb_TEXTO7FILA)
-	$("#idSexoC").val(datos.cecb_TEXTO7COLUMNA);
-	$("#idSexoL").val(datos.cecb_TEXTO7LARGO);
-	if (datos.cecb_ACTIVOTEXTO7 == "S") {
-		$("#checkboxSexoA").prop("checked", true)
-	} else {
-		$("#checkboxSexoA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA7 == "S") {
-		$("#checkboxSexoN").prop("checked", true)
-	} else {
-		$("#checkboxSexoN").prop("checked", false)
-	}
-	$("#idSexoT").val(datos.cecb_TEXTO7TAMANO);
-	$("#idSexoPrefijo").val(datos.cecb_SEXOPREFIJO);
-	$("#idSexoSufijo").val(datos.cecb_SEXOSUFIJO);
-	//***************Linea 9 ************************************ */
-	$("#idEdadF").val(datos.cecb_TEXTO8FILA)
-	$("#idEdadC").val(datos.cecb_TEXTO8COLUMNA);
-	$("#idEdadL").val(datos.cecb_TEXTO8LARGO);
-	if (datos.cecb_ACTIVOTEXTO8 == "S") {
-		$("#checkboxEdadA").prop("checked", true)
-	} else {
-		$("#checkboxEdadA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA8 == "S") {
-		$("#checkboxEdadN").prop("checked", true)
-	} else {
-		$("#checkboxEdadN").prop("checked", false)
-	}
-	$("#idEdadT").val(datos.cecb_TEXTO8TAMANO);
-	$("#idEdadPrefijo").val(datos.cecb_EDADPREFIJO);
-	$("#idEdadSufijo").val(datos.cecb_EDADSUFIJO);
-	//***************Linea 10 ************************************ */
-	$("#idTipoMuestraF").val(datos.cecb_TEXTO9FILA)
-	$("#idTipoMuestraC").val(datos.cecb_TEXTO9COLUMNA);
-	$("#idTipoMuestraL").val(datos.cecb_TEXTO9LARGO);
-	if (datos.cecb_ACTIVOTEXTO9 == "S") {
-		$("#checkboxTipoMuestraA").prop("checked", true)
-	} else {
-		$("#checkboxTipoMuestraA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA9 == "S") {
-		$("#checkboxTipoMuestraN").prop("checked", true)
-	} else {
-		$("#checkboxTipoMuestraN").prop("checked", false)
-	}
-	$("#idTipoMuestraT").val(datos.cecb_TEXTO9TAMANO);
-	$("#idTipoMuestraPrefijo").val(datos.cecb_TIPMUEPREFIJO);
-	$("#idTipoMuestraSufijo").val(datos.cecb_TIPMUESUFIJO);
-
-	//***************Linea 11 ************************************ */
-	$("#idEnvaseF").val(datos.cecb_TEXTO10FILA)
-	$("#idEnvaseC").val(datos.cecb_TEXTO10COLUMNA);
-	$("#idEnvaseL").val(datos.cecb_TEXTO10LARGO);
-	if (datos.cecb_ACTIVOTEXTO10 == "S") {
-		$("#checkboxEnvaseA").prop("checked", true)
-	} else {
-		$("#checkboxEnvaseA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA10 == "S") {
-		$("#checkboxEnvaseN").prop("checked", true)
-	} else {
-		$("#checkboxEnvaseN").prop("checked", false)
-	}
-	$("#idEnvaseT").val(datos.cecb_TEXTO10TAMANO);
-	$("#idEnvasePrefijo").val(datos.cecb_ENVAPREFIJO);
-	$("#idEnvaseSufijo").val(datos.cecb_ENVASUFIJO);
-
-	//***************Linea 12 ************************************ */
-	$("#idFechaRegistroF").val(datos.cecb_TEXTO11FILA)
-	$("#idFechaRegistroC").val(datos.cecb_TEXTO11COLUMNA);
-	$("#idFechaRegistroL").val(datos.cecb_TEXTO11LARGO);
-	if (datos.cecb_ACTIVOTEXTO11 == "S") {
-		$("#checkboxFechaRegistroA").prop("checked", true)
-	} else {
-		$("#checkboxFechaRegistroA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA11 == "S") {
-		$("#checkboxFechaRegistroN").prop("checked", true)
-	} else {
-		$("#checkboxFechaRegistroN").prop("checked", false)
-	}
-	$("#idFechaRegistroT").val(datos.cecb_TEXTO11TAMANO);
-	$("#idFechaRegistroPrefijo").val(datos.cecb_FECHAPREFIJO);
-	$("#idFechaRegistroSufijo").val(datos.cecb_FECHASUFIJO);
-
-	//***************Linea 13 ************************************ */
-	$("#idExamenesF").val(datos.cecb_TEXTO12FILA)
-	$("#idExamenesC").val(datos.cecb_TEXTO12COLUMNA);
-
-	if (datos.cecb_ACTIVOTEXTO12 == "S") {
-		$("#checkboxExamenesA").prop("checked", true)
-	} else {
-		$("#checkboxExamenesA").prop("checked", false)
-	}
-	if (datos.cecb_NEGRITA12 == "S") {
-		$("#checkboxExamenesN").prop("checked", true)
-	} else {
-		$("#checkboxExamenesN").prop("checked", false)
-	}
-
-bloquearCampos();
-$("#ce_btnGuardarEtiqueta").attr('disabled', true);
-
-}
-
-function tomarDatosFormulario(){
-	let datos = new Object();
-	datos.cecbCodigo = $("#codigoEtiqueta").val();
-	datos.cecbDescripcion = $("#nombreEtiqueta").val();
-	
-
-	datos.cecbFontcodigobarra = $("#selectFont option:selected").text();
-	if( $('#checkboxProcedencia').prop('checked') ) {
-		datos.cecbProcedencia ="S";
-    }else{
-		datos.cecbProcedencia= "N";
-	}
-	if( $('#checkboxServicio').prop('checked') ) {
-		datos.cecbServicio ="S";
-    }else{
-		datos.cecbServicio = "N";
-	}
-	datos.cecbNota = $("#textNota").val();
-	if ($("#checkboxParametrizada").prop("checked")) {
-		datos.cecbParametrizada = "S"
-	} else {
-		datos.cecbParametrizada= "N"
-	}
-	//****************************************************
-	datos.cecbFilacodigobarras = $("#idCodigoBarraF0").val();
-	datos.cecbColumnacodigobarras = $("#idCodigoBarraC0").val();	
-	datos.cecbTamanofontcodigobarras = $("#idCodigoBarraT0").val();	
-	
-	if ($("#checkboxCodigoBarraA0").prop("checked")) {
-		datos.cecbActivocodigobarras = "S"
-	} else {
-		datos.cecbActivocodigobarras  = "N"
-	}
-	//*************************************************
-	datos.cecbTexto1fila = $("#idNumeroCodigoBarraF").val();
-	datos.cecbTexto1columna = $("#idNumeroCodigoBarraC").val();
-
-	if ($("#checkboxNumeroCodigoBarraN").prop("checked")) {
-		datos.cecbActivotexto1 = "S"
-	} else {
-		datos.cecbActivotexto1 = "N"
-	}
-	if ($("#checkboxNumeroCodigoBarraA").prop("checked")) {
-		datos.cecbNegrita1 = "S"
-	} else {
-		datos.cecbNegrita1 = "N"
-	}
-	datos.cecbTexto1tamano = $("#idNumeroCodigoBarraT").val();
-//*******************************************************************
-	datos.cecbTexto2fila = $("#iTipoAtencionF").val();
-	datos.cecbTexto2columna = $("#iTipoAtencionC").val();
-	datos.cecbTexto2largo = $("#iTipoAtencionL").val();
-	if ($("#checkboxTipoAtencionA").prop("checked")) {
-		datos.cecbActivotexto2 = "S"
-	} else {
-		datos.cecbActivotexto2 = "N"
-	}
-	if ($("#checkboxTipoAtencionN").prop("checked")) {
-		datos.cecbNegrita2 = "S"
-	} else {
-		datos.cecbNegrita2 = "N"
-	};
-	
-	datos.cecbTexto2tamano = $("#idTipoAtencionT").val();
-	datos.cecbTipopacprefijo = $("#idTipoAtencionPrefijo").val();
-	datos.cecbTipopacsufijo = $("#idTipoAtencionSufijo").val();
-	//***************Linea 4 ************************************ 
-	datos.cecbTexto3fila = $("#idProcedenciaF").val();
-	datos.cecbTexto3columna = $("#idProcedenciaC").val();
-	datos.cecbTexto3largo =  $("#idProcedenciaL").val();
-	if ($("#checkboxProcedenciaA").prop("checked")) {
-		datos.cecbActivotexto3 = "S"
-	} else {
-		datos.cecbActivotexto3 = "N"
-	};
-	if ($("#checkboxProcedenciaN").prop("checked")) {
-		datos.cecbNegrita3 = "S"
-	} else {
-		datos.cecbNegrita3 = "N"
-	};	
-	datos.cecbTexto3tamano = $("#idProcedenciaT").val();
-	datos.cecbProceprefijo = $("#idProcedenciaPrefijo").val();
-	datos.cecbProcesufijo = $("#idProcedenciaSufijo").val();
-	
-	//***************Linea 5 ************************************ 
-	datos.cecbTexto4fila = $("#idServicioF").val()
-	datos.cecbTexto4columna = $("#idServicioC").val();
-	datos.cecbTexto4largo = $("#idServicioL").val();
-	if ($("#checkboxServicioA").prop("checked")) {
-		datos.cecbActivotexto4 = "S"
-	} else {
-		datos.cecbActivotexto4 = "N"
-	};
-	if ($("#checkboxServicioN").prop("checked")) {
-		datos.cecbNegrita4 = "S"
-	} else {
-		datos.cecbNegrita4 = "N"
-	};
-	datos.cecbTexto4tamano  = $("#idServicioT").val();
-	datos.cecbServprefijo = $("#idServicioPrefijo").val();
-	datos.cecbServsufijo = $("#idServicioSufijo").val();
-	//***************Linea 6 ************************************ 
-	datos.cecbTexto5fila  = $("#idNombrePacienteF").val()
-	datos.cecbTexto5columna = $("#idNombrePacienteC").val();
-	datos.cecbTexto5largo = $("#idNombrePacienteL").val();
-	if ($("#checkboxNombrePacienteA").prop("checked")) {
-		datos.cecbActivotexto5 = "S"
-	} else {
-		datos.cecbActivotexto5 = "N"
-	};
-	if ($("#checkboxNombrePacienteN").prop("checked")) {
-		datos.cecbNegrita5 = "S"
-	} else {
-		datos.cecbNegrita5 = "N"
-	};
-	
-	datos.cecbTexto5tamano = $("#idNombrePacienteT").val();
-	datos.cecbNombprefijo = $("#idNombrePacientePrefijo").val();
-	datos.cecbNombsufijo = $("#idNombrePacienteSufijo").val();
-
-	//***************Linea 7 ************************************ 
-	datos.cecbTexto6fila = $("#idRunF").val()
-	datos.cecbTexto6columna = $("#idRunC").val();
-	datos.cecbTexto6largo = $("#idRunL").val();
-	if ($("#checkboxRunA").prop("checked")) {
-		datos.cecbActivotexto6 = "S"
-	} else {
-		datos.cecbActivotexto6 = "N"
-	};
-	if ($("#checkboxRunN").prop("checked")) {
-		datos.cecbNegrita6 = "S"
-	} else {
-		datos.cecbNegrita6 = "N"
-	};
-	
-	datos.cecbTexto6tamano = $("#idRunT").val();
-	datos.cecbRutprefijo = $("#idRunPrefijo").val();
-	datos.cecbRutsufijo = $("#idRunSufijo").val();
-
-	//***************Linea 8 ************************************ 
-	datos.cecbTexto7fila = $("#idSexoF").val();
-	datos.cecbTexto7columna = $("#idSexoC").val();
-	datos.cecbTexto7largo = $("#idSexoL").val();
-	if ($("#checkboxSexoA").prop("checked")) {
-		datos.cecbActivotexto7 = "S"
-	} else {
-		datos.cecbActivotexto7 = "N"
-	};
-	if ($("#checkboxSexoN").prop("checked")) {
-		datos.cecbNegrita7 = "S"
-	} else {
-		datos.cecbNegrita7 = "N"
-	};
-	
-	datos.cecbTexto7tamano = $("#idSexoT").val();
-	datos.cecbSexoprefijo = $("#idSexoPrefijo").val();
-	datos.cecbSexosufijo = $("#idSexoSufijo").val();
-	//***************Linea 9 ************************************ 
-	datos.cecbTexto8fila = $("#idEdadF").val();
-	datos.cecbTexto8columna = $("#idEdadC").val();
-	datos.cecbTexto8largo = $("#idEdadL").val();
-	if ($("#checkboxEdadA").prop("checked")) {
-		datos.cecbActivotexto8 = "S"
-	} else {
-		datos.cecbActivotexto8 = "N"
-	};
-	if ($("#checkboxEdadN").prop("checked")) {
-		datos.cecbNegrita8 = "S"
-	} else {
-		datos.cecbNegrita8 = "N"
-	};
-	
-	datos.cecbTexto8tamano = $("#idEdadT").val();
-	datos.cecbEdadprefijo = $("#idEdadPrefijo").val();
-	datos.cecbEdadsufijo = $("#idEdadSufijo").val();
-	//***************Linea 10 ************************************ 
-	datos.cecbTexto9fila= $("#idTipoMuestraF").val()
-	datos.cecbTexto9columna = $("#idTipoMuestraC").val();
-	datos.cecbTexto9largo = $("#idTipoMuestraL").val();
-	if ($("#checkboxTipoMuestraA").prop("checked")) {
-		datos.cecbActivotexto9 = "S"
-	} else {
-		datos.cecbActivotexto9 = "N"
-	};
-	if ($("#checkboxTipoMuestraN").prop("checked")) {
-		datos.cecbNegrita9 = "S"
-	} else {
-		datos.cecbNegrita9 = "N"
-	};
-	
-	datos.cecbTexto9tamano = $("#idTipoMuestraT").val();
-	datos.cecbTipmueprefijo = $("#idTipoMuestraPrefijo").val();
-	datos.cecbTipmuesufijo = $("#idTipoMuestraSufijo").val();
-
-	//***************Linea 11 ************************************ 
-	datos.cecbTexto10fila = $("#idEnvaseF").val()
-	datos.cecbTexto10columna = $("#idEnvaseC").val();
-	datos.cecbTexto10largo = $("#idEnvaseL").val();
-	if ($("#checkboxEnvaseA").prop("checked")) {
-		datos.cecbActivotexto10 = "S"
-	} else {
-		datos.cecbActivotexto10 = "N"
-	};
-	if ($("#checkboxEnvaseN").prop("checked")) {
-		datos.cecbNegrita10 = "S"
-	} else {
-		datos.cecbNegrita10 = "N"
-	};
-	
-	datos.cecbTexto10tamano = $("#idEnvaseT").val();
-	datos.cecbEnvaprefijo = $("#idEnvasePrefijo").val();
-	datos.cecbEnvasufijo = $("#idEnvaseSufijo").val();
-
-
-	//***************Linea 12 ************************************ 
-	datos.cecbTexto11fila  = $("#idFechaRegistroF").val()
-	datos.cecbTexto11columna = $("#idFechaRegistroC").val();
-	datos.cecbTexto11largo = $("#idFechaRegistroL").val();
-	if ($("#checkboxFechaRegistroA").prop("checked")) {
-		datos.cecbActivotexto11 = "S"
-	} else {
-		datos.cecbActivotexto11 = "N"
-	};
-	if ($("#checkboxFechaRegistroN").prop("checked")) {
-		datos.cecbNegrita11 = "S"
-	} else {
-		datos.cecbNegrita11 = "N"
-	};
-	
-	datos.cecbTexto11tamano = $("#idFechaRegistroT").val();
-	datos.cecbFechaprefijo = $("#idFechaRegistroPrefijo").val();
-	
-	datos.cecbFechasufijo = $("#idFechaRegistroSufijo").val();
-	//***************Linea 13 ************************************ 
-	datos.cecbTexto12fila = $("#idExamenesF").val()
-	datos.cecbTexto12columna = $("#idExamenesC").val();
-	if ($("#checkboxExamenesA").prop("checked")) {
-		datos.cecbActivotexto12 = "S"
-	} else {
-		datos.cecbActivotexto12 = "N"
-	};
-	if ($("#checkboxExamenesN").prop("checked")) {
-		datos.cecbNegrita12 = "S"
-	} else {
-		datos.cecbNegrita12 = "N"
-	};
-	
-
-	
-	return datos;
-}
-
-function limpiarFormulario() {
-	$(".limpiarEtiqueta").val("");
-    $(".form-check-input").prop("checked", false);
-    
-	$("#selectFont>option[value='Sin especificar']").attr("selected", false);
-	$("#selectFont>option[value='Sin especificar']").attr("selected", true);	
-	
-	
-}
-
-
-function bloquearCampos(){
-	$(".limpiarEtiqueta").prop('disabled', true);
-    $(".form-check-input").prop('disabled', true);
-	$("#selectFont").prop('disabled', true);
-	
-}
-
-
-function habilitarCampos(){
-	$(".limpiarEtiqueta").prop('disabled', false);
-    $(".form-check-input").prop('disabled', false);
-	$("#selectFont").prop('disabled', false);
-	
-	
-}
-
-async function getDatoEtiquetaByCodigo(codigo) {
-	let url = gCte.getctx + '/api/configuracionetiquetas/codigo/' + codigo;
-	const result = await $.ajax({
-		type: "get",
-		url: url,
-		success: function(data) {
-			return data;
-		}
-	});
-	return result.dato;
-}
-
-
-async function getDatosEtiquetas() {
-	let url = gCte.getctx + '/api/configuracionetiquetas';
-	const result = await $.ajax({
-		type: "get",
-		url: url,
-		success: function(data) {
-			return data;
-		}
-	});
-	return result.dato;
-}
-
-
-
-
diff --git a/src/main/webapp/resources/js/Dto/CfgServicios.js b/src/main/webapp/resources/js/Dto/CfgServicios.js
index 6c66bdfa..8144d8c0 100755
--- a/src/main/webapp/resources/js/Dto/CfgServicios.js
+++ b/src/main/webapp/resources/js/Dto/CfgServicios.js
@@ -247,6 +247,7 @@ CfgMedicos.prototype.convertirArray = function (dato) {
     });
     this.misMedicos = arrayDato;
 
+    console.log(arrayDato);
 };
 
 function CfgTipoAtencion() {
diff --git a/src/main/webapp/resources/js/EdicionOrdenes.js b/src/main/webapp/resources/js/EdicionOrdenes.js
deleted file mode 100644
index 90ea5090..00000000
--- a/src/main/webapp/resources/js/EdicionOrdenes.js
+++ /dev/null
@@ -1,853 +0,0 @@
-$(document).ready(function () {
-    $(".ocultar").hide();
-    $('#FechaInicio, #FechaFin').datepicker({
-        language: 'es',
-        endDate: "+Infinity",
-        format: 'dd/mm/yyyy',
-    });
-    clear();
-    if (getWithExpiry('rut2') !== null) {
-        var rutPac = getWithExpiry('rut2');
-
-        $("#txtRutP2").val(rutPac);
-        filtrarByRut(rutPac);
-    }
-    if (getWithExpiry('rutM') !== null) {
-        var rutMed = getWithExpiry('rutM');
-        $("#txtRutMedico").val(rutMed);
-        filtrarByRutM(rutMed);
-    }
-});
-$("#nOrden").keyup(function () {
-
-    if ($(this).val().length === 0) {
-        $('.nOrdenLock').prop("disabled", false);
-        $('select').selectpicker('refresh');
-        $('#busquedaPorOrdenInput').val('');
-    } else {
-        $('.nOrdenLock').prop("disabled", true);
-        $('.nOrdenLock').val('');
-        $('select').selectpicker('refresh');
-        $('#busquedaPorOrdenInput').val('1');
-    }
-
-
-});
-
-function clear() {
-    $('.LimpearTexto1').val('');
-    $('#tablaOrdenesTotalesBody').empty();
-}
-$("#FechaInicio").change(function () {
-
-
-    //NOMBRES
-    if ($('#busquedaPorNombresInput').val() === '1') {
-        $('#busquedaPorNombresInput').val('');
-        $('#busquedaPorNombresyFechasInput').val('1');
-    }
-    if ($('#busquedaPorNombresyFechasInput').val() === '1' && $(this).val().length === 0) {
-        $('#busquedaPorNombresInput').val('1');
-        $('#busquedaPorNombresyFechasInput').val('');
-    }
-    //RUT
-    if ($('#busquedaPorRutInput').val() === '1') {
-        $('#busquedaPorRutInput').val('');
-        $('#busquedaPorRutyFechaInput').val('1');
-    }
-    if ($('#busquedaPorRutyFechaInput').val() === '1' && $(this).val().length === 0) {
-        $('#busquedaPorRutInput').val('1');
-        $('#busquedaPorRutyFechaInput').val('');
-
-    }
-
-
-});
-
-$("#Nombres, #Apellidos").keyup(function () {
-    var FechaInicio = $('#FechaInicio').val();
-
-    if ($(this).val().length === 0) {
-        $('.nombreApe').prop("disabled", false);
-        $('.nombreApe').selectpicker('refresh');
-        if (FechaInicio !== '') {
-            $('#busquedaPorNombresyFechasInput').val('');
-        } else {
-            $('#busquedaPorNombresInput').val('');
-        }
-
-    } else {
-        $('.nombreApe').prop("disabled", true);
-        $('.nombreApe').val('');
-        $('.nombreApe').selectpicker('refresh');
-        if (FechaInicio !== '') {
-            $('#busquedaPorNombresInput').val('');
-            $('#busquedaPorNombresyFechasInput').val('1');
-        } else {
-            $('#busquedaPorNombresInput').val('1');
-        }
-
-
-    }
-
-});
-$("#nDocumento").keyup(function () {
-    var FechaInicio = $('#FechaInicio').val();
-    if ($(this).val().length === 0) {
-        $('.buscarxRut').prop("disabled", false);
-        $('.buscarxRut').selectpicker('refresh');
-
-        if (FechaInicio !== '') {
-            $('#busquedaPorRutyFechaInput').val('');
-        } else {
-            $('#busquedaPorRutInput').val('');
-        }
-    } else {
-        $('.buscarxRut').prop("disabled", true);
-        $('.buscarxRut').val('');
-        $('.buscarxRut').selectpicker('refresh');
-
-        if (FechaInicio !== '') {
-            $('#busquedaPorRutInput').val('');
-            $('#busquedaPorRutyFechaInput').val('1');
-        } else {
-            $('#busquedaPorRutInput').val('1');
-        }
-    }
-
-});
-$("#Procedencia").change(function () {
-
-    if ($(this).val().length === '') {
-        $('#busquedaPorProcedenciaFecha').val('');
-        $('.buscarxProce').prop("disabled", false);
-        $('.buscarxProce').selectpicker('refresh');
-
-    } else {
-        $('#busquedaPorProcedenciaFecha').val('1');
-        $('.buscarxProce').prop("disabled", true);
-        $('.buscarxProce').val('');
-        $('.buscarxProce').selectpicker('refresh');
-
-    }
-
-});
-$(".selectBusqueda").change(function () {
-    var procedencia = $('#Procedencia').val();
-    var servicio = $('#Servicio').val();
-    var tipoDocumento = $('#tipoDocumento').val();
-
-    if (procedencia === '' && servicio === '' && tipoDocumento === '') {
-        $('#nOrden').prop("disabled", false);
-
-    } else {
-        $('#nOrden').prop("disabled", true);
-
-    }
-});
-
-//POSIBILIDAD DE CAMBIAR X CLASES
-$("#buscar").click(function () {
-    if ($('#busquedaPorOrdenInput').val() === '1') {
-        busquedaPorOrden();
-        return;
-    }
-    if ($('#busquedaPorNombresInput').val() === '1') {
-        busquedaPorNombres();
-        return;
-    }
-    if ($('#busquedaPorNombresyFechasInput').val() === '1') {
-        busquedaPorNombresyFechas();
-        return;
-    }
-    if ($('#busquedaPorRutInput').val() === '1') {
-        busquedaPorRut();
-        return;
-    }
-    if ($('#busquedaPorRutyFechaInput').val() === '1') {
-        busquedaPorRutyFecha();
-        return;
-    }
-    if ($('#busquedaPorProcedenciaFecha').val() == '1') {
-        busquedaPorProdecenciaFechas();
-        return;
-    }
-    if ($('.porFechas').val() === '') {
-        busquedaPorFechas();
-        return;
-    }
-    alert('nada selecionado');
-});
-//RELLENAR DPS DE SELECCIONAR ORDEN
-function rellenarEdicionPorTabla(a) {
-    var $row = $(a).closest("tr"); // Find the row
-    //Paciente
-    var rut = $row.find(".nDocumento").text(); // Find the text
-    var tipoAtencion = $row.find(".tipoPaciente").text();
-    var PrioAtencion = $row.find(".PrioAtencion").text();
-    filtrarByRut(rut);
-    $('#EdicionOrdenPacientetipoDeAtencion option:contains(' + tipoAtencion + ')').attr('selected', 'selected');
-    $('#EdicionOrdenPacienteselectPrioridadAtencionPac').val(PrioAtencion);
-
-    //Medico
-    var idMedico = $row.find(".idMedico").text();
-    filtrarByIdM(idMedico);
-    //Localizacion 
-    var procendecia = $row.find(".procendecia").text();
-    $('#ProcedenciaComboBoxM option:contains(' + procendecia + ')').attr('selected', 'selected');
-
-    //examenes
-    var nOrden = $row.find(".nOrden").text();
-    alert(nOrden);
-    $('#nOrden2').val(nOrden);
-    examenesPorOrden(nOrden);
-    //idDiagnostico PrioAtencion idConvenio observacion
-    var idConvenio = $row.find(".idConvenio").text();
-    var idDiagnostico = $row.find(".idDiagnostico").text();
-    var observacion = $row.find(".observacion").text();
-    $('#ConvencioComboBoxM').val(idConvenio);
-    $('#DiagnosticoComboBoxM').val(idDiagnostico);
-    $('#txtObservacion').val(observacion);
-    //CamasSalas
-    cambiarCamasSalas();
-    var idServicio = $row.find(".idServicio").text();
-    var idsalasServicio = $row.find(".idsalasServicio").text();
-    var idcamasSalas = $row.find(".idcamasSalas").text();
-
-    $('#ServicioComboBoxM').val(idServicio);
-    SalasServicios(idServicio);
-    setTimeout(function () {
-        
-        $('#SalaComboBoxM').val(idsalasServicio);
-        camasSalas(idsalasServicio);
-        $('#SalaComboBoxM').selectpicker('refresh');
-        $('#CamaComboBoxM').selectpicker('refresh');
-    }, 200);
-    setTimeout(function () {
-        $('#CamaComboBoxM').val(idcamasSalas);
-
-        $('#CamaComboBoxM').selectpicker('refresh');
-    }, 370);
-
-    $('select').selectpicker('refresh');
-
-}
-function busquedaPorOrden() {
-    var nOrden = $('#nOrden').val();
-    if (nOrden === '') {
-        alert('agrege algo');
-        $('#tablaOrdenesTotalesBody').empty();
-        return;
-    }
-    $.ajax({
-        type: "post",
-        data: "busquedaPorOrden=" + nOrden,
-        datatype: "json",
-        success: function (ordenes) {
-
-            var ordenes = JSON.parse(ordenes);
-            if (ordenes === "0") {
-
-            } else {
-                var contador = 1;
-                $('#tablaOrdenesTotalesBody').empty();
-                ordenes.ordenesTotales.forEach(function (orden) {
-                    $("#tablaOrdenesTotalesBody").append("<tr onclick='rellenarEdicionPorTabla(this)'> class='pointer'><th >" + contador + "</th><td>" + orden.fecha + "</td><td class='nOrden'>" + orden.nOrdenn + "</td><td>" + orden.Nombres + "</td><td>" + orden.documento + "</td><td class='nDocumento'>" + orden.nDocumento + "</td><td class='tipoPaciente'>" + orden.tipoPaciente + "</td><td class='procendecia'>" + orden.procendecia + "</td><td class='servicio'>" + orden.servicio + "</td><td style='visibility: hidden;' class='idMedico'>" + orden.idMedico + "</td><td style='visibility: hidden;' class='idsalasServicio'>" + orden.idsalasServicio + "</td><td style='visibility: hidden;' class='idcamasSalas'>" + orden.idcamasSalas + "</td><td style='visibility: hidden;' class='idDiagnostico'>" + orden.idDiagnostico + "</td><td style='visibility: hidden;' class='idConvenio'>" + orden.idConvenio + "</td><td style='visibility: hidden;' class='PrioAtencion'>" + orden.PrioAtencion + "</td><td style='visibility: hidden;' class='observacion'>" + orden.observacion + "</td><td style='visibility: hidden;' class='idServicio'>" + orden.idServicio + "</td>  </tr>");
-                    contador++;
-                });
-
-
-            }
-
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-function busquedaPorNombres() {
-    var Nombres = $('#Nombres').val();
-    var Apellidos = $('#Apellidos').val();
-
-    $.ajax({
-        type: "post",
-        data: "busquedaPorNombres=" + Nombres + "&apellido=" + Apellidos,
-        datatype: "json",
-        success: function (ordenes) {
-
-            var ordenes = JSON.parse(ordenes);
-
-
-            if (ordenes === "0") {
-                alert('agrega algo');
-                $('#tablaOrdenesTotalesBody').empty();
-            } else {
-                var contador = 1;
-
-                $('#tablaOrdenesTotalesBody').empty();
-                ordenes.ordenesTotales.forEach(function (orden) {
-                    $("#tablaOrdenesTotalesBody").append("<tr onclick='rellenarEdicionPorTabla(this)'> class='pointer'><th >" + contador + "</th><td>" + orden.fecha + "</td><td class='nOrden'>" + orden.nOrdenn + "</td><td>" + orden.Nombres + "</td><td>" + orden.documento + "</td><td class='nDocumento'>" + orden.nDocumento + "</td><td class='tipoPaciente'>" + orden.tipoPaciente + "</td><td class='procendecia'>" + orden.procendecia + "</td><td class='servicio'>" + orden.servicio + "</td><td style='visibility: hidden;' class='idMedico'>" + orden.idMedico + "</td><td style='visibility: hidden;' class='idsalasServicio'>" + orden.idsalasServicio + "</td><td style='visibility: hidden;' class='idcamasSalas'>" + orden.idcamasSalas + "</td><td style='visibility: hidden;' class='idDiagnostico'>" + orden.idDiagnostico + "</td><td style='visibility: hidden;' class='idConvenio'>" + orden.idConvenio + "</td><td style='visibility: hidden;' class='PrioAtencion'>" + orden.PrioAtencion + "</td><td style='visibility: hidden;' class='observacion'>" + orden.observacion + "</td><td style='visibility: hidden;' class='idServicio'>" + orden.idServicio + "</td>  </tr>");
-                    contador++;
-                });
-
-
-            }
-
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-function busquedaPorNombresyFechas() {
-    var Nombres = $('#Nombres').val();
-    var Apellidos = $('#Apellidos').val();
-    var FechaInicio = $('#FechaInicio').val();
-    var FechaFin = $('#FechaFin').val();
-    $.ajax({
-        type: "post",
-        data: "busquedaPorNombresyFechas=" + Nombres + "&apellido=" + Apellidos + "&FechaInicio=" + FechaInicio + "&FechaFin=" + FechaFin,
-        datatype: "json",
-        success: function (ordenes) {
-
-            var ordenes = JSON.parse(ordenes);
-
-
-            if (ordenes === "0") {
-                alert('agrega algo');
-                $('#tablaOrdenesTotalesBody').empty();
-            } else {
-                var contador = 1;
-
-                $('#tablaOrdenesTotalesBody').empty();
-                ordenes.ordenesTotales.forEach(function (orden) {
-                    $("#tablaOrdenesTotalesBody").append("<tr onclick='rellenarEdicionPorTabla(this)'> class='pointer'><th >" + contador + "</th><td>" + orden.fecha + "</td><td class='nOrden'>" + orden.nOrdenn + "</td><td>" + orden.Nombres + "</td><td>" + orden.documento + "</td><td class='nDocumento'>" + orden.nDocumento + "</td><td class='tipoPaciente'>" + orden.tipoPaciente + "</td><td class='procendecia'>" + orden.procendecia + "</td><td class='servicio'>" + orden.servicio + "</td><td style='visibility: hidden;' class='idMedico'>" + orden.idMedico + "</td><td style='visibility: hidden;' class='idsalasServicio'>" + orden.idsalasServicio + "</td><td style='visibility: hidden;' class='idcamasSalas'>" + orden.idcamasSalas + "</td><td style='visibility: hidden;' class='idDiagnostico'>" + orden.idDiagnostico + "</td><td style='visibility: hidden;' class='idConvenio'>" + orden.idConvenio + "</td><td style='visibility: hidden;' class='PrioAtencion'>" + orden.PrioAtencion + "</td><td style='visibility: hidden;' class='observacion'>" + orden.observacion + "</td><td style='visibility: hidden;' class='idServicio'>" + orden.idServicio + "</td>  </tr>");
-                    contador++;
-                });
-
-
-            }
-
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-function busquedaPorRut() {
-    var rut = $('#nDocumento').val();
-
-    $.ajax({
-        type: "post",
-        data: "busquedaPorDoc=" + rut,
-        datatype: "json",
-        success: function (ordenes) {
-
-            var ordenes = JSON.parse(ordenes);
-
-
-            if (ordenes === "0") {
-                alert('agrega algo');
-                $('#tablaOrdenesTotalesBody').empty();
-            } else {
-                var contador = 1;
-
-                $('#tablaOrdenesTotalesBody').empty();
-                ordenes.ordenesTotales.forEach(function (orden) {
-                    $("#tablaOrdenesTotalesBody").append("<tr onclick='rellenarEdicionPorTabla(this)'> class='pointer'><th >" + contador + "</th><td>" + orden.fecha + "</td><td class='nOrden'>" + orden.nOrdenn + "</td><td>" + orden.Nombres + "</td><td>" + orden.documento + "</td><td class='nDocumento'>" + orden.nDocumento + "</td><td class='tipoPaciente'>" + orden.tipoPaciente + "</td><td class='procendecia'>" + orden.procendecia + "</td><td class='servicio'>" + orden.servicio + "</td><td style='visibility: hidden;' class='idMedico'>" + orden.idMedico + "</td><td style='visibility: hidden;' class='idsalasServicio'>" + orden.idsalasServicio + "</td><td style='visibility: hidden;' class='idcamasSalas'>" + orden.idcamasSalas + "</td><td style='visibility: hidden;' class='idDiagnostico'>" + orden.idDiagnostico + "</td><td style='visibility: hidden;' class='idConvenio'>" + orden.idConvenio + "</td><td style='visibility: hidden;' class='PrioAtencion'>" + orden.PrioAtencion + "</td><td style='visibility: hidden;' class='observacion'>" + orden.observacion + "</td><td style='visibility: hidden;' class='idServicio'>" + orden.idServicio + "</td>  </tr>");
-                    contador++;
-                });
-
-
-            }
-
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-function busquedaPorRutyFecha() {
-    var rut = $('#nDocumento').val();
-    var FechaInicio = $('#FechaInicio').val();
-    var FechaFin = $('#FechaFin').val();
-
-    $.ajax({
-        type: "post",
-        data: "busquedaPorDocyFechas=" + rut + "&FechaInicio=" + FechaInicio + "&FechaFin=" + FechaFin,
-        datatype: "json",
-        success: function (ordenes) {
-
-            var ordenes = JSON.parse(ordenes);
-
-
-            if (ordenes === "0") {
-                alert('agrega algo');
-                $('#tablaOrdenesTotalesBody').empty();
-            } else {
-                var contador = 1;
-
-                $('#tablaOrdenesTotalesBody').empty();
-                ordenes.ordenesTotales.forEach(function (orden) {
-                    $("#tablaOrdenesTotalesBody").append("<tr onclick='rellenarEdicionPorTabla(this)'> class='pointer'><th >" + contador + "</th><td>" + orden.fecha + "</td><td class='nOrden'>" + orden.nOrdenn + "</td><td>" + orden.Nombres + "</td><td>" + orden.documento + "</td><td class='nDocumento'>" + orden.nDocumento + "</td><td class='tipoPaciente'>" + orden.tipoPaciente + "</td><td class='procendecia'>" + orden.procendecia + "</td><td class='servicio'>" + orden.servicio + "</td><td style='visibility: hidden;' class='idMedico'>" + orden.idMedico + "</td><td style='visibility: hidden;' class='idsalasServicio'>" + orden.idsalasServicio + "</td><td style='visibility: hidden;' class='idcamasSalas'>" + orden.idcamasSalas + "</td><td style='visibility: hidden;' class='idDiagnostico'>" + orden.idDiagnostico + "</td><td style='visibility: hidden;' class='idConvenio'>" + orden.idConvenio + "</td><td style='visibility: hidden;' class='PrioAtencion'>" + orden.PrioAtencion + "</td><td style='visibility: hidden;' class='observacion'>" + orden.observacion + "</td><td style='visibility: hidden;' class='idServicio'>" + orden.idServicio + "</td>  </tr>");
-                    contador++;
-                });
-
-
-            }
-
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-function busquedaPorProdecenciaFechas() {
-
-    var Procedencia = $('#Procedencia').val();
-    var FechaInicio = $('#FechaInicio').val();
-    var FechaFin = $('#FechaFin').val();
-    if (FechaInicio === '') {
-        alert('Seleccione fecha');
-        return;
-    }
-    $.ajax({
-        type: "post",
-        data: "busquedaPorProcedenciaFechas=" + Procedencia + "&FechaInicio=" + FechaInicio + "&FechaFin=" + FechaFin,
-        datatype: "json",
-        success: function (ordenes) {
-
-            var ordenes = JSON.parse(ordenes);
-
-
-            if (ordenes === "0") {
-                alert('agrega algo');
-                $('#tablaOrdenesTotalesBody').empty();
-            } else {
-                var contador = 1;
-
-                $('#tablaOrdenesTotalesBody').empty();
-                ordenes.ordenesTotales.forEach(function (orden) {
-                    $("#tablaOrdenesTotalesBody").append("<tr onclick='rellenarEdicionPorTabla(this)'> class='pointer'><th >" + contador + "</th><td>" + orden.fecha + "</td><td class='nOrden'>" + orden.nOrdenn + "</td><td>" + orden.Nombres + "</td><td>" + orden.documento + "</td><td class='nDocumento'>" + orden.nDocumento + "</td><td class='tipoPaciente'>" + orden.tipoPaciente + "</td><td class='procendecia'>" + orden.procendecia + "</td><td class='servicio'>" + orden.servicio + "</td><td style='visibility: hidden;' class='idMedico'>" + orden.idMedico + "</td><td style='visibility: hidden;' class='idsalasServicio'>" + orden.idsalasServicio + "</td><td style='visibility: hidden;' class='idcamasSalas'>" + orden.idcamasSalas + "</td><td style='visibility: hidden;' class='idDiagnostico'>" + orden.idDiagnostico + "</td><td style='visibility: hidden;' class='idConvenio'>" + orden.idConvenio + "</td><td style='visibility: hidden;' class='PrioAtencion'>" + orden.PrioAtencion + "</td><td style='visibility: hidden;' class='observacion'>" + orden.observacion + "</td><td style='visibility: hidden;' class='idServicio'>" + orden.idServicio + "</td>  </tr>");
-                    contador++;
-                });
-
-
-            }
-
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-function busquedaPorFechas() {
-
-    var FechaInicio = $('#FechaInicio').val();
-    var FechaFin = $('#FechaFin').val();
-    if (FechaInicio === '') {
-        alert('Seleccione fecha');
-        return;
-    }
-    $.ajax({
-        type: "post",
-        data: "busquedaPorFechas=" + FechaInicio + "&FechaFin=" + FechaFin,
-        datatype: "json",
-        success: function (ordenes) {
-
-            var ordenes = JSON.parse(ordenes);
-
-
-            if (ordenes === "0") {
-                alert('agrega algo');
-                $('#tablaOrdenesTotalesBody').empty();
-            } else {
-                var contador = 1;
-
-                $('#tablaOrdenesTotalesBody').empty();
-                ordenes.ordenesTotales.forEach(function (orden) {
-                    $("#tablaOrdenesTotalesBody").append("<tr onclick='rellenarEdicionPorTabla(this)'> class='pointer'><th >" + contador + "</th><td>" + orden.fecha + "</td><td class='nOrden'>" + orden.nOrdenn + "</td><td>" + orden.Nombres + "</td><td>" + orden.documento + "</td><td class='nDocumento'>" + orden.nDocumento + "</td><td class='tipoPaciente'>" + orden.tipoPaciente + "</td><td class='procendecia'>" + orden.procendecia + "</td><td class='servicio'>" + orden.servicio + "</td><td style='visibility: hidden;' class='idMedico'>" + orden.idMedico + "</td><td style='visibility: hidden;' class='idsalasServicio'>" + orden.idsalasServicio + "</td><td style='visibility: hidden;' class='idcamasSalas'>" + orden.idcamasSalas + "</td><td style='visibility: hidden;' class='idDiagnostico'>" + orden.idDiagnostico + "</td><td style='visibility: hidden;' class='idConvenio'>" + orden.idConvenio + "</td><td style='visibility: hidden;' class='PrioAtencion'>" + orden.PrioAtencion + "</td><td style='visibility: hidden;' class='observacion'>" + orden.observacion + "</td><td style='visibility: hidden;' class='idServicio'>" + orden.idServicio + "</td>  </tr>");
-                    contador++;
-                });
-
-
-            }
-
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-
-$("#ServicioComboBoxM").change(function () {
-    SalasServicios(this.value);
-});
-$("#SalaComboBoxM").change(function () {
-    camasSalas(this.value);
-});
-
-function SalasServicios(idServicios) {
-    $.ajax({
-        type: "post",
-        data: "salasServicios=" + idServicios,
-        datatype: "json",
-        url: "Orden",
-        success: function (data) {
-            var data = JSON.parse(data);
-            $("#SalaComboBoxM").empty();
-            if (data == "0") {
-                return;
-            }
-            data.salasS.forEach(function (salas) {
-                $("#SalaComboBoxM").append("<option value='" + salas.idSalasS + "' >" + salas.detalleSalasS + "</option>");
-            });
-            $("#SalaComboBoxM").prop("disabled", false);
-            $('#SalaComboBoxM').selectpicker('refresh');
-
-        },
-        error: function (msg) {
-            console.log(msg);
-            $("#SalaComboBoxM").empty();
-        }
-    });
-}
-function camasSalas(idSalasServicios) {
-    $.ajax({
-        type: "post",
-        data: "CamasSalas=" + idSalasServicios,
-        datatype: "json",
-        url: "Orden",
-        success: function (data) {
-            var data = JSON.parse(data);
-            $("#CamaComboBoxM").empty();
-            if (data == "0") {
-                return;
-            }
-            data.camasSalas.forEach(function (camas) {
-                $("#CamaComboBoxM").append("<option value='" + camas.idCamasS + "' >" + camas.detalleCamasS + "</option>");
-            });
-            $("#CamaComboBoxM").prop("disabled", false);
-            $('#CamaComboBoxM').selectpicker('refresh');
-
-        },
-        error: function (msg) {
-            console.log(msg);
-            $("#CamaComboBoxM").empty();
-        }
-    });
-}
-$("#EdicionOrdenPacientetipoDeAtencion").change(function () {
-    cambiarCamasSalas();
-
-});
-function cambiarCamasSalas() {
-    if (this.value === "1") {
-        $(".SSM").prop("disabled", true);
-        $(".CCB").prop("disabled", false);
-        $('.selectpicker').selectpicker('refresh');
-
-    } else {
-        $(".SSM").prop("disabled", false);//
-        $(".CCB").prop("disabled", true);
-        $('.selectpicker').selectpicker('refresh');
-    }
-}
-$('#EdicionOrdenPacientetxtRut').keyup(function (e) {
-    if (e.keyCode == 13)
-    {
-        $(this).trigger("enterKey");
-    }
-});
-$('#EdicionOrdenPacientetxtRut').bind("enterKey", function (e) {
-    filtrarByRut($("#EdicionOrdenPacientetxtRut").val());
-});
-function filtrarByRut(rutPaciente) {//rut
-    rutPaciente.replace(".", "");
-    //$("#tbodyFiltro").empty();
-    $.ajax({
-        type: "post",
-        data: "rutFiltro=" + rutPaciente,
-        datatype: "json",
-        url: "Orden",
-        success: function (pacientes) {
-            var infoPaciente = JSON.parse(pacientes);
-            var paciente = infoPaciente.pacientes[0]; //PACIENTE QUE SE RETORNO DESDE JAVA
-            //$("#nDocumento").text('NÂ° DOCUMENTO');
-            console.table(paciente);
-            if (paciente.Rut === "0") {
-                document.getElementById("AgregarPac").click();
-
-            } else {
-                //formato fecha
-                var dia = paciente.FechaNacimiento.substring(0, 2);
-                var mes = paciente.FechaNacimiento.substring(3, 5);
-                var anio = paciente.FechaNacimiento.substring(6, 11);
-                var fecha = dia + "-" + mes + "-" + anio;
-
-                fecha = getAge(fecha, 3);
-
-                fecha = fecha.split("-");
-
-                //alert(fecha[0]);
-                //RELLENAR FORMULARIO .substr(0, addy.indexOf(',')
-                $('#idPaciente').val(paciente.idPaciente);
-
-                $("#EdicionOrdenPacienteDoc").val(paciente.TipoDocumento);
-                $("#EdicionOrdenPacientetxtRut").val(paciente.Rut);
-                $("#EdicionOrdenPacientetxtNombres").val(paciente.Nombres + ' ' + paciente.PrimerApellido + " " + paciente.SegundoApellido);
-
-                $("#EdicionOrdenPacientetxtEdad").val(fecha[0] + " aÃ±os, " + fecha[1] + " meses, " + fecha[2] + " dÃ­as")
-//                $("#txtAiosP").val(fecha[0]);
-//                $("#txtMesesP").val(fecha[1]);
-//                $("#txtDias").val(fecha[2]);
-                //Observacion
-                $("#txtObservacionP").val(paciente.Observacion);
-                $("#EdicionOrdenPacientesexo").val(paciente.Sexo);
-                $("#EdicionOrdenPacientetxtEmailP").val(paciente.Email);
-
-
-                $('#EdicionOrdenPacientechbxRestutToMail').prop('checked', false);
-                if (paciente.Email !== "0") {
-                    $('#EdicionOrdenPacientechbxRestutToMail').prop('checked', true);
-                }
-
-                $('#EdicionOrdenPacientesexo').selectpicker('refresh');
-                /*
-                 
-                 $('select').formSelect();
-                 $('html, body').animate({
-                 scrollTop: $("div#divForm").offset().top
-                 }, 700);*/
-                //PARTE JAN
-
-            }
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-function filtrarByRutM(rutPaciente, validadorRutSinFiltro) {
-    rutPaciente.replace(".", "");
-
-    $.ajax({
-        type: "post",
-        data: "rutFiltroMedico=" + rutPaciente,
-        url: 'RegistroMedico',
-        datatype: "json",
-        success: function (Medico) {
-
-            var Medico = JSON.parse(Medico);
-            var Medico = Medico.pacientes[0]; //PACIENTE QUE SE RETORNO DESDE JAVA
-
-            console.table(Medico);
-            if (Medico.Rut === "0") {
-
-
-            } else {
-                //RELLENAR FORMULARIO
-                $("#idMedico").val(Medico.idMedico);
-                $("#EdicionOrdentxtRutMedico").val(Medico.Rut);
-                $("#EdicionOrdentxtNombreM").val(Medico.Nombres + " " + Medico.PrimerApellido + " " + Medico.SegundoApellido);
-                $('#EdicionOrdenmedicoComboBox').val(Medico.idMedico);
-                $('select').selectpicker('refresh');
-
-                //VARIABLES 
-                /*
-                 setLocal({
-                 rut: Medico.Rut,
-                 nombre: Medico.Nombres,
-                 apellido: Medico.PrimerApellido,
-                 apellido2: Medico.SegundoApellido,
-                 id: Medico.idMedico
-                 });*/
-            }
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-
-$("#EdicionOrdenmedicoComboBox").change(function () {
-
-    filtrarByIdM($(this).val());
-
-});
-function filtrarByIdM(id) {
-    $.ajax({
-        type: "post",
-        data: "idFiltroMedico=" + id,
-        url: 'RegistroMedico',
-        datatype: "json",
-        success: function (Medico) {
-            var Medico = JSON.parse(Medico);
-            var Medico = Medico.pacientes[0]; //PACIENTE QUE SE RETORNO DESDE JAVA
-
-
-            if (Medico.Rut === "0") {
-
-
-            } else {
-                //RELLENAR FORMULARIO
-                $("#idMedico").val(Medico.idMedico);
-                $("#EdicionOrdentxtRutMedico").val(Medico.Rut);
-                $("#EdicionOrdentxtNombreM").val(Medico.Nombres + " " + Medico.PrimerApellido + " " + Medico.SegundoApellido);
-                $('#EdicionOrdenmedicoComboBox').val(Medico.idMedico);
-                $('select').selectpicker('refresh');
-
-                //VARIABLES 
-                /*
-                 setLocal({
-                 rut: Medico.Rut,
-                 nombre: Medico.Nombres,
-                 apellido: Medico.PrimerApellido,
-                 apellido2: Medico.SegundoApellido,
-                 id: Medico.idMedico
-                 });*/
-            }
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-function examenesPorOrden(nOrden) {
-
-    $.ajax({
-        type: "post",
-        data: "busquedaPorExamen=" + nOrden,
-        datatype: "json",
-        success: function (Medico) {
-            var Medico = JSON.parse(Medico);
-            if (Medico.Rut === "0") {
-
-            } else {
-                //RELLENAR FORMULARIO
-                // kt_dual_listbox_2 
-                //
-                var exam = [];
-                Medico.Examenes.forEach(function (Exameness) {
-                    exam.push(Exameness.idExamen);
-                });
-                $(".dual-listbox__available li").each(function (index) {
-
-                    var id = $(this).attr("data-id");
-                    if (exam.includes(id)) {
-                        $(this).addClass('dual-listbox__item--selected');
-                        $('.dual-listbox__buttons').children().first().click();
-
-
-                    }
-
-                });
-
-                //VARIABLES 
-                /*
-                 setLocal({
-                 rut: Medico.Rut,
-                 nombre: Medico.Nombres,
-                 apellido: Medico.PrimerApellido,
-                 apellido2: Medico.SegundoApellido,
-                 id: Medico.idMedico
-                 });*/
-            }
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-
-var KTDualListbox = function () {
-    // Private functions
-    var initDualListbox = function () {
-        // Dual Listbox
-        var listBoxes = $(".dual-listbox");
-        listBoxes.each(function () {
-            var $this = $(this);
-            // get titles
-            var availableTitle = ($this.attr("data-available-title") != null) ? $this.attr("data-available-title") : "Available options";
-            var selectedTitle = ($this.attr("data-selected-title") != null) ? $this.attr("data-selected-title") : "Selected options";
-
-
-            // get button labels
-            var addLabel = ($this.attr("data-add") != null) ? $this.attr("data-add") : "Add";
-            var removeLabel = ($this.attr("data-remove") != null) ? $this.attr("data-remove") : "Remove";
-            var addAllLabel = ($this.attr("data-add-all") != null) ? $this.attr("data-add-all") : "Add All";
-            var removeAllLabel = ($this.attr("data-remove-all") != null) ? $this.attr("data-remove-all") : "Remove All";
-
-
-            // get options
-            var options = [];
-            $this.children("option").each(function () {
-
-                var value = $(this).val();
-                var label = $(this).text();
-
-            });
-
-            // get search option
-            var search = ($this.attr("data-search") != null) ? $this.attr("data-search") : "";
-
-            // init dual listbox
-            var dualListBox = new DualListbox($this.get(0), {
-
-                addEvent: function (value) {
-                    alert(value);
-
-                },
-
-                removeEvent: function (value) {
-                    alert(value);
-                },
-                availableTitle: availableTitle,
-                selectedTitle: selectedTitle,
-                addButtonText: addLabel,
-                removeButtonText: removeLabel,
-                addAllButtonText: addAllLabel,
-                removeAllButtonText: removeAllLabel,
-                options: options,
-            });
-
-            if (search == "false") {
-                dualListBox.search.classList.add("dual-listbox__search--hidden");
-            }
-        });
-    };
-
-    return {
-        // public functions
-
-        init: function () {
-            initDualListbox();
-        },
-    };
-
-}();
-
-jQuery(document).ready(function () {
-    KTDualListbox.init();
-    $(".dual-listbox__search").attr("placeholder", "Buscar");
-});
-
-//LOCAL STORE PART
-$('#BuscarPac').click(function () {
-    limpiarLocalStorage();
-    setWithExpiry('validadorBuscarPac', 'reasignacionOrden2', 100000);
-
-});
-$('#BuscarMed').click(function () {
-    limpiarLocalStorage();
-    setWithExpiry('validadorBuscarMed', '1', 100000);
-});//
-$("#guardar").click(function () {
-    $(".dual-listbox__selected li").each(function (index) {
-
-        console.log(index + ": " + $(this).text());
-        console.log(index + ": " + $(this).attr("data-id"));
-
-        $("#txtExamenesR").append('<li>' + '<input type="hidden" value="' + $(this).attr("data-id") + '" name="ExamenesResumenes">' + $(this).text() + '</li>');
-    });
-});
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/Orden.functions.js b/src/main/webapp/resources/js/Orden.functions.js
new file mode 100644
index 00000000..fa2a5602
--- /dev/null
+++ b/src/main/webapp/resources/js/Orden.functions.js
@@ -0,0 +1,655 @@
+const g_ambulatorio = gCte.TipoAtencionAmbulatorio;
+const g_jqIdSalas = "#SalaComboBoxM";
+const g_jqIdCamas = "#CamaComboBoxM";
+const g_jqIdServicios = "#ServicioComboBoxM";
+const g_jqIdTipoAtencion = "#tipoDeAtencion"
+const g_currentList = "Paneles";
+const g_jqIdProcedencias = "#ProcedenciaComboBoxM";
+
+function disable(jqId) {
+  $(jqId).prop("disabled", true);
+  $('.selectpicker').selectpicker('refresh');
+}
+
+function enable(jqId) {
+  $(jqId).prop("disabled", false);
+  $('.selectpicker').selectpicker('refresh');
+}
+
+function validarExamenesxDia(idExamen) {
+  var idPac = $("#idPaciente").val();
+  $.ajax({
+    type: "post",
+    data: "masDeUnExamenEnTiempo=" + idExamen + "&idPac=" + idPac,
+    datatype: "json",
+    success: function(data) {
+      var data = JSON.parse(data);
+      console.log(data);
+
+    },
+    error: function(msg) {
+      console.log(msg);
+    }
+  });
+}
+
+function examenTest(idExamen) {
+  revisarTestRepetidos(idExamen);
+  $.ajax({
+    type: "post",
+    data: "examenesTest=" + idExamen,
+    datatype: "json",
+    success: function(data) {
+      var data = JSON.parse(data);
+      ;
+      data.test.forEach(function(eTest) {
+        console.log(eTest.idTest);
+        $("#examenesTest").append("<li value='" + eTest.idTest + "' class='" + idExamen + "'>" + idExamen + "</li>");
+      });
+
+    },
+    error: function(msg) {
+      console.log(msg);
+    }
+  });
+}
+
+function revisarTestRepetidos(idTest) {
+  $('#examenesTest li').each(function() {
+    examenesTest = $(this).val();
+    if (idTest == examenesTest) {
+      console.log('TEST REPETIDO ' + examenesTest);
+    }
+  });
+}
+
+function masDeUnaOrden(idPac) {
+  $.ajax({
+    type: "post",
+    data: "masDeUnaOrden=" + idPac,
+    datatype: "json",
+    success: function(msj) {
+      var msjParse = JSON.parse(msj);
+      //console.log(msjParse);
+      if (msjParse) {
+        $.notify('<strong> Paciente ya tiene una orden registrada para hoy</strong>', { allow_dismiss: false });
+
+      }
+    },
+    error: function(msg) {
+      console.log(msg);
+    }
+  });
+
+}
+
+
+function SalasServicios(idServicios) {
+  $("#SalaComboBoxM").empty();
+  $('#SalaComboBoxM').selectpicker('refresh');
+  console.log(idServicios);
+  $.ajax({
+    type: "post",
+    data: "salasServicios=" + idServicios,
+    datatype: "json",
+    success: function(data) {
+      var data = JSON.parse(data);
+      console.log(data);
+      if (data === 0) {
+        $("#SalaComboBoxM").empty();
+        $("#CamaComboBoxM").empty();
+        $('#SalaComboBoxM').selectpicker('refresh');
+        $('#CamaComboBoxM').selectpicker('refresh');
+      }
+      if (data == "0") {
+        return;
+      }
+      $("#SalaComboBoxM").append("<option value='N' >Seleccionar</option>");
+      data.salasS.forEach(function(salas) {
+        $("#SalaComboBoxM").append("<option value='" + salas.idSalasS + "' >" + salas.detalleSalasS + "</option>");
+      });
+      $("#SalaComboBoxM").prop("disabled", false);
+      $('#SalaComboBoxM').selectpicker('refresh');
+      camasSalas(data.salasS[0].idSalasS);
+    },
+    error: function(msg) {
+      console.log(msg);
+      $("#SalaComboBoxM").empty();
+    }
+  });
+}
+function camasSalas(idSalasServicios) {
+  $("#CamaComboBoxM").empty();
+  $('#CamaComboBoxM').selectpicker('refresh');
+  console.log('camasSalas');
+  $.ajax({
+    type: "post",
+    data: "CamasSalas=" + idSalasServicios,
+    datatype: "json",
+    success: function(data) {
+      var data = JSON.parse(data);
+      $("#CamaComboBoxM").empty();
+      if (data == "0") {
+        return;
+      }
+      $("#CamaComboBoxM").append("<option value='N' >Seleccionar</option>");
+
+      data.camasSalas.forEach(function(camas) {
+        $("#CamaComboBoxM").append("<option value='" + camas.idCamasS + "' >" + camas.detalleCamasS + "</option>");
+      });
+      $("#CamaComboBoxM").prop("disabled", false);
+      $('#CamaComboBoxM').selectpicker('refresh');
+
+    },
+    error: function(msg) {
+      console.log(msg);
+      $("#CamaComboBoxM").empty();
+    }
+  });
+}
+
+function limpiarMedic() {
+  $(".cleanMedic").val('');
+}
+
+function prioridadAtencionxEdad(edad) {
+
+  if (edad < 16) {
+    $("#selectPrioridadAtencionPac").val("1");
+  }
+  if (edad > 65) {
+    $("#selectPrioridadAtencionPac").val("2");
+  }
+  $('.selectpicker').selectpicker('refresh');
+}
+
+function prioridadAtencionxDiagnostico(diag) {
+
+  if (diag === "Gestante") {
+    $("#selectPrioridadAtencionPac").val("3");
+  }
+  $('.selectpicker').selectpicker('refresh');
+}
+
+function filtrarByRutM(rutPaciente) {
+  rutPaciente.replace(".", "");
+  $("#tbodyFiltro").empty();
+  $.ajax({
+    type: "post",
+    data: "rutFiltroMedico=" + rutPaciente,
+    url: 'RegistroMedico',
+    datatype: "json",
+    success: function(Medico) {
+
+      var Medico = JSON.parse(Medico);
+      var Medico = Medico.pacientes[0]; //PACIENTE QUE SE RETORNO DESDE JAVA
+
+      console.table(Medico);
+      if (Medico.Rut === "0") {
+
+
+      } else {
+        //RELLENAR FORMULARIO
+
+        $("#idMedico").val(Medico.idMedico);
+        $("#txtNombreM").val(Medico.Nombres);
+        $("#txtPrimerApellidoM").val(Medico.PrimerApellido);
+        $("#txtSegundoApellidoM").val(Medico.SegundoApellido);
+        $('#medicoComboBox').val(Medico.idMedico);
+        $('.selectpicker').selectpicker('refresh');
+
+      }
+    },
+    error: function(msg) {
+      console.log(msg);
+    }
+  });
+}
+
+function filtrarByIdM(id) {
+  $("#tbodyFiltro").empty();
+  $.ajax({
+    type: "post",
+    data: "idFiltroMedico=" + id,
+    url: 'RegistroMedico',
+    datatype: "json",
+    success: function(Medico) {
+      console.table(Medico);
+      var Medico = JSON.parse(Medico);
+      var Medico = Medico.pacientes[0]; //PACIENTE QUE SE RETORNO DESDE JAVA
+
+
+      if (Medico.Rut === "0") {
+      } else {
+        //RELLENAR FORMULARIO
+        $("#idMedico").val(Medico.idMedico);
+        $("#txtRutMedico").val(Medico.Rut);
+        $("#txtNombreM").val(Medico.Nombres);
+        let apellidos = Medico.PrimerApellido + " " + (Medico.SegundoApellido !== undefined ? Medico.SegundoApellido : "");
+        $("#txtPrimerApellidoM").val(apellidos);
+      }
+    },
+    error: function(msg) {
+      console.log(msg);
+    }
+  });
+}
+
+function filtrarByRut(rutPaciente) {//rut
+  rutPaciente.replace(".", "");
+  $("#tbodyFiltro").empty();
+  $.ajax({
+    type: "post",
+    data: "rutFiltro=" + rutPaciente,
+    datatype: "json",
+    success: function(pacientes) {
+      try {
+        var lstPacientes = JSON.parse(pacientes);
+        var paciente = lstPacientes.pacientes[0];
+        console.log(paciente);
+        if (paciente.Rut === "0") {
+          handlerMessageOk('Se crearÃ¡ paciente.');
+
+          document.getElementById("AgregarPac").click();
+        } else {
+          //formato fecha
+          let dia = paciente.FechaNacimiento.substring(0, 2);
+          let mes = paciente.FechaNacimiento.substring(3, 5);
+          let anio = paciente.FechaNacimiento.substring(6, 11);
+          let fecha = dia + "-" + mes + "-" + anio;
+          fecha = getAge(fecha, 3);
+          fecha = fecha.split("-");
+          if (paciente.Exitus === 'S') {
+            handlerMessageError('Paciente fallecido.');
+            return;
+          }
+          $('#idPaciente').val(paciente.idPaciente);
+          $('#datosPaciente').val(paciente.idPaciente);
+          $("#selectTipoDocumento").val(paciente.TipoDocumento);
+          $("#txtNombreP").val(paciente.Nombres);
+          $("#txtPrimerApellidoP").val(paciente.PrimerApellido + " " + (paciente.SegundoApellido === undefined ? "" : paciente.SegundoApellido));
+          $("#txtEdad").val(fecha[0] + " aÃ±os, " + fecha[1] + " meses, " + fecha[2] + " dÃ­as")
+          $("#txtObservacionP").val(paciente.Observacion);
+          $("#sexoPacienteOrden").val(paciente.Sexo);
+          $("#txtEmailP").val(paciente.Email);
+          $("#txtObservacionP").val(paciente.Observacion);
+          console.log(paciente.Patologias)
+          let cont = 0;
+          if (paciente.Patologias === undefined || paciente.Patologias === null) {
+            $("#tableDiagnosticoPaciente").append("<tr class=''><th class='row mx-auto'>Paciente no tiene patologias</th></tr>");
+          } else {
+            let npac = paciente.Patologias.length;
+            for (i = 0; i < npac; i++) {
+              cont++;
+              let observacion = "";
+              if (paciente.Patologias[i].Observacion !== undefined) {
+                observacion = paciente.Patologias[i].Observacion;
+              }
+              $("#tableDiagnosticoPaciente").append("<tr class=''><th class='row mx-auto'>" + cont + "</th><td'" + paciente.Patologias[i].Id + "'></td><td>" + paciente.Patologias[i].Patologia + "</td> <td>" + observacion + "</td></tr>");
+            }
+          }
+          $('#chbxRestutToMail').prop('checked', false);
+
+          if (paciente.Email !== undefined && paciente.Email !== null && paciente.Email.trim() !== "") {
+            $('#chbxRestutToMail').prop('checked', true);
+          }
+          else {
+            $("#chbxRestutToMail").prop("disabled", true);
+          }
+          prioridadAtencionxEdad(fecha[0]);
+        }
+      }
+      catch (e) {
+        handlerMessageError('No se encontrÃ³ al paciente.' + e.message);
+
+      }
+    },
+    error: function(msg) {
+      handlerMessageError('No se encontrÃ³ al paciente.');
+    }
+  });
+}
+
+
+
+
+function filtrarByPasaporte(pasaportePaciente) {//rut
+  rutPaciente.replace(".", "");
+  $("#tbodyFiltro").empty();
+  $.ajax({
+    type: "post",
+    data: "nroDocumento=" + pasaportePaciente,
+    datatype: "json",
+    success: function(pacientes) {
+      try {
+        var lstPacientes = JSON.parse(pacientes);
+        var paciente = lstPacientes.pacientes[0];
+        console.log(paciente);
+        if (paciente.Rut === "0") {
+          document.getElementById("AgregarPac").click();
+        } else {
+          //formato fecha
+          let dia = paciente.FechaNacimiento.substring(0, 2);
+          let mes = paciente.FechaNacimiento.substring(3, 5);
+          let anio = paciente.FechaNacimiento.substring(6, 11);
+          let fecha = dia + "-" + mes + "-" + anio;
+          fecha = getAge(fecha, 3);
+          fecha = fecha.split("-");
+          $('#idPaciente').val(paciente.idPaciente);
+          $("#selectTipoDocumento").val(paciente.TipoDocumento);
+          $("#txtNombreP").val(paciente.Nombres);
+          $("#txtPrimerApellidoP").val(paciente.PrimerApellido + " " + (paciente.SegundoApellido === undefined ? "" : paciente.SegundoApellido));
+          $("#txtEdad").val(fecha[0] + " aÃ±os, " + fecha[1] + " meses, " + fecha[2] + " dÃ­as")
+          $("#txtObservacionP").val(paciente.Observacion);
+          $("#sexoPacienteOrden").val(paciente.Sexo);
+          $("#txtEmailP").val(paciente.Email);
+          $("#txtObservacionP").val(paciente.Observacion);
+          console.log(paciente.Patologias)
+          let cont = 0;
+          if (paciente.Patologias === undefined || paciente.Patologias === null) {
+            $("#tableDiagnosticoPaciente").append("<tr class=''><th class='row mx-auto'>Paciente no tiene patologias</th></tr>");
+          } else {
+            let npac = paciente.Patologias.length;
+            for (i = 0; i < npac; i++) {
+              cont++;
+              let observacion = "";
+              if (paciente.Patologias[i].Observacion !== undefined) {
+                observacion = paciente.Patologias[i].Observacion;
+              }
+              $("#tableDiagnosticoPaciente").append("<tr class=''><th class='row mx-auto'>" + cont + "</th><td'" + paciente.Patologias[i].Id + "'></td><td>" + paciente.Patologias[i].Patologia + "</td> <td>" + observacion + "</td></tr>");
+            }
+          }
+          $('#chbxRestutToMail').prop('checked', false);
+
+          if (paciente.Email !== undefined && paciente.Email !== null && paciente.Email.trim() !== "") {
+            $('#chbxRestutToMail').prop('checked', true);
+          }
+          else {
+            $("#chbxRestutToMail").prop("disabled", true);
+          }
+          prioridadAtencionxEdad(fecha[0]);
+        }
+      }
+      catch (e) {
+        handlerMessageError('No se encontrÃ³ al paciente.' + e.message);
+
+      }
+    },
+    error: function(msg) {
+      handlerMessageError('No se encontrÃ³ al paciente.');
+    }
+  });
+}
+
+function circuloHover(jqId) {
+
+  $(jqId).removeClass("text-primary");
+  $(jqId).addClass("text-white");
+
+}
+
+function limpiarTabPaciente() {
+
+  $(".cleanPaciente").val('');
+  $("#tableBodyDiagnosticoPaciente").empty();
+
+}
+
+
+function reglaExclusionLocalizacion(idTipoAtencion) {
+
+  switch (idTipoAtencion) {
+    case g_ambulatorio:
+      disable(g_jqIdSalas);
+      disable(g_jqIdCamas);
+      disable(g_jqIdServicios);
+      enable(g_jqIdProcedencias);
+      break;
+
+    case "-1":
+      disable(g_jqIdSalas);
+      disable(g_jqIdCamas);
+      disable(g_jqIdServicios);
+      disable(g_jqIdProcedencias);
+      break;
+
+    default:
+      enable(g_jqIdSalas);
+      enable(g_jqIdCamas);
+      enable(g_jqIdServicios);
+      disable(g_jqIdProcedencias);
+      break;
+  }
+  $('.selectpicker').selectpicker('refresh');
+}
+
+function reglaTipoAtencion() {
+
+  let idTipoAtencion = $(g_jqIdTipoAtencion).val();
+  reglaExclusionLocalizacion(idTipoAtencion);
+}
+
+
+function changeOptions(panelSvc) {
+
+  let examenSelect = $("#panelesSelect");
+  examenSelect.empty();
+  let paneles = panelSvc.panels;
+  let n = paneles.length;
+  console.log('Numero de paneles ' + n);
+
+  for (let i = 0; i < n; i++) {
+    const option = new Option(paneles[i].panelName, i);
+    examenSelect[0].append(option);
+
+  }
+  demo = new DualListboxEnv('.selectDemo', { "paneles": paneles });
+  $("#switchList").click(function() { demo.toggle() });
+
+}
+
+
+var lstExamenesDisponibles;
+var lstPanelesDisponibles;
+var lstExamenesSeleccionados;
+
+function elementoListaExamen() {
+
+  this.ceIdexamen;
+  this.ceCodigoexamen;
+  this.ceAbreviado;
+  this.ceDescripcion
+
+}
+
+
+function filtrarByIdPaciente(idPaciente) {//rut
+  $("#tbodyFiltro").empty();
+  $.ajax({
+    type: "post",
+    url: gCte.getctx + '/api/paciente/' + idPaciente,
+    success: function(rpta) {
+      try {
+        console.table(rpta.dato);//
+        let paciente = rpta.dato.dp;
+        //        let contacto = rpta.dato.dc;
+        if (paciente.Rut === "0") {
+          document.getElementById("AgregarPac").click();
+        } else {
+          $('#datosPacientes').val(paciente.dpIdpaciente);
+          $('#idPaciente').val(paciente.dpIdpaciente);
+          $('#txtRutP').val(paciente.dpRun);
+          $('#txtPasaporte').val(paciente.dpNrodocumento);
+          $("#selectTipoDocumento").val(paciente.ldvTiposdocumentos);
+
+          let tDoc = 'PASAPORTE';
+
+          switch (paciente.ldvTiposdocumentos.toString()) {
+            case gCte.TipoDocRun:
+              tDoc = 'RUN';
+              $('#divTxtRutFiltro').show();
+              $('#divTxtPasaporteFiltro').hide();
+              break;
+            case gCte.TipoDocPasaporte:
+              $('#divTxtRutFiltro').hide();
+              $('#divTxtPasaporteFiltro').show();
+              break;
+            case gCte.TipoDocRecienNacido:
+              tDoc = 'Recien nacido';
+              $('#divTxtRutFiltro').hide();
+              $('#divTxtPasaporteFiltro').hide();
+              break;
+            case gCte.TipoDocSinIdentificacion:
+              tDoc = 'Sin identificaciÃ³n';
+              $('#divTxtRutFiltro').hide();
+              $('#divTxtPasaporteFiltro').hide();
+              break;
+            default:
+              break;
+          }
+
+          $("#tipoDocLabel").text(tDoc);
+          $("#txtNombreP").val(paciente.dpNombres);
+          $("#txtPrimerApellidoP").val(paciente.dpPrimerapellido + " " + (paciente.dpSegundoapellido === undefined ? "" : paciente.dpSegundoapellido));
+          $("#txtObservacionP").val(paciente.dpObservacion);
+          $("#sexoPacienteOrden").val(paciente.ldvSexo);
+          $("#txtEmailP").val(paciente.dpEmail);
+          $("#txtObservacionP").val(paciente.dpObservacion);
+          //formato fecha
+          if (paciente.dpFnacimiento != null && paciente.dpFnacimiento != undefined && paciente.dpFnacimiento != '') {
+            let dia = paciente.dpFnacimiento.substring(0, 2);
+            let mes = paciente.dpFnacimiento.substring(3, 5);
+            let anio = paciente.dpFnacimiento.substring(6, 11);
+            let fecha = dia + "-" + mes + "-" + anio;
+            fecha = getAge(fecha, 3);
+            fecha = fecha.split("-");
+            $("#txtEdad").val(fecha[0] + " aÃ±os, " + fecha[1] + " meses, " + fecha[2] + " dÃ­as")
+            prioridadAtencionxEdad(fecha[0]);
+          }
+
+          let listaPatologias = rpta.dato.listaPatologias;
+          console.log(listaPatologias)
+          let cont = 0;
+          if (listaPatologias === undefined || listaPatologias === null) {
+            $("#tableDiagnosticoPaciente").append("<tr class=''><th class='row mx-auto'>Paciente no tiene patologias</th></tr>");
+          } else {
+            let npac = listaPatologias.length;
+            for (i = 0; i < npac; i++) {
+              cont++;
+              let observacion = "";
+              if (listaPatologias[i].dppObservacion !== undefined) {
+                observacion = listaPatologias[i].dppObservacion;
+              }
+              $("#tableDiagnosticoPaciente").append("<tr class=''><th class='row mx-auto'>" + cont + "</th><td'" + listaPatologias[i].ldvPatologias.ldvpatIdpatologia + "'></td><td>" + listaPatologias[i].ldvPatologias.ldvpatDescripcion + "</td> <td>" + observacion + "</td></tr>");
+            }
+          }
+          /*
+                    $('#chbxRestutToMail').prop('checked', false);
+          
+                    if (paciente.Email !== undefined && paciente.Email !== null && paciente.Email.trim() !== "") {
+                      $('#chbxRestutToMail').prop('checked', true);
+                    }
+                    else {
+                      $("#chbxRestutToMail").prop("disabled", true);
+                    }
+           */
+        }
+      } catch (e) {
+        console.log(e);
+        handlerMessageError(e);
+      }
+    },
+    error: function(msg) {
+      console.log(msg);
+      handlerMessageError(msg);
+    }
+  });
+}
+
+
+function limpiarDatosNoClavePaciente() {
+  //  $(".cleanPaciente").val('');
+  $("#tableBodyDiagnosticoPaciente").empty();
+  $("txtNombreP").val('');
+  $("txtPrimerApellidoP").val('');
+  $("sexoPacienteOrden").val('');
+  $("txtEdad").val('');
+  $("txtEmailP").val('');
+}
+
+
+function filtrarByRutRest(rutPaciente) {//rut
+  rutPaciente = rutPaciente.replaceAll(".", "");
+  limpiarDatosNoClavePaciente();
+  $.ajax({
+    "type": "get",
+    "url": gCte.getctx + "/api/paciente/" + rutPaciente,
+    "contentType": "application/json",
+    success: function(data) {
+      try {
+        let paciente = data.dato;
+        console.log(paciente);
+        if (paciente.Rut === "0") {
+          handlerMessageOk('Se crearÃ¡ paciente.');
+          document.getElementById("AgregarPac").click();
+        } else {
+          let dia = paciente.dpFnacimiento.substring(0, 2);
+          let mes = paciente.dpFnacimiento.substring(3, 5);
+          let anio = paciente.dpFnacimiento.substring(6, 11);
+          let fecha = dia + "-" + mes + "-" + anio;
+          fecha = getAge(fecha, 3);
+          fecha = fecha.split("-");
+          if (paciente.dpExitus === 'S') {
+            handlerMessageError('Paciente fallecido.');
+            return;
+          }
+          $('#idPaciente').val(paciente.dpIdpaciente);
+          $('#datosPaciente').val(paciente.dpIdpaciente);
+
+          //$("#selectTipoDocumento").val(paciente.dpTipoDocumento);
+          $("#txtNombreP").val(paciente.dpNombres);
+          $("#txtPrimerApellidoP").val(paciente.dpPrimerApellido + " " + (paciente.dpSegundoApellido === undefined ? "" : paciente.dpSegundoApellido));
+          $("#txtEdad").val(fecha[0] + " aÃ±os, " + fecha[1] + " meses, " + fecha[2] + " dÃ­as")
+          $("#txtObservacionP").val(paciente.dpObservacion);
+          $("#sexoPacienteOrden").val(paciente.ldvSexo);
+          $("#txtEmailP").val(paciente.dpEmail);
+          $("#txtObservacionP").val(paciente.dpObservacion);
+/*
+          console.log(paciente.Patologias)
+          let cont = 0;
+          if (paciente.Patologias === undefined || paciente.Patologias === null) {
+            $("#tableDiagnosticoPaciente").append("<tr class=''><th class='row mx-auto'>Paciente no tiene patologias</th></tr>");
+          } else {
+            let npac = paciente.Patologias.length;
+            for (i = 0; i < npac; i++) {
+              cont++;
+              let observacion = "";
+              if (paciente.Patologias[i].Observacion !== undefined) {
+                observacion = paciente.Patologias[i].Observacion;
+              }
+              $("#tableDiagnosticoPaciente").append("<tr class=''><th class='row mx-auto'>" + cont + "</th><td'" + paciente.Patologias[i].Id + "'></td><td>" + paciente.Patologias[i].Patologia + "</td> <td>" + observacion + "</td></tr>");
+            }
+          }
+*/  
+          $('#chbxRestutToMail').prop('checked', false);
+
+          if (paciente.dpEmail !== undefined && paciente.dpEmail !== null && paciente.dpEmail.trim() !== "") {
+            $('#chbxRestutToMail').prop('checked', true);
+          }
+          else {
+            $("#chbxRestutToMail").prop("disabled", true);
+          }
+          prioridadAtencionxEdad(fecha[0]);
+        }
+      }
+      catch (e) {
+        handlerMessageError('No se encontrÃ³ al paciente.' + e.message);
+
+      }
+    },
+    error: function(msg) {
+      handlerMessageError('No se encontrÃ³ al paciente.');
+    }
+  });
+}
+
diff --git a/src/main/webapp/resources/js/Orden.wizard.js b/src/main/webapp/resources/js/Orden.wizard.js
new file mode 100644
index 00000000..77ed9131
--- /dev/null
+++ b/src/main/webapp/resources/js/Orden.wizard.js
@@ -0,0 +1,136 @@
+// Class definition
+"use strict";
+
+var KTWizard3 = function() {
+  // Base elements
+  var _wizardEl;
+  var _formEl;
+  var _wizard;
+
+  // Private functions
+  var initWizard = function() {
+    // Initialize form wizard
+    _wizard = new KTWizard(_wizardEl, {
+      startStep: 1, // initial active step number
+      clickableSteps: true, // allow step clicking
+      navigation: false
+    });
+
+    // Validation before going to next page
+    _wizard.on('beforeNext', function(wizard) {
+      const idTipoAtencion = $(g_jqIdTipoAtencion).val();
+      var validacionpaso1 = stepPacValidate(idTipoAtencion);
+      var paso = wizard.getStep();
+      switch (paso) {
+        case 1:
+          if (validacionpaso1 === true) {
+            console.log("paso: " + paso);
+            console.log(validacionpaso1);
+            $('.selectpicker').selectpicker('refresh');
+            wizard.goNext();
+          } else {
+            //            $("#txtRutP").addClass("is-invalid");
+            $('.selectpicker').selectpicker('refresh');
+            wizard.stop();
+          }
+          break;
+
+        case 2:
+
+          if (stepOrdValidate(idTipoAtencion)) {
+            $('.selectpicker').selectpicker('refresh');
+            wizard.goNext()
+          }
+          else {
+            $('.selectpicker').selectpicker('refresh');
+            wizard.stop();
+
+          }
+          break;
+
+        case 3:
+          if (stepExValidate()) {
+            wizard.goNext();
+          } else {
+            wizard.stop();
+            handlerMessageError("Debe seleccionar al menos un examen");
+          }
+          break;
+
+        case 4:
+
+          if (stepConfValidate()) {
+            $("form").submit();
+          }
+          else {
+            wizard.goStop();
+          }
+          break;
+      }
+    });
+    // Change event
+    _wizard.on('change', function(wizard) {
+      KTUtil.scrollTop();
+    });
+  }
+
+  return {
+    // public functions
+    init: function() {
+      _wizardEl = KTUtil.getById('kt_wizard_v3');
+      _formEl = KTUtil.getById('kt_form');
+
+      initWizard();
+    }
+
+  };
+}();
+
+jQuery(document).ready(function() {
+  KTWizard3.init();
+});
+
+
+function stepPacValidate(idTipoAtencion) {
+
+  let isValid = false;
+//  let validadorRutPac = new ValidadorRutPac('is-invalid', 'txtRutP');
+//  isValid = validadorRutPac.validate();
+  let validadorTipoAtencion = new ValidadorTipoAtencion('is-invalid', 'tipoDeAtencion');
+  isValid = validadorTipoAtencion.validate();// && isValid;
+  return isValid;
+}
+
+function stepOrdValidate(idTipoAtencion) {
+
+  let result = false;
+  let isValid = false;
+
+  if (idTipoAtencion === g_ambulatorio) {
+
+    let validadorProcedencia = new ValidadorProcedencia('is-invalid', 'ProcedenciaComboBoxM');
+    isValid = validadorProcedencia.validate();
+    return isValid;
+
+  }
+  else {
+    if ($("#ServicioComboBoxM option:selected").val() !== '-1') {
+      result = true;
+    }
+    else {
+      result = false;
+      handlerMessageError("Debe especificar un servicio.");
+    }
+
+  }
+
+  return result;
+}
+
+function stepExValidate() {
+  return ($(".dual-listbox__selected li").length !== 0)
+}
+
+function stepConfValidate() {
+  return true;
+}
diff --git a/src/main/webapp/resources/js/RechazoMuestras.js b/src/main/webapp/resources/js/RechazoMuestras.js
deleted file mode 100644
index 7f450d3e..00000000
--- a/src/main/webapp/resources/js/RechazoMuestras.js
+++ /dev/null
@@ -1,65 +0,0 @@
-//var getctx = window.location.pathname.substring(0, window.location.pathname.indexOf("/",2));
-
-var today = new Date();
-today = convertirDateDDMMYYYY(today);
-var dia = today.substring(0, 2);
-var mes = today.substring(3, 5);
-var year = today.substring(6, 10);
-//today = "12/03/2021";
-var tablaOrdenesRechazo = null;
-var tablaMuestrasRechazo = null;
-var cfgMuestras = new CfgMuestras();
-var cfgEnvases = new CfgEnvases();
-var nOrden = null;
-var listaExamenesMuestra = null;
-const sesionUsr = $('#sesionUsuario').val();
-
-$(document).ready(function (){
-    $('.ocultarTodoModalAntecedentes').hide();
-    $(".ocultar").hide();
-    $('#filtroFecha').val(today);
-});
-
-$('#txtFecha').datepicker({
-    language: 'es',
-    endDate: "+Infinity",
-    autoclose: true
-})
-
-$("#txtNOrden").keyup(function () {
-    if ($("#txtNOrden").val().length > 0) {
-        $("#txtFecha").prop("disabled", true);
-        $("#txtFecha").val("");
-        $("#txtFiltroNombre").prop("disabled", true);
-        $("#txtFiltroNombre").val("");
-        $("#txtFiltroApellido").prop("disabled", true);
-        $("#txtFiltroApellido").val("");
-        $("#txtNDocumento").prop("disabled", true);
-        $("#txtNDocumento").val("");
-        $("#selectTipoDocumentoFiltro").prop("disabled", true);
-        $("#selectTipoDocumentoFiltro").val(-1);
-        $('#codCentroFiltro').selectpicker('refresh');
-    } else {
-        $("#txtFecha").prop("disabled", false);
-        $("#txtFiltroNombre").prop("disabled", false);
-        $("#txtFiltroApellido").prop("disabled", false);
-        $("#selectTipoDocumentoFiltro").prop("disabled", false);
-        $('#codCentroFiltro').selectpicker('refresh');
-    }
-});
-
-$("#selectTipoDocumentoFiltro").change(function () {
-    if ($("#selectTipoDocumentoFiltro").val() != -1) {
-        $("#txtNDocumento").prop("disabled", false);
-    } else {
-        $("#txtNDocumento").prop("disabled", true);
-    }
-});
-
-$("#causaRechazoMuestras").on('change', function () {
-    let causaRechazo = $("#causaRechazoMuestras").val();
-    if (causaRechazo != 0){
-        $("#causaRechazoMuestras").removeClass('is-invalid');
-        $('.selectpicker').selectpicker('refresh');
-    }
-});
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/RechazoMuestras.muestras.js b/src/main/webapp/resources/js/RechazoMuestras.muestras.js
deleted file mode 100644
index 97490d08..00000000
--- a/src/main/webapp/resources/js/RechazoMuestras.muestras.js
+++ /dev/null
@@ -1,427 +0,0 @@
-function rellenarTablaMuestras(nOrden, idMuestra){
-    $('#divTablaMuestras').css('display', 'block');
-    if ( $.fn.DataTable.isDataTable('#tablaMuestras') ){
-        $('#tablaMuestras').DataTable().clear().destroy();
-        //$("#tablaMuestras thead tr:eq(1)").remove();
-    }
-    $('#tablaMuestras tbody').empty();
-    $("#lblNroOrden").html(nOrden);
-    
-    //$('#tablaMuestras thead tr').clone(true).appendTo('#tablaMuestras thead');
-
-    $('#tablaMuestras thead tr:eq(1) th').each( function (i){
-        //busqueda por texto
-        if (i === 1) { // i es el nro de la columna
-            var title = $(this).text();
-            if (i===1){
-                $(this).html('<input type="text" class="form-control txtFiltro" placeholder="Buscar '+title+'" size="4" />');
-            } else {
-                $(this).html('<input type="text" class="form-control txtFiltro" placeholder="Buscar '+title+'" />');
-            }
-
-            $('input', this).on('keyup change', function () {
-                if (tablaMuestrasRechazo.column(i).search() !== this.value) {
-                    tablaMuestrasRechazo
-                        .column(i)
-                        .search(this.value)
-                        .draw();
-                }
-            });
-        } else if (i==2){
-            var select = $('<select class="form-control"><option value="">TODOS</option></select>')
-                .appendTo($(this).empty())
-                .on('change', function () {
-                    var term = $(this).val();
-                    tablaMuestrasRechazo.column(i).search(term, false, false).draw();
-                });
-
-            select.append('<option value="Tomada">TOMADA</option>');
-            select.append('<option value="Pendiente">PENDIENTE</option>');
-            select.append('<option value="Rechazada">RECHAZADA</option>');
-            select.append('<option value="Bloqueada">BLOQUEADA</option>');
-        } else if (i===3){
-            $(this).empty();
-            $(this).attr('id', 'filtroMue');
-        } else if (i===4){
-            $(this).empty();
-            $(this).attr('id', 'filtroEnv');
-        } else {
-            $(this).empty();
-        }
-    });
-
-    tablaMuestrasRechazo = $('#tablaMuestras').DataTable({
-        responsive: false,
-        searchDelay: 500,
-        orderCellsTop: true,
-        scrollY: 250,
-        scrollX: true,
-        paging: false,
-        dom: 'lrt',
-        "ajax": {
-            url: getctx + "/api/rechazoMuestras/muestras/"+ nOrden,
-            type: "GET",
-            contentType: "application/json",
-            dataSrc:"",
-            dataType: "json"
-        },
-        rowId: 'idmuestra',
-        columns: [
-                {data: 'Seleccion', responsivePriority: -2},
-                {data: 'codigobarras'},
-                {data: 'estadotm'},
-                {data: 'muestradesc'},
-                {data: 'envasedesc'},
-                {data: 'nrovecestomada'},
-                {data: 'usrflebotomista'},
-                {data: 'observaciontm'}
-        ],
-        columnDefs: [
-            {
-                //SelecciÃ³n
-                targets: 0,
-                title: 'SelecciÃ³n',
-                orderable: false,
-                className: 'select-checkbox',
-                data: null,
-                defaultContent: ''
-            },{
-                targets: 2,
-                render: function (data, type, meta) {
-                    var status = {
-                        T: {'title': 'Tomada', 'class': ' label-light-success'},
-                        R: {'title': 'Rechazada', 'class': ' label-light-danger'},
-                        P: {'title': 'Pendiente', 'class': ' label-light-warning'},
-                        B: {'title': 'Bloqueada', 'class': ' label-secondary'}
-                    };
-                    if (typeof status[data] === 'undefined') {
-                        return data;
-                    }
-                    return '<span class="label label-lg font-weight-bold' + status[data].class + ' label-inline">' + status[data].title + '</span>';
-                }
-            },
-        ],
-        select: {
-            style:    'os',
-            //selector: 'td:first-child input[type="checkbox"]'
-            selector: 'td'
-        },
-        "initComplete": function () {
-            this.api().columns([3]).every( function () {
-                var column = this;
-                var select = $('<select class="form-control selectFiltroMue"><option value="">TODOS</option></select>')
-                    //.appendTo( $(column.header()).empty())
-                    .appendTo( $("#filtroMue").empty() )
-                    .on( 'change', function () {
-                        var val = $.fn.dataTable.util.escapeRegex(
-                            $(this).val()
-                        );
-
-                        column
-                            .search( val ? '^'+val+'$' : '', true, false )
-                            .draw();
-                    } );
-
-                column.data().unique().sort().each( function ( d, j ) {
-                    if (d!==null)
-                        select.append( '<option value="'+d+'">'+d+'</option>' )
-                } );
-
-            } );
-            this.api().columns([4]).every( function () {
-                var column = this;
-                var select = $('<select class="form-control selectFiltroMue"><option value="">TODOS</option></select>')
-                    .appendTo( $("#filtroEnv").empty() )
-                    .on( 'change', function () {
-                        var val = $.fn.dataTable.util.escapeRegex(
-                            $(this).val()
-                        );
-
-                        column
-                            .search( val ? '^'+val+'$' : '', true, false )
-                            .draw();
-                    } );
-
-                column.data().unique().sort().each( function ( d, j ) {
-                    if (d!==null)
-                        select.append( '<option value="'+d+'">'+d+'</option>' )
-                } );
-
-            } );
-            if (idMuestra!==null){
-                let rowToSelect = '#' + idMuestra;
-                tablaMuestrasRechazo.row(rowToSelect).select();
-            }
-            if (tablaMuestrasRechazo.rows().count() === 0){
-                $.notify({ message: "No se han registrado muestras en la orden seleccionada" }, { type: "danger" });
-            }
-        },
-        "language": {
-            url: "//cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json",
-            select: {
-                rows: {
-                    _: "%d filas seleccionadas",
-                    0: "",
-                    1: "1 fila seleccionada"
-                }
-            }
-        }
-    });
-    
-    $('#tablaMuestras tbody').on('click', 'tr', function () {
-        let data = tablaMuestrasRechazo.row(this).data();
-        llenarFormRechazo(data['idmuestra']);
-    });
-    
-}
-
-function llenarFormRechazo(idMuestra){
-    $("#divRechazo").show();
-    $("#lblPrimerRechazo").hide();
-    $("#lblSegundoRechazo").hide();
-    $("#lblNoMasRechazos").hide();
-    $("#lblNuevaMuestra").hide();
-    $("#lblNuevaMuestraPendiente").hide();
-    $("#lblNuevaMuestraLista").hide();
-    
-    $.ajax({
-        type: "GET",
-        url: getctx + "/api/rechazoMuestras/muestra/"+idMuestra,
-        datatype: "json",
-        success: function (muestra) {
-            //console.log("datos: "+muestra.dmr_IDCAUSARECHAZO+" "+muestra.dmr_NOTA);
-            /*if (listaExamenesMuestra.length>0){
-                listaExamenesMuestra.length = 0;
-            }*/
-            listaExamenesMuestra = muestra.listaExamenes;
-            console.log("listaExamenesMuestra: "+JSON.stringify(listaExamenesMuestra))
-            console.log("cant. examenes: "+listaExamenesMuestra.length)
-            if (listaExamenesMuestra.length<2){
-                $("#btnRechazoParcial").hide();
-            } else {
-                $("#btnRechazoParcial").show();
-            }
-            
-            if (muestra.dmr_IDCAUSARECHAZO===null){
-                muestra.dmr_IDCAUSARECHAZO=0;
-            }
-            switch(muestra.dfm_ESTADOTM) {
-                case "R":
-                    $("#causaRechazoMuestras").attr("disabled", true);
-                    $("#observacion").attr("disabled", true);
-                    $("#btnRechazarMuestra").attr("disabled", true);
-                    $("#btnRechazoParcial").attr("disabled", true);
-                    break;
-                case "T":
-                    $("#causaRechazoMuestras").attr("disabled", false);
-                    $("#observacion").attr("disabled", false);
-                    $("#btnRechazarMuestra").attr("disabled", false);
-                    $("#btnRechazoParcial").attr("disabled", false);
-                    break;
-                case "P":
-                    $.notify({ message: "Muestra aÃºn no ha sido tomada" }, { type: "danger" });
-                    $("#causaRechazoMuestras").attr("disabled", true);
-                    $("#observacion").attr("disabled", true);
-                    $("#btnRechazarMuestra").attr("disabled", true);
-                    $("#btnRechazoParcial").attr("disabled", true);
-                    break;
-                case "B":
-                    $("#causaRechazoMuestras").attr("disabled", true);
-                    $("#observacion").attr("disabled", true);
-                    $("#btnRechazarMuestra").attr("disabled", true);
-                    $("#btnRechazoParcial").attr("disabled", true);
-                    break;
-            }
-            
-            if (muestra.dmr_IDNUEVAMUESTRA !== null){
-                $("#lblNuevaMuestra").show();
-                $("#lblIdNuevaMuestra").text(muestra.dfm_CODIGOBARRA);
-            }
-            
-            switch (muestra.dfm_ESTADONUEVAMUESTRA){
-                case "P":
-                    $("#lblNuevaMuestraPendiente").show();
-                    break;
-                case "T":
-                    $("#lblNuevaMuestraLista").show();
-                    break;
-            }
-            
-            if (muestra.dfm_NROVECESTOMADA === 1){
-                $("#lblPrimerRechazo").show();
-            }
-            if (muestra.dfm_NROVECESTOMADA === 2){
-                $("#lblSegundoRechazo").show();
-            }
-            if (muestra.dfm_NROVECESTOMADA === 3){
-                $("#lblNoMasRechazos").show();
-                $("#btnRechazarMuestra").attr("disabled", true);
-                $("#btnRechazoParcial").attr("disabled", true);
-                $("#causaRechazoMuestras").attr("disabled", true);
-                $("#observacion").attr("disabled", true);
-            }
-            
-            $("#causaRechazoMuestras").val(muestra.dmr_IDCAUSARECHAZO);
-            $("#observacion").val(muestra.dmr_NOTA);
-            $('.selectpicker').selectpicker('refresh');
-        },
-        error: function (msg) {
-            $.notify({ message: "Error al mostrar datos" }, { type: "danger" });
-            console.log(msg);
-        }
-    });
-}
-
-/*************** RECHAZO TOTAL **************/
-$("#btnRechazarMuestra").click(function(){
-    let causaRechazo = $("#causaRechazoMuestras").val();
-    //colocar con 2 =, no con 3 aunque moleste el warning, porque causa problemas
-    if (causaRechazo == 0){
-        $("#causaRechazoMuestras").addClass('is-invalid');
-        $('.selectpicker').selectpicker('refresh');
-        $.notify({ message: "Debe seleccionar Causa de rechazo" }, { type: "danger" });
-    } else {
-        const data = tablaMuestrasRechazo.rows('.selected').data();
-        let observacion = $("#observacion").val();
-        let idMuestra = data[0].idmuestra;
-        
-        rechazoMuestraTotal(idMuestra, causaRechazo, observacion);
-        /*
-        $.ajax({
-            type: "post",
-            url: getctx+"/api/rechazoMuestras/rechazoTotal/"+idMuestra+"/"+sesionUsr+"/"+causaRechazo+"/"+observacion,
-            datatype: "json",
-            async: false,
-            success: function (json) {
-                $("#lblNuevaMuestraPendiente").show();
-                $("#lblNuevaMuestra").show();
-                $("#btnRechazarMuestra").attr("disabled", true);
-                $("#btnRechazoParcial").attr("disabled", true);
-                $("#causaRechazoMuestras").attr("disabled", true);
-                $("#observacion").attr("disabled", true);
-                $("#lblIdNuevaMuestra").text(json.dato.dfmCodigobarra);
-                handlerMessageOk(json.message);
-                tablaMuestrasRechazo.ajax.reload(null, false);
-                if (json.dato.dfmNrovecestomada === 3){
-                    alert("Esta es la Ãºltima muestra que se generarÃ¡");
-                }
-            },
-            error: function () {
-                handlerMessageError("Error al rechazar muestra");
-            }
-        });*/
-    }
-});
-
-function rechazoMuestraTotal(idMuestra, causaRechazo, observacion){
-    $.ajax({
-        type: "post",
-        url: getctx+"/api/rechazoMuestras/rechazoTotal/"+idMuestra+"/"+sesionUsr+"/"+causaRechazo+"/"+observacion,
-        datatype: "json",
-        async: false,
-        success: function (json) {
-            $("#lblNuevaMuestraPendiente").show();
-            $("#lblNuevaMuestra").show();
-            $("#btnRechazarMuestra").attr("disabled", true);
-            $("#btnRechazoParcial").attr("disabled", true);
-            $("#causaRechazoMuestras").attr("disabled", true);
-            $("#observacion").attr("disabled", true);
-            $("#lblIdNuevaMuestra").text(json.dato.dfmCodigobarra);
-            handlerMessageOk(json.message);
-            tablaMuestrasRechazo.ajax.reload(null, false);
-            if (json.dato.dfmNrovecestomada === 3){
-                alert("Esta es la Ãºltima muestra que se generarÃ¡");
-            }
-        },
-        error: function () {
-            handlerMessageError("Error al rechazar muestra");
-        }
-    });
-}
-
-/*************** RECHAZO PARCIAL **************/
-$("#btnRechazoParcial").click(function(){
-    let causaRechazo = $("#causaRechazoMuestras").val();
-    if (causaRechazo == 0){
-        $("#causaRechazoMuestras").addClass('is-invalid');
-        $('.selectpicker').selectpicker('refresh');
-        $.notify({ message: "Debe seleccionar Causa de rechazo" }, { type: "danger" });
-    } else {
-        $("#causaRechazoMuestras").removeClass('is-invalid');
-        $('#modalRechazoParcial').modal('show');
-        const data = tablaMuestrasRechazo.rows('.selected').data();
-        let idMuestra = data[0].idmuestra;
-        let nOrden  = data[0].norden;
-        $("#nroMuestraModal").val(data[0].codigobarras);
-        $("#idMuestraModal").val(idMuestra);
-        
-        $("#pacienteModal").val(listaExamenesMuestra[0].nombres);
-        $("#examenesRechazoBody").empty();
-        listaExamenesMuestra.forEach(function (examen){
-            $("#examenesRechazoBody").
-                    append("<tr class=''>\
-                                <td class=''>" + examen.ce_ABREVIADO + "</td>\
-                                <td class='rechazaExamen'>\
-                                    <label class='checkbox checkbox-single'>\
-                                        <input id='"+ examen.ce_IDEXAMEN +"' value='' type='checkbox' class='form-check-input' >\
-                                    <span></span></label>\
-                                </td>\
-                            </tr>");
-        });
-    }
-    
-});
-
-$("#confirmRechazoParcial").click(function(){
-    let idMuestra = $("#idMuestraModal").val();
-    let causaRechazo = $("#causaRechazoMuestras").val();
-    let observacion = $("#observacion").val();
-    
-    let examenes = [];
-    $('#examenesRechazoBody tr input:checked').each(function() {
-        examenes.push($(this).attr('id'));
-    });
-    
-    let nocheckeados = [];
-    $('#examenesRechazoBody tr input:checkbox:not(:checked)').each(function() {
-        nocheckeados.push($(this).attr('id'));
-    });
-    //console.log("examenes: "+examenes);
-    if (nocheckeados.length === 0){
-        rechazoMuestraTotal(idMuestra, causaRechazo, observacion);
-    } else {
-        if (examenes.length > 0){
-            let formData = new FormData();
-            formData.append('observacion', observacion);
-            formData.append('examenesRechazados', examenes);
-            formData.append('examenesNoRechazados', nocheckeados);
-            $.ajax({
-                type: "POST",
-                url: getctx + "/api/rechazoMuestras/rechazoParcial/"+idMuestra+"/"+sesionUsr+"/"+causaRechazo,
-                data: formData,
-                contentType: false, // NEEDED, DON'T OMIT THIS (requires jQuery 1.6+)
-                processData: false, // NEEDED, DON'T OMIT THIS
-                success: function (json) {
-                    $("#lblNuevaMuestraPendiente").show();
-                    $("#lblNuevaMuestra").show();
-                    $("#btnRechazarMuestra").attr("disabled", true);
-                    $("#btnRechazoParcial").attr("disabled", true);
-                    $("#causaRechazoMuestras").attr("disabled", true);
-                    $("#observacion").attr("disabled", true);
-                    $('#modalRechazoParcial').modal('toggle');
-                    $("#lblIdNuevaMuestra").text(json.dato.dfmCodigobarra);
-                    handlerMessageOk(json.message);
-                    tablaMuestrasRechazo.ajax.reload(null, false);
-                    if (json.dato.dfmNrovecestomada === 3){
-                        alert("Esta es la Ãºltima muestra que se generarÃ¡");
-                    }
-                },
-                error: function () {
-                    handlerMessageError("Error al rechazar muestra");
-                }
-            });
-        } else {
-            handlerMessageError("No ha seleccionado ningÃºn examen");
-        }
-    }
-});
diff --git a/src/main/webapp/resources/js/RechazoMuestras.ordenes.js b/src/main/webapp/resources/js/RechazoMuestras.ordenes.js
deleted file mode 100644
index 028e8d78..00000000
--- a/src/main/webapp/resources/js/RechazoMuestras.ordenes.js
+++ /dev/null
@@ -1,239 +0,0 @@
-var nOrden = null;
-if (getWithExpiry('nOrden') !== null) {
-    nOrden = getWithExpiry('nOrden');
-    $("#txtNOrden").val(nOrden);
-    let idMuestra = getWithExpiry('idMuestra');
-    rellenarTablaMuestras(nOrden, idMuestra);
-    llenarFormRechazo(idMuestra);
-} else {
-    nOrden = -1;
-}
-
-var datos = {"nOrden":nOrden,"fIni":null,"nombre":"","apellido":""};
-
-//var initTableRechMueOrdenes = function(){
-//function rellenarTablaOrdenes(datos){
-
-    tablaOrdenesRechazo = $('#tablaOrdenes').DataTable({
-        responsive: false,
-        searchDelay: 500,
-        processing: true,
-        orderCellsTop: true,
-        scrollY: 250,
-        scrollX: true,
-        paging: false,
-        dom: 'lrt',
-        "ajax": {
-            url: getctx + "/api/rechazoMuestras/ordenes/",
-            type: "POST",
-            contentType: "application/json",
-            dataSrc:"",
-            data:function(d){
-                return JSON.stringify(datos);
-            }
-        },
-        "columns": [
-                {data: 'norden'},
-                {data: 'fechaorden'},
-                {data: 'nombres'},
-                {data: 'fechanac'},
-                {data: 'estado'},
-                {data: 'Acciones'}
-        ],
-        "columnDefs": [
-            {
-                targets: -1,
-                title: 'Acciones',
-                orderable: false,
-                render: function(data, type, row) {
-                        let datos = JSON.stringify(row)
-                        return '\<div class="row">\
-                                    <a href="#" class="btn btn-sm btn-clean btn-icon" title="Datos Paciente" data-toggle="modal" data-target="#ModalDatosPaciente" onclick=\'MostrarDatosPaciente(' + row['norden'] + ',' + row['idpaciente'] +') \'>\
-                                        <i class="fas fa-user-md"></i><span class="nav-text"></span>\
-                                    </a>\
-                                    <a href="#" class="btn btn-sm btn-clean btn-icon" title="Orden/ExÃ¡menes" data-toggle="modal" data-target="#ModalDatosOrden" onclick=\'MostrarDatosOrden(' + row['norden'] + ') \'>\
-                                        <i class="fa fa-search" aria-hidden="true"></i><span class="nav-text"></span>\
-                                    </a>\
-                                </div>';
-                }
-            },{
-                //Estado
-                targets: -2,
-                render: function(data, type, row, meta) {
-                    let bgColor = "";
-                    switch(data.trim()) {
-                        case 'ATENDIDO':
-                          bgColor = "#ACECD6";
-                          break;
-                        case 'ESPERA':
-                          bgColor = "#FF9AA2";
-                          break;
-                        case 'BLOQUEADA':
-                          bgColor = "#DFC7C1";
-                          break;
-                        default:
-                          bgColor = "#808080";
-                          break;
-                    }
-                    return '<span style="background-color:' + bgColor + '" class="label label-lg font-weight-bold label-inline">' + data + '</span>';
-                }
-            },{
-                //Edad
-                targets: -3,
-                render: function(data, type, full, meta) {
-                    return data!==null ? calcularEdadTM(data) : "";
-                }
-            },{
-                //Fecha
-                targets: -5,
-                render: function(data, type, full, meta) {
-
-                    var dia = data.substring(0, 2);
-                    var mes = data.substring(3, 5);
-                    var year = data.substring(8, 10);
-                    var hora = data.substring(11, 16);
-
-                    return hora + " " + dia + "/" + nombresMeses(mes) + "/" + year;
-                }
-            },
-        ],
-        select: {
-            style:    'os',
-            selector: 'td:first-child'
-            //selector: 'td:first-child input[type="checkbox"]'
-        },               
-        "language": {
-            url: "//cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json"
-        }
-    });
-    
-    $('#tablaOrdenes tbody').on('click', 'tr', function () {
-        let data = tablaOrdenesRechazo.row(this).data();
-        let nOrden = data['norden'];
-        rellenarTablaMuestras(nOrden, null);
-    });
-    
- //}
- 
-$("#btnBuscarFiltro").click(function () {
-    buscarOrdenesReMue(); 
-});
-
-
-
-function buscarOrdenesReMue(){
-    let formValidator = new FormValidator();
-    let nroOrdenValidator = new NroOrdenValidator("#txtNOrden",0,0);
-    formValidator.add(nroOrdenValidator);
-    let lenNombreMinValidator = new LenMinValidator("#txtFiltroNombre",2);
-    formValidator.add(lenNombreMinValidator);
-    let lenApellidoMinValidator = new LenMinValidator("#txtFiltroApellido",2);
-    formValidator.add(lenApellidoMinValidator);
-
-    let parmOk = formValidator.validate();
-    if (parmOk === false){
-        handlerMessageError(formValidator.message);
-        return;
-    }
-    let filtroOrden = new FiltroOrden();
-    filtroOrden.fill("#txtNOrden","#txtFecha","","#txtFiltroNombre","#txtFiltroApellido",
-                      "#selectTipoDocumentoFiltro","#txtNDocumento","",
-                      "","");
-    obtenerDatos(filtroOrden);
-}
-
-function obtenerDatos(filtro){
-    datos = filtro;
-    $('#divTablaMuestras').css('display', 'none');
-    $('#divRechazo').css('display', 'none');
-    tablaOrdenesRechazo.ajax.reload();
-}
-
-function FormValidator () {
- 
-    this.validators = [];
-    this.message = "";
-    this.add = function(val){
-        this.validators.push(val);
-    }
-    this.validate = function(){
-        
-        let n = this.validators.length;
-        let b = true;
-        
-        for (i=0; i< n; i++){
-            if (this.validators[i].validate()=== false){
-                this.message += "\n" + this.validators[i].message;
-                b = false;
-            }
-        }
-        return b;
-    }
-    
-} 
-
-function NroOrdenValidator (jqId,minLen,maxLen) {
-
-    this.message="";
-    this.jqId = jqId;
-    this.minLen = minLen;
-    this.maxLen = maxLen;
-    this.regla = function (){
-        
-        if ($(this.jqId) === undefined){
-            this.message = "Valor indefinido.";
-            return false;
-        }
-
-        let valor = $(this.jqId).val();
-
-        valor = valor.replaceAll('.','');
-
-        if (isNaN(valor)){
-            this.message = "Valor no es un nï¿½mero.";
-            return false;
-        }
-
-        return true;
-    }
-    
-    this.validate = function(){
-        
-        return this.regla();
-        
-        
-    }
-} 
-
-function LenMinValidator(jqid,len){
-    this.message = "Valor de largo menor a " + len + ".";
-    this.texto = $(jqid).val();
-
-    this.regla = function (){
-    
-        try{
-            
-            if (this.texto === undefined || this.texto === null ){
-                return true;
-            }
-
-            if (this.texto.trim() !== '' && this.texto.lenght < len ){
-                return false;
-            }
-
-
-        }
-        catch(e){
-            //handleMessageError(e);
-            console.log(e);
-            return false;
-        }
-        return true;
-    };
-    
-    this.validate = function(){
-        
-        return this.regla();
-    }
-
-}
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/RegistroMedico.js b/src/main/webapp/resources/js/RegistroMedico.js
index 6aac2ed8..be637bcd 100755
--- a/src/main/webapp/resources/js/RegistroMedico.js
+++ b/src/main/webapp/resources/js/RegistroMedico.js
@@ -11,7 +11,7 @@ $(document).ready(function() {
 		$("#validadorOrden").val("1");
 	}
 	$('.selectpicker').selectpicker('refresh');
-	$("#btnLimpiar2").hide();
+	;
 });
 
 $("#spanCheck").click(function() {
@@ -121,14 +121,8 @@ function buscarByRut(rutMedico, validadorRutSinFiltro) {
 				$("#txtEmail").prop('disabled', true);
 				$("#RegistroSalud").val(Medico.RegistroSaludMedico);
 				$("#RegistroSalud").prop('disabled', true);
-				
-				if (Medico.Estado == "N") {
-					$("#checkBoxLever").val("N");
-					$("#checkBoxLever").prop("checked", false)
-				
-				}else{
-					$("#checkBoxLever").val("S");
-					$("#checkBoxLever").prop("checked", true)
+				if (Medico.Estado == 'N') {
+					$("#checkBoxLever").prop('checked', false);
 				}
 				//                $('select').select2({width: "100%"});
 				$("#txtRut").prop("disabled", true);
@@ -261,13 +255,10 @@ function buscarRut(a) {
 	buscarByRut(rut);
 }
 $("#divBtnEditar").click(function() {
-	$("#btnLimpiar2").show();
-	$("#btnLimpiar").hide();
 	$('#divBtnEditar').hide();
 	$("#btnAgregarMedico").hide();
 	$("#divBtnUpdateMedico").show();
-	//**modificado por cristian 07-11 no se debe modificar rut */
-	//$("#txtRut").prop("disabled", false);
+	$("#txtRut").prop("disabled", false);
 	$("#txtNombre").prop('disabled', false);
 	$("#txtPrimerApellido").prop('disabled', false);
 	$("#txtSegundoApellido").prop('disabled', false);
@@ -279,13 +270,10 @@ $("#divBtnEditar").click(function() {
 	$("#RegistroSalud").prop('disabled', false);
 	$('#divCancelEdit').show();
 	$("#btnGuardarUpdate").prop('disabled', false);
-	$("#txtNombre").focus();
 
 });
 
 $("#btnCancelarUpdate").click(function() {
-	$("#btnLimpiar2").hide();
-	$("#btnLimpiar").show();
 	$('#divCancelEdit').hide();
 	$('#divBtnEditar').show();
 	$("#btnAgregarMedico").show();
@@ -337,18 +325,9 @@ $("#btnLimpiarFiltro").click(function() {
 })
 
 // ESTO NO LO TOMA, SE TIENE QUE VALIDAR AL HACER SUBMIT ****************************************************
-$('form').submit(function(e) {
-	$("#txtRut").prop("disabled", false);
+$('form').submit(function() {
+
 	let rut = $("#txtRut").val();
-	
-	if(checkRut(rut) == false){
-		 e.preventDefault();
-		 console.log("rut invalido")
-		 $("#invalid-feedback").show();
-	}else{
-		 $("#invalid-feedback").hide();
-	}
-	
 
 	let nombres = $("#txtNombre").val();
 	let primerApellido = $("#txtPrimerApellido").val();
diff --git a/src/main/webapp/resources/js/RegistroUsuarios.js b/src/main/webapp/resources/js/RegistroUsuarios.js
deleted file mode 100644
index 06597e60..00000000
--- a/src/main/webapp/resources/js/RegistroUsuarios.js
+++ /dev/null
@@ -1,227 +0,0 @@
-var getctx = window.location.pathname.substring(0, window.location.pathname.indexOf("/",2));
-
-$(document).ready(function(){
-    $(".ocultar").hide();
-    cargarCentrosDeSalud();
-    cargarListaUsuarios();
-
-});
-function cargarListaUsuarios() {    
-    $.ajax({
-        type: "get",
-        url: getctx + "/api/usuarios",
-        datatype: "json",
-        success: function (message) {
-            var cont = 0;
-            $("#tbodyFiltro").empty();
-            $("#lblErrorFiltro").hide();
-            if (message.dato.length > 0) {
-                message.dato.forEach(function (user) {
-                    cont++;
-                    $("#tbodyFiltro").append("<tr class='pointer' onclick='selectElemento(this)' >\
-                                                    <th class='row mx-auto'>" + cont + "</th>\
-                                                    <td class=''>" + user.duNombres + " " + user.duPrimerapellido + "</td>\
-                                                    <td class='id' style='display:none'>" + user.Id + "</td></tr>");
-                });
-            } else {
-                $("#lblErrorFiltro").show();
-            }
-            $("#spanCantidad").text(cont);
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-    
-}
-
-function filtrarNombre(nombre) {
-    let url = getctx + "/api/usuarios/nombre";
-
-    
-    $.ajax({
-        type: "post",
-        data: "filtro=1&codigo=" + codigo + "&nombre=" + nombre,
-        url: "",
-        datatype: "json",
-        success: function (mensaje) {
-            var cont = 0;
-            var dato = JSON.parse(mensaje);
-            $("#tbodyFiltro").empty();
-            $("#lblErrorFiltro").hide();
-            if (dato.elemento.length > 0) {
-                dato.elemento.forEach(function (variable) {
-                    cont++;
-                    $("#tbodyFiltro").append("<tr class='pointer' onclick='selectElemento(this)' ><th class='row mx-auto'>" + cont + "</th><td class=''>" + variable.Codigo + "</td><td class=''>" + variable.Descripcion + "</td><td class='id' style='display:none'>" + variable.Id + "</td></tr>");
-                });
-            } else {
-                $("#lblErrorFiltro").show();
-            }
-            $("#spanCantidad").text(cont);
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-
-$("#txtCodigoFiltro").keyup(function () {
-    filtrarLike($("#txtCodigoFiltro").val().trim(), "");
-    if ($("#txtCodigoFiltro").val().length > 0) {
-        $("#txtNombreFiltro").prop("disabled", true);
-    } else {
-        $("#txtNombreFiltro").prop("disabled", false);
-    }
-});
-
-$("#txtNombreFiltro").keyup(function () {
-    filtrarLike("", $("#txtNombreFiltro").val().trim());
-    if ($("#txtNombreFiltro").val().length > 0) {
-        $("#txtCodigoFiltro").attr("disabled", true);
-    } else {
-        $("#txtCodigoFiltro").attr("disabled", false);
-    }
-});
-
-function selectElemento(a){
-    var $row = $(a).closest("tr"); // Find the row
-    var id = $row.find(".id").text();
-    buscarPorId(id);
-    activarEdit();
-}
-
-function activarEdit() {
-    $("#iEdit").removeClass("text-dark-50");
-    $("#iEdit").addClass("text-primary");
-}
-
-function buscarPorId(id){
-    $.ajax({
-        type: "post",
-        data: "buscarPorId=1&id=" + id,
-        async: false,
-        datatype: "json",
-        success: function (data) {
-            let dato = JSON.parse(data);
-            let variable = dato.elementos[0]; //reemplazar elementos por nombre del array json definido en controller
-            $("#btnAgregar").prop("disabled", true);
-            $("#txtNombreElemento").prop("disabled", true);
-            $("#txtCodigoElemento").prop("disabled", true);
-            $("#checkBoxActivo").prop("disabled", true);
-            $("#txtId").val(variable.Id);
-            $("#txtCodigoElemento").val(variable.Codigo);
-            $("#txtNombreElemento").val(variable.Nombre);
-            if (variable.Activo === "S") {
-                $("#checkBoxActivo").prop("checked", true);
-                $("#lblEstado").text("Activo");
-            } else {
-                $("#checkBoxActivo").prop("checked", false);
-                $("#lblEstado").text("Inactivo");
-            }
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-
-$("#nuevoElemento").click(function () {
-    $(".collapse").collapse('hide');
-    $('html, body').animate({
-        scrollTop: $("div#divForm").offset().top
-    }, 700);
-    limpiarFormulario();
-});
-
-$("#buscarElemento").click(function () {
-    $(".collapse").collapse('show');
-    $('html, body').animate({
-        scrollTop: $("div#accordionExample8").offset().top
-    }, 700);
-});
-
-$("#spanCheck").click(function () {
-    if ($("#checkBoxActivo").is(":checked")) {
-        $("#lblEstado").text("Activo");
-    }
-    if (!($("#checkBoxActivo").is(":checked"))) {
-        $("#lblEstado").text("Inactivo");
-    }
-});
-
-$("#btnLimpiarFiltro").click(function () {
-    $("#txtNombreFiltro").val("");
-    $("#txtNombreFiltro").prop("disabled", false);
-    filtrarLike("","");
-});
-
-$("#iLimpiar").click(function () {
-    limpiarFormulario();
-});
-
-$("#btnEditarElemento").click(function() {
-    $("#txtNombreElemento").prop("disabled", false);
-    $("#checkBoxActivo").prop("disabled", false);
-    $("#btnAgregarElemento").removeClass("disabled");
-    $("#btnAgregarElemento").hide();
-    $("#btnUpdateElemento").show();
-    $("#listbox").show();
-    $("#examenesTest").hide();
-});
-
-function limpiarFormulario(){
-    $("#txtNombreElemento").val("");
-    $("#txtNombreElemento").prop("disabled", false);
-    $("#checkBoxActivo").prop("checked", "checked");
-    $("#lblEstado").text("Activo");
-    $("#checkBoxActivo").prop("disabled", false);
-    $("#btnAgregarElemento").show();
-    $("#btnAgregarElemento").prop("disabled", false);
-    $("#btnUpdateElemento").hide();
-    $("#listbox").show();
-    $("#examenesTest").hide();
-    $("#examenesTest").empty();
-    recargarDatos(null);
-}
-
-//insertar todos los campos que obligatorios
-$("#formRegistro").submit(function(){
-    let codigo = $("#txtCodigoElemento").val();
-    let nombre = $("#txtNombreElemento").val();
-    if (nombre.trim() === "" || nombre.trim() === ""){
-        if (codigo.trim() === ""){
-            $("#txtCodigoElemento").addClass('is-invalid');
-            $.notify({ message: "CÃ³digo no debe estar vacÃ­o" }, { type: "danger" });
-        }
-        if (nombre.trim() === ""){
-            $("#txtNombreElemento").addClass('is-invalid');
-            $.notify({ message: "Nombre no debe estar vacÃ­o" }, { type: "danger" });
-        }
-        return false;
-    } else {
-        return true;
-    }
-    
-});
-
-function cargarCentrosDeSalud(){
-    
-    $.ajax({
-       type: "GET",
-       url: getctx + "/api/instituciones/centrosdesalud/list",
-       datatype: "json",
-       async: false,
-       success: function(data){
-            $("#codCentroFiltro").html('<option value="N">SELECCIONAR</option>');
-            for (let centro of data) {
-                $("#codCentroFiltro").append($('<option>', {
-                    value: centro.ccdsIdcentrodesalud,
-                    text: centro.ccdsDescripcion
-                }));
-            }
-       },
-       error: function (msg) {
-           console.log(msg);
-       } 
-    });
-}
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/RegistroUsuariosJs.js b/src/main/webapp/resources/js/RegistroUsuariosJs.js
deleted file mode 100644
index 20f7001f..00000000
--- a/src/main/webapp/resources/js/RegistroUsuariosJs.js
+++ /dev/null
@@ -1,226 +0,0 @@
-var getctx = window.location.pathname.substring(0, window.location.pathname.indexOf("/",2));
-
-$(document).ready(function(){
-    $(".ocultar").hide();
-    cargarCentrosDeSalud();
-    cargarListaUsuarios();
-
-});
-function cargarListaUsuarios() {    
-    $.ajax({
-        type: "get",
-        url: getctx + "/api/usuarios",
-        datatype: "json",
-        success: function (message) {
-            var cont = 0;
-            $("#tbodyFiltro").empty();
-            $("#lblErrorFiltro").hide();
-            if (message.dato.length > 0) {
-                message.dato.forEach(function (user) {
-                    cont++;
-                    $("#tbodyFiltro").append("<tr class='pointer' onclick='selectElemento(this)' >\
-                                                    <th class='row mx-auto'>" + cont + "</th>\
-                                                    <td class=''>" + user.duNombres + " " + user.duPrimerapellido + "</td>\
-                                                    <td class='id' style='display:none'>" + user.Id + "</td></tr>");
-                });
-            } else {
-                $("#lblErrorFiltro").show();
-            }
-            $("#spanCantidad").text(cont);
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-    
-}
-
-function filtrarNombre(nombre) {
-    let url = getctx + "/api/usuarios/nombre";
-
-    $.ajax({
-        type: "post",
-        data: "filtro=1&codigo=" + codigo + "&nombre=" + nombre,
-        url: "",
-        datatype: "json",
-        success: function (mensaje) {
-            var cont = 0;
-            var dato = JSON.parse(mensaje);
-            $("#tbodyFiltro").empty();
-            $("#lblErrorFiltro").hide();
-            if (dato.elemento.length > 0) {
-                dato.elemento.forEach(function (variable) {
-                    cont++;
-                    $("#tbodyFiltro").append("<tr class='pointer' onclick='selectElemento(this)' ><th class='row mx-auto'>" + cont + "</th><td class=''>" + variable.Codigo + "</td><td class=''>" + variable.Descripcion + "</td><td class='id' style='display:none'>" + variable.Id + "</td></tr>");
-                });
-            } else {
-                $("#lblErrorFiltro").show();
-            }
-            $("#spanCantidad").text(cont);
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-
-$("#txtCodigoFiltro").keyup(function () {
-    filtrarLike($("#txtCodigoFiltro").val().trim(), "");
-    if ($("#txtCodigoFiltro").val().length > 0) {
-        $("#txtNombreFiltro").prop("disabled", true);
-    } else {
-        $("#txtNombreFiltro").prop("disabled", false);
-    }
-});
-
-$("#txtNombreFiltro").keyup(function () {
-    filtrarLike("", $("#txtNombreFiltro").val().trim());
-    if ($("#txtNombreFiltro").val().length > 0) {
-        $("#txtCodigoFiltro").attr("disabled", true);
-    } else {
-        $("#txtCodigoFiltro").attr("disabled", false);
-    }
-});
-
-function selectElemento(a){
-    var $row = $(a).closest("tr"); // Find the row
-    var id = $row.find(".id").text();
-    buscarPorId(id);
-    activarEdit();
-}
-
-function activarEdit() {
-    $("#iEdit").removeClass("text-dark-50");
-    $("#iEdit").addClass("text-primary");
-}
-
-function buscarPorId(id){
-    $.ajax({
-        type: "post",
-        data: "buscarPorId=1&id=" + id,
-        async: false,
-        datatype: "json",
-        success: function (data) {
-            let dato = JSON.parse(data);
-            let variable = dato.elementos[0]; //reemplazar elementos por nombre del array json definido en controller
-            $("#btnAgregar").prop("disabled", true);
-            $("#txtNombreElemento").prop("disabled", true);
-            $("#txtCodigoElemento").prop("disabled", true);
-            $("#checkBoxActivo").prop("disabled", true);
-            $("#txtId").val(variable.Id);
-            $("#txtCodigoElemento").val(variable.Codigo);
-            $("#txtNombreElemento").val(variable.Nombre);
-            if (variable.Activo === "S") {
-                $("#checkBoxActivo").prop("checked", true);
-                $("#lblEstado").text("Activo");
-            } else {
-                $("#checkBoxActivo").prop("checked", false);
-                $("#lblEstado").text("Inactivo");
-            }
-        },
-        error: function (msg) {
-            console.log(msg);
-        }
-    });
-}
-
-$("#nuevoElemento").click(function () {
-    $(".collapse").collapse('hide');
-    $('html, body').animate({
-        scrollTop: $("div#divForm").offset().top
-    }, 700);
-    limpiarFormulario();
-});
-
-$("#buscarElemento").click(function () {
-    $(".collapse").collapse('show');
-    $('html, body').animate({
-        scrollTop: $("div#accordionExample8").offset().top
-    }, 700);
-});
-
-$("#spanCheck").click(function () {
-    if ($("#checkBoxActivo").is(":checked")) {
-        $("#lblEstado").text("Activo");
-    }
-    if (!($("#checkBoxActivo").is(":checked"))) {
-        $("#lblEstado").text("Inactivo");
-    }
-});
-
-$("#btnLimpiarFiltro").click(function () {
-    $("#txtNombreFiltro").val("");
-    $("#txtNombreFiltro").prop("disabled", false);
-    filtrarLike("","");
-});
-
-$("#iLimpiar").click(function () {
-    limpiarFormulario();
-});
-
-$("#btnEditarElemento").click(function() {
-    $("#txtNombreElemento").prop("disabled", false);
-    $("#checkBoxActivo").prop("disabled", false);
-    $("#btnAgregarElemento").removeClass("disabled");
-    $("#btnAgregarElemento").hide();
-    $("#btnUpdateElemento").show();
-    $("#listbox").show();
-    $("#examenesTest").hide();
-});
-
-function limpiarFormulario(){
-    $("#txtNombreElemento").val("");
-    $("#txtNombreElemento").prop("disabled", false);
-    $("#checkBoxActivo").prop("checked", "checked");
-    $("#lblEstado").text("Activo");
-    $("#checkBoxActivo").prop("disabled", false);
-    $("#btnAgregarElemento").show();
-    $("#btnAgregarElemento").prop("disabled", false);
-    $("#btnUpdateElemento").hide();
-    $("#listbox").show();
-    $("#examenesTest").hide();
-    $("#examenesTest").empty();
-    recargarDatos(null);
-}
-
-//insertar todos los campos que obligatorios
-$("#formRegistro").submit(function(){
-    let codigo = $("#txtCodigoElemento").val();
-    let nombre = $("#txtNombreElemento").val();
-    if (nombre.trim() === "" || nombre.trim() === ""){
-        if (codigo.trim() === ""){
-            $("#txtCodigoElemento").addClass('is-invalid');
-            $.notify({ message: "CÃ³digo no debe estar vacÃ­o" }, { type: "danger" });
-        }
-        if (nombre.trim() === ""){
-            $("#txtNombreElemento").addClass('is-invalid');
-            $.notify({ message: "Nombre no debe estar vacÃ­o" }, { type: "danger" });
-        }
-        return false;
-    } else {
-        return true;
-    }
-    
-});
-
-function cargarCentrosDeSalud(){
-    
-    $.ajax({
-       type: "GET",
-       url: getctx + "/api/instituciones/centrosdesalud/list",
-       datatype: "json",
-       async: false,
-       success: function(data){
-            $("#codCentroFiltro").html('<option value="N">SELECCIONAR</option>');
-            for (let centro of data) {
-                $("#codCentroFiltro").append($('<option>', {
-                    value: centro.ccdsIdcentrodesalud,
-                    text: centro.ccdsDescripcion
-                }));
-            }
-       },
-       error: function (msg) {
-           console.log(msg);
-       } 
-    });
-}
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/SesionCliente.js b/src/main/webapp/resources/js/SesionCliente.js
index ee0517c1..ff3b49bd 100644
--- a/src/main/webapp/resources/js/SesionCliente.js
+++ b/src/main/webapp/resources/js/SesionCliente.js
@@ -1,5 +1,5 @@
 const intervalMs = 60000; //1 minuto
-const minsExpiraSesion = 150;
+const minsExpiraSesion = 25;
 var idleTime = 0; //tiempo de inactividad
 //esta variable es para que no afecte la var idleTime cuando se haga un movimiento con mouse o se presione una tecla cuando se activa la alerta de expiraciÃ³n de sesiÃ³n (true)
 var alerta = false; 
diff --git a/src/main/webapp/resources/js/TomaMuestras.curvaTests.js b/src/main/webapp/resources/js/TomaMuestras.curvaTests.js
new file mode 100644
index 00000000..2a79bd04
--- /dev/null
+++ b/src/main/webapp/resources/js/TomaMuestras.curvaTests.js
@@ -0,0 +1,350 @@
+var tablaCurvas = null;
+var intervalo = null;
+var mins = 0;
+var segs = 0;
+var timePrimeraToma = null;
+var estadoAnterior = null;
+var examencurva = null;
+var examendesc = null;
+var tomasPendientes = false;
+
+function cargarCurvasTolerancia(norden, idmuestra) {
+    
+    tomasPendientes = false;
+    
+    $('#tablaTestsCurva tbody').empty();
+    
+    if ( $.fn.DataTable.isDataTable('#tablaTestsCurva') ){
+        $('#tablaTestsCurva').DataTable().clear().destroy();
+    }
+    
+    $.ajax({
+        type: "get",
+        url: getctx + "/api/examenes/"+norden+"/"+idmuestra,
+        datatype: "json",
+        async: false,
+        success: function (data) {
+            examencurva = data.ce_IDEXAMEN;
+            $("#pacienteCurva").text(data.nombres);
+            $("#examenCurva").text(data.ce_ABREVIADO);
+        },
+        error: function (msg) {
+            console.log(msg);
+        }
+    });
+    
+    /*
+    let nombres = null;
+    
+    $.ajax({
+        type: "get",
+        url: getctx + "/api/paciente/orden/"+norden,
+        datatype: "json",
+        async: false,
+        success: function (message) {
+            let paciente = message.dato;
+            if (typeof paciente.dp.dpNombreencriptado !== 'undefined'){
+                nombres = paciente.dp.dpNombreencriptado;
+            } else if (typeof paciente.dp.dpNombresocial !== 'undefined'){
+                nombres = paciente.dp.dpNombresocial;
+            } else {
+                nombres = paciente.dp.dpNombres + " " + paciente.dp.dpPrimerapellido + " " + paciente.dp.dpSegundoapellido;
+            }
+        },
+        error: function (msg) {
+            console.log(msg);
+        }
+    });
+    
+    $.ajax({
+        type: "GET",
+        url: getctx + "/api/tomaMuestras/examenes/muestra/"+idmuestra,
+        datatype: "json",
+        async: false,
+        success: function (data) {
+            for (let examen of data){
+                if (examen.ceEscurvatolerancia === 'S'){
+                    examencurva = examen.ceIdexamen;
+                    examendesc = examen.ceAbreviado;
+                }
+            }
+        }
+    });
+    */
+    
+    
+    tablaCurvas = $('#tablaTestsCurva').DataTable({
+        // responsive: false,
+        searchDelay: 500,
+        orderCellsTop: true,
+        scrollY: 200,
+        scrollX: true,
+        paging: false,
+        ordering: false,
+        searching: false,
+        info: false,
+        //@GetMapping(value="/api/tomaMuestras/curvaTolerancia/{nOrden}/{idExamen}")
+        ajax: {
+                url: getctx + "/api/tomaMuestras/curvaTolerancia/"+norden+"/"+examencurva,
+                type: "GET",
+                contentType: "application/json",
+                dataSrc: "",
+                dataType: "json",
+                async: false
+        },
+        columns: [
+                {data: 'estadomuestra', responsivePriority: -2},
+                {data: 'test'},
+                {data: 'minutos'},
+                {data: ''},
+                {data: 'tomada'},
+                {data: 'nromuestra'},
+                {data: 'muestra'},
+                {data: 'flebotomista'}
+        ],
+        columnDefs: [
+            {
+                //Estado Muestra
+                targets: 0,
+                title: 'Tomado',
+                className: 'dt-center',
+                render: function(data, type, row) {
+                    let estadoCheck = "";
+                    let titulo = "";
+                    if (estadoAnterior !== null && estadoAnterior === 'P'){
+                        estadoCheck = "disabled";
+                        titulo = "Primero debe tomar muestra anterior";
+                    }
+                    if (data === 'T') {
+                        estadoCheck = "checked disabled";
+                    }
+                    estadoAnterior = data;
+                    //console.log("estadoAnterior: "+estadoAnterior);
+                    return '<label class="checkbox checkbox-single checkboxMuestra" title="'+titulo+'">\
+                                <input type="checkbox" class="checkable" onclick=\'tomarMuestraCurva('+row['idmuestra']+', '+norden+')\' ' + estadoCheck + ' />\
+                                <span></span></label>';
+                }
+
+            },{
+                //Tomar a las
+                targets: 3,
+                title: 'Tomar a las',
+                data: null,
+                render: function ( data, type, row ) {
+                    //Esto es por si queda corriendo el tiempo cuando se vuelven todas las tomas a pendiente
+                    if (row['estadomuestra']==='P'){
+                        tomasPendientes = true;
+                        if (row['minutos']==0){
+                            timePrimeraToma = null;
+                        }
+                    }
+                    
+                    //Calcular segÃºn la hora en que se tomÃ³ la primera muestra
+                    if (row['estadomuestra']==='T' && row['minutos']==0){
+                        let fechaTM = row['tomada'];
+                        let dia = fechaTM.substring(0, 2);
+                        let mes = fechaTM.substring(3, 5);
+                        let year = fechaTM.substring(6, 10);
+                        let hora = fechaTM.substring(11, 13);
+                        let minutes = fechaTM.substring(14, 16);
+                        let seconds = fechaTM.substring(17, 19);
+                        timePrimeraToma = new Date(year, mes-1, dia, hora, minutes, seconds);
+                    }
+                    //Calcula la hora que se debe tomar cada muestra a partir de la fecha de primera toma y los minutos basales de cada muestra
+                    if(timePrimeraToma !==null){
+                        let epochFechaFormat = Math.floor(timePrimeraToma.getTime()/1000.0)
+                        //console.log("test: "+ row['test'])
+                        //console.log("mins basal: "+ row['minutos'])
+                        let epochMinsBasal = row['minutos']*60;
+                        let epochFinal = epochFechaFormat + epochMinsBasal;
+                        let myDate = new Date(epochFinal*1000);
+                        //console.log(myDate.toLocaleString());
+                        return myDate.getHours().toString().padStart(2,"0") + ":" + myDate.getMinutes().toString().padStart(2,"0");
+                    }
+                    return null;
+                }
+            },{
+                //Tomado a las
+                targets: 4,
+                title: 'Tomado a las',
+                render: function ( data, type, row ) {
+                    //const fechaTM = data;
+                    let tomado = null;
+                    if (data !== null){
+                        //dia = fechaTM.substring(0, 2);
+                        //mes = fechaTM.substring(3, 5);
+                        //year = fechaTM.substring(6, 10);
+                        let horaTomada = data.substring(11, 13);
+                        let minsTomada = data.substring(14, 16);
+                        tomado = horaTomada + ":" + minsTomada;
+                        return "<input id='timeManual"+row['idmuestra']+"' type='time' value='"+tomado+"' onkeypress=\'tomarHoraManual("+row['idmuestra']+","+norden+")\'></input>";
+                    }
+                    return null;
+                }
+            }
+        ],
+        initComplete: function () {
+            if (estadoAnterior !== null){
+                estadoAnterior = null;
+            }
+            if (intervalo!==null){
+                clearInterval(intervalo);
+            }
+            if(timePrimeraToma !== null){
+                if (tomasPendientes){
+                    crearIntervalo(timePrimeraToma);
+                }
+                
+            }
+        }
+    });
+}
+
+    /*
+    tablaCurvas.on( 'xhr', function ( e, settings, json ) {
+        console.log("event")
+        mostrarRegistroAcciones(norden);
+    } );
+    */
+
+function tomarMuestraCurva(idMuestra, norden){
+    let usuario = $('select[name=dUsuario] option').filter(':selected').val();
+    $.ajax({
+        type: "post",
+        url: getctx + "/api/tomaMuestras/tests/curvaTolerancia/save/" + idMuestra + "/" + usuario,
+        datatype: "json",
+        success: function () {
+            tablaCurvas.ajax.reload( null, false );
+            table.ajax.reload( null, false );
+            tableMuestras.ajax.reload( null, false );
+            $.notify({ message: "Flebotomista cambiado exitosamente" }, { type: "success" });
+            if (intervalo===null){
+                $("#minsCurva").val("00:00");
+                let hora = null;
+                intervalo = setInterval( function () {
+                    if (segs < 59){
+                        segs++;
+                    } else {
+                        segs = 0;
+                        mins++;
+                    }
+                    if (mins>59){
+                        if (hora===null){
+                            hora = 1
+                        } else {
+                            hora++;
+                        }
+                    }
+                    let timeCurva = (hora!==null ? hora + "H:" : "") + mins.toString().padStart(2,"0") + ":" + segs.toString().padStart(2,"0");
+                    $("#minsCurva").val(timeCurva);
+
+                }, 1000 );
+            }
+        },
+        error: function (msg) {
+            $.notify({ message: "Error al cambiar flebotomista" }, { type: "danger" });
+            console.log(msg);
+        }
+    });
+    mostrarRegistroAcciones(norden)
+}
+
+function tomarHoraManual(idMuestra, norden){
+    let key = window.event.keyCode;
+    if (key === 13) {
+        let usuario = $('select[name=dUsuario] option').filter(':selected').val();
+        let time = $("#timeManual"+idMuestra).val();
+        let timeArray = time.split(":");
+        let hora = parseInt(timeArray[0]);
+        let min = parseInt(timeArray[1]);
+        let fechaToma = new Date(timePrimeraToma.getFullYear(), timePrimeraToma.getMonth(), timePrimeraToma.getDate(), hora, min);
+        //console.log("fechaToma: "+fechaToma)
+        
+        if (hora < timePrimeraToma.getHours() || (hora == timePrimeraToma.getHours() && min < timePrimeraToma.getMinutes())){
+            //let fechaToma = new Date();
+            fechaToma.setDate(timePrimeraToma.getDate()+1)
+            fechaToma.setHours(hora)
+            fechaToma.setMinutes(min)
+            //console.log("fechaToma+1: "+fechaToma)
+        }
+        
+        let epochFechaToma = Math.floor(fechaToma.getTime() /1000.0);
+        console.log("epochFechaToma: "+epochFechaToma)
+        $.ajax({
+            type: "post",
+            url: getctx + "/api/tomaMuestras/tests/curvaTolerancia/tomaManual/" + idMuestra + "/" + epochFechaToma + "/" +usuario,
+            datatype: "json",
+            success: function () {
+                tablaCurvas.ajax.reload( null, false );
+                table.ajax.reload( null, false );
+                tableMuestras.ajax.reload( null, false );
+                $.notify({ message: "Flebotomista cambiado exitosamente" }, { type: "success" });
+            },
+            error: function (msg) {
+                $.notify({ message: "Error al cambiar flebotomista" }, { type: "danger" });
+                console.log(msg);
+            }
+        });
+        if (intervalo===null){
+            $("#minsCurva").val("00:00");
+            intervalo = setInterval( function () {
+                if (segs < 59){
+                    segs++;
+                } else {
+                    segs = 0;
+                    mins++;
+                }
+                if (mins>59){
+                    if (hora===null){
+                        hora = 1
+                    } else {
+                        hora++;
+                    }
+                }
+                let timeCurvaNew = (hora!==null ? hora + "H:" : "") + mins.toString().padStart(2,"0") + ":" + segs.toString().padStart(2,"0");
+                $("#minsCurva").val(timeCurvaNew);
+
+            }, 1000 );
+        }
+    }
+    mostrarRegistroAcciones(norden)
+}
+
+function crearIntervalo(timePT){
+    let today = new Date();
+    console.log("today: "+today)
+    console.log("time 1Â° toma: "+timePT)
+    let epochToday = Math.floor(today.getTime() /1000.0);
+    let epochFechaToma = Math.floor(timePT.getTime() /1000.0);
+    let time = epochToday - epochFechaToma;
+    console.log("time: "+time)
+    mins = Math.floor(time / 60);
+    segs = time - (mins * 60);
+    console.log("segs: "+segs)
+    let hora = null;
+    if (mins >= 60){
+        hora = Math.floor(time / 3600);
+        mins = mins - (hora * 60);
+    }
+    let timeCurva = (hora!==null ? hora + "H:" : "") + mins.toString().padStart(2,"0") + ":" + segs.toString().padStart(2,"0");
+    $("#minsCurva").val(timeCurva);
+    //crea el intervalo para configurar el tiempo transcurrido
+    intervalo = setInterval( function () {
+        if (segs < 59){
+            segs++;
+        } else {
+            segs = 0;
+            mins++;
+        }
+        if (mins>59){
+            if (hora===null){
+                hora = 1
+            } else {
+                hora++;
+            }
+        }
+        timeCurva = (hora!==null ? hora + "H:" : "") + mins.toString().padStart(2,"0") + ":" + segs.toString().padStart(2,"0");
+        $("#minsCurva").val(timeCurva);
+
+    }, 1000 );
+}
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.examenes.js b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.examenes.js
index 46894b75..3de38353 100644
--- a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.examenes.js
+++ b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.examenes.js
@@ -64,7 +64,7 @@ function generarQryString(examenesSeleccionados) {
 }
 
 function cargarResultadosExamenesTabla(pNroOrden, key = false) {
-  loadResultadosExamenesSeleccionadosOrden(pNroOrden, key);
+  loadResultadosExamenesOrden(pNroOrden, key);
 }
 
 function getExamenesOrden(filtro) {
@@ -213,6 +213,7 @@ var initTableInfoExamenesOrden = function(jqDtId) {
     ],
     select: {
       style: 'multi',
+      //selector: 'td:first-child',
       selector: 'td:not(:last-child)',
       items: 'cell',
 
@@ -227,10 +228,6 @@ var initTableInfoExamenesOrden = function(jqDtId) {
       { "data": "cee_DESCRIPCIONESTADOEXAMEN", orderable: false },
       { "data": "dfe_EXAMENESURGENTE", orderable: true },
       { "": "", orderable: false },
-      { "data": "ce_IDSECCION", orderable: false },
-      { "data": "dfe_EXAMENANULADO", orderable: false },
-      
-      
     ],
 
     "initComplete": function(settings, json) {
@@ -345,18 +342,7 @@ var loadInfoExamenesOrden = function(nroOrden, key = false) {
 
   let url = gCte.getctx + "/api/orden/" + nroOrden + "/examenes/muestras";
   let setExamenesSeleccionados = genSetExamenSeleccionado(nroOrden, key);
-//  tableInfoExamenesOrden.ajax.url(url).load(setExamenesSeleccionados);
-  tableInfoExamenesOrden.ajax.url(url).load(searchExamenesAnulados);
-  
-  let pLstExamenesSeleccionados = [];//obtenerExamenesDeTablaDeExamenes(tableInfoExamenesOrden);
-  paramResultadosExamenesSeleccionados.examenes = pLstExamenesSeleccionados;
-  paramResultadosExamenesSeleccionados.paciente.fnac = gFechaNacimientoPaciente;
-  paramResultadosExamenesSeleccionados.paciente.sexo = gSexoPaciente;
-
-  url = gCte.getctx + "/api/orden/" + nroOrden + "/examenes/resultados";
-  tableResultadosExamenesOrden.ajax.url(url).load(searchResultadosAnulados);
-//    setExamenesSeleccionados();
-
+  tableInfoExamenesOrden.ajax.url(url).load(setExamenesSeleccionados);
 }
 
 function disable(id) {
@@ -717,9 +703,6 @@ function genSetExamenSeleccionado(nroOrden, key = false) {
   return function setExamenesSeleccionados() {
     let inputs = $("input[data-colselector]");
     const nInputs = inputs.length;
-    if (nInputs === 0){
-      return;
-    }
     for (let i = 0; i < nInputs; i++) {
       inputs[i].checked = true;
     }
@@ -836,56 +819,3 @@ function getDocumentos(idOrden, idExamen) {
   $("#testDocModal").modal('show');
     modalUploadGetDocumentosExamenesOrden(idOrden,idExamen);
 }
-
-function searchExamenesAnulados() {
-  let val = 'N';
-  let columna = tableInfoExamenesOrden.column(10);
-  console.log('*************************************');
-  console.table(columna.data());
-//  console.table(tableInfoExamenesOrden.data());
-  console.log('*************************************');
-  columna.search(val, true, false, false).draw();
-  resetOrdenProgress();
-  searchExamenesSeccion(gSeccionSeleccionada);
-}
-
-function searchExamenesSeccion(seccion) {
-  let columna = tableInfoExamenesOrden.column(9);
-  columna.search(seccion, true, false, false).draw();
-  resetOrdenProgress();
-}
-
-function obtenerExamenesDeTablaDeExamenes(pTableInfoExamenesOrden) {
-
-  let inputs = $("input[data-colselector]");
-  let examenesSeleccionados = new Array();
-
-  const nInputs = inputs.length;
-
-  for (let i = 0; i < nInputs; i++) {
-      examenesSeleccionados.push(pTableInfoExamenesOrden.row(i).data());
-  }
-
-  if (examenesSeleccionados === undefined || examenesSeleccionados === null) {
-    handlerMessageError('Revisar selecciÃ³n de mensajes.');
-    return false;
-  }
-  const n = examenesSeleccionados.length;
-  if (n === 0) {
-    handlerMessageWarning('Seleccionar al menos un examen');
-    return false;
-  }
-  let idSeleccionados = new Array();
-  for (let i = 0; i < n; i++) {
-    let tupla = new Object();
-    tupla.df_NORDEN = examenesSeleccionados[i].dfe_NORDEN;
-    tupla.dfe_IDEXAMEN = examenesSeleccionados[i].dfe_IDEXAMEN;
-    tupla.dfe_CODIGOESTADOEXAMEN = examenesSeleccionados[i].dfe_CODIGOESTADOEXAMEN;
-    tupla.ce_ABREVIADO = examenesSeleccionados[i].ce_ABREVIADO;
-    tupla.ce_CODIGOEXAMEN = examenesSeleccionados[i].ce_CODIGOEXAMEN;
-    tupla.cee_DESCRIPCIONESTADOEXAMEN = examenesSeleccionados[i].cee_DESCRIPCIONESTADOEXAMEN;
-    idSeleccionados.push(tupla);
-  }
-  return idSeleccionados;
-}
-
diff --git a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.historico-copy.js b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.historico-copy.js
deleted file mode 100644
index df2c0cef..00000000
--- a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.historico-copy.js
+++ /dev/null
@@ -1,286 +0,0 @@
-/**
- * Cristian
- */
-/*
-
-
-*/
-
-let arrayPosicion = [];
-let datosUnidad;
-let datosGraficos = [];
-let labels = [];
-
-async function iniciarHistorico(nOrden, idExamen, idTest) {
-
-
-
-	let datosFicha = await getFichaExamenTest(nOrden, idExamen, idTest);
-
-
-	let datos = await getPacienteTest(datosFicha.dp_IDPACIENTE, datosFicha.dfet_IDTEST);
-
-	let htmlTabla = agregarPrimerDatoHistoricoTabla1(datos, nOrden);
-
-
-	agregarDatosHistoricoTabla1(datos, nOrden, htmlTabla);
-	agregarDatosPaciente(datosFicha);
-	agregarDatosHistoricoTabla2(nOrden);
-
-	crearGraficoHistorico(datos, nOrden);
-
-	$("#historicoModal").modal('show');
-
-
-}
-
-
-
-//AQUI SE CONSTRUYE GRAFICO *****************************************
-function crearGraficoHistorico(datos, nOrden) {
-	const $grafica = document.querySelector("#graficaHistorico");
-	// Las etiquetas son las que van en el eje X. 
-	const fechasX = [];
-	const datosY = [];
-
-	fechasX.splice(0, fechasX.length - 1)
-	datosY.splice(0, fechasX.length - 1)
-	datos.forEach(element => {		//Datos en objecto [0]-> idTest [1]->fechaingresoresultado [2]->resultado [3]->nOrden [4]->idExamen -> [5]->resultadonumerico [6]->unidadMedida [7]-->CodigoMedida
-		if (element[9] === 5 || element[3] === nOrden) {
-			let date;
-			let resultado;
-			if (element[1] == null) {
-				date = new Date(Date.now());
-			} else {
-				date = new Date(element[1]);
-			}
-			fechaDate = date.getDate() +
-				"/" + (date.getMonth() + 1) +
-				"/" + date.getFullYear();
-			if (element[5] != null) {
-				resultado = element[5];
-			} else {
-				resultado = 0;
-			}
-			fechasX.push(fechaDate);			
-			datosY.push(resultado);
-		}
-	})
-	fechasX.reverse();
-	agregarDatosGrafico(fechasX, datosY, datos[0][7]);
-}
-
-//******************************************************************************** */
-
-
-function agregarPrimerDatoHistoricoTabla1(datos, nOrden) {
-	let htmlTabla = "";
-
-	datos.forEach(element => {
-		//Datos en objecto [0]-> idTest [1]->fechaingresoresultado [2]->resultado [3]->nOrden [4]->idExamen -> [5]->resultadonumerico [6]->unidadMedida [7]-->CodigoMedida
-
-
-		if (element[3] == nOrden) {
-
-			let date;
-			let resultado = "";
-			if (element[1] == null) {
-				date = new Date(Date.now());
-			} else {
-				date = new Date(element[1]);
-			}
-
-			if (element[5] != null) {
-				resultado = element[5];
-			}
-			$("#resultadoDeltaCheck").val(resultado)
-			htmlTabla = htmlTabla + "<tr class='text-center'><td>"
-				+ date.getDate() +
-				"/" + (date.getMonth() + 1) +
-				"/" + date.getFullYear() + "</td>"
-				+ "<td><a href='#' id='nOrdenHistorico' onclick='agregarDatosHistoricoTabla2(" + element[3] + "," + resultado + ")' style='color:blue;'>" + element[3] + "</a></td>"
-				+ "<td>" + resultado + "</td>"
-				+ "<td>" + element[7] + "</td>"
-				+ "</tr>";
-
-		}
-	})
-	return htmlTabla;
-}
-
-
-function agregarDatosPaciente(datos) {
-	$("#pacienteHistorico").html(datos.dp_NOMBRES + " " + datos.dp_PRIMERAPELLIDO);
-	$("#testHistorico").html(datos.ct_ABREVIADO);
-}
-
-
-async function agregarDatosHistoricoTabla1(datos, nOrden, hTabla) {
-
-	let htmlTabla = hTabla;
-
-	datos.forEach(element => {
-		if (nOrden != element[3]) {
-			let resultado = "";
-			if (element[9] === 5) {
-				//Datos en objecto [0]-> idTest [1]->fechaingresoresultado [2]->resultado [3]->nOrden [4]->idExamen -> [5]->resultadonumerico [6]->unidadMedida [7]-->CodigoMedida [8]-->examenfirmado
-				if (element[5] != null) {
-					resultado = element[5];
-				}
-				let date = new Date(element[1]);
-				if (element[1] == null) {
-					date = new Date(Date.now());
-				} else {
-					date = new Date(element[1]);
-				}
-				console.log("pase a agregar html")
-				console.log(element[3])
-				htmlTabla = htmlTabla + "<tr class='text-center'>"
-					+ "<td>" + date.getDate() +
-					"/" + (date.getMonth() + 1) +
-					"/" + date.getFullYear() + "</td>"
-					+ "<td><a href='#' id='nOrdenHistorico' onclick='agregarDatosHistoricoTabla2(" + element[3] + "," + resultado + ")' style='color:blue;'>" + element[3] + "</a></td>"
-					+ "<td>" + resultado + "</td>"
-					+ "<td>" + element[7] + "</td>"
-					+ "</tr>";
-			}
-		}
-	})
-	$("#tabla1ModalHistorico").html(htmlTabla)
-}
-
-
-
-
-async function agregarDatosHistoricoTabla2(nOrden, resul) {
-
-	$("#resultadoDeltaCheck").val(resul)
-	let datosTabla2 = await getOrdenTabla2(nOrden);
-	agregaDatosTabla2(datosTabla2, nOrden)
-
-}
-
-function agregaDatosTabla2(dato, nOrden) {
-	let date = new Date(Date.now())
-
-	if (dato[0][0] != null) {
-		date = new Date(dato[0][0]);
-	}
-	fechaHtml = date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
-	$("#ordenHistorico").html(nOrden);
-	$("#fechaHistorico").html(fechaHtml);
-	let htmlTabla = "";
-	dato.forEach(element => {
-		//Datos en objecto [0]->fechaOrden [1]->descTest [2]->resultado [3]->unidadMedida []4]->descExamen
-		let resultado = "";
-		if (element[2] != null) {
-			resultado = element[2];
-		}
-		htmlTabla = htmlTabla + "<tr class='text-center'>"
-			+ "<td>" + element[1] + "</td>"
-			+ "<td>" + resultado + " </td>"
-			+ "<td>" + element[3] + "</td>"
-			+ "<td>" + element[4] + "</td>"
-			+ "</tr>";
-	})
-
-	$("#tabla2ModalHistorico").html(htmlTabla)
-}
-
-async function getOrdenTabla2(nOrden) {
-	let url = gCte.getctx + '/api/orden/' + nOrden + '/examentest';
-	const result = await $.ajax({
-		type: "get",
-		url: url,
-		success: function(data) {
-			//prueba(data);
-		}
-	});
-	return result.dato;
-}
-
-
-
-async function getFichaExamenTest(nOrden, idExamen, idTest) {
-	let url = gCte.getctx + '/api/orden/' + nOrden + '/examen/' + idExamen + '/test/' + idTest;
-	const result = await $.ajax({
-		type: "get",
-		url: url,
-		success: function(data) {
-		}
-	});
-
-	return result.dato;
-}
-
-
-
-async function getPacienteTest(idPaciente, idTest) {
-	let url = gCte.getctx + '/api/paciente/' + idPaciente + '/test/' + idTest;
-	const result = await $.ajax({
-		type: "get",
-		url: url,
-		success: function(data) {
-			console.log("entre a buscar datos")
-		}
-	});
-
-	return result.dato;
-}
-
-
-//**********************************GRAFICO Listo/
-function agregarDatosGrafico(fechasX, datosY, unidad) {
-	console.log(fechasX)
-	var valores = datosY;
-
-	/*CONSTRUCCIÃN DE LA GRÃFICA*/
-	Highcharts.chart('graficaHistorico', {
-		chart: {
-			type: 'spline'
-		},
-		tooltip: {
-			headerFormat: '<b>Fecha {point.x}</b><br>',
-			pointFormat: 'Unidad {point.y} '
-		},
-
-		title: {
-			text: ''
-		},
-		yAxis: {
-			title: {
-				text: '<b>Unidad ' + unidad + '</b>'
-			}
-		},
-		xAxis: {
-			categories: fechasX
-		},
-		
-		series: [{
-			 color: '#8bbc21',
-			  marker: {
-            fillOpacity: 1,
-            lineWidth: 3,
-            lineColor: '#000000'
-        },
-			name: 'Fecha',
-			data: (function() {
-				var data = [];
-				for (var i = 0; i < valores.length; i++) {
-					data.push([valores[i]]);
-				}
-				return data;
-			})(),
-			
-		}],
-
-		credits: {
-			enabled: false
-		}
-
-	});
-
-}
-
-
-
diff --git a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.historico.js b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.historico.js
index c1cb54e4..aea6bed2 100644
--- a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.historico.js
+++ b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.historico.js
@@ -13,7 +13,6 @@ async function iniciarHistorico(nOrden, idExamen, idTest) {
 
 	
 
-
 	let datosFicha = await getFichaExamenTest(nOrden, idExamen, idTest);
 	
 	//agregado 07-10
@@ -37,12 +36,12 @@ async function iniciarHistorico(nOrden, idExamen, idTest) {
 
 
 	if (testNumerico) {
-
+		//let htmlTabla = agregarPrimerDatoHistoricoTabla1(datos, nOrden)		
 
 		agregarDatosHistoricoTabla1(datos, nOrden, "", "");
 		let resultado = 0;
 		agregarDatosPaciente(datosFicha);
-
+		
 		datos.forEach(element => {
 			if (element[3] == nOrden) {
 				if (element[5] != null) {
@@ -53,7 +52,6 @@ async function iniciarHistorico(nOrden, idExamen, idTest) {
 
 		agregarDatosHistoricoTabla2(nOrden, resultado)
 		crearGraficoHistorico(datos, nOrden);
-
 		$("#historicoModal").modal('show');
 	} else {
 		console.log("error, no son resultados numericos")
@@ -173,11 +171,9 @@ async function agregarDatosHistoricoTabla1(datos, nOrden, cantidad, porcentaje)
 	if (contador > 0) {
 		let totalDeltaPromedio = totalDelta / contador;
 
-
 		totalDeltaPorcentaje = totalDeltaPromedio * (porcentajeHistorico / 100)
 
 		$("#intervaloHistorico").val((totalDeltaPromedio - totalDeltaPorcentaje).toFixed(2) + "  -  " + (totalDeltaPorcentaje + totalDeltaPromedio).toFixed(2))
-
 	} else {
 		$("#intervaloHistorico").val("inf - sup")
 	}
@@ -267,7 +263,7 @@ async function getPacienteTest(idPaciente, idTest) {
 			return data;
 		}
 	});
-console.log(result.dato)
+
 	return result.dato;
 }
 
diff --git a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.js b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.js
index 8f2b1ba8..1f3ab965 100644
--- a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.js
+++ b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.js
@@ -71,7 +71,7 @@ $(document).ready(function() {
   $(".ocultar").hide();
   initTableInfoExamenesOrden("#examenesOrdenesDatatable");
   initTableResultadosExamenesOrden("#resultadosExamenesOrdenesDatatable");
-  $("#btnBuscarFiltro").click(loadResultadosExamenesSeleccionadosOrden);
+  $("#btnBuscarFiltro").click(loadResultadosExamenesOrden);
   $("#btnBuscarOrden").click(buscarOrden);
   $("#btnVerOrden").click(verOrden);  
   $("#btnRefreshBuscarOrden").click(function f() { reloadOrdenes(tableInfoOrdenes) ;});
@@ -154,7 +154,7 @@ function navegar(dir) {
 
 function buscarOrdenes() {
   if(validarBusquedaOrdenes()){
-    tableInfoOrdenes.ajax.reload();    
+    tableInfoOrdenes.ajax.reload();
     $("#buscarOrdenesModal").modal('hide');
   }
 }
@@ -357,9 +357,6 @@ function doAction(action, indexes) {
 }
 
 function buscarOrden() {
-	
-        $("#accordionPanelSeleccionOrden").collapse('show');
-   
   $("#buscarOrdenesModal").modal('show');
 }
 
diff --git a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.ordenes.js b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.ordenes.js
index a59b1c20..ec44b5f1 100644
--- a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.ordenes.js
+++ b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.ordenes.js
@@ -20,7 +20,6 @@ var isTableLoaded = false;
 var reloadTable = false;
 var intervalID = null;
 var fechaIsParm = null;
-var gSeccionSeleccionada= "";
 
 tipoAtencionColorMap['AMBULATORIO'] = 'ambulatorio';
 tipoAtencionColorMap['HOSPITALIZADO'] = 'hospitalizado';
@@ -35,7 +34,6 @@ function initParmTableInfoOrdenes(nOrden, sFIni, sFFin, nombre, apellido) {
 
 function getOrderDetail(idOrden) {
   $("#datosPacienteModal").modal('show');
-  console.log("entre a getoirder")
   orderDetail(idOrden);
   localSetCurrentOrderId(idOrden);
 }
@@ -96,8 +94,6 @@ tableInfoOrdenes = $('#ordenesDatatable').DataTable({
         ordenes[i].lstSecciones = rpta;
       }
       console.table(ordenes);
-      console.log("ordenes ")
-      console.log(ordenes[0])
       return ordenes;
     },
     processData: false,
@@ -199,7 +195,7 @@ function selectRowInfoOrdenes(data, key = false) {
     $("#accordionTestResultados").collapse('hide');
     tableInfoOrdenes.colClicked = -1;
   }
-//  tableResultadosExamenesOrden.clear();
+  tableResultadosExamenesOrden.clear();
 }
 
 tableInfoOrdenes.on('select', function(e, dt, type, indexes) {
@@ -214,7 +210,6 @@ tableInfoOrdenes.on('click', 'tbody td', function(e) {
 $("#seccionSelect").change(function() {
   const seccion = $(this).val();
   searchSeccion(seccion);
-  gSeccionSeleccionada = seccion;
 })
 
 tableInfoOrdenes.on('draw', function() {
@@ -346,7 +341,6 @@ function generarNombre(data, type, row, meta) {
 }
 
 function orderDetail(id) {
-	console.log("entre a ordeldetail")
   localSetCurrentOrderId(id);
   $.getJSON("Microbiologia/api/getOrderData", { orderId: id })
     .done(function(order) {
@@ -683,8 +677,7 @@ function reloadOrdenes(pTableInfoOrdenes, fecha) {
 }
 
 function setUserData(ordenSeleccionada) {
-	console.log("orden seleccionada")
-console.log(ordenSeleccionada)
+
   let nombreCompleto = ordenSeleccionada.dp_NOMBRES + ' ' + ordenSeleccionada.dp_PRIMERAPELLIDO;
   if (ordenSeleccionada.dp_SEGUNDOAPELLIDO !== null && ordenSeleccionada.dp_SEGUNDOAPELLIDO !== undefined) {
     nombreCompleto.concat(' ').concat(ordenSeleccionada.dp_SEGUNDOAPELLIDO);
@@ -694,10 +687,7 @@ console.log(ordenSeleccionada)
   $("#txtSexoPaciente").text(ordenSeleccionada.ldvs_DESCRIPCION);
   $("#txtEdadPaciente").text(ordenSeleccionada.sdp_FNACIMIENTO);
   $("#txtTipoAtencion").text(ordenSeleccionada.cta_DESCRIPCION);
-  //****agregado por cristian  09-11 **********
-  $("#txtLocalizacion").text(ordenSeleccionada.cs_DESCRIPCION);
-  $("#txtProcedencia").text(ordenSeleccionada.cp_DESCRIPCION)
-  //*****************************************************
+  $("#txtLocalizacion").text("Pdte");
   $("#txtNroOrden").text(ordenSeleccionada.df_NORDEN);
   $("#txtFechaOrden").text(ordenSeleccionada.sdf_FECHAORDEN);
   positionOrden(ordenSeleccionada.df_NORDEN);
@@ -709,11 +699,8 @@ function getUserData() {
   $("#txtSexoPaciente").text(ordenSeleccionada.ldvs_DESCRIPCION);
   $("#txtEdadPaciente").text(ordenSeleccionada.sdp_FNACIMIENTO);
   $("#txtTipoAtencion").text(ordenSeleccionada.cta_DESCRIPCION);
-  //****agregado por cristian  09-11 **********
- $("#txtLocalizacion").text(ordenSeleccionada.cs_DESCRIPCION);
-   $("#txtProcedencia").text(ordenSeleccionada.cp_DESCRIPCION)
-   //*******************************************************
-     $("#txtNroOrden").text(ordenSeleccionada.df_NORDEN);
+  $("#txtLocalizacion").text("Pdte");
+  $("#txtNroOrden").text(ordenSeleccionada.df_NORDEN);
   $("#txtFechaOrden").text(ordenSeleccionada.sdf_FECHAORDEN);
 }
 
diff --git a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.resultados.js b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.resultados.js
index 3835ce8f..6f2ed9b4 100644
--- a/src/main/webapp/resources/js/capturaresultados/CapturaResultados.resultados.js
+++ b/src/main/webapp/resources/js/capturaresultados/CapturaResultados.resultados.js
@@ -153,10 +153,13 @@ var initTableResultadosExamenesOrden = function(jqDtId) {
         targets: 12,
         render: genCell,
       },
+      { visible: false, "targets": [14], orderable: false },
+
       {
         targets: 13,
         data: null,
         defaultContent: '',
+
         title: 'Acciones',
         orderable: false,
         render: function(data, type, row, meta) {
@@ -201,9 +204,7 @@ var initTableResultadosExamenesOrden = function(jqDtId) {
       { "data": "dfet_IDMUESTRA" },
       { "": "" },
       { "": "" },
-      { "data": "ct_IDSECCION"},
-      { "data": "dfe_EXAMENANULADO" },
-      
+      { "data": "ct_IDSECCION" },
 
     ],
     "search": {
@@ -239,6 +240,7 @@ var initTableResultadosExamenesOrden = function(jqDtId) {
         break;
       case 12:
       case 13:
+      case 14:
         break;
       default:
         genNoFilter(colIndex, rowFilter);
@@ -284,15 +286,17 @@ var initTableResultadosExamenesOrden = function(jqDtId) {
     }
     getDominiosExamenes(globalselects);
     setGMClick();
-  });
 
+  });
 
+  tableResultadosExamenesOrden.on('preXhr', function(e, settings, data) {
+    console.table(data);
+  });
 
   tableResultadosExamenesOrden.on('xhr', function(e, settings, json, xhr) {
-
     if (json !== null && json !== undefined) {
       setSelect(json, 'cert_DESCRIPCIONESTADOTEST', 8);
-      searchResultadosAnulados();
+
     }
   });
 }
@@ -406,9 +410,10 @@ function actualizarValNumerico(inputElement, nroOrden) {
     else {
       handlerMessageError(respuesta.message);
     }
-//    searchResultadosAnulados();
 
   };
+  let _responseDataText = "";
+  let _jqXHR, _msg, _httpStatus = null;
 
   $.ajax({
     type: "POST",
@@ -436,7 +441,7 @@ function exito(result, status, xhr) {
   else {
     handlerMessageError(respuesta.message);
   }
-//searchResultadosAnulados();
+
 }
 
 
@@ -446,7 +451,7 @@ function fracaso(xhr, status, error) {
   handlerMessageError(error);
 }
 
-var loadResultadosExamenesSeleccionadosOrden = function(nroOrden, key = false) {
+var loadResultadosExamenesOrden = function(nroOrden, key = false) {
   let url = gCte.getctx + "/api/orden/" + nroOrdenSeleccionada + "/examenes/resultados";
   $("#accordionPanelExamenes").collapse('hide')
   pLstExamenesSeleccionados = obtenerExamenesSeleccionados(tableInfoExamenesOrden);
@@ -464,7 +469,6 @@ var loadResultadosExamenesSeleccionadosOrden = function(nroOrden, key = false) {
   paramResultadosExamenesSeleccionados.paciente.fnac = gFechaNacimientoPaciente;
   paramResultadosExamenesSeleccionados.paciente.sexo = gSexoPaciente;
   tableResultadosExamenesOrden.ajax.url(url).load(null, false).draw('page');
- // searchResultadosAnulados();
   $("#accordionTestResultados").collapse('show');
 
 }
@@ -652,7 +656,7 @@ function genHistoria(data, type, row, meta) {
   let resHistorico = formatHistoria(row.resultadoHistorico);
   let rpta = '<span class="font-weight-bold label-inline pointer" data-toggle="tooltip" data-html="true" title="' + resHistorico + '"  onclick="iniciarHistorico(' + row.df_NORDEN + ',' + row.dfe_IDEXAMEN + ',' + row.dfet_IDTEST + ' )">' + resHistorico + '</span>';
   if (row.resultadoHistorico == null) {
-    rpta = '<span class="font-weight-bold label-inline pointer" onclick="iniciarHistorico(' + row.df_NORDEN + ',' + row.dfe_IDEXAMEN + ',' + row.dfet_IDTEST + ' )"> </span>';
+    rpta = '<span class="font-weight-bold label-inline pointer" onclick="iniciarHistorico(' + row.df_NORDEN + ',' + row.dfe_IDEXAMEN + ',' + row.dfet_IDTEST + ' )"></span>';
   }
   return rpta;
 }
@@ -695,18 +699,6 @@ function genCell(data, type, row, meta) {
   return rpta;
 }
 
-function genSec(data, type, row, meta) {
-  let rpta = `<input type='text' disabled class='form-control' value=${row.ct_IDSECCION}>`;
-  return rpta;
-}
-
-function genNulo(data, type, row, meta) {
-  let rpta = `<input type='text' disabled class='form-control' value=${row.dfe_EXAMENANULADO}>`;
-  return rpta;
-}
-
-
-
 function genDeltaCheck(data, type, row, meta) {
   let lst = row.deltaCheckLst;
   let nOrden = row.df_NORDEN;
@@ -1117,7 +1109,6 @@ function bloquearTest() {
   console.log('bloquearTest' + examenes.length);
 }
 function retirarFirma() {
-
   const examenes = obtenerResultadosSeleccionados(tableResultadosExamenesOrden);
   if (examenes === false) {
     handlerMessageError("Seleccionar al menos un Test");
@@ -1159,6 +1150,7 @@ function cambiarEstado(elemento, nOrden, idExamen, idTest, estado) {
       actionTest("BLOQUEAR", examen);
     }
     else if (elemento.value === "PENDIENTE") {
+
       actionTest("DESBLOQUEAR", examen);
     }
   }
@@ -1182,7 +1174,6 @@ function setSelect(json, fieldName, index) {
 }
 
 function actionTest(action, examenSeleccionado) {
-	console.log(examenSeleccionado)
   let url = gCte.getctx + '/api/test/action/' + action;
   $.ajax({
     type: "POST",
@@ -1294,20 +1285,3 @@ function gmClick(e) {
 }
 
 
-function searchResultadosAnulados() {
-  let val = 'N';
-  let columna =tableResultadosExamenesOrden.column(15);
-  console.log('**************Resultados**********************');
-  console.table(columna.data());
-//  console.table(tableResultadosExamenesOrden.data());
-  console.log('**************Resultados**********************');
-  columna.search(val, true, false, false).draw();
-  resetOrdenProgress();
-  searchResultadosSeccion(gSeccionSeleccionada);
-}
-
-function searchResultadosSeccion(seccion) {
-  let columna = tableResultadosExamenesOrden.column(14);
-  columna.search(seccion, true, false, false).draw();
-  resetOrdenProgress();
-}
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/common/EtiquetaImpresion.js b/src/main/webapp/resources/js/common/EtiquetaImpresion.js
index 5baf0546..6138eb90 100644
--- a/src/main/webapp/resources/js/common/EtiquetaImpresion.js
+++ b/src/main/webapp/resources/js/common/EtiquetaImpresion.js
@@ -39,7 +39,7 @@ $(document).ready(function() {
   gEtiquetaImpresion.bo_OrdenesTable = new BiolisDatatableOrdenes('#bo_t_ordenes', gEtiquetaImpresion.boBuscador,clickOnOrden);
   $("#bo_btnBuscarOrden").click(gEtiquetaImpresion.bo_OrdenesTable.doSearch);
 //  bo_OrdenesTable.bo_OrdenesDatable.on('select',function(e,dt,type,indexes){alert('Select');});
-let columnas = [0,4,5,9,10,11,12,13,14,15,16,19,20,21,22,23,24];
+let columnas = [0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];
 const n = gEtiquetaImpresion.bo_OrdenesTable.bo_OrdenesDatable.columns().nodes().length;
 for (let i=0; i<n; i++){
     for (let j=0; j<columnas.length; j++){
diff --git a/src/main/webapp/resources/js/common/ModuloBiosbo.js b/src/main/webapp/resources/js/common/ModuloBiosbo.js
index 786ca61d..9d80b449 100644
--- a/src/main/webapp/resources/js/common/ModuloBiosbo.js
+++ b/src/main/webapp/resources/js/common/ModuloBiosbo.js
@@ -222,8 +222,6 @@ class BiolisBuscadorOrdenes {
       boFormData.bo_procedencia = $("#bo_procedencia").val();
       boFormData.bo_servicio = $("#bo_servicio").val();
       boFormData.bo_seccion = $("#bo_seccion").val();
-      console.log("examene     numero")
-      console.log( $("#bo_seccion").val())
       boFormData.bo_examen = $("#bo_examen").val();
     }
     
@@ -420,7 +418,6 @@ class BiolisDatatableOrdenes {
         { "data": "df_NORDEN" },
         { "data": "df_NORDEN" },
         { "data": "sdf_FECHAORDEN" },
-        { "data": "ldvfet_DESCRIPCION"},
         { "data": "df_OBSERVACION" },
         { "data": "dp_IDPACIENTE" },
         { "data": "ldvtd_DESCRIPCION" },
@@ -429,9 +426,8 @@ class BiolisDatatableOrdenes {
         { "data": "dp_NOMBRES" },
         { "data": "dp_PRIMERAPELLIDO" },
         { "data": "dp_SEGUNDOAPELLIDO" },
-        { "data": "dp_EMAIL" },
-        { "data": "sdp_FNACIMIENTO" },
         { "data": "sdp_FNACIMIENTO" },
+        { "data": "dp_EMAIL" },
         { "data": "ldvs_DESCRIPCION" },
         { "data": "dp_OBSERVACION" },
         { "data": "cta_DESCRIPCION" },
@@ -443,18 +439,19 @@ class BiolisDatatableOrdenes {
         { "data": "df_IDCENTRODESALUD" },
         { "data": "df_IDPRIORIDADATENCION" },
         { "data": "cs_DESCRIPCION" },
+        { "data": "ldvfet_DESCRIPCION" },
       ],
             "columnDefs":
         [
             {
-                targets: 8, //Nombre completo
-                visible:true,
+                targets: 7, //Nombre completo
+                visible:false,
                 render: function (data, type, row){
                     return data+" "+row['dp_PRIMERAPELLIDO']+" "+(row['dp_SEGUNDOAPELLIDO'] || "");
                 }
             
             },{
-                targets: 3,
+                targets: 24,
                 render: function (data, type, meta) {
                     var status = {
                         "ATENDIDO": {'class': ' label-light-success'},
diff --git a/src/main/webapp/resources/js/common/ModuloBiosboActualizado.js b/src/main/webapp/resources/js/common/ModuloBiosboActualizado.js
index c0a70750..4c79b734 100644
--- a/src/main/webapp/resources/js/common/ModuloBiosboActualizado.js
+++ b/src/main/webapp/resources/js/common/ModuloBiosboActualizado.js
@@ -153,7 +153,7 @@ class BiolisBuscadorOrdenes {
   }
 
   boFnSetGetFormData(me) {
-console.log("entre a a getformdata")
+
     return function(e) {
       console.table(e);
       e.preventDefault();
diff --git a/src/main/webapp/resources/js/common/dual-data-edicion.js b/src/main/webapp/resources/js/common/dual-data-edicion.js
index 3c2b1d14..49b750bb 100644
--- a/src/main/webapp/resources/js/common/dual-data-edicion.js
+++ b/src/main/webapp/resources/js/common/dual-data-edicion.js
@@ -1,76 +1,3 @@
-class  MixinValidation{
-   validar(itemId){
-    let resultado = false;
-    if(Ordeneslst.muestratomada == 'S'){
-      try {
-	
-        let data = Ordeneslst.tests.reduce((acc,test,indice) =>{
-	
-          if(itemId == test.idexamen){
-	console.log(test.idexamen , test.idenvase)
-            let d = {"idexamen":test.idexamen,"idtest":test.idtest,"idmuestra":test.idmuestra,"idenvase":test.idenvase};
-            return d;
-          }
-            return acc;
-          },{});
-          if(!jQuery.isEmptyObject(data)){
-            Ordeneslst.testsParaEnviar = [...Ordeneslst.testsParaEnviar,data];
-            Ordeneslst.testsParaEnviar = [...new Map(Ordeneslst.testsParaEnviar.map(item => [item["idexamen"], item])).values()];
-            resultado = true;
-          }else{
-            handlerMessageError("No se puede agregar el examen ya que no contiene muestras tomadas");
-            resultado = false;
-          }
-          // Ordeneslst.tests.splice(data, 1);
-      } catch (error) {
-        return false;
-      }
-   
-      } else if(Ordeneslst.muestratomada == 'N'){
-        return true;
-      }else{
-        handlerMessageError("No se puede agregar el examen ya que no contiene muestras tomadas");
-      }
-      return resultado;
-   }
-   validarPaneles(examenes){
-    let resultado = false;
-    if(Ordeneslst.muestratomada == 'S'){
-      try {
-        let data = Ordeneslst.tests.reduce((acc,test,indice) =>{
-          //verifica que exista
-         let itemId = Object.keys(examenes).some(function(k) {
-            return examenes[k]["ceIdexamen"] === test.idexamen ;
-          })
-  
-          if(itemId){
-            return acc[0] = [...acc, {"idexamen":test.idexamen,"idtest":test.idtest,"idmuestra":test.idmuestra,"idenvase":test.idenvase}];
-          }
-            return acc;
-          },[]);
-          if(!jQuery.isEmptyObject(data)){
-            Ordeneslst.testsParaEnviar = [...Ordeneslst.testsParaEnviar,...data];
-            Ordeneslst.testsParaEnviar = [...new Map(Ordeneslst.testsParaEnviar.map(item => [item["idexamen"], item])).values()];
-            // data.forEach(element =>{
-            //   Ordeneslst.tests.splice(element, 1);
-            // })
-  
-            return true;
-          }else{
-            return false;
-          }
-      } catch (error) {
-          return false;
-      }
-        
-      } else if(Ordeneslst.muestratomada == 'N'){
-        return true;
-      }
-      return resultado;
-   }
-}
-
-
 class DataItem { 
 
   ceCodigoexamen;
@@ -369,31 +296,25 @@ function testdc(e) {
 
 }
 
-class SelectVisualSource extends MixinValidation{
+class SelectVisualSource {
 
   jqid;
   suscriptores;
 
   constructor(jqid) {
-    super();
     this.jqid = jqid;
     let me = this;
+    console.log(jqid);
     $(this.jqid).change(this.selectCallback(this.jqid));
     $(this.jqid).dblclick(function() {
       // alert($(jqid.concat(" option:selected")).val());
-      let itemId = $(jqid.concat(" option:selected")).val();
+        let itemId = $(jqid.concat(" option:selected")).val();
       itemId = parseInt(itemId);
-      let esvalido = me.validar(itemId);
-      if(esvalido){
-        if(jqid === '#idDualDataVisualSource'){
-          me.suscriptores.forEach((suscriptor) => { suscriptor.add(suscriptor,itemId);});
-        }else if(jqid === '#idPanelDualDataVisualSource'){
-          console.log(me);
-          let item = vs.getSelectedItemById(itemId);
-          vt.addItem(item);
-          // let item =  me.getSelectedItemById(itemId);
-          console.log(item);
-        }
+      if(jqid === '#idDualDataVisualSource'){
+        me.suscriptores.forEach((suscriptor) => { suscriptor.add(suscriptor,itemId);});
+      }else if(jqid === '#idPanelDualDataVisualSource'){
+        let item =  me.getSelectedItemById(itemId);
+        console.log(item);
       }
     });
     $(this.jqid).keyup(function(e) {
@@ -401,14 +322,11 @@ class SelectVisualSource extends MixinValidation{
       if(keycode == '13'){
         let itemId = $(jqid.concat(" option:selected")).val();
         itemId = parseInt(itemId);
-        let esvalido = me.validar(itemId);
-        if(esvalido){
-          if(jqid === '#idDualDataVisualSource'){
-            me.suscriptores.forEach((suscriptor) => { suscriptor.add(suscriptor,itemId);});
-          }else if(jqid === '#idPanelDualDataVisualSource'){
-            let item = vs.getSelectedItemById(itemId);
-            vt.addItem(item);
-          }
+        if(jqid === '#idDualDataVisualSource'){
+          me.suscriptores.forEach((suscriptor) => { suscriptor.add(suscriptor,itemId);});
+        }else if(jqid === '#idPanelDualDataVisualSource'){
+          let item =  me.getSelectedItemById(itemId);
+          console.log(item);
         }
       }
     });
@@ -429,9 +347,6 @@ class SelectVisualSource extends MixinValidation{
 
   }
 
-
-
-
   getSelectedItemId() {
     let nId = parseInt($(this.jqid + "  option:selected").val());
     return nId;
@@ -503,8 +418,6 @@ class SelectVisualSource extends MixinValidation{
   };
 
   clear() { };
-
-  validar(itemId){return super.validar(itemId)}
 }
 
 class VisualTarget {
@@ -936,7 +849,6 @@ class DataTableVisualTarget {
 //    this.dataTable.adjust().draw(false);
 
   }
-
 }
 
 
@@ -1089,16 +1001,15 @@ class DataSearcher {
     }
     return lstNokIndx;
   }
+
   
 }
 
-class VisualSearcher extends MixinValidation {
+class VisualSearcher {
   dataSearcher;
   jqid;
   visualSource;
   constructor(jqid, visualSource) {
-    super();
-    let me = this;
     this.jqid = jqid;
     this.visualSource = visualSource;
     this.dataSearcher = new DataSearcher(this.visualSource.srcDatos);
@@ -1123,37 +1034,25 @@ class VisualSearcher extends MixinValidation {
       if(keycode == '13'){
          let countVal = myDataSearcher.countVal(this.value);
          if(countVal.length == 1){
-           //envia el item la otra tabla
-           console.log(countVal  ,'countVal');
-           let esvalido = me.validar(parseInt(countVal.toString()));
-            if(esvalido){
-              myVisualSource.suscriptores.forEach((suscriptor) => { suscriptor.add(suscriptor,parseInt(countVal.toString())); console.log(suscriptor) });
-            }
+          console.log(countVal);
+          //envia el item la otra tabla
+          myVisualSource.suscriptores.forEach((suscriptor) => { suscriptor.add(suscriptor,parseInt(countVal.toString())); console.log(suscriptor) });
+          $(jqid).val('');
          }else if(countVal.length > 0 && myVisualSource.visualElement.jqid == '#idPanelDualDataVisualSource'){
             let itemId = myVisualSource.getFirstItemId();
             let item =  myVisualSource.getSelectedItemById(itemId);
-            if(item !== undefined){
-              let esvalido = me.validarMultiple(item.dataValue.lstExamenes);
-              if(esvalido){
-                myVisualSource.removeItemById(itemId);
-                myVisualSource.suscriptores.forEach((suscriptor) => { 
-                  let vt = suscriptor.vt;
-                  vt.addItem(item);
-                });
-              }
-            }
-          }
-          $(jqid).val('');
+            myVisualSource.removeItemById(itemId);
+            myVisualSource.suscriptores.forEach((suscriptor) => { 
+              let vt = suscriptor.vt;
+              vt.addItem(item);
+            });
+
+            $(jqid).val('');
+         }
       }
   });
   
   }
-
-  validar(itemId){return super.validar(itemId)}
-
-  validarMultiple(examenes){
-     return super.validarPaneles(examenes);
-  }
 }
 
 
@@ -1471,10 +1370,7 @@ const RegistroOden = {
 };
 
 const Ordeneslst = {
-  idexamen: [],
-  muestratomada: "N",
-  tests:[],
-  testsParaEnviar:[],
+  idexamen: null,
 };
 
 class DataTypeahead{
@@ -1533,8 +1429,6 @@ class DataTypeahead{
 }
 
 
-
-
 let buscarDato = function (strs) {
   return function buscarIguales(q, cb) {
       let matches, substringRegex;
diff --git a/src/main/webapp/resources/js/edicionordenes/EdicionOrden.formulario.js b/src/main/webapp/resources/js/edicionordenes/EdicionOrden.formulario.js
index afd85cd3..86859ba7 100644
--- a/src/main/webapp/resources/js/edicionordenes/EdicionOrden.formulario.js
+++ b/src/main/webapp/resources/js/edicionordenes/EdicionOrden.formulario.js
@@ -8,10 +8,8 @@ $(function() {
       $(document).ready(function(){
         // $("#bo_btnBuscarOrden").click(obtPac);
 
-console.log("autorizacion")
-console.log($("#pideautorizeditorden").val());
-console.log($("#eliminarexamenes").val());
-console.log("********************")
+
+
 
 
         
@@ -154,11 +152,6 @@ console.log("********************")
 
         let difference = Ordeneslst.idexamen.filter(x => !datosFichasDTO.lstExamenes.includes(x));
         datosFichasDTO.lstExamenesEliminados = difference;
-        
-        
-        datosFichasDTO.tests = Ordeneslst.testsParaEnviar;
-
-
       
         return datosFichasDTO;
       
diff --git a/src/main/webapp/resources/js/edicionordenes/EdicionOrden.paneles.js b/src/main/webapp/resources/js/edicionordenes/EdicionOrden.paneles.js
index 6ca9a0f1..da3a84e5 100644
--- a/src/main/webapp/resources/js/edicionordenes/EdicionOrden.paneles.js
+++ b/src/main/webapp/resources/js/edicionordenes/EdicionOrden.paneles.js
@@ -35,15 +35,14 @@ var listaSexos;
     function eventoAdd() {
         let itemId = vs.getSelectedItemId();
         let item = vs.getSelectedItemById(itemId);
-        if(validarOnAdd(item,vs.visualElement.jqid)){
-            if (vs.visualElement.jqid !== "#idPanelDualDataVisualSource"){
-              vs.removeItemById(itemId);
-            }
-            vt.addItem(item);
-            vs.removePanelItem(item);
+        if (vs.visualElement.jqid !== "#idPanelDualDataVisualSource"){
+          vs.removeItemById(itemId);
         }
+        vt.addItem(item);
+        vs.removePanelItem(item);
     }
     function eventoAddMultiple(examenes) {
+        console.log(examenes)
         examenes.forEach(element =>{
             let dataItemAux =  new DataItem(element.idexamen,
                  element.codexamen,
@@ -80,21 +79,11 @@ var listaSexos;
         let itemsDele = vt.getAllItems();
         if(itemsDele.length > 1){
             let items = vt.getSelectedItems();
+            console.log(items);
             const yaAgregado =  Ordeneslst.idexamen.some(function(idExamens) {
                 return idExamens == items[0].id;
               });
           if(!yaAgregado){
-            let data = Ordeneslst.testsParaEnviar.reduce((acc,test,indice) =>{
-            if(items[0].id == test.Idexamen){
-                let d = {"Idexamen":test.Idexamen,"idtest":test.idtest,"idmuestra":test.idmuestra,"idenvase":test.idenvase};
-                return d;
-            }
-                return acc;
-            },{});
-            if(!jQuery.isEmptyObject(data)){
-                console.log(data);
-                Ordeneslst.testsParaEnviar.splice(data, 1);
-            }
             vt.removeItems(items);
             vs.addItems(items);
           }    
@@ -103,6 +92,7 @@ var listaSexos;
 
     function eventoLimpiar() {
         let items = vt.getItems();
+        console.log(items);
         vt.removeItems(items);
         vs.addItems(items);
     }
@@ -375,71 +365,3 @@ $('#idDataTarget').on( 'change', 'input.chck-urgente', function () {
 });
 
 
-
-
-function  validarOnAdd(examenes,jqId)
-{
-    if (jqId === "#idDualDataVisualSource"){
-        let resultado = false;
-        if(Ordeneslst.muestratomada == 'S'){
-          try {
-            let data = Ordeneslst.tests.reduce((acc,test,indice) =>{
-              if(examenes.id == test.idexamen){
-                let d = {"idexamen":test.idexamen,"idtest":test.idtest,"idmuestra":test.idmuestra,"idenvase":test.idenvase};
-                return d;
-              }
-                return acc;
-              },{});
-              if(!jQuery.isEmptyObject(data)){
-                Ordeneslst.testsParaEnviar = [...Ordeneslst.testsParaEnviar,data];
-                Ordeneslst.testsParaEnviar = [...new Map(Ordeneslst.testsParaEnviar.map(item => [item["idexamen"], item])).values()];
-                resultado = true;
-              }else{
-                handlerMessageError("No se puede agregar el examen ya que no contiene muestras tomadas");
-                resultado = false;
-              }
-              // Ordeneslst.tests.splice(data, 1);
-          } catch (error) {
-            return false;
-          }
-       
-          } else if(Ordeneslst.muestratomada == 'N'){
-            return true;
-          }else{
-            handlerMessageError("No se puede agregar el examen ya que no contiene muestras tomadas");
-          }
-          return resultado;
-      }
-      else{
-        let resultado = false;
-        if(Ordeneslst.muestratomada == 'S'){
-          try {
-            let data = Ordeneslst.tests.reduce((acc,test,indice) =>{
-              //verifica que exista
-             let itemId = Object.keys(examenes.dataValue.lstExamenes).some(function(k) {
-                return examenes.dataValue.lstExamenes[k]["ceIdexamen"] === test.idexamen ;
-              })
-      
-              if(itemId){
-                return acc[0] = [...acc, {"idexamen":test.idexamen,"idtest":test.idtest,"idmuestra":test.idmuestra,"idenvase":test.idenvase}];
-              }
-                return acc;
-              },[]);
-              if(!jQuery.isEmptyObject(data)){
-                Ordeneslst.testsParaEnviar =  [...Ordeneslst.testsParaEnviar,...data];
-                Ordeneslst.testsParaEnviar = [...new Map(Ordeneslst.testsParaEnviar.map(item => [item["idexamen"], item])).values()]    
-                return true;
-              }else{
-                return false;
-              }
-          } catch (error) {
-              return false;
-          }
-            
-          } else if(Ordeneslst.muestratomada == 'N'){
-            return true;
-          }
-          return resultado;
-      }
-
- }
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/edicionordenes/EdicionOrdenes.busqueda.js b/src/main/webapp/resources/js/edicionordenes/EdicionOrdenes.busqueda.js
index b4e36237..cc62c4b9 100644
--- a/src/main/webapp/resources/js/edicionordenes/EdicionOrdenes.busqueda.js
+++ b/src/main/webapp/resources/js/edicionordenes/EdicionOrdenes.busqueda.js
@@ -45,13 +45,9 @@ $(function() {
     var gBusquedaPacientes = new BusquedaPacientes();
  
     function clickOnOrden(data){
+      console.log("clickorden");
+      console.log(data);
       eventoLimpiar();
-
-      Ordeneslst.idexamen = [];
-      Ordeneslst.muestratomada = "N";
-      Ordeneslst.tests = [];
-      Ordeneslst.testsParaEnviar = [];
-
       //if(data[0].df_IDFICHAESTADOTM == 1){
         //handlerMessageWarning("No se puede editar la orden ya que se encuentra atendida");
       //}else{
@@ -70,11 +66,13 @@ $(function() {
                 $("#bo_t_ordenes").DataTable().rows().deselect();
 	
                 let datos = mensaje.dato;
+                console.log("datos",datos)
                 $("#dfOrden").val(data[0].df_NORDEN);
 				        $("#fechaOrden").val(datos.fechaorden);
                 //datos paciente
                 $("#idPaciente").val(data[0].dp_IDPACIENTE);
 
+                console.log(nTipoDocumento(datos.idtipodocumento) == "RUN");
                 $("#tipo_documento").text(nTipoDocumento(datos.idtipodocumento));
                 $("#numero_doc").text(nTipoDocumento(datos.idtipodocumento) == "RUN" ? cambiarDatoRut(datos.nrdocumentopaciente) : datos.nrdocumentopaciente);
                 $("#nombre_orden").text(datos.nombrepaciente);
@@ -131,10 +129,6 @@ $(function() {
                 });
                 
                 Ordeneslst.idexamen = arrayExamenes;
-                
-                Ordeneslst.muestratomada = datos.muestratomada;
-                
-                Ordeneslst.tests = [...datos.tests];
 
 
                 let patologia = datos.patologias;
@@ -159,7 +153,7 @@ $(function() {
     }
 
     $(document).ready(function() {
-      gBusquedaPacientes.boBuscador = new BiolisBuscadorOrdenes(["#bo_div_nOrdenIni","#bo_div_nOrdenFin",
+      gBusquedaPacientes.boBuscador = new BiolisBuscadorOrdenes(["#bo_div_nOrdenIni",
         "#bo_div_fIni",
         "#bo_div_fFin",
         "#bo_div_nombre",
diff --git a/src/main/webapp/resources/js/examenes/TablaReferencias.js b/src/main/webapp/resources/js/examenes/TablaReferencias.js
deleted file mode 100644
index c6b675d4..00000000
--- a/src/main/webapp/resources/js/examenes/TablaReferencias.js
+++ /dev/null
@@ -1,43 +0,0 @@
-$(document).on("click", "#tablaReferencias td", function () {
-    var $this = $(this);
-    var $input = $('<input>', {
-        value: $this.text(),
-        class: 'form-control',
-        type: 'text',
-        keypress: function () {
-
-        },
-        blur: function () {
-            $this.text(this.value);
-            //console.log($this.attr('class'));
-        },
-        keyup: function (e) {
-
-            if (e.which === 13)
-                $input.blur();
-        }
-    }).appendTo($this.empty()).focus();
-});
-
-$("#btnAddColumn").click(function () {
-    var columnNumber = (document.getElementById('tablaReferencias').rows[0].cells.length + 1);
-    var id = 1 + "" + columnNumber;
-    $("#theadTablaRef tr").append("<td>nueva columna<input id=" + id + " type='text' name='valorReferencia' style='visibility: hidden' value='" + id + "/valor" + id + "' /></td>");
-});
-
-$("#btnAddRow").click(function () {
-    var td = createTd($("#theadTablaRef td").length);
-    $("#tobdyTablaRef").append("<tr>" + td + "</tr>");
-});
-
-function createTd(largo) {
-    var td = "";
-    var rowNumber = ($("#tablaReferencias tr").length + 1);
-    var cont = 0;
-    for (var i = 0; i < largo; i++) {
-        cont++;
-        var id = rowNumber + "" + cont;
-        td = td + "<td>valor<input id=" + id + " type='text' name='valorReferencia' style='visibility: hidden' value='" + id + "/valor" + id + "' /></td>";
-    }
-    return td;
-}
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/microbiologia/Microbiologia.js b/src/main/webapp/resources/js/microbiologia/Microbiologia.js
index 5694ef6c..9a29469e 100755
--- a/src/main/webapp/resources/js/microbiologia/Microbiologia.js
+++ b/src/main/webapp/resources/js/microbiologia/Microbiologia.js
@@ -236,15 +236,13 @@ function showOrderList(orderList) {
 
 function showOrderEvents(events) {
   $("#idOrderCanvasEventsTable").empty();
-  //events.forEach(function (event) {
-  //  $("#idOrderCanvasEventsTable").append(fillTemplate(eventsRowHtmlTemplate, event));
- // });
-console.log("llenado eventos  actualmente no trae nada")
+  events.forEach(function (event) {
+    $("#idOrderCanvasEventsTable").append(fillTemplate(eventsRowHtmlTemplate, event));
+  });
+
 }
 
 function showOrderData(order) {
-	console.log("entre a showOrderData")
-	console.log(order)
   $("#idOrderCanvasDataName").text(order.patient.name);
   $("#idOrderCanvasDataGender").text(order.patient.gender);
   $("#idOrderCanvasDataAge").text(normalizarEdad(order.patient.age));
@@ -262,7 +260,7 @@ function showOrderData(order) {
   $("#idOrderCanvasDataDiagnostic").text(order.order.diagnostic);
   $("#idOrderCanvasDataOrderObservation").text(order.order.observation);
   $("#idOrderCanvasDataService").text(order.order.service);
-  $("#idOrderCanvasDataOrigin").text(order.order.procedencia);
+  $("#idOrderCanvasDataOrigin").text(order.order.origin);
 
   let orders = order.previousOrders;
   let ordersList = " ";
diff --git a/src/main/webapp/resources/js/portalPacientes/portalPacientes.busqueda.js b/src/main/webapp/resources/js/portalPacientes/portalPacientes.busqueda.js
index 11d4972a..9a3e0045 100644
--- a/src/main/webapp/resources/js/portalPacientes/portalPacientes.busqueda.js
+++ b/src/main/webapp/resources/js/portalPacientes/portalPacientes.busqueda.js
@@ -63,7 +63,7 @@ $(function() {
         "#bo_div_procedencia"]);
         gBusquedaPacientes.bo_OrdenesTable = new BiolisDatatableOrdenes('#bo_t_ordenes', gBusquedaPacientes.boBuscador,clickOnOrden);
       $("#bo_btnBuscarOrden").click(gBusquedaPacientes.bo_OrdenesTable.doSearch);
-      let columnas = [0,4,5,9,10,11,12,13,14,15,16,19,20,21,22,23,24];
+    let columnas = [0,3,4,5,6,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23];
     const n = gBusquedaPacientes.bo_OrdenesTable.bo_OrdenesDatable.columns().nodes().length;
     for (let i=0; i<n; i++){
         for (let j=0; j<columnas.length; j++){
diff --git a/src/main/webapp/resources/js/portalPacientes/portalPacientes.resultado.js b/src/main/webapp/resources/js/portalPacientes/portalPacientes.resultado.js
index 9a3a0602..8a1f95d0 100644
--- a/src/main/webapp/resources/js/portalPacientes/portalPacientes.resultado.js
+++ b/src/main/webapp/resources/js/portalPacientes/portalPacientes.resultado.js
@@ -52,7 +52,7 @@ $(function() {
 
 	function rellenaDatosPacientesOrden(ordPaciente,tDocumento){
 		console.log(ordPaciente);
-	
+		console.log("pase por aqui 1")
 		let fecha = new Date(ordPaciente.fecha)
 		fecha = fecha.getDate() +
 			"/" + (fecha.getMonth() + 1) +
@@ -92,17 +92,12 @@ $(function() {
 				}
 
 				let muestra = element.muestra != "" ? `<span class="label label-lg font-weight-bold label-inline estadoToma-${colorToma}">${element.muestra}</span>` : "";
-		
-							if(element.examenanulado == "N"){
-					tbody += `
-         				  <tr>
-              				 <th scope="row">${element.nombre}</th>
-              				 <td><span class="label label-lg font-weight-bold label-inline estadoBadge-${color} estado-examen"  data-orden="${ordPaciente.orden}" data-impreso="${element.disponibleweb}" data-examen="${element.idexamen}" data-estado="${element.estado == 'AUTORIZADO' ? element.estado :  'PENDIENTE'}">${element.estado == 'AUTORIZADO' ? element.estado :  'PENDIENTE'}</span></td>
-              				 <td>${muestra}</td>
-         			  	</tr>`;
-					}
-				
-			
+				tbody += `
+           <tr>
+               <th scope="row">${element.nombre}</th>
+               <td><span class="label label-lg font-weight-bold label-inline estadoBadge-${color} estado-examen"  data-orden="${ordPaciente.orden}" data-impreso="${element.disponibleweb}" data-examen="${element.idexamen}" data-estado="${element.estado}">${element.estado}</span></td>
+               <td>${muestra}</td>
+           </tr>`;
 			});
 			$("#resultadosExamenes tbody").html(tbody);
 
@@ -118,7 +113,8 @@ $(function() {
 		}
 	}
 	function rellenaDatosPacOrdenBusq(ordPaciente,tDocumento){
-		
+		console.log("pase por aqui 2")
+		console.log(ordPaciente)
 		let fecha = new Date(ordPaciente.fecha)
 		fecha = fecha.getDate() +
 			"/" + (fecha.getMonth() + 1) +
@@ -132,7 +128,7 @@ $(function() {
 			} else {
 				convenioPac.text("Sin convenio");
 			}
-		
+			console.log(tDocumento);
 			if(tDocumento == 1){
 				docPac.text(cambiarDatoRut(ordPaciente.nrodocumento));
 			}else{
@@ -161,16 +157,12 @@ $(function() {
 					element.disponibleweb = "S";
 				}
 				let muestra = element.muestra != "" ? `<span class="label label-lg font-weight-bold label-inline">${element.muestra}</span>` : "";
-				
-				if(element.examenanulado == "N"){		
 				tbody += `
-         		  <tr>
-             		  <th scope="row">${element.nombre}</th>
-             		  <td><span class="label label-lg font-weight-bold label-inline estadoBadge-${color} estado-examen"  data-orden="${ordPaciente.orden}" data-impreso="${element.disponibleweb}" data-examen="${element.idexamen}">${element.estado == 'AUTORIZADO' ? element.estado :  'PENDIENTE'}</span></td>
-              		 <td>${muestra}</td>
-         		  </tr>`;
-				}
-			
+           <tr>
+               <th scope="row">${element.nombre}</th>
+               <td><span class="label label-lg font-weight-bold label-inline estadoBadge-${color} estado-examen"  data-orden="${ordPaciente.orden}" data-impreso="${element.disponibleweb}" data-examen="${element.idexamen}">${element.estado}</span></td>
+               <td>${muestra}</td>
+           </tr>`;
 			});
 			$("#resultadosExamenes tbody").html(tbody);
 
diff --git a/src/main/webapp/resources/js/portalPacientes/portalPacientes.selectores.js b/src/main/webapp/resources/js/portalPacientes/portalPacientes.selectores.js
index c9190d45..6237e52c 100644
--- a/src/main/webapp/resources/js/portalPacientes/portalPacientes.selectores.js
+++ b/src/main/webapp/resources/js/portalPacientes/portalPacientes.selectores.js
@@ -13,12 +13,12 @@ export const btnSalir = $("#btnSalir");
 export const btnVolver = $("#btnVolver");
 export const containerVolver = $(".container-btn-volver");
 export const estadoExamenColor = new Array();
-estadoExamenColor['FIRMADO'] = 'pendiente';
+estadoExamenColor['FIRMADO'] = 'firmado';
 estadoExamenColor['PENDIENTE'] = 'pendiente';
-estadoExamenColor['INGRESADO'] = 'pendiente';
-estadoExamenColor['PROCESO'] = 'pendiente';
-estadoExamenColor['BLOQUEADO'] = 'pendiente';
-estadoExamenColor['AUTORIZADO'] = 'firmado';
+estadoExamenColor['INGRESADO'] = 'ingresado';
+estadoExamenColor['PROCESO'] = 'proceso';
+estadoExamenColor['BLOQUEADO'] = 'bloqueado';
+estadoExamenColor['AUTORIZADO'] = 'autorizado';
 
 export const tomaExamenColor = new Array();
 tomaExamenColor['TOMADA'] = 'tomada';
diff --git a/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.alarmas.js b/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.alarmas.js
new file mode 100644
index 00000000..6e7fb8d3
--- /dev/null
+++ b/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.alarmas.js
@@ -0,0 +1,240 @@
+class TablaAlarmasProceso{
+    
+    jqId;
+    tablaAlarmasProceso;
+    codigoProceso;
+    counter;
+    
+    constructor(){
+    
+        this.jqId = "#tablaAlarmasProceso";
+        this.codigoProceso = "";
+        this.counter = 1;
+    }
+    
+    loadTablaAlarmas(codigoProceso){
+        this.codigoProceso = codigoProceso;
+        if (!$.fn.dataTable.isDataTable( this.jqId )) {
+            this.initDataTable();
+        } else {
+            let url = getctx + "/api/alarmas/proceso/"+this.codigoProceso;
+            this.tablaAlarmasProceso.ajax.url(url).load();
+        }
+    }
+    
+    initDataTable(){
+        this.tablaAlarmasProceso = $(this.jqId).DataTable({
+            paging: false,
+            searchDelay: 500,
+            orderCellsTop: true,
+            scrollY: 300,
+            scrollX: true,
+            info: false,
+            "rowId": "spaIdprocesoalarma",
+            ajax: {
+                url: getctx + "/api/alarmas/proceso/"+this.codigoProceso,
+                type: "GET",
+                contentType: "application/json",
+                dataSrc: "dato",
+                dataType: "json"
+            },
+            columns: [
+                {data: 'spaIdprocesoalarma'},
+                {data: 'spaCodigoalarma'},
+                {data: 'spaAlarmadescripcion'},
+                {data: 'spaBloquear'},
+                {data: 'spaActivo'},
+                {data: ''}
+            ],
+            columnDefs: [
+                {
+                    targets: 0,
+                    orderable: false,
+                    visible: false,
+                    searchable: false
+                    
+                },{
+                    targets: 1,
+                    className: 'edit-title',
+                    render: function ( data, type, row ) {
+                        let dataId = row['spaIdprocesoalarma'] || '_' + gTableAlarmasProceso.counter;
+                        //let html = `<p id="codigoAlarma${dataId}" class="spaCodigoalarma" data-set="${dataId}">${data}</p>`;
+                        let html = `<input id="codigoAlarma${dataId}" type="text" class="spaCodigoalarma" value="${data}" data-set="${dataId}" disabled></input>`;
+                        return html;
+                    }
+                },{
+                    targets: 2,
+                    className: 'edit-title',
+                    render: function ( data, type, row ) {
+                        let dataId = row['spaIdprocesoalarma'] || '_' + gTableAlarmasProceso.counter;
+                        //let html = `<p id="descripcionAlarma${dataId}" class="spaAlarmadescripcion" data-set="${dataId}">${data}</p>`;
+                        let html = `<input id="descripcionAlarma${dataId}" type="text" class="spaAlarmadescripcion" value="${data}" data-set="${dataId}" disabled></input>`;
+                        return html;
+                    }
+                },{
+                    targets: 3,
+                    orderable: false,
+                    className: 'edit-title',
+                    render: function(data, type, row, meta) {
+                        let dataId = row['spaIdprocesoalarma'] || '_' + gTableAlarmasProceso.counter;
+                        let checked = '';
+                        if (data === 'S') {
+                            checked = 'checked';
+                        }
+                        return `<input id="chbxBloquear${dataId}" type="checkbox" data-set="${dataId}" class="spaBloquear" ${checked} disabled />`;
+                    }
+                },{
+                    targets: 4,
+                    orderable: false,
+                    className: 'edit-title',
+                    render: function(data, type, row, meta) {
+                        let dataId = row['spaIdprocesoalarma'] || '_' + gTableAlarmasProceso.counter;
+                        let checked = '';
+                        if (data === 'S') {
+                            checked = 'checked';
+                        }
+                        return `<input id="chbxActivo${dataId}" type="checkbox" data-set="${dataId}" class="spaActivo" ${checked} disabled />`;
+                    }
+                },{
+                    targets: 5,
+                    className: 'dt-left',
+                    orderable: false,
+                    render: function(data, type, row, meta) {
+                        return `<label class="checkbox checkbox-single">
+                                              <input data-checked="${row['spaIdprocesoalarma']}" check-edit="" type="checkbox" value="" class="checkable chck-anulado"/>
+                                              <span></span>
+                                          </label>`;
+                    }
+                }
+            ],
+            /*select: {
+                style:    'multi',
+                selector: 'td:first-child'
+            },*/
+            "language": {
+                url: "//cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json",
+                select: {
+                    rows: {
+                        _: "%d filas seleccionadas",
+                        0: "",
+                        1: "1 fila seleccionada"
+                    }
+                }
+            }
+        });
+        /*
+        $(this.jqId).on('click','.editar', function (e) {
+            //let dataset = "";
+            let id = $(this).siblings("p").attr('id');
+            let clase = $(this).siblings("p").attr('class');
+            let text = $(this).siblings("p").text();
+            cambiarEstadoParrafobutton(text,id,clase);
+        });
+        
+        $(this.jqId).on('click','.chbxBloquear', function (e) {
+            //let dataset = "";
+            let input = e.target;
+            let dataId = $(input).attr("data-set");
+            let fila = gTableAlarmasProceso.tablaAlarmasProceso.row(`#${dataId}`).data();
+            fila.spaBloquear = $(input).is(":checked") ? "S" : "N";
+            console.log(fila)
+        });
+        
+        $(this.jqId).on('click','.chbxActivo', function (e) {
+            //let dataset = "";
+            let input = e.target;
+            let dataId = $(input).attr("data-set");
+            let fila = gTableAlarmasProceso.tablaAlarmasProceso.row(`#${dataId}`).data();
+            fila.spaActivo = $(input).is(":checked") ? "S" : "N";
+            console.log(fila)
+        });
+        
+        $(this.jqId + " tbody").on('blur', 'input', function (e) {
+            let input = e.target;
+            let value = $(input).val();
+            let classname = input.className;
+            let rowName = classname.replace("form-control form-control-sm ", "")
+            let dataId = $(input).parent().attr("data-set");
+            let fila = gTableAlarmasProceso.tablaAlarmasProceso.row(`#${dataId}`).data();
+            //let fila = this.tablaAlarmasProceso.row(`#${dataId}`).data();
+            fila[rowName] = value;
+            $(input).prop('disabled', true);
+            $(this).parent().parent().find('a').show();
+        });
+        */
+        $(this.jqId).on( 'change', 'input.chck-anulado', function () {
+            let id = $(this).data('checked');
+            
+            if($(`[data-checked="${id}"]`).is(':checked')){
+                $(`[data-checked="${id}"]`).closest('td').siblings('.edit-title').each(
+                    function(){
+                        //let t = $(this).text();
+                        //let clase = $(this).find("p").attr('class');
+                        $(this).find("input").prop("disabled", false);
+                        //$(this).html($(`<input class="form-control ${clase}" />`,{'value' : t}).val(t));
+                    });
+                
+            } else {
+                $(`[data-checked="${id}"]`).closest('td').siblings('.edit-title').each(
+                    function(){
+                        //let newValue = $(this).find('input').val();
+                        $(this).find("input").prop("disabled", true);
+                        let clase = $(this).find("input").attr('class');
+                        let fila = gTableAlarmasProceso.tablaAlarmasProceso.row(`#${id}`).data();
+                        if (clase === "spaBloquear" || clase === "spaActivo"){
+                            fila[clase] = $(this).find("input").is(":checked") ? "S" : "N";
+                        } else {
+                            fila[clase] = $(this).find('input').val();
+                        }
+                    });
+
+            }
+        });
+        
+    }
+    
+    addAlarma(){
+        this.tablaAlarmasProceso.row.add({
+            'spaCodigoalarma': '',
+            'spaAlarmadescripcion': '',
+            'spaBloquear': 'N',
+            'spaActivo': 'N',
+            'spaIdprocesoalarma': 0
+        })
+        .draw(false)
+        .node().id = '_'+this.counter;
+
+        this.counter++;
+    }
+    
+    clear() {
+
+        this.tablaAlarmasProceso.rows().remove();
+        this.tablaAlarmasProceso.draw();
+
+    }
+    
+}
+/*
+function cambiarEstadoParrafobutton(text,id,clase){
+  let input = $(`<input id="${id}" type="text" class="form-control form-control-sm ${clase}" value="${text}" />`);
+   $('#'+id).text('').append(input);
+   $('#'+id).parent().find('a').hide();
+   
+}
+
+function cambiarValorCheckbox(clase, id){
+    let fila = gTableAlarmasProceso.tablaAlarmasProceso.row(`#${id}`).data();
+    fila[clase] = $("#"+clase+id).is("checked")?"S":"N";
+    console.log(fila);
+}
+
+$("#btnGuardarAlarmas").click(function (){
+    $("#tablaAlarmasProceso tbody tr").each(function () {
+        if ($(this).find(".chck-anulado").is("checked")){
+            let id = $(this).data('checked');
+            console.log(id)
+        }
+    });
+});
+ */
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.binding.js b/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.binding.js
index fae5fe63..9fdda83b 100644
--- a/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.binding.js
+++ b/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.binding.js
@@ -147,7 +147,7 @@ var dtVtt = new DataTableVisualTarget("#tablaTests");
 var dtt = new DataSource([]);
 vtt = new VisualTarget(dtt, dtVtt);
 vst = new VisualSource();
-test = genVSFiller("#idDualDataVisualSourceTest", vst, "#idSearcherTests");
+test = genVSFiller("#idDualDataVisualSourceTest", vst);
 
 var movedor = new Mover(dtVtt, dtt, vtt, vst);
 vst.onDoubleClick(movedor);
diff --git a/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.js b/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.js
index bc6f87fe..d071ba86 100644
--- a/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.js
+++ b/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.js
@@ -1,4 +1,5 @@
 //const { lte } = require("lodash");
+var gTableAlarmasProceso = new TablaAlarmasProceso();
 
 $(document).ready(function(){
     $(".ocultar").hide();
@@ -12,6 +13,7 @@ $(document).ready(function(){
     cargarTiposCondicion(tiposcondicion());
     cargarOperacionesmath(operacionesmath());
     listarProcesos();
+    gTableAlarmasProceso.loadTablaAlarmas("N");
 });
 
 function listarProcesos(){
@@ -174,7 +176,7 @@ function buscarPorId(codigo){
                 $("#selectTipoComunicacion").val(data.ldvTipocomunicacion !== null ? data.ldvTipocomunicacion.ldvtcIdtipocomunicacion : 0);
                 $("#selectSeccion").val(data.sigmaProcesos.spIdseccion);
                 $("#selectCentroSalud").val(data.sigmaProcesos.spIdcentrodesalud);
-                $("#txtCodigoBarras").val(data.sigmaProcesos.spCodigobarras);
+                $("#selectCodigoBarras").val(data.sigmaProcesos.spCodigobarras);
                 $("#txtCodigoHost").val(data.sigmaProcesos.spCodigohost);
                 $("#txtCodigoQC").val(data.sigmaProcesos.spCodigoqc);
                 $("#selectEstacion").val(data.sigmaProcesos.spEstacionsigma);
@@ -196,16 +198,25 @@ function buscarPorId(codigo){
                 $("#checkBoxActivo").prop("checked", data.sigmaProcesos.spActivo === "S" ? true : false);
                 $("#lblEstado").text(data.sigmaProcesos.spActivo === "S" ? 'Activo' : 'Inactivo');
                 /*** Procesos Test ***/
-                limpiarTest();
-                
+                dataTableTests.clear();
                 data.procesosTests.forEach(function (procesoTest){
                     let item = vst.getSelectedItemById(procesoTest.idTest);
+                    item.dataValue.guardadoEnDB = 'S';
+                    item.dataValue.sptCodigorecepcion = procesoTest.sigmaProcesostest.sptCodigorecepcion;
+                    item.dataValue.sptCodigoenvio = procesoTest.sigmaProcesostest.sptCodigoenvio;
+                    item.dataValue.sptActivo = procesoTest.sigmaProcesostest.sptActivo;
+                    item.dataValue.idSigmaTipoMuestra = procesoTest.idSigmaTipoMuestra;
+                    item.dataValue.idtiporesultado = procesoTest.idtiporesultado;
+                    item.dataValue.conversiones = procesoTest.conversiones;
                     vtt.addItem(item);
                     vst.removeItemById(item.id);
                 });
                 llenarTablaTests();
+                /*** Tabla Alarmas ***/
+                gTableAlarmasProceso.loadTablaAlarmas(data.sigmaProcesos.spCodigoproceso);
                 /*** ***/
                 activarEdit();
+                nombreTitulo(data.sigmaProcesos.spDescripcion, data.sigmaProcesos.spEstacionsigma);
                 $("#btnAgregarProceso").prop("disabled", true);
                 $(".formProceso").prop("disabled",true);
             } else {
@@ -262,6 +273,7 @@ $("#btnEditar").click(function() {
 });
 
 function limpiarFormulario(){
+    nombreTitulo("", 0);
     $("#txtIdProceso").val("");
     $("#txtCodigo").val("");
     $("#txtNombre").val("");
@@ -269,7 +281,7 @@ function limpiarFormulario(){
     $("#selectTipoComunicacion").val(0);
     $("#selectSeccion").val(0);
     $("#selectCentroSalud").val(0);
-    $("#txtCodigoBarras").val("");
+    $("#selectCodigoBarras").val("N");
     $("#txtCodigoHost").val("");
     $("#txtCodigoQC").val("");
     $("#selectEstacion").val(0);
@@ -289,53 +301,113 @@ function limpiarFormulario(){
     $("#selectCentroSalud").val(0);
     $("#checkBoxActivo").prop("checked", true);
     $("#lblEstado").text("Activo");
+    /** Tabla test **/
+    limpiarTablaTests();
+    dataTableTests.clear();
+    /** Tabla alarmas **/
+    gTableAlarmasProceso.clear();
     /** Formulario **/
     $("#btnAgregarProceso").prop("disabled", false);
     $(".formProceso").prop("disabled", false);
 }
 
+function limpiarTablaTests(){
+    let countItems= vtt.countItems();
+    if (countItems>0){
+        limpiarTest();
+    }
+}
 
+$("#txtCodigo").blur(function () {
+    if ($("#txtCodigo").val() !== null && $("#txtCodigo").val().trim() !== "") {
+        comprobarCodigoExiste($("#txtCodigo").val().toUpperCase());
+    }
+});
+    
+function comprobarCodigoExiste(codigo){
+    $.ajax({
+        type: "get",
+        url: getctx + "/api/proceso/busquedacodigo/"+codigo,
+        datatype: "json",
+        success: function(json){
+            if (json.status === 200){
+                handlerMessageError(json.message);
+                buscarPorId(json.dato[0].spCodigoproceso);
+            }
+        },
+        error: function (msg){
+            handlerMessageError(msg);
+        }
+    });
+}
 
-//agrega pestaÃ±a
-    function agregarTabs(counter){
-        //toma el div original y lo clona
-        let originalDiv = $("div#condicion-sub");
-        let cloneDiv = originalDiv.clone();    
-
-        //cambiar datos de los divs clonados
-        cloneDiv.attr('id','condicion-sub'+counter);
-        cloneDiv.removeClass("show active");
-        
-        $("#selectOperando",cloneDiv).attr({'id':'selectOperando'+counter});    //le cambia el nombre de la id
-        
-        $("#numComparador",cloneDiv).attr({'id':'numComparador'+counter}); 
-        $("#numValorFinal",cloneDiv).attr({'id':'numValorFinal'+counter}); 
-        
-        $("#chbxReprocesar",cloneDiv).attr({'id':'chbxReprocesar'+counter});    
-        $("#chbxReprocesar"+counter,cloneDiv).attr("checked", false); 
+$("#chbxCondicional").click(function(){
+    if ($("#chbxCondicional").is(":checked")){
+        $(".formConditional").prop("disabled", false);
+    } else {
+        $(".formConditional").prop("disabled", true);
         
-        $("#chbxBloquear",cloneDiv).attr({'id':'chbxBloquear'+counter});    
-        $("#chbxBloquear"+counter,cloneDiv).attr("checked", false); 
+    }
+});
+
+$("#chbkCalculo").click(function(){
+    if ($("#chbkCalculo").is(":checked")){
+        $(".formCalculo").prop("disabled", false);
+    } else {
+        $(".formCalculo").prop("disabled", true);
         
-        $("#chbxFirmar",cloneDiv).attr({'id':'chbxFirmar'+counter});    
-        $("#chbxFirmar"+counter,cloneDiv).attr("checked", false); 
+    }
+});
+
+//agrega pestaÃ±a
+function agregarTabs(counter){
+    //toma el div original y lo clona
+    let originalDiv = $("div#condicion-sub");
+    let cloneDiv = originalDiv.clone();    
 
-        // //agrega en el div los datos ya formatiados
-        $("#myTabContent").append(cloneDiv);
+    //cambiar datos de los divs clonados
+    cloneDiv.attr('id','condicion-sub'+counter);
+    cloneDiv.removeClass("show active");
 
+    $("#selectOperando",cloneDiv).attr({'id':'selectOperando'+counter});    //le cambia el nombre de la id
 
-        //agregando al tab
-        let originalTab = $("li#presentacion");
-        let cloneTab = originalTab.clone(); 
-        
-        cloneTab.attr('id','presentacion'+counter);
-        $("#condicion",cloneTab).attr({'id':'condicion'+counter,'data-target':'#condicion-sub'+counter,'aria-controls':"condicion-sub"+counter,'aria-selected':"false"});    //cambia los atributos del tab
-        $("#condicion"+counter,cloneTab).removeClass("active");
-        $("#condicion"+counter,cloneTab).text("Condicion "+counter)
-        $("#nav-item-agregar").before(cloneTab);
-        //incrementa el contador
-        counter++;      
-        $("#agregar-tab").attr("onclick","agregarTabs("+counter+")");
-    };
-        
- 
\ No newline at end of file
+    $("#textValorEntrada",cloneDiv).attr({'id':'textValorEntrada'+counter});
+
+    $("#chbxCritico",cloneDiv).attr({'id':'chbxCritico'+counter});    
+    $("#chbxCritico"+counter,cloneDiv).prop("checked", false); 
+
+    $("#textValorSalida",cloneDiv).attr({'id':'textValorSalida'+counter}); 
+
+    $("#chbxReprocesar",cloneDiv).attr({'id':'chbxReprocesar'+counter});    
+    $("#chbxReprocesar"+counter,cloneDiv).prop("checked", false); 
+
+    $("#chbxBloquear",cloneDiv).attr({'id':'chbxBloquear'+counter});    
+    $("#chbxBloquear"+counter,cloneDiv).prop("checked", false); 
+
+    $("#chbxFirmar",cloneDiv).attr({'id':'chbxFirmar'+counter});    
+    $("#chbxFirmar"+counter,cloneDiv).prop("checked", false); 
+
+    // //agrega en el div los datos ya formatiados
+    $("#myTabContent").append(cloneDiv);
+
+
+    //agregando al tab
+    let originalTab = $("li#presentacion");
+    let cloneTab = originalTab.clone(); 
+
+    cloneTab.attr('id','presentacion'+counter);
+    $("#condicion",cloneTab).attr({'id':'condicion'+counter,'data-target':'#condicion-sub'+counter,'aria-controls':"condicion-sub"+counter,'aria-selected':"false"});    //cambia los atributos del tab
+    $("#condicion"+counter,cloneTab).removeClass("active");
+    $("#condicion"+counter,cloneTab).text("Condicion "+counter)
+    $("#nav-item-agregar").before(cloneTab);
+    //incrementa el contador
+    counter++;      
+    $("#agregar-tab").attr("onclick","agregarTabs("+counter+")");
+};
+
+
+
+//ALARMAS
+$("#btnAddAlarma").click(function () {
+    gTableAlarmasProceso.addAlarma();
+});
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.tablatests.js b/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.tablatests.js
index 71af4348..90cab0eb 100644
--- a/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.tablatests.js
+++ b/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.tablatests.js
@@ -72,7 +72,7 @@ class DataTableTests {
             orderable: false,
             render: function(data, type, row, meta) {
                 let arrayData = JSON.stringify(row.dataValue);
-                return `<a href="#" class="btnEditarTest" onclick='mostrarDatosTestEditar(${arrayData})' class="p-2 ml-2">
+                return `<a href="#" class="btn btnEditarTest formProceso" onclick='mostrarDatosTestEditar(${arrayData})' class="p-2 ml-2">
                             <i class="fas fa-pen"></i>
                         </a>`;
             }
@@ -100,6 +100,17 @@ class DataTableTests {
       let filas = dt.rows({ selected: true }).data();
       let sptActivo = filas[0].dataValue.sptActivo;
 
+      if (sptActivo === 'S') {
+        filas[0].dataValue.sptActivo = 'N';
+      } else {
+        filas[0].dataValue.sptActivo = 'S';
+      }
+    });
+    
+    this.dataTable.on('deselect', function(e, dt, type, indexes) {
+      let filas = dt.rows({ selected: true }).data();
+      let sptActivo = filas[0].dataValue.sptActivo;
+
       if (sptActivo === 'S') {
         filas[0].dataValue.sptActivo = 'N';
       } else {
@@ -186,19 +197,9 @@ class DataTableTests {
   }
 }
 
-class Condicional{
-    ldvtcondIdtipocondicion;
-    sptcValorentrada;
-    sptcValorsalida;
-    //sptcCriticosn;
-    sptcReprocesarsn;
-    sptcBloquearsn;
-    sptcFirmarsn;
-}
-
 var dataTableTests = new DataTableTests("#tablaProcesosTests");
-var dsTests = new DataSource([]);
-let visualTests = new VisualTarget(dsTests, dataTableTests);
+//var dsTests = new DataSource([]);
+let visualTests = new VisualTarget(dtt, dataTableTests);
 
 $("#btnCerrarModalTests").click(function(){
     /*dataTableTests.clear();
@@ -223,14 +224,54 @@ function mostrarDatosTestEditar(data){
     $("#tituloTest").text(`Test: ${data.ctAbreviado}`);
     $("#txtCodigoRecepcion").val(data.sptCodigorecepcion);
     $("#txtCodigoEnvio").val(data.sptCodigoenvio);
-    $("#selectTipoMuestra").val(data.idSigmaTipoMuestra);
-    $("#selectTipoResultado").val(data.idtiporesultado);
+    $("#selectTipoMuestra").val(data.idSigmaTipoMuestra || 0);
+    $("#selectTipoResultado").val(data.idtiporesultado || 0);
     $("#txtIdTest").val(data.ctIdtest);
     $("#txtCodigoTest").val(data.ctCodigo);
     $("#txtDescripcionTest").val(data.ctDescripcion);
     $("#txtExamenes").val(data.examenes.toString());
     $("#txtPrefijoMuestra").val(data.prefijoTipoMuestra);
     $("#txtDecimales").val(data.ctDecimales);
+    $("#lblEstadoTest").text(data.sptActivo === "S" ? 'Activo' : 'Inactivo');
+    $("#checkBoxTestActivo").prop("checked", data.sptActivo === "S" ? true : false);
+    limpiarTabsConversiones();
+    if (data.conversiones.length>0){
+        data.conversiones.forEach(function (conversion) {
+            let nCond = conversion.sptcNumerocondicion;
+            if (conversion.sptcCondicionalsn === 'S'){
+                $("#chbxCondicional").prop("checked", true);
+                if (localStorage.getItem("botonEditar") === "inactivo") {
+                    $(".formConditional").prop("disabled", false);
+                }
+                if (nCond === 1){
+                    $("#selectOperando").val(conversion.ldvtcondIdtipocondicion);
+                    $("#textValorEntrada").val(conversion.sptcValorentrada);
+                    $("#chbxCritico").prop("checked", conversion.sptcCriticosn === "S" ? true : false);
+                    $("#textValorSalida").val(conversion.sptcValorsalida);
+                    $("#chbxReprocesar").prop("checked", conversion.sptcReprocesarsn === "S" ? true : false);
+                    $("#chbxBloquear").prop("checked", conversion.sptcBloquearsn === "S" ? true : false);
+                    $("#chbxFirmar").prop("checked", conversion.sptcFirmarsn === "S" ? true : false);
+                } else {
+                    agregarTabs(nCond);
+                    $(`#selectOperando${nCond}`).val(conversion.ldvtcondIdtipocondicion);
+                    $(`#textValorEntrada${nCond}`).val(conversion.sptcValorentrada);
+                    $(`#chbxCritico${nCond}`).prop("checked", conversion.sptcCriticosn === "S" ? true : false);
+                    $(`#textValorSalida${nCond}`).val(conversion.sptcValorsalida);
+                    $(`#chbxReprocesar${nCond}`).prop("checked", conversion.sptcReprocesarsn === "S" ? true : false);
+                    $(`#chbxBloquear${nCond}`).prop("checked", conversion.sptcBloquearsn === "S" ? true : false);
+                    $(`#chbxFirmar${nCond}`).prop("checked", conversion.sptcFirmarsn === "S" ? true : false);
+                }
+            }
+            if (conversion.sptcCalculosn === 'S'){
+                if (localStorage.getItem("botonEditar") === "inactivo") {
+                    $(".formCalculo").prop("disabled", false);
+                }
+                $("#chbkCalculo").prop("checked", true);
+                $("#selectOperador").val(conversion.ldvomIdoperadormath);
+                $("#numValorOperando").val(conversion.sptcValoroperando);
+            }
+        });
+    }
 }
 
 function tituloProceso(){
@@ -251,6 +292,74 @@ $("#btnGuardarTestProceso").click(function () {
     item[0].dataValue.prefijoTipoMuestra = $("#txtPrefijoMuestra").val();
     //item[0].dataValue.ldvomIdoperadormath = $("#selectOperador").val();
     //item[0].dataValue.sptcValoroperando = $("#numValorOperando").val();
+    let count = 0;
+    let conversiones = new Array();
+    if ($("#chbxCondicional").is(":checked")){
+        $("#myTab li.condition").each(function(){
+            count++;
+            let conversion = {};
+            if (count===1){
+                conversion.ldvtcondIdtipocondicion = $("#selectOperando").val();
+                conversion.sptcValorentrada = $("#textValorEntrada").val();
+                conversion.sptcCriticosn = $("#chbxCritico").is(":checked")?"S":"N";
+                conversion.sptcValorsalida = $("#textValorSalida").val();
+                conversion.sptcReprocesarsn = $("#chbxReprocesar").is(":checked")?"S":"N";
+                conversion.sptcBloquearsn = $("#chbxBloquear").is(":checked")?"S":"N";
+                conversion.sptcFirmarsn = $("#chbxFirmar").is(":checked")?"S":"N";
+            } else {
+                conversion.ldvtcondIdtipocondicion = $(`#selectOperando${count}`).val();
+                conversion.sptcValorentrada = $(`#textValorEntrada${count}`).val();
+                conversion.sptcCriticosn = $(`#chbxCriticor${count}`).is(":checked")?"S":"N";
+                conversion.sptcValorsalida = $(`#textValorSalida${count}`).val();
+                conversion.sptcReprocesarsn = $(`#chbxReprocesar${count}`).is(":checked")?"S":"N";
+                conversion.sptcBloquearsn = $(`#chbxBloquear${count}`).is(":checked")?"S":"N";
+                conversion.sptcFirmarsn = $(`#chbxFirmar${count}`).is(":checked")?"S":"N";
+            }
+            conversion.sptcCondicionalsn = "S";
+            conversion.sptcCalculosn = "N";
+            conversion.sptcNumerocondicion = count;
+            conversiones.push(conversion);
+
+        });
+    }
+    
+    if ($("#chbkCalculo").is(":checked")){
+        let calculo = {};
+        calculo.ldvomIdoperadormath = $("#selectOperador").val();
+        calculo.sptcValoroperando = $("#numValorOperando").val();
+        calculo.sptcCondicionalsn = "N";
+        calculo.sptcCalculosn = "S";
+        calculo.sptcNumerocondicion = count+1;
+        conversiones.push(calculo);
+    }
+    item[0].dataValue.conversiones = conversiones;
     console.log(item);
     $("#modalTestsProceso").modal('toggle');
+});
+
+function limpiarTabsConversiones(){
+    let count = 1;
+    $("#myTab").each(function(){
+        count++;
+        $("#presentacion"+count).remove();
+        $("#condicion-sub"+count).remove();
+    });
+    $("#condicion-sub").addClass("active show");
+    $("#selectOperando").val(0);$("#textValorEntrada").val();
+    $("#textValorEntrada").val("");
+    $("#chbxCritico").prop("checked", false);
+    $("#textValorSalida").val("");
+    $("#chbxReprocesar").prop("checked", false);
+    $("#chbxBloquear").prop("checked", false);
+    $("#chbxFirmar").prop("checked", false);
+    $("#agregar-tab").attr("onclick","agregarTabs(2)");
+}
+
+$("#spanCheckTest").click(function () {
+    if ($("#checkBoxTestActivo").is(":checked")) {
+        $("#lblEstadoTest").text("Activo");
+    }
+    if (!($("#checkBoxTestActivo").is(":checked"))) {
+        $("#lblEstadoTest").text("Inactivo");
+    }
 });
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.tests.js b/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.tests.js
index 746b0912..ad41635d 100644
--- a/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.tests.js
+++ b/src/main/webapp/resources/js/procesos/ConfiguracionProcesos.tests.js
@@ -16,13 +16,14 @@ class DataItem {
   sptConversion;
   idSigmaTipoMuestra;
   idtiporesultado;
+  idTipoMuestra;
   prefijoTipoMuestra;
-  condicional;
+  conversiones;
   //ldvomIdoperadormath;
   //sptcValoroperando;
   guardadoEnDB;
   data;
-  constructor(ctIdtest, ctCodigo, ctAbreviado, ctDescripcion, ctActivo, ctDecimales, csecIdseccion, csecDescripcion, sptActivo, idExamenes, examenes, prefijoTipoMuestra) {
+  constructor(ctIdtest, ctCodigo, ctAbreviado, ctDescripcion, ctActivo, ctDecimales, csecIdseccion, csecDescripcion, sptActivo, idExamenes, examenes, idTipoMuestra, prefijoTipoMuestra) {
     this.ctIdtest = ctIdtest;
     this.ctCodigo = ctCodigo;
     this.ctAbreviado = ctAbreviado;
@@ -39,11 +40,12 @@ class DataItem {
     this.sptConversion = null;
     this.idSigmaTipoMuestra = null;
     this.idtiporesultado = null;
+    this.idTipoMuestra = idTipoMuestra;
     this.prefijoTipoMuestra = prefijoTipoMuestra;
     //this.ldvomIdoperadormath = null;
     //this.sptcValoroperando = null;
     this.guardadoEnDB = 'N';
-    this.condicional = null;
+    this.conversiones = null;
     this.data = {
         "ctIdtest": this.ctIdtest,
         "ctCodigo": this.ctCodigo,
@@ -61,6 +63,7 @@ class DataItem {
         "sptConversion": this.sptConversion,
         "idSigmaTipoMuestra": this.idSigmaTipoMuestra,
         "idtiporesultado": this.idtiporesultado,
+        "idTipoMuestra": this.idTipoMuestra,
         "prefijoTipoMuestra": this.prefijoTipoMuestra,
         "guardadoEnDB": this.guardadoEnDB
     };
@@ -463,8 +466,9 @@ class VisualTarget {
     this.visualElement.clear();
   }
   
-  getMuestras(){
-      return this.muestras;
+  countItems(){
+    let items = this.visualElement.getAllItems();
+    return items.length;
   }
 };
 
@@ -549,6 +553,11 @@ class DataTableVisualTarget {
         filas[0].dataValue.sptActivo = 'S';
       }
       
+      if (filas[0].dataValue.guardadoEnDB === 'S'){
+          $("#clickDelBtnTest").prop("disabled", true);
+      } else {
+          $("#clickDelBtnTest").prop("disabled", false);
+      }
     });
     
   }
@@ -659,7 +668,7 @@ function genVSFiller(jqid, vs) {
           examenes.push(exam.ce_ABREVIADO);
       });
       let datoTest = new DataItem(itemex.cfgTest.ctIdtest, itemex.cfgTest.ctCodigo, itemex.cfgTest.ctAbreviado, itemex.cfgTest.ctDescripcion, itemex.cfgTest.ctActivo, itemex.cfgTest.ctDecimales,
-      itemex.cfgSecciones.csecIdseccion, itemex.cfgSecciones.csecDescripcion, 'S', idExamenes, examenes, itemex.cfgMuestras.cmuePrefijotipomuestra);
+      itemex.cfgSecciones.csecIdseccion, itemex.cfgSecciones.csecDescripcion, 'S', idExamenes, examenes,itemex.cfgMuestras.cmueIdtipomuestra, itemex.cfgMuestras.cmuePrefijotipomuestra);
       let item = new Item(datoTest);
       listItems.push(item);
     }
diff --git a/src/main/webapp/resources/js/procesos/ConfiguracionProcesosForm.js b/src/main/webapp/resources/js/procesos/ConfiguracionProcesosForm.js
index d548ab75..9f159dac 100644
--- a/src/main/webapp/resources/js/procesos/ConfiguracionProcesosForm.js
+++ b/src/main/webapp/resources/js/procesos/ConfiguracionProcesosForm.js
@@ -1,7 +1,7 @@
 function validaDatos(){
     let codigo = $("#txtCodigo").val();
     let nombre = $("#txtNombre").val();
-    let codigoBarras = $("#txtCodigoBarras").val();
+    //let codigoBarras = $("#txtCodigoBarras").val();
     let validar = true;
     
     if (codigo.length <= 0) {
@@ -14,8 +14,9 @@ function validaDatos(){
         handlerMessageError("Nombre no debe estar vacÃ­o");
         validar = false;
     }
-    if (codigoBarras.length <= 0) {
-        $("#txtCodigoBarras").addClass("is-invalid");
+    if ($("#selectCodigoBarras").val() === "N") {
+        //$("#txtCodigoBarras").addClass("is-invalid");
+        $("#selectCodigoBarras").addClass("is-invalid");
         handlerMessageError("CÃ³digo de barras no debe estar vacÃ­o");
         validar = false;
     }
@@ -37,7 +38,8 @@ function createArrayData(){
         "spTiempocargaprocesoseg": $("#txtSegundosCargaProceso").val(),
         "spActivo": $("#checkBoxActivo").is(":checked")?'S':'N',
         "spCodigohost": $("#txtCodigoHost").val(),
-        "spCodigobarras": $("#txtCodigoBarras").val().toUpperCase(),
+        //"spCodigobarras": $("#txtCodigoBarras").val().toUpperCase(),
+        "spCodigobarras": $("#selectCodigoBarras").val(),
         "spResultadostemporales": $("#chbxResultadosTemporales").is(":checked")?'S':'N',
         "spNmuestralargo12": $("#chbxNroMuestraCorrelativo").is(":checked")?'S':'N',
         "spMuestrarecepcionada": $("#chbxMuestraRecepcionada").is(":checked")?'S':'N',
@@ -76,11 +78,21 @@ function createArrayData(){
             "idTest": datosProceso.ctIdtest,
             "idSigmaTipoMuestra": datosProceso.idSigmaTipoMuestra,
             "idtiporesultado": datosProceso.idtiporesultado,
-            "prefijoTipoMuestra": datosProceso.prefijoTipoMuestra
+            "cmueIdtipomuestra": datosProceso.cmueIdtipomuestra,
+            "prefijoTipoMuestra": datosProceso.prefijoTipoMuestra,
+            "conversiones": datosProceso.conversiones || null
         };
         procesosTests.push(procesoTest);
+        
     }
-    //console.log(testsProceso)
+    //Alarmas
+    let alarmas = gTableAlarmasProceso.tablaAlarmasProceso.rows().data();
+    let itemsAlarmas = new Array();
+    let na = alarmas.data().length;
+    for (let i = 0; i < na; i++) {
+        itemsAlarmas.push(alarmas.data()[i]);
+    }
+    procesoDTO.procesosAlarmas = itemsAlarmas;
     procesoDTO.procesosTests = procesosTests;
     console.log(procesoDTO);
     return procesoDTO;
@@ -152,4 +164,10 @@ $("#txtCodigoBarras").keyup(function () {
     if ($("#txtCodigoBarras").val().length > 0) {
         $("#txtCodigoBarras").removeClass("is-invalid");
     }
+});
+
+$("#selectCodigoBarras").change(function () {
+    if ($("#selectCodigoBarras").val() !== "") {
+        $("#selectCodigoBarras").removeClass("is-invalid");
+    }
 });
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/pruebasCristian/EstadisticaExcel.js b/src/main/webapp/resources/js/pruebasCristian/EstadisticaExcel.js
deleted file mode 100644
index 90fb013e..00000000
--- a/src/main/webapp/resources/js/pruebasCristian/EstadisticaExcel.js
+++ /dev/null
@@ -1,114 +0,0 @@
-
-/*
-var wb = XLSX.utils.book_new();
-	
-	wb.Props = {
-		Title: "SheetJS Tutorial",
-		Subject: "Test",
-		Author: "Red Stapler",
-		CreatedDate: new Date(2017,12,19)
-	}
-
-wb.SheetNames.push("Test Sheet");
-var ws_data = [['hello' , 'world']];  //a row with 2 columns
-var ws = XLSX.utils.aoa_to_sheet(ws_data);
-
-wb.Sheets["Test Sheet"] = ws;
-
-var wbout = XLSX.write(wb, {bookType:'xlsx',  type: 'binary'});
-
-function s2ab(s) { 
-var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer
-var view = new Uint8Array(buf);  //create uint8array as viewer
-for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet
-return buf;    
-}
-
-
-	$("#btnEstadistica").click( function (){
-		saveAs(new Blob([s2ab(wbout)],{type:"application/octet-stream"}), 'test.xlsx');
-	console.log("entre aqui")
-
-})
-
-*/
-
-	$("#btnEstadistica").click( function (){
-	
-		let carpeta = prompt("Ingrese Nombre Excel");
-  		
-			console.log(carpeta)
-	  let Data =	getDatos();
-	  
-		
-            var table = document.querySelector("#tb");
-                         var sheet = XLSX.utils.table_to_sheet (table); // Convertir un objeto de tabla en un objeto de hoja
-                         if(carpeta != null){	
-                         openDownloadDialog(sheet2blob (sheet), carpeta+'.xlsx'); // Nombre del archivo
-                         }else{
-							openDownloadDialog(sheet2blob (sheet), 'prueba.xlsx'); // Nombre del archivo
-						 }
-
-  })
-  
-  
-  function getDatos(){
-	alert("aqui se llama a la api")
-	let data = "";
-	return data;
-}
-  
-
-function llenarTabla(data){
-	alert("aqui se llena la tabla")
-}
-
-function sheet2blob(sheet, sheetName) {
-    sheetName = sheetName || 'sheet1';
-    var workbook = {
-        SheetNames: [sheetName],
-        Sheets: {}
-    };
-         workbook.Sheets [sheetName] = sheet; // Generar elementos de configuraciÃ³n de Excel
-
-    var wopts = {
-                 bookType: 'xlsx', // El tipo de archivo que se generarÃ¡
-                 bookSST: false, // Ya sea para generar una tabla de cadenas compartidas, la explicaciÃ³n oficial es que si activa la velocidad de generaciÃ³n, disminuirÃ¡, pero tiene una mejor compatibilidad en dispositivos IOS inferiores
-        type: 'binary'
-    };
-    var wbout = XLSX.write(workbook, wopts);
-    var blob = new Blob([s2ab(wbout)], {
-        type: "application/octet-stream"
-         }); // Cadena a ArrayBuffer
-         
-    function s2ab(s) {
-        var buf = new ArrayBuffer(s.length);
-        var view = new Uint8Array(buf);
-        for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
-        return buf;
-    }
-    return blob;
-}
-
-
-var table = document.querySelector("#tb");
-var sheet = XLSX.utils.table_to_sheet(table); // Convertir un objeto de tabla en un objeto de hoja
-
-
-function openDownloadDialog(url, saveName) {
-    if (typeof url == 'object' && url instanceof Blob) {
-        url = URL.createObjectURL(url); 
-    }
-    var aLink = document.createElement('a');
-    aLink.href = url;
-    aLink.download = saveName || ''; 
-    var event;
-    if (window.MouseEvent) event = new MouseEvent('click');
-    else {
-        event = document.createEvent('MouseEvents');
-        event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
-    }
-    aLink.dispatchEvent(event);
-}
-
- 
diff --git a/src/main/webapp/resources/js/pruebasCristian/xlsx.core.min.js b/src/main/webapp/resources/js/pruebasCristian/xlsx.core.min.js
deleted file mode 100644
index beb109fe..00000000
--- a/src/main/webapp/resources/js/pruebasCristian/xlsx.core.min.js
+++ /dev/null
@@ -1,16 +0,0 @@
-/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */
-var XLSX={};function make_xlsx_lib(e){e.version="0.18.12";var r=1200,t=1252;var a;var n=[874,932,936,949,950,1250,1251,1252,1253,1254,1255,1256,1257,1258,1e4];var i={0:1252,1:65001,2:65001,77:1e4,128:932,129:949,130:1361,134:936,136:950,161:1253,162:1254,163:1258,177:1255,178:1256,186:1257,204:1251,222:874,238:1250,255:1252,69:6969};var s=function(e){if(n.indexOf(e)==-1)return;t=i[0]=e};function f(){s(1252)}var l=function(e){r=e;s(e)};function o(){l(1200);f()}function c(e){var r=[];for(var t=0,a=e.length;t<a;++t)r[t]=e.charCodeAt(t);return r}function u(e){var r=[];for(var t=0;t<e.length>>1;++t)r[t]=String.fromCharCode(e.charCodeAt(2*t)+(e.charCodeAt(2*t+1)<<8));return r.join("")}function h(e){var r=[];for(var t=0;t<e.length>>1;++t)r[t]=String.fromCharCode(e.charCodeAt(2*t+1)+(e.charCodeAt(2*t)<<8));return r.join("")}var d=function(e){var r=e.charCodeAt(0),t=e.charCodeAt(1);if(r==255&&t==254)return u(e.slice(2));if(r==254&&t==255)return h(e.slice(2));if(r==65279)return e.slice(1);return e};var v=function xk(e){return String.fromCharCode(e)};var p=function Ck(e){return String.fromCharCode(e)};function m(e){a=e;l=function(e){r=e;s(e)};d=function(e){if(e.charCodeAt(0)===255&&e.charCodeAt(1)===254){return a.utils.decode(1200,c(e.slice(2)))}return e};v=function n(e){if(r===1200)return String.fromCharCode(e);return a.utils.decode(r,[e&255,e>>8])[0]};p=function i(e){return a.utils.decode(t,[e])[0]};na()}var b=null;var g=true;var w="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function k(e){var r="";var t=0,a=0,n=0,i=0,s=0,f=0,l=0;for(var o=0;o<e.length;){t=e.charCodeAt(o++);i=t>>2;a=e.charCodeAt(o++);s=(t&3)<<4|a>>4;n=e.charCodeAt(o++);f=(a&15)<<2|n>>6;l=n&63;if(isNaN(a)){f=l=64}else if(isNaN(n)){l=64}r+=w.charAt(i)+w.charAt(s)+w.charAt(f)+w.charAt(l)}return r}function T(e){var r="";var t=0,a=0,n=0,i=0,s=0,f=0,l=0;for(var o=0;o<e.length;){t=e.charCodeAt(o++);if(t>255)t=95;i=t>>2;a=e.charCodeAt(o++);if(a>255)a=95;s=(t&3)<<4|a>>4;n=e.charCodeAt(o++);if(n>255)n=95;f=(a&15)<<2|n>>6;l=n&63;if(isNaN(a)){f=l=64}else if(isNaN(n)){l=64}r+=w.charAt(i)+w.charAt(s)+w.charAt(f)+w.charAt(l)}return r}function E(e){var r="";var t=0,a=0,n=0,i=0,s=0,f=0,l=0;e=e.replace(/^data:([^\/]+\/[^\/]+)?;base64\,/,"").replace(/[^\w\+\/\=]/g,"");for(var o=0;o<e.length;){i=w.indexOf(e.charAt(o++));s=w.indexOf(e.charAt(o++));t=i<<2|s>>4;r+=String.fromCharCode(t);f=w.indexOf(e.charAt(o++));a=(s&15)<<4|f>>2;if(f!==64){r+=String.fromCharCode(a)}l=w.indexOf(e.charAt(o++));n=(f&3)<<6|l;if(l!==64){r+=String.fromCharCode(n)}}return r}var y=function(){return typeof Buffer!=="undefined"&&typeof undefined!=="undefined"&&typeof{}!=="undefined"&&!!{}.node}();var S=function(){if(typeof Buffer!=="undefined"){var e=!Buffer.from;if(!e)try{Buffer.from("foo","utf8")}catch(r){e=true}return e?function(e,r){return r?new Buffer(e,r):new Buffer(e)}:Buffer.from.bind(Buffer)}return function(){}}();var _=function(){if(typeof Buffer==="undefined")return false;var e=S([65,0]);if(!e)return false;var r=e.toString("utf16le");return r.length==1}();function A(e){if(y)return Buffer.alloc?Buffer.alloc(e):new Buffer(e);return typeof Uint8Array!="undefined"?new Uint8Array(e):new Array(e)}function x(e){if(y)return Buffer.allocUnsafe?Buffer.allocUnsafe(e):new Buffer(e);return typeof Uint8Array!="undefined"?new Uint8Array(e):new Array(e)}var C=function Ok(e){if(y)return S(e,"binary");return e.split("").map(function(e){return e.charCodeAt(0)&255})};function O(e){if(typeof ArrayBuffer==="undefined")return C(e);var r=new ArrayBuffer(e.length),t=new Uint8Array(r);for(var a=0;a!=e.length;++a)t[a]=e.charCodeAt(a)&255;return r}function R(e){if(Array.isArray(e))return e.map(function(e){return String.fromCharCode(e)}).join("");var r=[];for(var t=0;t<e.length;++t)r[t]=String.fromCharCode(e[t]);return r.join("")}function N(e){if(typeof Uint8Array==="undefined")throw new Error("Unsupported");return new Uint8Array(e)}function I(e){if(typeof ArrayBuffer=="undefined")throw new Error("Unsupported");if(e instanceof ArrayBuffer)return I(new Uint8Array(e));var r=new Array(e.length);for(var t=0;t<e.length;++t)r[t]=e[t];return r}var F=y?function(e){return Buffer.concat(e.map(function(e){return Buffer.isBuffer(e)?e:S(e)}))}:function(e){if(typeof Uint8Array!=="undefined"){var r=0,t=0;for(r=0;r<e.length;++r)t+=e[r].length;var a=new Uint8Array(t);var n=0;for(r=0,t=0;r<e.length;t+=n,++r){n=e[r].length;if(e[r]instanceof Uint8Array)a.set(e[r],t);else if(typeof e[r]=="string")a.set(new Uint8Array(C(e[r])),t);else a.set(new Uint8Array(e[r]),t)}return a}return[].concat.apply([],e.map(function(e){return Array.isArray(e)?e:[].slice.call(e)}))};function D(e){var r=[],t=0,a=e.length+250;var n=A(e.length+255);for(var i=0;i<e.length;++i){var s=e.charCodeAt(i);if(s<128)n[t++]=s;else if(s<2048){n[t++]=192|s>>6&31;n[t++]=128|s&63}else if(s>=55296&&s<57344){s=(s&1023)+64;var f=e.charCodeAt(++i)&1023;n[t++]=240|s>>8&7;n[t++]=128|s>>2&63;n[t++]=128|f>>6&15|(s&3)<<4;n[t++]=128|f&63}else{n[t++]=224|s>>12&15;n[t++]=128|s>>6&63;n[t++]=128|s&63}if(t>a){r.push(n.slice(0,t));t=0;n=A(65535);a=65530}}r.push(n.slice(0,t));return F(r)}var P=/\u0000/g,L=/[\u0001-\u0006]/g;function M(e){var r="",t=e.length-1;while(t>=0)r+=e.charAt(t--);return r}function U(e,r){var t=""+e;return t.length>=r?t:Sr("0",r-t.length)+t}function B(e,r){var t=""+e;return t.length>=r?t:Sr(" ",r-t.length)+t}function W(e,r){var t=""+e;return t.length>=r?t:t+Sr(" ",r-t.length)}function H(e,r){var t=""+Math.round(e);return t.length>=r?t:Sr("0",r-t.length)+t}function z(e,r){var t=""+e;return t.length>=r?t:Sr("0",r-t.length)+t}var V=Math.pow(2,32);function G(e,r){if(e>V||e<-V)return H(e,r);var t=Math.round(e);return z(t,r)}function j(e,r){r=r||0;return e.length>=7+r&&(e.charCodeAt(r)|32)===103&&(e.charCodeAt(r+1)|32)===101&&(e.charCodeAt(r+2)|32)===110&&(e.charCodeAt(r+3)|32)===101&&(e.charCodeAt(r+4)|32)===114&&(e.charCodeAt(r+5)|32)===97&&(e.charCodeAt(r+6)|32)===108}var X=[["Sun","Sunday"],["Mon","Monday"],["Tue","Tuesday"],["Wed","Wednesday"],["Thu","Thursday"],["Fri","Friday"],["Sat","Saturday"]];var Y=[["J","Jan","January"],["F","Feb","February"],["M","Mar","March"],["A","Apr","April"],["M","May","May"],["J","Jun","June"],["J","Jul","July"],["A","Aug","August"],["S","Sep","September"],["O","Oct","October"],["N","Nov","November"],["D","Dec","December"]];function K(e){if(!e)e={};e[0]="General";e[1]="0";e[2]="0.00";e[3]="#,##0";e[4]="#,##0.00";e[9]="0%";e[10]="0.00%";e[11]="0.00E+00";e[12]="# ?/?";e[13]="# ??/??";e[14]="m/d/yy";e[15]="d-mmm-yy";e[16]="d-mmm";e[17]="mmm-yy";e[18]="h:mm AM/PM";e[19]="h:mm:ss AM/PM";e[20]="h:mm";e[21]="h:mm:ss";e[22]="m/d/yy h:mm";e[37]="#,##0 ;(#,##0)";e[38]="#,##0 ;[Red](#,##0)";e[39]="#,##0.00;(#,##0.00)";e[40]="#,##0.00;[Red](#,##0.00)";e[45]="mm:ss";e[46]="[h]:mm:ss";e[47]="mmss.0";e[48]="##0.0E+0";e[49]="@";e[56]='"ä¸å/ä¸å "hh"æ"mm"å"ss"ç§ "';return e}var Z={0:"General",1:"0",2:"0.00",3:"#,##0",4:"#,##0.00",9:"0%",10:"0.00%",11:"0.00E+00",12:"# ?/?",13:"# ??/??",14:"m/d/yy",15:"d-mmm-yy",16:"d-mmm",17:"mmm-yy",18:"h:mm AM/PM",19:"h:mm:ss AM/PM",20:"h:mm",21:"h:mm:ss",22:"m/d/yy h:mm",37:"#,##0 ;(#,##0)",38:"#,##0 ;[Red](#,##0)",39:"#,##0.00;(#,##0.00)",40:"#,##0.00;[Red](#,##0.00)",45:"mm:ss",46:"[h]:mm:ss",47:"mmss.0",48:"##0.0E+0",49:"@",56:'"ä¸å/ä¸å "hh"æ"mm"å"ss"ç§ "'};var J={5:37,6:38,7:39,8:40,23:0,24:0,25:0,26:0,27:14,28:14,29:14,30:14,31:14,50:14,51:14,52:14,53:14,54:14,55:14,56:14,57:14,58:14,59:1,60:2,61:3,62:4,67:9,68:10,69:12,70:13,71:14,72:14,73:15,74:16,75:17,76:20,77:21,78:22,79:45,80:46,81:47,82:0};var q={5:'"$"#,##0_);\\("$"#,##0\\)',63:'"$"#,##0_);\\("$"#,##0\\)',6:'"$"#,##0_);[Red]\\("$"#,##0\\)',64:'"$"#,##0_);[Red]\\("$"#,##0\\)',7:'"$"#,##0.00_);\\("$"#,##0.00\\)',65:'"$"#,##0.00_);\\("$"#,##0.00\\)',8:'"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',66:'"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',41:'_(* #,##0_);_(* \\(#,##0\\);_(* "-"_);_(@_)',42:'_("$"* #,##0_);_("$"* \\(#,##0\\);_("$"* "-"_);_(@_)',43:'_(* #,##0.00_);_(* \\(#,##0.00\\);_(* "-"??_);_(@_)',44:'_("$"* #,##0.00_);_("$"* \\(#,##0.00\\);_("$"* "-"??_);_(@_)'};function Q(e,r,t){var a=e<0?-1:1;var n=e*a;var i=0,s=1,f=0;var l=1,o=0,c=0;var u=Math.floor(n);while(o<r){u=Math.floor(n);f=u*s+i;c=u*o+l;if(n-u<5e-8)break;n=1/(n-u);i=s;s=f;l=o;o=c}if(c>r){if(o>r){c=l;f=i}else{c=o;f=s}}if(!t)return[0,a*f,c];var h=Math.floor(a*f/c);return[h,a*f-h*c,c]}function ee(e,r,t){if(e>2958465||e<0)return null;var a=e|0,n=Math.floor(86400*(e-a)),i=0;var s=[];var f={D:a,T:n,u:86400*(e-a)-n,y:0,m:0,d:0,H:0,M:0,S:0,q:0};if(Math.abs(f.u)<1e-6)f.u=0;if(r&&r.date1904)a+=1462;if(f.u>.9999){f.u=0;if(++n==86400){f.T=n=0;++a;++f.D}}if(a===60){s=t?[1317,10,29]:[1900,2,29];i=3}else if(a===0){s=t?[1317,8,29]:[1900,1,0];i=6}else{if(a>60)--a;var l=new Date(1900,0,1);l.setDate(l.getDate()+a-1);s=[l.getFullYear(),l.getMonth()+1,l.getDate()];i=l.getDay();if(a<60)i=(i+6)%7;if(t)i=ue(l,s)}f.y=s[0];f.m=s[1];f.d=s[2];f.S=n%60;n=Math.floor(n/60);f.M=n%60;n=Math.floor(n/60);f.H=n;f.q=i;return f}var re=new Date(1899,11,31,0,0,0);var te=re.getTime();var ae=new Date(1900,2,1,0,0,0);function ne(e,r){var t=e.getTime();if(r)t-=1461*24*60*60*1e3;else if(e>=ae)t+=24*60*60*1e3;return(t-(te+(e.getTimezoneOffset()-re.getTimezoneOffset())*6e4))/(24*60*60*1e3)}function ie(e){return e.indexOf(".")==-1?e:e.replace(/(?:\.0*|(\.\d*[1-9])0+)$/,"$1")}function se(e){if(e.indexOf("E")==-1)return e;return e.replace(/(?:\.0*|(\.\d*[1-9])0+)[Ee]/,"$1E").replace(/(E[+-])(\d)$/,"$10$2")}function fe(e){var r=e<0?12:11;var t=ie(e.toFixed(12));if(t.length<=r)return t;t=e.toPrecision(10);if(t.length<=r)return t;return e.toExponential(5)}function le(e){var r=ie(e.toFixed(11));return r.length>(e<0?12:11)||r==="0"||r==="-0"?e.toPrecision(6):r}function oe(e){var r=Math.floor(Math.log(Math.abs(e))*Math.LOG10E),t;if(r>=-4&&r<=-1)t=e.toPrecision(10+r);else if(Math.abs(r)<=9)t=fe(e);else if(r===10)t=e.toFixed(10).substr(0,12);else t=le(e);return ie(se(t.toUpperCase()))}function ce(e,r){switch(typeof e){case"string":return e;case"boolean":return e?"TRUE":"FALSE";case"number":return(e|0)===e?e.toString(10):oe(e);case"undefined":return"";case"object":if(e==null)return"";if(e instanceof Date)return ze(14,ne(e,r&&r.date1904),r);}throw new Error("unsupported value in General format: "+e)}function ue(e,r){r[0]-=581;var t=e.getDay();if(e<60)t=(t+6)%7;return t}function he(e,r,t,a){var n="",i=0,s=0,f=t.y,l,o=0;switch(e){case 98:f=t.y+543;case 121:switch(r.length){case 1:;case 2:l=f%100;o=2;break;default:l=f%1e4;o=4;break;}break;case 109:switch(r.length){case 1:;case 2:l=t.m;o=r.length;break;case 3:return Y[t.m-1][1];case 5:return Y[t.m-1][0];default:return Y[t.m-1][2];}break;case 100:switch(r.length){case 1:;case 2:l=t.d;o=r.length;break;case 3:return X[t.q][0];default:return X[t.q][1];}break;case 104:switch(r.length){case 1:;case 2:l=1+(t.H+11)%12;o=r.length;break;default:throw"bad hour format: "+r;}break;case 72:switch(r.length){case 1:;case 2:l=t.H;o=r.length;break;default:throw"bad hour format: "+r;}break;case 77:switch(r.length){case 1:;case 2:l=t.M;o=r.length;break;default:throw"bad minute format: "+r;}break;case 115:if(r!="s"&&r!="ss"&&r!=".0"&&r!=".00"&&r!=".000")throw"bad second format: "+r;if(t.u===0&&(r=="s"||r=="ss"))return U(t.S,r.length);if(a>=2)s=a===3?1e3:100;else s=a===1?10:1;i=Math.round(s*(t.S+t.u));if(i>=60*s)i=0;if(r==="s")return i===0?"0":""+i/s;n=U(i,2+a);if(r==="ss")return n.substr(0,2);return"."+n.substr(2,r.length-1);case 90:switch(r){case"[h]":;case"[hh]":l=t.D*24+t.H;break;case"[m]":;case"[mm]":l=(t.D*24+t.H)*60+t.M;break;case"[s]":;case"[ss]":l=((t.D*24+t.H)*60+t.M)*60+Math.round(t.S+t.u);break;default:throw"bad abstime format: "+r;}o=r.length===3?1:2;break;case 101:l=f;o=1;break;}var c=o>0?U(l,o):"";return c}function de(e){var r=3;if(e.length<=r)return e;var t=e.length%r,a=e.substr(0,t);for(;t!=e.length;t+=r)a+=(a.length>0?",":"")+e.substr(t,r);return a}var ve=/%/g;function pe(e,r,t){var a=r.replace(ve,""),n=r.length-a.length;return De(e,a,t*Math.pow(10,2*n))+Sr("%",n)}function me(e,r,t){var a=r.length-1;while(r.charCodeAt(a-1)===44)--a;return De(e,r.substr(0,a),t/Math.pow(10,3*(r.length-a)))}function be(e,r){var t;var a=e.indexOf("E")-e.indexOf(".")-1;if(e.match(/^#+0.0E\+0$/)){if(r==0)return"0.0E+0";else if(r<0)return"-"+be(e,-r);var n=e.indexOf(".");if(n===-1)n=e.indexOf("E");var i=Math.floor(Math.log(r)*Math.LOG10E)%n;if(i<0)i+=n;t=(r/Math.pow(10,i)).toPrecision(a+1+(n+i)%n);if(t.indexOf("e")===-1){var s=Math.floor(Math.log(r)*Math.LOG10E);if(t.indexOf(".")===-1)t=t.charAt(0)+"."+t.substr(1)+"E+"+(s-t.length+i);else t+="E+"+(s-i);while(t.substr(0,2)==="0."){t=t.charAt(0)+t.substr(2,n)+"."+t.substr(2+n);t=t.replace(/^0+([1-9])/,"$1").replace(/^0+\./,"0.")}t=t.replace(/\+-/,"-")}t=t.replace(/^([+-]?)(\d*)\.(\d*)[Ee]/,function(e,r,t,a){return r+t+a.substr(0,(n+i)%n)+"."+a.substr(i)+"E"})}else t=r.toExponential(a);if(e.match(/E\+00$/)&&t.match(/e[+-]\d$/))t=t.substr(0,t.length-1)+"0"+t.charAt(t.length-1);if(e.match(/E\-/)&&t.match(/e\+/))t=t.replace(/e\+/,"e");return t.replace("e","E")}var ge=/# (\?+)( ?)\/( ?)(\d+)/;function we(e,r,t){var a=parseInt(e[4],10),n=Math.round(r*a),i=Math.floor(n/a);var s=n-i*a,f=a;return t+(i===0?"":""+i)+" "+(s===0?Sr(" ",e[1].length+1+e[4].length):B(s,e[1].length)+e[2]+"/"+e[3]+U(f,e[4].length))}function ke(e,r,t){return t+(r===0?"":""+r)+Sr(" ",e[1].length+2+e[4].length)}var Te=/^#*0*\.([0#]+)/;var Ee=/\).*[0#]/;var ye=/\(###\) ###\\?-####/;function Se(e){var r="",t;for(var a=0;a!=e.length;++a)switch(t=e.charCodeAt(a)){case 35:break;case 63:r+=" ";break;case 48:r+="0";break;default:r+=String.fromCharCode(t);}return r}function _e(e,r){var t=Math.pow(10,r);return""+Math.round(e*t)/t}function Ae(e,r){var t=e-Math.floor(e),a=Math.pow(10,r);if(r<(""+Math.round(t*a)).length)return 0;return Math.round(t*a)}function xe(e,r){if(r<(""+Math.round((e-Math.floor(e))*Math.pow(10,r))).length){return 1}return 0}function Ce(e){if(e<2147483647&&e>-2147483648)return""+(e>=0?e|0:e-1|0);return""+Math.floor(e)}function Oe(e,r,t){if(e.charCodeAt(0)===40&&!r.match(Ee)){var a=r.replace(/\( */,"").replace(/ \)/,"").replace(/\)/,"");if(t>=0)return Oe("n",a,t);return"("+Oe("n",a,-t)+")"}if(r.charCodeAt(r.length-1)===44)return me(e,r,t);if(r.indexOf("%")!==-1)return pe(e,r,t);if(r.indexOf("E")!==-1)return be(r,t);if(r.charCodeAt(0)===36)return"$"+Oe(e,r.substr(r.charAt(1)==" "?2:1),t);var n;var i,s,f,l=Math.abs(t),o=t<0?"-":"";if(r.match(/^00+$/))return o+G(l,r.length);if(r.match(/^[#?]+$/)){n=G(t,0);if(n==="0")n="";return n.length>r.length?n:Se(r.substr(0,r.length-n.length))+n}if(i=r.match(ge))return we(i,l,o);if(r.match(/^#+0+$/))return o+G(l,r.length-r.indexOf("0"));if(i=r.match(Te)){n=_e(t,i[1].length).replace(/^([^\.]+)$/,"$1."+Se(i[1])).replace(/\.$/,"."+Se(i[1])).replace(/\.(\d*)$/,function(e,r){return"."+r+Sr("0",Se(i[1]).length-r.length)});return r.indexOf("0.")!==-1?n:n.replace(/^0\./,".")}r=r.replace(/^#+([0.])/,"$1");if(i=r.match(/^(0*)\.(#*)$/)){return o+_e(l,i[2].length).replace(/\.(\d*[1-9])0*$/,".$1").replace(/^(-?\d*)$/,"$1.").replace(/^0\./,i[1].length?"0.":".")}if(i=r.match(/^#{1,3},##0(\.?)$/))return o+de(G(l,0));if(i=r.match(/^#,##0\.([#0]*0)$/)){return t<0?"-"+Oe(e,r,-t):de(""+(Math.floor(t)+xe(t,i[1].length)))+"."+U(Ae(t,i[1].length),i[1].length)}if(i=r.match(/^#,#*,#0/))return Oe(e,r.replace(/^#,#*,/,""),t);if(i=r.match(/^([0#]+)(\\?-([0#]+))+$/)){n=M(Oe(e,r.replace(/[\\-]/g,""),t));s=0;return M(M(r.replace(/\\/g,"")).replace(/[0#]/g,function(e){return s<n.length?n.charAt(s++):e==="0"?"0":""}))}if(r.match(ye)){n=Oe(e,"##########",t);return"("+n.substr(0,3)+") "+n.substr(3,3)+"-"+n.substr(6)}var c="";if(i=r.match(/^([#0?]+)( ?)\/( ?)([#0?]+)/)){s=Math.min(i[4].length,7);f=Q(l,Math.pow(10,s)-1,false);n=""+o;c=De("n",i[1],f[1]);if(c.charAt(c.length-1)==" ")c=c.substr(0,c.length-1)+"0";n+=c+i[2]+"/"+i[3];c=W(f[2],s);if(c.length<i[4].length)c=Se(i[4].substr(i[4].length-c.length))+c;n+=c;return n}if(i=r.match(/^# ([#0?]+)( ?)\/( ?)([#0?]+)/)){s=Math.min(Math.max(i[1].length,i[4].length),7);f=Q(l,Math.pow(10,s)-1,true);return o+(f[0]||(f[1]?"":"0"))+" "+(f[1]?B(f[1],s)+i[2]+"/"+i[3]+W(f[2],s):Sr(" ",2*s+1+i[2].length+i[3].length))}if(i=r.match(/^[#0?]+$/)){n=G(t,0);if(r.length<=n.length)return n;return Se(r.substr(0,r.length-n.length))+n}if(i=r.match(/^([#0?]+)\.([#0]+)$/)){n=""+t.toFixed(Math.min(i[2].length,10)).replace(/([^0])0+$/,"$1");s=n.indexOf(".");var u=r.indexOf(".")-s,h=r.length-n.length-u;return Se(r.substr(0,u)+n+r.substr(r.length-h))}if(i=r.match(/^00,000\.([#0]*0)$/)){s=Ae(t,i[1].length);return t<0?"-"+Oe(e,r,-t):de(Ce(t)).replace(/^\d,\d{3}$/,"0$&").replace(/^\d*$/,function(e){return"00,"+(e.length<3?U(0,3-e.length):"")+e})+"."+U(s,i[1].length)}switch(r){case"###,##0.00":return Oe(e,"#,##0.00",t);case"###,###":;case"##,###":;case"#,###":var d=de(G(l,0));return d!=="0"?o+d:"";case"###,###.00":return Oe(e,"###,##0.00",t).replace(/^0\./,".");case"#,###.00":return Oe(e,"#,##0.00",t).replace(/^0\./,".");default:;}throw new Error("unsupported format |"+r+"|")}function Re(e,r,t){var a=r.length-1;while(r.charCodeAt(a-1)===44)--a;return De(e,r.substr(0,a),t/Math.pow(10,3*(r.length-a)))}function Ne(e,r,t){var a=r.replace(ve,""),n=r.length-a.length;return De(e,a,t*Math.pow(10,2*n))+Sr("%",n)}function Ie(e,r){var t;var a=e.indexOf("E")-e.indexOf(".")-1;if(e.match(/^#+0.0E\+0$/)){if(r==0)return"0.0E+0";else if(r<0)return"-"+Ie(e,-r);var n=e.indexOf(".");if(n===-1)n=e.indexOf("E");var i=Math.floor(Math.log(r)*Math.LOG10E)%n;if(i<0)i+=n;t=(r/Math.pow(10,i)).toPrecision(a+1+(n+i)%n);if(!t.match(/[Ee]/)){var s=Math.floor(Math.log(r)*Math.LOG10E);if(t.indexOf(".")===-1)t=t.charAt(0)+"."+t.substr(1)+"E+"+(s-t.length+i);else t+="E+"+(s-i);t=t.replace(/\+-/,"-")}t=t.replace(/^([+-]?)(\d*)\.(\d*)[Ee]/,function(e,r,t,a){return r+t+a.substr(0,(n+i)%n)+"."+a.substr(i)+"E"})}else t=r.toExponential(a);if(e.match(/E\+00$/)&&t.match(/e[+-]\d$/))t=t.substr(0,t.length-1)+"0"+t.charAt(t.length-1);if(e.match(/E\-/)&&t.match(/e\+/))t=t.replace(/e\+/,"e");return t.replace("e","E")}function Fe(e,r,t){if(e.charCodeAt(0)===40&&!r.match(Ee)){var a=r.replace(/\( */,"").replace(/ \)/,"").replace(/\)/,"");if(t>=0)return Fe("n",a,t);return"("+Fe("n",a,-t)+")"}if(r.charCodeAt(r.length-1)===44)return Re(e,r,t);if(r.indexOf("%")!==-1)return Ne(e,r,t);if(r.indexOf("E")!==-1)return Ie(r,t);if(r.charCodeAt(0)===36)return"$"+Fe(e,r.substr(r.charAt(1)==" "?2:1),t);var n;var i,s,f,l=Math.abs(t),o=t<0?"-":"";if(r.match(/^00+$/))return o+U(l,r.length);if(r.match(/^[#?]+$/)){n=""+t;if(t===0)n="";return n.length>r.length?n:Se(r.substr(0,r.length-n.length))+n}if(i=r.match(ge))return ke(i,l,o);if(r.match(/^#+0+$/))return o+U(l,r.length-r.indexOf("0"));if(i=r.match(Te)){n=(""+t).replace(/^([^\.]+)$/,"$1."+Se(i[1])).replace(/\.$/,"."+Se(i[1]));n=n.replace(/\.(\d*)$/,function(e,r){return"."+r+Sr("0",Se(i[1]).length-r.length)});return r.indexOf("0.")!==-1?n:n.replace(/^0\./,".")}r=r.replace(/^#+([0.])/,"$1");if(i=r.match(/^(0*)\.(#*)$/)){return o+(""+l).replace(/\.(\d*[1-9])0*$/,".$1").replace(/^(-?\d*)$/,"$1.").replace(/^0\./,i[1].length?"0.":".")}if(i=r.match(/^#{1,3},##0(\.?)$/))return o+de(""+l);if(i=r.match(/^#,##0\.([#0]*0)$/)){return t<0?"-"+Fe(e,r,-t):de(""+t)+"."+Sr("0",i[1].length)}if(i=r.match(/^#,#*,#0/))return Fe(e,r.replace(/^#,#*,/,""),t);if(i=r.match(/^([0#]+)(\\?-([0#]+))+$/)){n=M(Fe(e,r.replace(/[\\-]/g,""),t));s=0;return M(M(r.replace(/\\/g,"")).replace(/[0#]/g,function(e){return s<n.length?n.charAt(s++):e==="0"?"0":""}))}if(r.match(ye)){n=Fe(e,"##########",t);return"("+n.substr(0,3)+") "+n.substr(3,3)+"-"+n.substr(6)}var c="";if(i=r.match(/^([#0?]+)( ?)\/( ?)([#0?]+)/)){s=Math.min(i[4].length,7);f=Q(l,Math.pow(10,s)-1,false);n=""+o;c=De("n",i[1],f[1]);if(c.charAt(c.length-1)==" ")c=c.substr(0,c.length-1)+"0";n+=c+i[2]+"/"+i[3];c=W(f[2],s);if(c.length<i[4].length)c=Se(i[4].substr(i[4].length-c.length))+c;n+=c;return n}if(i=r.match(/^# ([#0?]+)( ?)\/( ?)([#0?]+)/)){s=Math.min(Math.max(i[1].length,i[4].length),7);f=Q(l,Math.pow(10,s)-1,true);return o+(f[0]||(f[1]?"":"0"))+" "+(f[1]?B(f[1],s)+i[2]+"/"+i[3]+W(f[2],s):Sr(" ",2*s+1+i[2].length+i[3].length))}if(i=r.match(/^[#0?]+$/)){n=""+t;if(r.length<=n.length)return n;return Se(r.substr(0,r.length-n.length))+n}if(i=r.match(/^([#0]+)\.([#0]+)$/)){n=""+t.toFixed(Math.min(i[2].length,10)).replace(/([^0])0+$/,"$1");s=n.indexOf(".");var u=r.indexOf(".")-s,h=r.length-n.length-u;return Se(r.substr(0,u)+n+r.substr(r.length-h))}if(i=r.match(/^00,000\.([#0]*0)$/)){return t<0?"-"+Fe(e,r,-t):de(""+t).replace(/^\d,\d{3}$/,"0$&").replace(/^\d*$/,function(e){return"00,"+(e.length<3?U(0,3-e.length):"")+e})+"."+U(0,i[1].length)}switch(r){case"###,###":;case"##,###":;case"#,###":var d=de(""+l);return d!=="0"?o+d:"";default:if(r.match(/\.[0#?]*$/))return Fe(e,r.slice(0,r.lastIndexOf(".")),t)+Se(r.slice(r.lastIndexOf(".")));}throw new Error("unsupported format |"+r+"|")}function De(e,r,t){return(t|0)===t?Fe(e,r,t):Oe(e,r,t)}function Pe(e){var r=[];var t=false;for(var a=0,n=0;a<e.length;++a)switch(e.charCodeAt(a)){case 34:t=!t;break;case 95:;case 42:;case 92:++a;break;case 59:r[r.length]=e.substr(n,a-n);n=a+1;}r[r.length]=e.substr(n);if(t===true)throw new Error("Format |"+e+"| unterminated string ");return r}var Le=/\[[HhMmSs\u0E0A\u0E19\u0E17]*\]/;function Me(e){var r=0,t="",a="";while(r<e.length){switch(t=e.charAt(r)){case"G":if(j(e,r))r+=6;r++;break;case'"':for(;e.charCodeAt(++r)!==34&&r<e.length;){}++r;break;case"\\":r+=2;break;case"_":r+=2;break;case"@":++r;break;case"B":;case"b":if(e.charAt(r+1)==="1"||e.charAt(r+1)==="2")return true;case"M":;case"D":;case"Y":;case"H":;case"S":;case"E":;case"m":;case"d":;case"y":;case"h":;case"s":;case"e":;case"g":return true;case"A":;case"a":;case"ä¸":if(e.substr(r,3).toUpperCase()==="A/P")return true;if(e.substr(r,5).toUpperCase()==="AM/PM")return true;if(e.substr(r,5).toUpperCase()==="ä¸å/ä¸å")return true;++r;break;case"[":a=t;while(e.charAt(r++)!=="]"&&r<e.length)a+=e.charAt(r);if(a.match(Le))return true;break;case".":;case"0":;case"#":while(r<e.length&&("0#?.,E+-%".indexOf(t=e.charAt(++r))>-1||t=="\\"&&e.charAt(r+1)=="-"&&"0#".indexOf(e.charAt(r+2))>-1)){}break;case"?":while(e.charAt(++r)===t){}break;case"*":++r;if(e.charAt(r)==" "||e.charAt(r)=="*")++r;break;case"(":;case")":++r;break;case"1":;case"2":;case"3":;case"4":;case"5":;case"6":;case"7":;case"8":;case"9":while(r<e.length&&"0123456789".indexOf(e.charAt(++r))>-1){}break;case" ":++r;break;default:++r;break;}}return false}function Ue(e,r,t,a){var n=[],i="",s=0,f="",l="t",o,c,u;var h="H";while(s<e.length){switch(f=e.charAt(s)){case"G":if(!j(e,s))throw new Error("unrecognized character "+f+" in "+e);n[n.length]={t:"G",v:"General"};s+=7;break;case'"':for(i="";(u=e.charCodeAt(++s))!==34&&s<e.length;)i+=String.fromCharCode(u);n[n.length]={t:"t",v:i};++s;break;case"\\":var d=e.charAt(++s),v=d==="("||d===")"?d:"t";n[n.length]={t:v,v:d};++s;break;case"_":n[n.length]={t:"t",v:" "};s+=2;break;case"@":n[n.length]={t:"T",v:r};++s;break;case"B":;case"b":if(e.charAt(s+1)==="1"||e.charAt(s+1)==="2"){if(o==null){o=ee(r,t,e.charAt(s+1)==="2");if(o==null)return""}n[n.length]={t:"X",v:e.substr(s,2)};l=f;s+=2;break};case"M":;case"D":;case"Y":;case"H":;case"S":;case"E":f=f.toLowerCase();case"m":;case"d":;case"y":;case"h":;case"s":;case"e":;case"g":if(r<0)return"";if(o==null){o=ee(r,t);if(o==null)return""}i=f;while(++s<e.length&&e.charAt(s).toLowerCase()===f)i+=f;if(f==="m"&&l.toLowerCase()==="h")f="M";if(f==="h")f=h;n[n.length]={t:f,v:i};l=f;break;case"A":;case"a":;case"ä¸":var p={t:f,v:f};if(o==null)o=ee(r,t);if(e.substr(s,3).toUpperCase()==="A/P"){if(o!=null)p.v=o.H>=12?e.charAt(s+2):f;p.t="T";h="h";s+=3}else if(e.substr(s,5).toUpperCase()==="AM/PM"){if(o!=null)p.v=o.H>=12?"PM":"AM";p.t="T";s+=5;h="h"}else if(e.substr(s,5).toUpperCase()==="ä¸å/ä¸å"){if(o!=null)p.v=o.H>=12?"ä¸å":"ä¸å";p.t="T";s+=5;h="h"}else{p.t="t";++s}if(o==null&&p.t==="T")return"";n[n.length]=p;l=f;break;case"[":i=f;while(e.charAt(s++)!=="]"&&s<e.length)i+=e.charAt(s);if(i.slice(-1)!=="]")throw'unterminated "[" block: |'+i+"|";if(i.match(Le)){if(o==null){o=ee(r,t);if(o==null)return""}n[n.length]={t:"Z",v:i.toLowerCase()};l=i.charAt(1)}else if(i.indexOf("$")>-1){i=(i.match(/\$([^-\[\]]*)/)||[])[1]||"$";if(!Me(e))n[n.length]={t:"t",v:i}}break;case".":if(o!=null){i=f;while(++s<e.length&&(f=e.charAt(s))==="0")i+=f;n[n.length]={t:"s",v:i};break};case"0":;case"#":i=f;while(++s<e.length&&"0#?.,E+-%".indexOf(f=e.charAt(s))>-1)i+=f;n[n.length]={t:"n",v:i};break;case"?":i=f;while(e.charAt(++s)===f)i+=f;n[n.length]={t:f,v:i};l=f;break;case"*":++s;if(e.charAt(s)==" "||e.charAt(s)=="*")++s;break;case"(":;case")":n[n.length]={t:a===1?"t":f,v:f};++s;break;case"1":;case"2":;case"3":;case"4":;case"5":;case"6":;case"7":;case"8":;case"9":i=f;while(s<e.length&&"0123456789".indexOf(e.charAt(++s))>-1)i+=e.charAt(s);n[n.length]={t:"D",v:i};break;case" ":n[n.length]={t:f,v:f};++s;break;case"$":n[n.length]={t:"t",v:"$"};++s;break;default:if(",$-+/():!^&'~{}<>=â¬acfijklopqrtuvwxzP".indexOf(f)===-1)throw new Error("unrecognized character "+f+" in "+e);n[n.length]={t:"t",v:f};++s;break;}}var m=0,b=0,g;for(s=n.length-1,l="t";s>=0;--s){switch(n[s].t){case"h":;case"H":n[s].t=h;l="h";if(m<1)m=1;break;case"s":if(g=n[s].v.match(/\.0+$/))b=Math.max(b,g[0].length-1);if(m<3)m=3;case"d":;case"y":;case"M":;case"e":l=n[s].t;break;case"m":if(l==="s"){n[s].t="M";if(m<2)m=2}break;case"X":break;case"Z":if(m<1&&n[s].v.match(/[Hh]/))m=1;if(m<2&&n[s].v.match(/[Mm]/))m=2;if(m<3&&n[s].v.match(/[Ss]/))m=3;}}switch(m){case 0:break;case 1:if(o.u>=.5){o.u=0;++o.S}if(o.S>=60){o.S=0;++o.M}if(o.M>=60){o.M=0;++o.H}break;case 2:if(o.u>=.5){o.u=0;++o.S}if(o.S>=60){o.S=0;++o.M}break;}var w="",k;for(s=0;s<n.length;++s){switch(n[s].t){case"t":;case"T":;case" ":;case"D":break;case"X":n[s].v="";n[s].t=";";break;case"d":;case"m":;case"y":;case"h":;case"H":;case"M":;case"s":;case"e":;case"b":;case"Z":n[s].v=he(n[s].t.charCodeAt(0),n[s].v,o,b);n[s].t="t";break;case"n":;case"?":k=s+1;while(n[k]!=null&&((f=n[k].t)==="?"||f==="D"||(f===" "||f==="t")&&n[k+1]!=null&&(n[k+1].t==="?"||n[k+1].t==="t"&&n[k+1].v==="/")||n[s].t==="("&&(f===" "||f==="n"||f===")")||f==="t"&&(n[k].v==="/"||n[k].v===" "&&n[k+1]!=null&&n[k+1].t=="?"))){n[s].v+=n[k].v;n[k]={v:"",t:";"};++k}w+=n[s].v;s=k-1;break;case"G":n[s].t="t";n[s].v=ce(r,t);break;}}var T="",E,y;if(w.length>0){if(w.charCodeAt(0)==40){E=r<0&&w.charCodeAt(0)===45?-r:r;y=De("n",w,E)}else{E=r<0&&a>1?-r:r;y=De("n",w,E);if(E<0&&n[0]&&n[0].t=="t"){y=y.substr(1);n[0].v="-"+n[0].v}}k=y.length-1;var S=n.length;for(s=0;s<n.length;++s)if(n[s]!=null&&n[s].t!="t"&&n[s].v.indexOf(".")>-1){S=s;break}var _=n.length;if(S===n.length&&y.indexOf("E")===-1){for(s=n.length-1;s>=0;--s){if(n[s]==null||"n?".indexOf(n[s].t)===-1)continue;if(k>=n[s].v.length-1){k-=n[s].v.length;n[s].v=y.substr(k+1,n[s].v.length)}else if(k<0)n[s].v="";else{n[s].v=y.substr(0,k+1);k=-1}n[s].t="t";_=s}if(k>=0&&_<n.length)n[_].v=y.substr(0,k+1)+n[_].v}else if(S!==n.length&&y.indexOf("E")===-1){k=y.indexOf(".")-1;for(s=S;s>=0;--s){if(n[s]==null||"n?".indexOf(n[s].t)===-1)continue;c=n[s].v.indexOf(".")>-1&&s===S?n[s].v.indexOf(".")-1:n[s].v.length-1;T=n[s].v.substr(c+1);for(;c>=0;--c){if(k>=0&&(n[s].v.charAt(c)==="0"||n[s].v.charAt(c)==="#"))T=y.charAt(k--)+T}n[s].v=T;n[s].t="t";_=s}if(k>=0&&_<n.length)n[_].v=y.substr(0,k+1)+n[_].v;k=y.indexOf(".")+1;for(s=S;s<n.length;++s){if(n[s]==null||"n?(".indexOf(n[s].t)===-1&&s!==S)continue;c=n[s].v.indexOf(".")>-1&&s===S?n[s].v.indexOf(".")+1:0;T=n[s].v.substr(0,c);for(;c<n[s].v.length;++c){if(k<y.length)T+=y.charAt(k++)}n[s].v=T;n[s].t="t";_=s}}}for(s=0;s<n.length;++s)if(n[s]!=null&&"n?".indexOf(n[s].t)>-1){E=a>1&&r<0&&s>0&&n[s-1].v==="-"?-r:r;n[s].v=De(n[s].t,n[s].v,E);n[s].t="t"}var A="";for(s=0;s!==n.length;++s)if(n[s]!=null)A+=n[s].v;return A}var Be=/\[(=|>[=]?|<[>=]?)(-?\d+(?:\.\d*)?)\]/;function We(e,r){if(r==null)return false;var t=parseFloat(r[2]);switch(r[1]){case"=":if(e==t)return true;break;case">":if(e>t)return true;break;case"<":if(e<t)return true;break;case"<>":if(e!=t)return true;break;case">=":if(e>=t)return true;break;case"<=":if(e<=t)return true;break;}return false}function He(e,r){var t=Pe(e);var a=t.length,n=t[a-1].indexOf("@");if(a<4&&n>-1)--a;if(t.length>4)throw new Error("cannot find right format for |"+t.join("|")+"|");if(typeof r!=="number")return[4,t.length===4||n>-1?t[t.length-1]:"@"];switch(t.length){case 1:t=n>-1?["General","General","General",t[0]]:[t[0],t[0],t[0],"@"];break;case 2:t=n>-1?[t[0],t[0],t[0],t[1]]:[t[0],t[1],t[0],"@"];break;case 3:t=n>-1?[t[0],t[1],t[0],t[2]]:[t[0],t[1],t[2],"@"];break;case 4:break;}var i=r>0?t[0]:r<0?t[1]:t[2];if(t[0].indexOf("[")===-1&&t[1].indexOf("[")===-1)return[a,i];if(t[0].match(/\[[=<>]/)!=null||t[1].match(/\[[=<>]/)!=null){var s=t[0].match(Be);var f=t[1].match(Be);return We(r,s)?[a,t[0]]:We(r,f)?[a,t[1]]:[a,t[s!=null&&f!=null?2:1]]}return[a,i]}function ze(e,r,t){if(t==null)t={};var a="";switch(typeof e){case"string":if(e=="m/d/yy"&&t.dateNF)a=t.dateNF;else a=e;break;case"number":if(e==14&&t.dateNF)a=t.dateNF;else a=(t.table!=null?t.table:Z)[e];if(a==null)a=t.table&&t.table[J[e]]||Z[J[e]];if(a==null)a=q[e]||"General";break;}if(j(a,0))return ce(r,t);if(r instanceof Date)r=ne(r,t.date1904);var n=He(a,r);if(j(n[1]))return ce(r,t);if(r===true)r="TRUE";else if(r===false)r="FALSE";else if(r===""||r==null)return"";return Ue(n[1],r,t,n[0])}function Ve(e,r){if(typeof r!="number"){r=+r||-1;for(var t=0;t<392;++t){if(Z[t]==undefined){if(r<0)r=t;continue}if(Z[t]==e){r=t;break}}if(r<0)r=391}Z[r]=e;return r}function Ge(e){for(var r=0;r!=392;++r)if(e[r]!==undefined)Ve(e[r],r)}function $e(){Z=K()}var je={format:ze,load:Ve,_table:Z,load_table:Ge,parse_date_code:ee,is_date:Me,get_table:function Rk(){return je._table=Z}};var Xe={5:'"$"#,##0_);\\("$"#,##0\\)',6:'"$"#,##0_);[Red]\\("$"#,##0\\)',7:'"$"#,##0.00_);\\("$"#,##0.00\\)',8:'"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',23:"General",24:"General",25:"General",26:"General",27:"m/d/yy",28:"m/d/yy",29:"m/d/yy",30:"m/d/yy",31:"m/d/yy",32:"h:mm:ss",33:"h:mm:ss",34:"h:mm:ss",35:"h:mm:ss",36:"m/d/yy",41:'_(* #,##0_);_(* (#,##0);_(* "-"_);_(@_)',42:'_("$"* #,##0_);_("$"* (#,##0);_("$"* "-"_);_(@_)',43:'_(* #,##0.00_);_(* (#,##0.00);_(* "-"??_);_(@_)',44:'_("$"* #,##0.00_);_("$"* (#,##0.00);_("$"* "-"??_);_(@_)',50:"m/d/yy",51:"m/d/yy",52:"m/d/yy",53:"m/d/yy",54:"m/d/yy",55:"m/d/yy",56:"m/d/yy",57:"m/d/yy",58:"m/d/yy",59:"0",60:"0.00",61:"#,##0",62:"#,##0.00",63:'"$"#,##0_);\\("$"#,##0\\)',64:'"$"#,##0_);[Red]\\("$"#,##0\\)',65:'"$"#,##0.00_);\\("$"#,##0.00\\)',66:'"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',67:"0%",68:"0.00%",69:"# ?/?",70:"# ??/??",71:"m/d/yy",72:"m/d/yy",73:"d-mmm-yy",74:"d-mmm",75:"mmm-yy",76:"h:mm",77:"h:mm:ss",78:"m/d/yy h:mm",79:"mm:ss",80:"[h]:mm:ss",81:"mmss.0"};var Ye=/[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;function Ke(e){var r=typeof e=="number"?Z[e]:e;r=r.replace(Ye,"(\\d+)");return new RegExp("^"+r+"$")}function Ze(e,r,t){var a=-1,n=-1,i=-1,s=-1,f=-1,l=-1;(r.match(Ye)||[]).forEach(function(e,r){var o=parseInt(t[r+1],10);switch(e.toLowerCase().charAt(0)){case"y":a=o;break;case"d":i=o;break;case"h":s=o;break;case"s":l=o;break;case"m":if(s>=0)f=o;else n=o;break;}});if(l>=0&&f==-1&&n>=0){f=n;n=-1}var o=(""+(a>=0?a:(new Date).getFullYear())).slice(-4)+"-"+("00"+(n>=1?n:1)).slice(-2)+"-"+("00"+(i>=1?i:1)).slice(-2);if(o.length==7)o="0"+o;if(o.length==8)o="20"+o;var c=("00"+(s>=0?s:0)).slice(-2)+":"+("00"+(f>=0?f:0)).slice(-2)+":"+("00"+(l>=0?l:0)).slice(-2);if(s==-1&&f==-1&&l==-1)return o;if(a==-1&&n==-1&&i==-1)return c;return o+"T"+c}var Je={"d.m":"d\\.m"};function qe(e,r){return Ve(Je[e]||e,r)}var Qe=function(){var e={};e.version="1.2.0";function r(){var e=0,r=new Array(256);for(var t=0;t!=256;++t){e=t;e=e&1?-306674912^e>>>1:e>>>1;e=e&1?-306674912^e>>>1:e>>>1;e=e&1?-306674912^e>>>1:e>>>1;e=e&1?-306674912^e>>>1:e>>>1;e=e&1?-306674912^e>>>1:e>>>1;e=e&1?-306674912^e>>>1:e>>>1;e=e&1?-306674912^e>>>1:e>>>1;e=e&1?-306674912^e>>>1:e>>>1;r[t]=e}return typeof Int32Array!=="undefined"?new Int32Array(r):r;
-}var t=r();function a(e){var r=0,t=0,a=0,n=typeof Int32Array!=="undefined"?new Int32Array(4096):new Array(4096);for(a=0;a!=256;++a)n[a]=e[a];for(a=0;a!=256;++a){t=e[a];for(r=256+a;r<4096;r+=256)t=n[r]=t>>>8^e[t&255]}var i=[];for(a=1;a!=16;++a)i[a-1]=typeof Int32Array!=="undefined"?n.subarray(a*256,a*256+256):n.slice(a*256,a*256+256);return i}var n=a(t);var i=n[0],s=n[1],f=n[2],l=n[3],o=n[4];var c=n[5],u=n[6],h=n[7],d=n[8],v=n[9];var p=n[10],m=n[11],b=n[12],g=n[13],w=n[14];function k(e,r){var a=r^-1;for(var n=0,i=e.length;n<i;)a=a>>>8^t[(a^e.charCodeAt(n++))&255];return~a}function T(e,r){var a=r^-1,n=e.length-15,k=0;for(;k<n;)a=w[e[k++]^a&255]^g[e[k++]^a>>8&255]^b[e[k++]^a>>16&255]^m[e[k++]^a>>>24]^p[e[k++]]^v[e[k++]]^d[e[k++]]^h[e[k++]]^u[e[k++]]^c[e[k++]]^o[e[k++]]^l[e[k++]]^f[e[k++]]^s[e[k++]]^i[e[k++]]^t[e[k++]];n+=15;while(k<n)a=a>>>8^t[(a^e[k++])&255];return~a}function E(e,r){var a=r^-1;for(var n=0,i=e.length,s=0,f=0;n<i;){s=e.charCodeAt(n++);if(s<128){a=a>>>8^t[(a^s)&255]}else if(s<2048){a=a>>>8^t[(a^(192|s>>6&31))&255];a=a>>>8^t[(a^(128|s&63))&255]}else if(s>=55296&&s<57344){s=(s&1023)+64;f=e.charCodeAt(n++)&1023;a=a>>>8^t[(a^(240|s>>8&7))&255];a=a>>>8^t[(a^(128|s>>2&63))&255];a=a>>>8^t[(a^(128|f>>6&15|(s&3)<<4))&255];a=a>>>8^t[(a^(128|f&63))&255]}else{a=a>>>8^t[(a^(224|s>>12&15))&255];a=a>>>8^t[(a^(128|s>>6&63))&255];a=a>>>8^t[(a^(128|s&63))&255]}}return~a}e.table=t;e.bstr=k;e.buf=T;e.str=E;return e}();var er=function Nk(){var e={};e.version="1.2.2";function r(e,r){var t=e.split("/"),a=r.split("/");for(var n=0,i=0,s=Math.min(t.length,a.length);n<s;++n){if(i=t[n].length-a[n].length)return i;if(t[n]!=a[n])return t[n]<a[n]?-1:1}return t.length-a.length}function t(e){if(e.charAt(e.length-1)=="/")return e.slice(0,-1).indexOf("/")===-1?e:t(e.slice(0,-1));var r=e.lastIndexOf("/");return r===-1?e:e.slice(0,r+1)}function a(e){if(e.charAt(e.length-1)=="/")return a(e.slice(0,-1));var r=e.lastIndexOf("/");return r===-1?e:e.slice(r+1)}function n(e,r){if(typeof r==="string")r=new Date(r);var t=r.getHours();t=t<<6|r.getMinutes();t=t<<5|r.getSeconds()>>>1;e._W(2,t);var a=r.getFullYear()-1980;a=a<<4|r.getMonth()+1;a=a<<5|r.getDate();e._W(2,a)}function i(e){var r=e._R(2)&65535;var t=e._R(2)&65535;var a=new Date;var n=t&31;t>>>=5;var i=t&15;t>>>=4;a.setMilliseconds(0);a.setFullYear(t+1980);a.setMonth(i-1);a.setDate(n);var s=r&31;r>>>=5;var f=r&63;r>>>=6;a.setHours(r);a.setMinutes(f);a.setSeconds(s<<1);return a}function s(e){ba(e,0);var r={};var t=0;while(e.l<=e.length-4){var a=e._R(2);var n=e._R(2),i=e.l+n;var s={};switch(a){case 21589:{t=e._R(1);if(t&1)s.mtime=e._R(4);if(n>5){if(t&2)s.atime=e._R(4);if(t&4)s.ctime=e._R(4)}if(s.mtime)s.mt=new Date(s.mtime*1e3)}break;case 1:{var f=e._R(4),l=e._R(4);s.usz=l*Math.pow(2,32)+f;f=e._R(4);l=e._R(4);s.csz=l*Math.pow(2,32)+f}break;}e.l=i;r[a]=s}return r}var f;function l(){return f||(f=rr)}function o(e,r){if(e[0]==80&&e[1]==75)return Ne(e,r);if((e[0]|32)==109&&(e[1]|32)==105)return We(e,r);if(e.length<512)throw new Error("CFB file size "+e.length+" < 512");var t=3;var a=512;var n=0;var i=0;var s=0;var f=0;var l=0;var o=[];var v=e.slice(0,512);ba(v,0);var m=c(v);t=m[0];switch(t){case 3:a=512;break;case 4:a=4096;break;case 0:if(m[1]==0)return Ne(e,r);default:throw new Error("Major Version: Expected 3 or 4 saw "+t);}if(a!==512){v=e.slice(0,a);ba(v,28)}var w=e.slice(0,a);u(v,t);var k=v._R(4,"i");if(t===3&&k!==0)throw new Error("# Directory Sectors: Expected 0 saw "+k);v.l+=4;s=v._R(4,"i");v.l+=4;v.chk("00100000","Mini Stream Cutoff Size: ");f=v._R(4,"i");n=v._R(4,"i");l=v._R(4,"i");i=v._R(4,"i");for(var T=-1,E=0;E<109;++E){T=v._R(4,"i");if(T<0)break;o[E]=T}var y=h(e,a);p(l,i,y,a,o);var S=b(y,s,o,a);S[s].name="!Directory";if(n>0&&f!==U)S[f].name="!MiniFAT";S[o[0]].name="!FAT";S.fat_addrs=o;S.ssz=a;var _={},A=[],x=[],C=[];g(s,S,y,A,n,_,x,f);d(x,C,A);A.shift();var O={FileIndex:x,FullPaths:C};if(r&&r.raw)O.raw={header:w,sectors:y};return O}function c(e){if(e[e.l]==80&&e[e.l+1]==75)return[0,0];e.chk(B,"Header Signature: ");e.l+=16;var r=e._R(2,"u");return[e._R(2,"u"),r]}function u(e,r){var t=9;e.l+=2;switch(t=e._R(2)){case 9:if(r!=3)throw new Error("Sector Shift: Expected 9 saw "+t);break;case 12:if(r!=4)throw new Error("Sector Shift: Expected 12 saw "+t);break;default:throw new Error("Sector Shift: Expected 9 or 12 saw "+t);}e.chk("0600","Mini Sector Shift: ");e.chk("000000000000","Reserved: ")}function h(e,r){var t=Math.ceil(e.length/r)-1;var a=[];for(var n=1;n<t;++n)a[n-1]=e.slice(n*r,(n+1)*r);a[t-1]=e.slice(t*r);return a}function d(e,r,t){var a=0,n=0,i=0,s=0,f=0,l=t.length;var o=[],c=[];for(;a<l;++a){o[a]=c[a]=a;r[a]=t[a]}for(;f<c.length;++f){a=c[f];n=e[a].L;i=e[a].R;s=e[a].C;if(o[a]===a){if(n!==-1&&o[n]!==n)o[a]=o[n];if(i!==-1&&o[i]!==i)o[a]=o[i]}if(s!==-1)o[s]=a;if(n!==-1&&a!=o[a]){o[n]=o[a];if(c.lastIndexOf(n)<f)c.push(n)}if(i!==-1&&a!=o[a]){o[i]=o[a];if(c.lastIndexOf(i)<f)c.push(i)}}for(a=1;a<l;++a)if(o[a]===a){if(i!==-1&&o[i]!==i)o[a]=o[i];else if(n!==-1&&o[n]!==n)o[a]=o[n]}for(a=1;a<l;++a){if(e[a].type===0)continue;f=a;if(f!=o[f])do{f=o[f];r[a]=r[f]+"/"+r[a]}while(f!==0&&-1!==o[f]&&f!=o[f]);o[a]=-1}r[0]+="/";for(a=1;a<l;++a){if(e[a].type!==2)r[a]+="/"}}function v(e,r,t){var a=e.start,n=e.size;var i=[];var s=a;while(t&&n>0&&s>=0){i.push(r.slice(s*M,s*M+M));n-=M;s=oa(t,s*4)}if(i.length===0)return wa(0);return F(i).slice(0,e.size)}function p(e,r,t,a,n){var i=U;if(e===U){if(r!==0)throw new Error("DIFAT chain shorter than expected")}else if(e!==-1){var s=t[e],f=(a>>>2)-1;if(!s)return;for(var l=0;l<f;++l){if((i=oa(s,l*4))===U)break;n.push(i)}if(r>=1)p(oa(s,a-4),r-1,t,a,n)}}function m(e,r,t,a,n){var i=[],s=[];if(!n)n=[];var f=a-1,l=0,o=0;for(l=r;l>=0;){n[l]=true;i[i.length]=l;s.push(e[l]);var c=t[Math.floor(l*4/a)];o=l*4&f;if(a<4+o)throw new Error("FAT boundary crossed: "+l+" 4 "+a);if(!e[c])break;l=oa(e[c],o)}return{nodes:i,data:Ut([s])}}function b(e,r,t,a){var n=e.length,i=[];var s=[],f=[],l=[];var o=a-1,c=0,u=0,h=0,d=0;for(c=0;c<n;++c){f=[];h=c+r;if(h>=n)h-=n;if(s[h])continue;l=[];var v=[];for(u=h;u>=0;){v[u]=true;s[u]=true;f[f.length]=u;l.push(e[u]);var p=t[Math.floor(u*4/a)];d=u*4&o;if(a<4+d)throw new Error("FAT boundary crossed: "+u+" 4 "+a);if(!e[p])break;u=oa(e[p],d);if(v[u])break}i[h]={nodes:f,data:Ut([l])}}return i}function g(e,r,t,a,n,i,s,f){var l=0,o=a.length?2:0;var c=r[e].data;var u=0,h=0,d;for(;u<c.length;u+=128){var p=c.slice(u,u+128);ba(p,64);h=p._R(2);d=Wt(p,0,h-o);a.push(d);var b={name:d,type:p._R(1),color:p._R(1),L:p._R(4,"i"),R:p._R(4,"i"),C:p._R(4,"i"),clsid:p._R(16),state:p._R(4,"i"),start:0,size:0};var g=p._R(2)+p._R(2)+p._R(2)+p._R(2);if(g!==0)b.ct=w(p,p.l-8);var k=p._R(2)+p._R(2)+p._R(2)+p._R(2);if(k!==0)b.mt=w(p,p.l-8);b.start=p._R(4,"i");b.size=p._R(4,"i");if(b.size<0&&b.start<0){b.size=b.type=0;b.start=U;b.name=""}if(b.type===5){l=b.start;if(n>0&&l!==U)r[l].name="!StreamData"}else if(b.size>=4096){b.storage="fat";if(r[b.start]===undefined)r[b.start]=m(t,b.start,r.fat_addrs,r.ssz);r[b.start].name=b.name;b.content=r[b.start].data.slice(0,b.size)}else{b.storage="minifat";if(b.size<0)b.size=0;else if(l!==U&&b.start!==U&&r[l]){b.content=v(b,r[l].data,(r[f]||{}).data)}}if(b.content)ba(b.content,0);i[d]=b;s.push(b)}}function w(e,r){return new Date((la(e,r+4)/1e7*Math.pow(2,32)+la(e,r)/1e7-11644473600)*1e3)}function T(e,r){l();return o(f.readFileSync(e),r)}function _(e,r){var t=r&&r.type;if(!t){if(y&&Buffer.isBuffer(e))t="buffer"}switch(t||"base64"){case"file":return T(e,r);case"base64":return o(C(E(e)),r);case"binary":return o(C(e),r);}return o(e,r)}function O(e,r){var t=r||{},a=t.root||"Root Entry";if(!e.FullPaths)e.FullPaths=[];if(!e.FileIndex)e.FileIndex=[];if(e.FullPaths.length!==e.FileIndex.length)throw new Error("inconsistent CFB structure");if(e.FullPaths.length===0){e.FullPaths[0]=a+"/";e.FileIndex[0]={name:a,type:5}}if(t.CLSID)e.FileIndex[0].clsid=t.CLSID;R(e)}function R(e){var r="Sh33tJ5";if(er.find(e,"/"+r))return;var t=wa(4);t[0]=55;t[1]=t[3]=50;t[2]=54;e.FileIndex.push({name:r,type:2,content:t,size:4,L:69,R:69,C:69});e.FullPaths.push(e.FullPaths[0]+r);N(e)}function N(e,n){O(e);var i=false,s=false;for(var f=e.FullPaths.length-1;f>=0;--f){var l=e.FileIndex[f];switch(l.type){case 0:if(s)i=true;else{e.FileIndex.pop();e.FullPaths.pop()}break;case 1:;case 2:;case 5:s=true;if(isNaN(l.R*l.L*l.C))i=true;if(l.R>-1&&l.L>-1&&l.R==l.L)i=true;break;default:i=true;break;}}if(!i&&!n)return;var o=new Date(1987,1,19),c=0;var u=Object.create?Object.create(null):{};var h=[];for(f=0;f<e.FullPaths.length;++f){u[e.FullPaths[f]]=true;if(e.FileIndex[f].type===0)continue;h.push([e.FullPaths[f],e.FileIndex[f]])}for(f=0;f<h.length;++f){var d=t(h[f][0]);s=u[d];while(!s){while(t(d)&&!u[t(d)])d=t(d);h.push([d,{name:a(d).replace("/",""),type:1,clsid:H,ct:o,mt:o,content:null}]);u[d]=true;d=t(h[f][0]);s=u[d]}}h.sort(function(e,t){return r(e[0],t[0])});e.FullPaths=[];e.FileIndex=[];for(f=0;f<h.length;++f){e.FullPaths[f]=h[f][0];e.FileIndex[f]=h[f][1]}for(f=0;f<h.length;++f){var v=e.FileIndex[f];var p=e.FullPaths[f];v.name=a(p).replace("/","");v.L=v.R=v.C=-(v.color=1);v.size=v.content?v.content.length:0;v.start=0;v.clsid=v.clsid||H;if(f===0){v.C=h.length>1?1:-1;v.size=0;v.type=5}else if(p.slice(-1)=="/"){for(c=f+1;c<h.length;++c)if(t(e.FullPaths[c])==p)break;v.C=c>=h.length?-1:c;for(c=f+1;c<h.length;++c)if(t(e.FullPaths[c])==t(p))break;v.R=c>=h.length?-1:c;v.type=1}else{if(t(e.FullPaths[f+1]||"")==t(p))v.R=f+1;v.type=2}}}function I(e,r){var t=r||{};if(t.fileType=="mad")return He(e,t);N(e);switch(t.fileType){case"zip":return Fe(e,t);}var a=function(e){var r=0,t=0;for(var a=0;a<e.FileIndex.length;++a){var n=e.FileIndex[a];if(!n.content)continue;var i=n.content.length;if(i>0){if(i<4096)r+=i+63>>6;else t+=i+511>>9}}var s=e.FullPaths.length+3>>2;var f=r+7>>3;var l=r+127>>7;var o=f+t+s+l;var c=o+127>>7;var u=c<=109?0:Math.ceil((c-109)/127);while(o+c+u+127>>7>c)u=++c<=109?0:Math.ceil((c-109)/127);var h=[1,u,c,l,s,t,r,0];e.FileIndex[0].size=r<<6;h[7]=(e.FileIndex[0].start=h[0]+h[1]+h[2]+h[3]+h[4]+h[5])+(h[6]+7>>3);return h}(e);var n=wa(a[7]<<9);var i=0,s=0;{for(i=0;i<8;++i)n._W(1,W[i]);for(i=0;i<8;++i)n._W(2,0);n._W(2,62);n._W(2,3);n._W(2,65534);n._W(2,9);n._W(2,6);for(i=0;i<3;++i)n._W(2,0);n._W(4,0);n._W(4,a[2]);n._W(4,a[0]+a[1]+a[2]+a[3]-1);n._W(4,0);n._W(4,1<<12);n._W(4,a[3]?a[0]+a[1]+a[2]-1:U);n._W(4,a[3]);n._W(-4,a[1]?a[0]-1:U);n._W(4,a[1]);for(i=0;i<109;++i)n._W(-4,i<a[2]?a[1]+i:-1)}if(a[1]){for(s=0;s<a[1];++s){for(;i<236+s*127;++i)n._W(-4,i<a[2]?a[1]+i:-1);n._W(-4,s===a[1]-1?U:s+1)}}var f=function(e){for(s+=e;i<s-1;++i)n._W(-4,i+1);if(e){++i;n._W(-4,U)}};s=i=0;for(s+=a[1];i<s;++i)n._W(-4,z.DIFSECT);for(s+=a[2];i<s;++i)n._W(-4,z.FATSECT);f(a[3]);f(a[4]);var l=0,o=0;var c=e.FileIndex[0];for(;l<e.FileIndex.length;++l){c=e.FileIndex[l];if(!c.content)continue;o=c.content.length;if(o<4096)continue;c.start=s;f(o+511>>9)}f(a[6]+7>>3);while(n.l&511)n._W(-4,z.ENDOFCHAIN);s=i=0;for(l=0;l<e.FileIndex.length;++l){c=e.FileIndex[l];if(!c.content)continue;o=c.content.length;if(!o||o>=4096)continue;c.start=s;f(o+63>>6)}while(n.l&511)n._W(-4,z.ENDOFCHAIN);for(i=0;i<a[4]<<2;++i){var u=e.FullPaths[i];if(!u||u.length===0){for(l=0;l<17;++l)n._W(4,0);for(l=0;l<3;++l)n._W(4,-1);for(l=0;l<12;++l)n._W(4,0);continue}c=e.FileIndex[i];if(i===0)c.start=c.size?c.start-1:U;var h=i===0&&t.root||c.name;if(h.length>32){console.error("Name "+h+" will be truncated to "+h.slice(0,32));h=h.slice(0,32)}o=2*(h.length+1);n._W(64,h,"utf16le");n._W(2,o);n._W(1,c.type);n._W(1,c.color);n._W(-4,c.L);n._W(-4,c.R);n._W(-4,c.C);if(!c.clsid)for(l=0;l<4;++l)n._W(4,0);else n._W(16,c.clsid,"hex");n._W(4,c.state||0);n._W(4,0);n._W(4,0);n._W(4,0);n._W(4,0);n._W(4,c.start);n._W(4,c.size);n._W(4,0)}for(i=1;i<e.FileIndex.length;++i){c=e.FileIndex[i];if(c.size>=4096){n.l=c.start+1<<9;if(y&&Buffer.isBuffer(c.content)){c.content.copy(n,n.l,0,c.size);n.l+=c.size+511&-512}else{for(l=0;l<c.size;++l)n._W(1,c.content[l]);for(;l&511;++l)n._W(1,0)}}}for(i=1;i<e.FileIndex.length;++i){c=e.FileIndex[i];if(c.size>0&&c.size<4096){if(y&&Buffer.isBuffer(c.content)){c.content.copy(n,n.l,0,c.size);n.l+=c.size+63&-64}else{for(l=0;l<c.size;++l)n._W(1,c.content[l]);for(;l&63;++l)n._W(1,0)}}}if(y){n.l=n.length}else{while(n.l<n.length)n._W(1,0)}return n}function D(e,r){var t=e.FullPaths.map(function(e){return e.toUpperCase()});var a=t.map(function(e){var r=e.split("/");return r[r.length-(e.slice(-1)=="/"?2:1)]});var n=false;if(r.charCodeAt(0)===47){n=true;r=t[0].slice(0,-1)+r}else n=r.indexOf("/")!==-1;var i=r.toUpperCase();var s=n===true?t.indexOf(i):a.indexOf(i);if(s!==-1)return e.FileIndex[s];var f=!i.match(L);i=i.replace(P,"");if(f)i=i.replace(L,"!");for(s=0;s<t.length;++s){if((f?t[s].replace(L,"!"):t[s]).replace(P,"")==i)return e.FileIndex[s];if((f?a[s].replace(L,"!"):a[s]).replace(P,"")==i)return e.FileIndex[s]}return null}var M=64;var U=-2;var B="d0cf11e0a1b11ae1";var W=[208,207,17,224,161,177,26,225];var H="00000000000000000000000000000000";var z={MAXREGSECT:-6,DIFSECT:-4,FATSECT:-3,ENDOFCHAIN:U,FREESECT:-1,HEADER_SIGNATURE:B,HEADER_MINOR_VERSION:"3e00",MAXREGSID:-6,NOSTREAM:-1,HEADER_CLSID:H,EntryTypes:["unknown","storage","stream","lockbytes","property","root"]};function V(e,r,t){l();var a=I(e,t);f.writeFileSync(r,a)}function G(e){var r=new Array(e.length);for(var t=0;t<e.length;++t)r[t]=String.fromCharCode(e[t]);return r.join("")}function $(e,r){var t=I(e,r);switch(r&&r.type||"buffer"){case"file":l();f.writeFileSync(r.filename,t);return t;case"binary":return typeof t=="string"?t:G(t);case"base64":return k(typeof t=="string"?t:G(t));case"buffer":if(y)return Buffer.isBuffer(t)?t:S(t);case"array":return typeof t=="string"?C(t):t;}return t}var j;function X(e){try{var r=e.InflateRaw;var t=new r;t._processChunk(new Uint8Array([3,0]),t._finishFlushFlag);if(t.bytesRead)j=e;else throw new Error("zlib does not expose bytesRead")}catch(a){console.error("cannot use native zlib: "+(a.message||a))}}function Y(e,r){if(!j)return Oe(e,r);var t=j.InflateRaw;var a=new t;var n=a._processChunk(e.slice(e.l),a._finishFlushFlag);e.l+=a.bytesRead;return n}function K(e){return j?j.deflateRawSync(e):Te(e)}var Z=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];var J=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];var q=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];function Q(e){var r=(e<<1|e<<11)&139536|(e<<5|e<<15)&558144;return(r>>16|r>>8|r)&255}var ee=typeof Uint8Array!=="undefined";var re=ee?new Uint8Array(1<<8):[];for(var te=0;te<1<<8;++te)re[te]=Q(te);function ae(e,r){var t=re[e&255];if(r<=8)return t>>>8-r;t=t<<8|re[e>>8&255];if(r<=16)return t>>>16-r;t=t<<8|re[e>>16&255];return t>>>24-r}function ne(e,r){var t=r&7,a=r>>>3;return(e[a]|(t<=6?0:e[a+1]<<8))>>>t&3}function ie(e,r){var t=r&7,a=r>>>3;return(e[a]|(t<=5?0:e[a+1]<<8))>>>t&7}function se(e,r){var t=r&7,a=r>>>3;return(e[a]|(t<=4?0:e[a+1]<<8))>>>t&15}function fe(e,r){var t=r&7,a=r>>>3;return(e[a]|(t<=3?0:e[a+1]<<8))>>>t&31}function le(e,r){var t=r&7,a=r>>>3;return(e[a]|(t<=1?0:e[a+1]<<8))>>>t&127}function oe(e,r,t){var a=r&7,n=r>>>3,i=(1<<t)-1;var s=e[n]>>>a;if(t<8-a)return s&i;s|=e[n+1]<<8-a;if(t<16-a)return s&i;s|=e[n+2]<<16-a;if(t<24-a)return s&i;s|=e[n+3]<<24-a;return s&i}function ce(e,r,t){var a=r&7,n=r>>>3;if(a<=5)e[n]|=(t&7)<<a;else{e[n]|=t<<a&255;e[n+1]=(t&7)>>8-a}return r+3}function ue(e,r,t){var a=r&7,n=r>>>3;t=(t&1)<<a;e[n]|=t;return r+1}function he(e,r,t){var a=r&7,n=r>>>3;t<<=a;e[n]|=t&255;t>>>=8;e[n+1]=t;return r+8}function de(e,r,t){var a=r&7,n=r>>>3;t<<=a;e[n]|=t&255;t>>>=8;e[n+1]=t&255;e[n+2]=t>>>8;return r+16}function ve(e,r){var t=e.length,a=2*t>r?2*t:r+5,n=0;if(t>=r)return e;if(y){var i=x(a);if(e.copy)e.copy(i);else for(;n<e.length;++n)i[n]=e[n];return i}else if(ee){var s=new Uint8Array(a);if(s.set)s.set(e);else for(;n<t;++n)s[n]=e[n];return s}e.length=a;return e}function pe(e){var r=new Array(e);for(var t=0;t<e;++t)r[t]=0;return r}function me(e,r,t){var a=1,n=0,i=0,s=0,f=0,l=e.length;var o=ee?new Uint16Array(32):pe(32);for(i=0;i<32;++i)o[i]=0;for(i=l;i<t;++i)e[i]=0;l=e.length;var c=ee?new Uint16Array(l):pe(l);for(i=0;i<l;++i){o[n=e[i]]++;if(a<n)a=n;c[i]=0}o[0]=0;for(i=1;i<=a;++i)o[i+16]=f=f+o[i-1]<<1;for(i=0;i<l;++i){f=e[i];if(f!=0)c[i]=o[f+16]++}var u=0;for(i=0;i<l;++i){u=e[i];if(u!=0){f=ae(c[i],a)>>a-u;for(s=(1<<a+4-u)-1;s>=0;--s)r[f|s<<u]=u&15|i<<4}}return a}var be=ee?new Uint16Array(512):pe(512);var ge=ee?new Uint16Array(32):pe(32);if(!ee){for(var we=0;we<512;++we)be[we]=0;for(we=0;we<32;++we)ge[we]=0}(function(){var e=[];var r=0;for(;r<32;r++)e.push(5);me(e,ge,32);var t=[];r=0;for(;r<=143;r++)t.push(8);for(;r<=255;r++)t.push(9);for(;r<=279;r++)t.push(7);for(;r<=287;r++)t.push(8);me(t,be,288)})();var ke=function Xe(){var e=ee?new Uint8Array(32768):[];var r=0,t=0;for(;r<q.length-1;++r){for(;t<q[r+1];++t)e[t]=r}for(;t<32768;++t)e[t]=29;var a=ee?new Uint8Array(259):[];for(r=0,t=0;r<J.length-1;++r){for(;t<J[r+1];++t)a[t]=r}function n(e,r){var t=0;while(t<e.length){var a=Math.min(65535,e.length-t);var n=t+a==e.length;r._W(1,+n);r._W(2,a);r._W(2,~a&65535);while(a-- >0)r[r.l++]=e[t++]}return r.l}function i(r,t){var n=0;var i=0;var s=ee?new Uint16Array(32768):[];while(i<r.length){var f=Math.min(65535,r.length-i);if(f<10){n=ce(t,n,+!!(i+f==r.length));if(n&7)n+=8-(n&7);t.l=n/8|0;t._W(2,f);t._W(2,~f&65535);while(f-- >0)t[t.l++]=r[i++];n=t.l*8;continue}n=ce(t,n,+!!(i+f==r.length)+2);var l=0;while(f-- >0){var o=r[i];l=(l<<5^o)&32767;var c=-1,u=0;if(c=s[l]){c|=i&~32767;if(c>i)c-=32768;if(c<i)while(r[c+u]==r[i+u]&&u<250)++u}if(u>2){o=a[u];if(o<=22)n=he(t,n,re[o+1]>>1)-1;else{he(t,n,3);n+=5;he(t,n,re[o-23]>>5);n+=3}var h=o<8?0:o-4>>2;if(h>0){de(t,n,u-J[o]);n+=h}o=e[i-c];n=he(t,n,re[o]>>3);n-=3;var d=o<4?0:o-2>>1;if(d>0){de(t,n,i-c-q[o]);n+=d}for(var v=0;v<u;++v){s[l]=i&32767;l=(l<<5^r[i])&32767;++i}f-=u-1}else{if(o<=143)o=o+48;else n=ue(t,n,1);n=he(t,n,re[o]);s[l]=i&32767;++i}}n=he(t,n,0)-1}t.l=(n+7)/8|0;return t.l}return function s(e,r){if(e.length<8)return n(e,r);return i(e,r)}}();function Te(e){var r=wa(50+Math.floor(e.length*1.1));var t=ke(e,r);return r.slice(0,t)}var Ee=ee?new Uint16Array(32768):pe(32768);var ye=ee?new Uint16Array(32768):pe(32768);var Se=ee?new Uint16Array(128):pe(128);var _e=1,Ae=1;function xe(e,r){var t=fe(e,r)+257;r+=5;var a=fe(e,r)+1;r+=5;var n=se(e,r)+4;r+=4;var i=0;var s=ee?new Uint8Array(19):pe(19);var f=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];var l=1;var o=ee?new Uint8Array(8):pe(8);var c=ee?new Uint8Array(8):pe(8);var u=s.length;for(var h=0;h<n;++h){s[Z[h]]=i=ie(e,r);if(l<i)l=i;o[i]++;r+=3}var d=0;o[0]=0;for(h=1;h<=l;++h)c[h]=d=d+o[h-1]<<1;for(h=0;h<u;++h)if((d=s[h])!=0)f[h]=c[d]++;var v=0;for(h=0;h<u;++h){v=s[h];if(v!=0){d=re[f[h]]>>8-v;for(var p=(1<<7-v)-1;p>=0;--p)Se[d|p<<v]=v&7|h<<3}}var m=[];l=1;for(;m.length<t+a;){d=Se[le(e,r)];r+=d&7;switch(d>>>=3){case 16:i=3+ne(e,r);r+=2;d=m[m.length-1];while(i-- >0)m.push(d);break;case 17:i=3+ie(e,r);r+=3;while(i-- >0)m.push(0);break;case 18:i=11+le(e,r);r+=7;while(i-- >0)m.push(0);break;default:m.push(d);if(l<d)l=d;break;}}var b=m.slice(0,t),g=m.slice(t);for(h=t;h<286;++h)b[h]=0;for(h=a;h<30;++h)g[h]=0;_e=me(b,Ee,286);Ae=me(g,ye,30);return r}function Ce(e,r){if(e[0]==3&&!(e[1]&3)){return[A(r),2]}var t=0;var a=0;var n=x(r?r:1<<18);var i=0;var s=n.length>>>0;var f=0,l=0;while((a&1)==0){a=ie(e,t);t+=3;if(a>>>1==0){if(t&7)t+=8-(t&7);var o=e[t>>>3]|e[(t>>>3)+1]<<8;t+=32;if(o>0){if(!r&&s<i+o){n=ve(n,i+o);s=n.length}while(o-- >0){n[i++]=e[t>>>3];t+=8}}continue}else if(a>>1==1){f=9;l=5}else{t=xe(e,t);f=_e;l=Ae}for(;;){if(!r&&s<i+32767){n=ve(n,i+32767);s=n.length}var c=oe(e,t,f);var u=a>>>1==1?be[c]:Ee[c];t+=u&15;u>>>=4;if((u>>>8&255)===0)n[i++]=u;else if(u==256)break;else{u-=257;var h=u<8?0:u-4>>2;if(h>5)h=0;var d=i+J[u];if(h>0){d+=oe(e,t,h);t+=h}c=oe(e,t,l);u=a>>>1==1?ge[c]:ye[c];t+=u&15;u>>>=4;var v=u<4?0:u-2>>1;var p=q[u];if(v>0){p+=oe(e,t,v);t+=v}if(!r&&s<d){n=ve(n,d+100);s=n.length}while(i<d){n[i]=n[i-p];++i}}}}if(r)return[n,t+7>>>3];return[n.slice(0,i),t+7>>>3]}function Oe(e,r){var t=e.slice(e.l||0);var a=Ce(t,r);e.l+=a[1];return a[0]}function Re(e,r){if(e){if(typeof console!=="undefined")console.error(r)}else throw new Error(r)}function Ne(e,r){var t=e;ba(t,0);var a=[],n=[];var i={FileIndex:a,FullPaths:n};O(i,{root:r.root});var f=t.length-4;while((t[f]!=80||t[f+1]!=75||t[f+2]!=5||t[f+3]!=6)&&f>=0)--f;t.l=f+4;t.l+=4;var l=t._R(2);t.l+=6;var o=t._R(4);t.l=o;for(f=0;f<l;++f){t.l+=20;var c=t._R(4);var u=t._R(4);var h=t._R(2);var d=t._R(2);var v=t._R(2);t.l+=8;var p=t._R(4);var m=s(t.slice(t.l+h,t.l+h+d));t.l+=h+d+v;var b=t.l;t.l=p+4;if(m&&m[1]){if((m[1]||{}).usz)u=m[1].usz;if((m[1]||{}).csz)c=m[1].csz}Ie(t,c,u,i,m);t.l=b}return i}function Ie(e,r,t,a,n){e.l+=2;var f=e._R(2);var l=e._R(2);var o=i(e);if(f&8257)throw new Error("Unsupported ZIP encryption");var c=e._R(4);var u=e._R(4);var h=e._R(4);var d=e._R(2);var v=e._R(2);var p="";for(var m=0;m<d;++m)p+=String.fromCharCode(e[e.l++]);if(v){var b=s(e.slice(e.l,e.l+v));if((b[21589]||{}).mt)o=b[21589].mt;if((b[1]||{}).usz)h=b[1].usz;if((b[1]||{}).csz)u=b[1].csz;if(n){if((n[21589]||{}).mt)o=n[21589].mt;if((n[1]||{}).usz)h=b[1].usz;if((n[1]||{}).csz)u=b[1].csz}}e.l+=v;var g=e.slice(e.l,e.l+u);switch(l){case 8:g=Y(e,h);break;case 0:break;default:throw new Error("Unsupported ZIP Compression method "+l);}var w=false;if(f&8){c=e._R(4);if(c==134695760){c=e._R(4);w=true}u=e._R(4);h=e._R(4)}if(u!=r)Re(w,"Bad compressed size: "+r+" != "+u);if(h!=t)Re(w,"Bad uncompressed size: "+t+" != "+h);Ve(a,p,g,{unsafe:true,mt:o})}function Fe(e,r){var t=r||{};var a=[],i=[];var s=wa(1);var f=t.compression?8:0,l=0;var o=false;if(o)l|=8;var c=0,u=0;var h=0,d=0;var v=e.FullPaths[0],p=v,m=e.FileIndex[0];var b=[];var g=0;for(c=1;c<e.FullPaths.length;++c){p=e.FullPaths[c].slice(v.length);m=e.FileIndex[c];if(!m.size||!m.content||p=="Sh33tJ5")continue;var w=h;var k=wa(p.length);for(u=0;u<p.length;++u)k._W(1,p.charCodeAt(u)&127);k=k.slice(0,k.l);b[d]=typeof m.content=="string"?Qe.bstr(m.content,0):Qe.buf(m.content,0);var T=typeof m.content=="string"?C(m.content):m.content;if(f==8)T=K(T);s=wa(30);s._W(4,67324752);s._W(2,20);s._W(2,l);s._W(2,f);if(m.mt)n(s,m.mt);else s._W(4,0);s._W(-4,l&8?0:b[d]);s._W(4,l&8?0:T.length);s._W(4,l&8?0:m.content.length);s._W(2,k.length);s._W(2,0);h+=s.length;a.push(s);h+=k.length;a.push(k);h+=T.length;a.push(T);if(l&8){s=wa(12);s._W(-4,b[d]);s._W(4,T.length);s._W(4,m.content.length);h+=s.l;a.push(s)}s=wa(46);s._W(4,33639248);s._W(2,0);s._W(2,20);s._W(2,l);s._W(2,f);s._W(4,0);s._W(-4,b[d]);s._W(4,T.length);s._W(4,m.content.length);s._W(2,k.length);s._W(2,0);s._W(2,0);s._W(2,0);s._W(2,0);s._W(4,0);s._W(4,w);g+=s.l;i.push(s);g+=k.length;i.push(k);++d}s=wa(22);s._W(4,101010256);s._W(2,0);s._W(2,0);s._W(2,d);s._W(2,d);s._W(4,g);s._W(4,h);s._W(2,0);return F([F(a),F(i),s])}var De={htm:"text/html",xml:"text/xml",gif:"image/gif",jpg:"image/jpeg",png:"image/png",mso:"application/x-mso",thmx:"application/vnd.ms-officetheme",sh33tj5:"application/octet-stream"};function Pe(e,r){if(e.ctype)return e.ctype;var t=e.name||"",a=t.match(/\.([^\.]+)$/);if(a&&De[a[1]])return De[a[1]];if(r){a=(t=r).match(/[\.\\]([^\.\\])+$/);if(a&&De[a[1]])return De[a[1]]}return"application/octet-stream"}function Le(e){var r=k(e);var t=[];for(var a=0;a<r.length;a+=76)t.push(r.slice(a,a+76));return t.join("\r\n")+"\r\n"}function Me(e){var r=e.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7E-\xFF=]/g,function(e){var r=e.charCodeAt(0).toString(16).toUpperCase();return"="+(r.length==1?"0"+r:r)});r=r.replace(/ $/gm,"=20").replace(/\t$/gm,"=09");if(r.charAt(0)=="\n")r="=0D"+r.slice(1);r=r.replace(/\r(?!\n)/gm,"=0D").replace(/\n\n/gm,"\n=0A").replace(/([^\r\n])\n/gm,"$1=0A");var t=[],a=r.split("\r\n");for(var n=0;n<a.length;++n){var i=a[n];if(i.length==0){t.push("");continue}for(var s=0;s<i.length;){var f=76;var l=i.slice(s,s+f);if(l.charAt(f-1)=="=")f--;else if(l.charAt(f-2)=="=")f-=2;else if(l.charAt(f-3)=="=")f-=3;l=i.slice(s,s+f);s+=f;if(s<i.length)l+="=";t.push(l)}}return t.join("\r\n")}function Ue(e){var r=[];for(var t=0;t<e.length;++t){var a=e[t];while(t<=e.length&&a.charAt(a.length-1)=="=")a=a.slice(0,a.length-1)+e[++t];r.push(a)}for(var n=0;n<r.length;++n)r[n]=r[n].replace(/[=][0-9A-Fa-f]{2}/g,function(e){return String.fromCharCode(parseInt(e.slice(1),16))});return C(r.join("\r\n"))}function Be(e,r,t){var a="",n="",i="",s;var f=0;for(;f<10;++f){var l=r[f];if(!l||l.match(/^\s*$/))break;var o=l.match(/^(.*?):\s*([^\s].*)$/);if(o)switch(o[1].toLowerCase()){case"content-location":a=o[2].trim();break;case"content-type":i=o[2].trim();break;case"content-transfer-encoding":n=o[2].trim();break;}}++f;switch(n.toLowerCase()){case"base64":s=C(E(r.slice(f).join("")));break;case"quoted-printable":s=Ue(r.slice(f));break;default:throw new Error("Unsupported Content-Transfer-Encoding "+n);}var c=Ve(e,a.slice(t.length),s,{unsafe:true});if(i)c.ctype=i}function We(e,r){if(G(e.slice(0,13)).toLowerCase()!="mime-version:")throw new Error("Unsupported MAD header");var t=r&&r.root||"";var a=(y&&Buffer.isBuffer(e)?e.toString("binary"):G(e)).split("\r\n");var n=0,i="";for(n=0;n<a.length;++n){i=a[n];if(!/^Content-Location:/i.test(i))continue;i=i.slice(i.indexOf("file"));if(!t)t=i.slice(0,i.lastIndexOf("/")+1);if(i.slice(0,t.length)==t)continue;while(t.length>0){t=t.slice(0,t.length-1);t=t.slice(0,t.lastIndexOf("/")+1);if(i.slice(0,t.length)==t)break}}var s=(a[1]||"").match(/boundary="(.*?)"/);if(!s)throw new Error("MAD cannot find boundary");var f="--"+(s[1]||"");var l=[],o=[];var c={FileIndex:l,FullPaths:o};O(c);var u,h=0;for(n=0;n<a.length;++n){var d=a[n];if(d!==f&&d!==f+"--")continue;if(h++)Be(c,a.slice(u,n),t);u=n}return c}function He(e,r){var t=r||{};var a=t.boundary||"SheetJS";a="------="+a;var n=["MIME-Version: 1.0",'Content-Type: multipart/related; boundary="'+a.slice(2)+'"',"","",""];var i=e.FullPaths[0],s=i,f=e.FileIndex[0];for(var l=1;l<e.FullPaths.length;++l){s=e.FullPaths[l].slice(i.length);f=e.FileIndex[l];if(!f.size||!f.content||s=="Sh33tJ5")continue;s=s.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7E-\xFF]/g,function(e){return"_x"+e.charCodeAt(0).toString(16)+"_"}).replace(/[\u0080-\uFFFF]/g,function(e){return"_u"+e.charCodeAt(0).toString(16)+"_"});var o=f.content;var c=y&&Buffer.isBuffer(o)?o.toString("binary"):G(o);var u=0,h=Math.min(1024,c.length),d=0;for(var v=0;v<=h;++v)if((d=c.charCodeAt(v))>=32&&d<128)++u;var p=u>=h*4/5;n.push(a);n.push("Content-Location: "+(t.root||"file:///C:/SheetJS/")+s);n.push("Content-Transfer-Encoding: "+(p?"quoted-printable":"base64"));n.push("Content-Type: "+Pe(f,s));n.push("");n.push(p?Me(c):Le(c))}n.push(a+"--\r\n");return n.join("\r\n")}function ze(e){var r={};O(r,e);return r}function Ve(e,r,t,n){var i=n&&n.unsafe;if(!i)O(e);var s=!i&&er.find(e,r);if(!s){var f=e.FullPaths[0];if(r.slice(0,f.length)==f)f=r;else{if(f.slice(-1)!="/")f+="/";f=(f+r).replace("//","/")}s={name:a(r),type:2};e.FileIndex.push(s);e.FullPaths.push(f);if(!i)er.utils.cfb_gc(e)}s.content=t;s.size=t?t.length:0;if(n){if(n.CLSID)s.clsid=n.CLSID;if(n.mt)s.mt=n.mt;if(n.ct)s.ct=n.ct}return s}function Ge(e,r){O(e);var t=er.find(e,r);if(t)for(var a=0;a<e.FileIndex.length;++a)if(e.FileIndex[a]==t){e.FileIndex.splice(a,1);e.FullPaths.splice(a,1);return true}return false}function $e(e,r,t){O(e);var n=er.find(e,r);if(n)for(var i=0;i<e.FileIndex.length;++i)if(e.FileIndex[i]==n){e.FileIndex[i].name=a(t);e.FullPaths[i]=t;return true}return false}function je(e){N(e,true)}e.find=D;e.read=_;e.parse=o;e.write=$;e.writeFile=V;e.utils={cfb_new:ze,cfb_add:Ve,cfb_del:Ge,cfb_mov:$e,cfb_gc:je,ReadShift:ua,CheckField:ma,prep_blob:ba,bconcat:F,use_zlib:X,_deflateRaw:Te,_inflateRaw:Oe,consts:z};return e}();var rr;function tr(e){rr=e}function ar(e){if(typeof e==="string")return O(e);if(Array.isArray(e))return N(e);return e}function nr(e,r,t){if(typeof rr!=="undefined"&&rr.writeFileSync)return t?rr.writeFileSync(e,r,t):rr.writeFileSync(e,r);if(typeof Deno!=="undefined"){if(t&&typeof r=="string")switch(t){case"utf8":r=new TextEncoder(t).encode(r);break;case"binary":r=O(r);break;default:throw new Error("Unsupported encoding "+t);}return Deno.writeFileSync(e,r)}var a=t=="utf8"?bt(r):r;if(typeof IE_SaveFile!=="undefined")return IE_SaveFile(a,e);if(typeof Blob!=="undefined"){var n=new Blob([ar(a)],{type:"application/octet-stream"});if(typeof navigator!=="undefined"&&navigator.msSaveBlob)return navigator.msSaveBlob(n,e);if(typeof saveAs!=="undefined")return saveAs(n,e);if(typeof URL!=="undefined"&&typeof document!=="undefined"&&document.createElement&&URL.createObjectURL){var i=URL.createObjectURL(n);if(typeof chrome==="object"&&typeof(chrome.downloads||{}).download=="function"){if(URL.revokeObjectURL&&typeof setTimeout!=="undefined")setTimeout(function(){URL.revokeObjectURL(i)},6e4);return chrome.downloads.download({url:i,filename:e,saveAs:true})}var s=document.createElement("a");if(s.download!=null){s.download=e;s.href=i;document.body.appendChild(s);s.click();document.body.removeChild(s);if(URL.revokeObjectURL&&typeof setTimeout!=="undefined")setTimeout(function(){URL.revokeObjectURL(i)},6e4);return i}}}if(typeof $!=="undefined"&&typeof File!=="undefined"&&typeof Folder!=="undefined")try{var f=File(e);f.open("w");f.encoding="binary";if(Array.isArray(r))r=R(r);f.write(r);f.close();return r}catch(l){if(!l.message||!l.message.match(/onstruct/))throw l}throw new Error("cannot save file "+e)}function ir(e){if(typeof rr!=="undefined")return rr.readFileSync(e);if(typeof Deno!=="undefined")return Deno.readFileSync(e);if(typeof $!=="undefined"&&typeof File!=="undefined"&&typeof Folder!=="undefined")try{var r=File(e);r.open("r");r.encoding="binary";var t=r.read();r.close();return t}catch(a){if(!a.message||!a.message.match(/onstruct/))throw a}throw new Error("Cannot access file "+e)}function sr(e){var r=Object.keys(e),t=[];for(var a=0;a<r.length;++a)if(Object.prototype.hasOwnProperty.call(e,r[a]))t.push(r[a]);return t}function fr(e,r){var t=[],a=sr(e);for(var n=0;n!==a.length;++n)if(t[e[a[n]][r]]==null)t[e[a[n]][r]]=a[n];return t}function lr(e){var r=[],t=sr(e);for(var a=0;a!==t.length;++a)r[e[t[a]]]=t[a];return r}function or(e){var r=[],t=sr(e);for(var a=0;a!==t.length;++a)r[e[t[a]]]=parseInt(t[a],10);return r}function cr(e){var r=[],t=sr(e);for(var a=0;a!==t.length;++a){if(r[e[t[a]]]==null)r[e[t[a]]]=[];r[e[t[a]]].push(t[a])}return r}var ur=new Date(1899,11,30,0,0,0);function hr(e,r){var t=e.getTime();if(r)t-=1462*24*60*60*1e3;var a=ur.getTime()+(e.getTimezoneOffset()-ur.getTimezoneOffset())*6e4;return(t-a)/(24*60*60*1e3)}var dr=new Date;var vr=ur.getTime()+(dr.getTimezoneOffset()-ur.getTimezoneOffset())*6e4;var pr=dr.getTimezoneOffset();function mr(e){var r=new Date;
-r.setTime(e*24*60*60*1e3+vr);if(r.getTimezoneOffset()!==pr){r.setTime(r.getTime()+(r.getTimezoneOffset()-pr)*6e4)}return r}function br(e){var r=0,t=0,a=false;var n=e.match(/P([0-9\.]+Y)?([0-9\.]+M)?([0-9\.]+D)?T([0-9\.]+H)?([0-9\.]+M)?([0-9\.]+S)?/);if(!n)throw new Error("|"+e+"| is not an ISO8601 Duration");for(var i=1;i!=n.length;++i){if(!n[i])continue;t=1;if(i>3)a=true;switch(n[i].slice(n[i].length-1)){case"Y":throw new Error("Unsupported ISO Duration Field: "+n[i].slice(n[i].length-1));case"D":t*=24;case"H":t*=60;case"M":if(!a)throw new Error("Unsupported ISO Duration Field: M");else t*=60;case"S":break;}r+=t*parseInt(n[i],10)}return r}var gr=new Date("2017-02-19T19:06:09.000Z");var wr=isNaN(gr.getFullYear())?new Date("2/19/17"):gr;var kr=wr.getFullYear()==2017;function Tr(e,r){var t=new Date(e);if(kr){if(r>0)t.setTime(t.getTime()+t.getTimezoneOffset()*60*1e3);else if(r<0)t.setTime(t.getTime()-t.getTimezoneOffset()*60*1e3);return t}if(e instanceof Date)return e;if(wr.getFullYear()==1917&&!isNaN(t.getFullYear())){var a=t.getFullYear();if(e.indexOf(""+a)>-1)return t;t.setFullYear(t.getFullYear()+100);return t}var n=e.match(/\d+/g)||["2017","2","19","0","0","0"];var i=new Date(+n[0],+n[1]-1,+n[2],+n[3]||0,+n[4]||0,+n[5]||0);if(e.indexOf("Z")>-1)i=new Date(i.getTime()-i.getTimezoneOffset()*60*1e3);return i}function Er(e,r){if(y&&Buffer.isBuffer(e)){if(r&&_){if(e[0]==255&&e[1]==254)return bt(e.slice(2).toString("utf16le"));if(e[1]==254&&e[2]==255)return bt(h(e.slice(2).toString("binary")))}return e.toString("binary")}if(typeof TextDecoder!=="undefined")try{if(r){if(e[0]==255&&e[1]==254)return bt(new TextDecoder("utf-16le").decode(e.slice(2)));if(e[0]==254&&e[1]==255)return bt(new TextDecoder("utf-16be").decode(e.slice(2)))}var t={"â¬":"Â","â":"Â","Æ":"Â","â":"Â","â¦":"Â","â ":"Â","â¡":"Â","Ë":"Â","â°":"Â","Å ":"Â","â¹":"Â","Å":"Â","Å½":"Â","â":"Â","â":"Â","â":"Â","â":"Â","â¢":"Â","â":"Â","â":"Â","Ë":"Â","â¢":"Â","Å¡":"Â","âº":"Â","Å":"Â","Å¾":"Â","Å¸":"Â"};if(Array.isArray(e))e=new Uint8Array(e);return new TextDecoder("latin1").decode(e).replace(/[â¬âÆââ¦â â¡Ëâ°Å â¹ÅÅ½âââââ¢ââËâ¢Å¡âºÅÅ¾Å¸]/g,function(e){return t[e]||e})}catch(a){}var n=[];for(var i=0;i!=e.length;++i)n.push(String.fromCharCode(e[i]));return n.join("")}function yr(e){if(typeof JSON!="undefined"&&!Array.isArray(e))return JSON.parse(JSON.stringify(e));if(typeof e!="object"||e==null)return e;if(e instanceof Date)return new Date(e.getTime());var r={};for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t))r[t]=yr(e[t]);return r}function Sr(e,r){var t="";while(t.length<r)t+=e;return t}function _r(e){var r=Number(e);if(!isNaN(r))return isFinite(r)?r:NaN;if(!/\d/.test(e))return r;var t=1;var a=e.replace(/([\d]),([\d])/g,"$1$2").replace(/[$]/g,"").replace(/[%]/g,function(){t*=100;return""});if(!isNaN(r=Number(a)))return r/t;a=a.replace(/[(](.*)[)]/,function(e,r){t=-t;return r});if(!isNaN(r=Number(a)))return r/t;return r}var Ar=/^(0?\d|1[0-2])(?:|:([0-5]?\d)(?:|(\.\d+)(?:|:([0-5]?\d))|:([0-5]?\d)(|\.\d+)))\s+([ap])m?$/;function xr(e){if(!e[2])return new Date(1899,11,30,+e[1]%12+(e[7]=="p"?12:0),0,0,0);if(e[3]){if(e[4])return new Date(1899,11,30,+e[1]%12+(e[7]=="p"?12:0),+e[2],+e[4],parseFloat(e[3])*1e3);else return new Date(1899,11,30,e[7]=="p"?12:0,+e[1],+e[2],parseFloat(e[3])*1e3)}else if(e[5])return new Date(1899,11,30,+e[1]%12+(e[7]=="p"?12:0),+e[2],+e[5],e[6]?parseFloat(e[6])*1e3:0);else return new Date(1899,11,30,+e[1]%12+(e[7]=="p"?12:0),+e[2],0,0)}var Cr=["january","february","march","april","may","june","july","august","september","october","november","december"];function Or(e){var r=e.toLowerCase();var t=r.replace(/\s+/g," ").trim();var a=t.match(Ar);if(a)return xr(a);var n=new Date(e),i=new Date(NaN);var s=n.getYear(),f=n.getMonth(),l=n.getDate();if(isNaN(l))return i;if(r.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)){r=r.replace(/[^a-z]/g,"").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/,"");if(r.length>3&&Cr.indexOf(r)==-1)return i}else if(r.replace(/[ap]m?/,"").match(/[a-z]/))return i;if(s<0||s>8099||e.match(/[^-0-9:,\/\\]/))return i;return n}var Rr=function(){var e="abacaba".split(/(:?b)/i).length==5;return function r(t,a,n){if(e||typeof a=="string")return t.split(a);var i=t.split(a),s=[i[0]];for(var f=1;f<i.length;++f){s.push(n);s.push(i[f])}return s}}();function Nr(e){if(!e)return null;if(e.content&&e.type)return Er(e.content,true);if(e.data)return d(e.data);if(e.asNodeBuffer&&y)return d(e.asNodeBuffer().toString("binary"));if(e.asBinary)return d(e.asBinary());if(e._data&&e._data.getContent)return d(Er(Array.prototype.slice.call(e._data.getContent(),0)));return null}function Ir(e){if(!e)return null;if(e.data)return c(e.data);if(e.asNodeBuffer&&y)return e.asNodeBuffer();if(e._data&&e._data.getContent){var r=e._data.getContent();if(typeof r=="string")return c(r);return Array.prototype.slice.call(r)}if(e.content&&e.type)return e.content;return null}function Fr(e){return e&&e.name.slice(-4)===".bin"?Ir(e):Nr(e)}function Dr(e,r){var t=e.FullPaths||sr(e.files);var a=r.toLowerCase().replace(/[\/]/g,"\\"),n=a.replace(/\\/g,"/");for(var i=0;i<t.length;++i){var s=t[i].replace(/^Root Entry[\/]/,"").toLowerCase();if(a==s||n==s)return e.files?e.files[t[i]]:e.FileIndex[i]}return null}function Pr(e,r){var t=Dr(e,r);if(t==null)throw new Error("Cannot find file "+r+" in zip");return t}function Lr(e,r,t){if(!t)return Fr(Pr(e,r));if(!r)return null;try{return Lr(e,r)}catch(a){return null}}function Mr(e,r,t){if(!t)return Nr(Pr(e,r));if(!r)return null;try{return Mr(e,r)}catch(a){return null}}function Ur(e,r,t){if(!t)return Ir(Pr(e,r));if(!r)return null;try{return Ur(e,r)}catch(a){return null}}function Br(e){var r=e.FullPaths||sr(e.files),t=[];for(var a=0;a<r.length;++a)if(r[a].slice(-1)!="/")t.push(r[a].replace(/^Root Entry[\/]/,""));return t.sort()}function Wr(e,r,t){if(e.FullPaths){if(typeof t=="string"){var a;if(y)a=S(t);else a=D(t);return er.utils.cfb_add(e,r,a)}er.utils.cfb_add(e,r,t)}else e.file(r,t)}function Hr(){return er.utils.cfb_new()}function zr(e,r){switch(r.type){case"base64":return er.read(e,{type:"base64"});case"binary":return er.read(e,{type:"binary"});case"buffer":;case"array":return er.read(e,{type:"buffer"});}throw new Error("Unrecognized type "+r.type)}function Vr(e,r){if(e.charAt(0)=="/")return e.slice(1);var t=r.split("/");if(r.slice(-1)!="/")t.pop();var a=e.split("/");while(a.length!==0){var n=a.shift();if(n==="..")t.pop();else if(n!==".")t.push(n)}return t.join("/")}var Gr='<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n';var $r=/([^"\s?>\/]+)\s*=\s*((?:")([^"]*)(?:")|(?:')([^']*)(?:')|([^'">\s]+))/g;var jr=/<[\/\?]?[a-zA-Z0-9:_-]+(?:\s+[^"\s?>\/]+\s*=\s*(?:"[^"]*"|'[^']*'|[^'">\s=]+))*\s*[\/\?]?>/gm,Xr=/<[^>]*>/g;var Yr=Gr.match(jr)?jr:Xr;var Kr=/<\w*:/,Zr=/<(\/?)\w+:/;function Jr(e,r,t){var a={};var n=0,i=0;for(;n!==e.length;++n)if((i=e.charCodeAt(n))===32||i===10||i===13)break;if(!r)a[0]=e.slice(0,n);if(n===e.length)return a;var s=e.match($r),f=0,l="",o=0,c="",u="",h=1;if(s)for(o=0;o!=s.length;++o){u=s[o];for(i=0;i!=u.length;++i)if(u.charCodeAt(i)===61)break;c=u.slice(0,i).trim();while(u.charCodeAt(i+1)==32)++i;h=(n=u.charCodeAt(i+1))==34||n==39?1:0;l=u.slice(i+1+h,u.length-h);for(f=0;f!=c.length;++f)if(c.charCodeAt(f)===58)break;if(f===c.length){if(c.indexOf("_")>0)c=c.slice(0,c.indexOf("_"));a[c]=l;if(!t)a[c.toLowerCase()]=l}else{var d=(f===5&&c.slice(0,5)==="xmlns"?"xmlns":"")+c.slice(f+1);if(a[d]&&c.slice(f-3,f)=="ext")continue;a[d]=l;if(!t)a[d.toLowerCase()]=l}}return a}function qr(e){return e.replace(Zr,"<$1")}var Qr={"&quot;":'"',"&apos;":"'","&gt;":">","&lt;":"<","&amp;":"&"};var et=lr(Qr);var rt=function(){var e=/&(?:quot|apos|gt|lt|amp|#x?([\da-fA-F]+));/gi,r=/_x([\da-fA-F]{4})_/gi;function t(a){var n=a+"",i=n.indexOf("<![CDATA[");if(i==-1)return n.replace(e,function(e,r){return Qr[e]||String.fromCharCode(parseInt(r,e.indexOf("x")>-1?16:10))||e}).replace(r,function(e,r){return String.fromCharCode(parseInt(r,16))});var s=n.indexOf("]]>");return t(n.slice(0,i))+n.slice(i+9,s)+t(n.slice(s+3))}return function a(e,r){var a=t(e);return r?a.replace(/\r\n/g,"\n"):a}}();var tt=/[&<>'"]/g,at=/[\u0000-\u0008\u000b-\u001f\uFFFE-\uFFFF]/g;function nt(e){var r=e+"";return r.replace(tt,function(e){return et[e]}).replace(at,function(e){return"_x"+("000"+e.charCodeAt(0).toString(16)).slice(-4)+"_"})}function it(e){return nt(e).replace(/ /g,"_x0020_")}var st=/[\u0000-\u001f]/g;function ft(e){var r=e+"";return r.replace(tt,function(e){return et[e]}).replace(/\n/g,"<br/>").replace(st,function(e){return"&#x"+("000"+e.charCodeAt(0).toString(16)).slice(-4)+";"})}function lt(e){var r=e+"";return r.replace(tt,function(e){return et[e]}).replace(st,function(e){return"&#x"+e.charCodeAt(0).toString(16).toUpperCase()+";"})}var ot=function(){var e=/&#(\d+);/g;function r(e,r){return String.fromCharCode(parseInt(r,10))}return function t(a){return a.replace(e,r)}}();function ct(e){return e.replace(/(\r\n|[\r\n])/g,"&#10;")}function ut(e){switch(e){case 1:;case true:;case"1":;case"true":return true;case 0:;case false:;case"0":;case"false":return false;}return false}function ht(e){var r="",t=0,a=0,n=0,i=0,s=0,f=0;while(t<e.length){a=e.charCodeAt(t++);if(a<128){r+=String.fromCharCode(a);continue}n=e.charCodeAt(t++);if(a>191&&a<224){s=(a&31)<<6;s|=n&63;r+=String.fromCharCode(s);continue}i=e.charCodeAt(t++);if(a<240){r+=String.fromCharCode((a&15)<<12|(n&63)<<6|i&63);continue}s=e.charCodeAt(t++);f=((a&7)<<18|(n&63)<<12|(i&63)<<6|s&63)-65536;r+=String.fromCharCode(55296+(f>>>10&1023));r+=String.fromCharCode(56320+(f&1023))}return r}function dt(e){var r=A(2*e.length),t,a,n=1,i=0,s=0,f;for(a=0;a<e.length;a+=n){n=1;if((f=e.charCodeAt(a))<128)t=f;else if(f<224){t=(f&31)*64+(e.charCodeAt(a+1)&63);n=2}else if(f<240){t=(f&15)*4096+(e.charCodeAt(a+1)&63)*64+(e.charCodeAt(a+2)&63);n=3}else{n=4;t=(f&7)*262144+(e.charCodeAt(a+1)&63)*4096+(e.charCodeAt(a+2)&63)*64+(e.charCodeAt(a+3)&63);t-=65536;s=55296+(t>>>10&1023);t=56320+(t&1023)}if(s!==0){r[i++]=s&255;r[i++]=s>>>8;s=0}r[i++]=t%256;r[i++]=t>>>8}return r.slice(0,i).toString("ucs2")}function vt(e){return S(e,"binary").toString("utf8")}var pt="foo bar bazÃ¢ÂÂÃ°ÂÂÂ£";var mt=y&&(vt(pt)==ht(pt)&&vt||dt(pt)==ht(pt)&&dt)||ht;var bt=y?function(e){return S(e,"utf8").toString("binary")}:function(e){var r=[],t=0,a=0,n=0;while(t<e.length){a=e.charCodeAt(t++);switch(true){case a<128:r.push(String.fromCharCode(a));break;case a<2048:r.push(String.fromCharCode(192+(a>>6)));r.push(String.fromCharCode(128+(a&63)));break;case a>=55296&&a<57344:a-=55296;n=e.charCodeAt(t++)-56320+(a<<10);r.push(String.fromCharCode(240+(n>>18&7)));r.push(String.fromCharCode(144+(n>>12&63)));r.push(String.fromCharCode(128+(n>>6&63)));r.push(String.fromCharCode(128+(n&63)));break;default:r.push(String.fromCharCode(224+(a>>12)));r.push(String.fromCharCode(128+(a>>6&63)));r.push(String.fromCharCode(128+(a&63)));}}return r.join("")};var gt=function(){var e={};return function r(t,a){var n=t+"|"+(a||"");if(e[n])return e[n];return e[n]=new RegExp("<(?:\\w+:)?"+t+'(?: xml:space="preserve")?(?:[^>]*)>([\\s\\S]*?)</(?:\\w+:)?'+t+">",a||"")}}();var wt=function(){var e=[["nbsp"," "],["middot","Â·"],["quot",'"'],["apos","'"],["gt",">"],["lt","<"],["amp","&"]].map(function(e){return[new RegExp("&"+e[0]+";","ig"),e[1]]});return function r(t){var a=t.replace(/^[\t\n\r ]+/,"").replace(/[\t\n\r ]+$/,"").replace(/>\s+/g,">").replace(/\s+</g,"<").replace(/[\t\n\r ]+/g," ").replace(/<\s*[bB][rR]\s*\/?>/g,"\n").replace(/<[^>]*>/g,"");for(var n=0;n<e.length;++n)a=a.replace(e[n][0],e[n][1]);return a}}();var kt=function(){var e={};return function r(t){if(e[t]!==undefined)return e[t];return e[t]=new RegExp("<(?:vt:)?"+t+">([\\s\\S]*?)</(?:vt:)?"+t+">","g")}}();var Tt=/<\/?(?:vt:)?variant>/g,Et=/<(?:vt:)([^>]*)>([\s\S]*)</;function yt(e,r){var t=Jr(e);var a=e.match(kt(t.baseType))||[];var n=[];if(a.length!=t.size){if(r.WTF)throw new Error("unexpected vector length "+a.length+" != "+t.size);return n}a.forEach(function(e){var r=e.replace(Tt,"").match(Et);if(r)n.push({v:mt(r[2]),t:r[1]})});return n}var St=/(^\s|\s$|\n)/;function _t(e,r){return"<"+e+(r.match(St)?' xml:space="preserve"':"")+">"+r+"</"+e+">"}function At(e){return sr(e).map(function(r){return" "+r+'="'+e[r]+'"'}).join("")}function xt(e,r,t){return"<"+e+(t!=null?At(t):"")+(r!=null?(r.match(St)?' xml:space="preserve"':"")+">"+r+"</"+e:"/")+">"}function Ct(e,r){try{return e.toISOString().replace(/\.\d*/,"")}catch(t){if(r)throw t}return""}function Ot(e,r){switch(typeof e){case"string":var t=xt("vt:lpwstr",nt(e));if(r)t=t.replace(/&quot;/g,"_x0022_");return t;case"number":return xt((e|0)==e?"vt:i4":"vt:r8",nt(String(e)));case"boolean":return xt("vt:bool",e?"true":"false");}if(e instanceof Date)return xt("vt:filetime",Ct(e));throw new Error("Unable to serialize "+e)}function Rt(e){if(y&&Buffer.isBuffer(e))return e.toString("utf8");if(typeof e==="string")return e;if(typeof Uint8Array!=="undefined"&&e instanceof Uint8Array)return mt(R(I(e)));throw new Error("Bad input format: expected Buffer or string")}var Nt=/<(\/?)([^\s?><!\/:]*:|)([^\s?<>:\/]+)(?:[\s?:\/](?:[^>=]|="[^"]*?")*)?>/gm;var It={CORE_PROPS:"http://schemas.openxmlformats.org/package/2006/metadata/core-properties",CUST_PROPS:"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties",EXT_PROPS:"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties",CT:"http://schemas.openxmlformats.org/package/2006/content-types",RELS:"http://schemas.openxmlformats.org/package/2006/relationships",TCMNT:"http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments",dc:"http://purl.org/dc/elements/1.1/",dcterms:"http://purl.org/dc/terms/",dcmitype:"http://purl.org/dc/dcmitype/",mx:"http://schemas.microsoft.com/office/mac/excel/2008/main",r:"http://schemas.openxmlformats.org/officeDocument/2006/relationships",sjs:"http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties",vt:"http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",xsd:"http://www.w3.org/2001/XMLSchema"};var Ft=["http://schemas.openxmlformats.org/spreadsheetml/2006/main","http://purl.oclc.org/ooxml/spreadsheetml/main","http://schemas.microsoft.com/office/excel/2006/main","http://schemas.microsoft.com/office/excel/2006/2"];var Dt={o:"urn:schemas-microsoft-com:office:office",x:"urn:schemas-microsoft-com:office:excel",ss:"urn:schemas-microsoft-com:office:spreadsheet",dt:"uuid:C2F41010-65B3-11d1-A29F-00AA00C14882",mv:"http://macVmlSchemaUri",v:"urn:schemas-microsoft-com:vml",html:"http://www.w3.org/TR/REC-html40"};function Pt(e,r){var t=1-2*(e[r+7]>>>7);var a=((e[r+7]&127)<<4)+(e[r+6]>>>4&15);var n=e[r+6]&15;for(var i=5;i>=0;--i)n=n*256+e[r+i];if(a==2047)return n==0?t*Infinity:NaN;if(a==0)a=-1022;else{a-=1023;n+=Math.pow(2,52)}return t*Math.pow(2,a-52)*n}function Lt(e,r,t){var a=(r<0||1/r==-Infinity?1:0)<<7,n=0,i=0;var s=a?-r:r;if(!isFinite(s)){n=2047;i=isNaN(r)?26985:0}else if(s==0)n=i=0;else{n=Math.floor(Math.log(s)/Math.LN2);i=s*Math.pow(2,52-n);if(n<=-1023&&(!isFinite(i)||i<Math.pow(2,52))){n=-1022}else{i-=Math.pow(2,52);n+=1023}}for(var f=0;f<=5;++f,i/=256)e[t+f]=i&255;e[t+6]=(n&15)<<4|i&15;e[t+7]=n>>4|a}var Mt=function(e){var r=[],t=10240;for(var a=0;a<e[0].length;++a)if(e[0][a])for(var n=0,i=e[0][a].length;n<i;n+=t)r.push.apply(r,e[0][a].slice(n,n+t));return r};var Ut=y?function(e){return e[0].length>0&&Buffer.isBuffer(e[0][0])?Buffer.concat(e[0].map(function(e){return Buffer.isBuffer(e)?e:S(e)})):Mt(e)}:Mt;var Bt=function(e,r,t){var a=[];for(var n=r;n<t;n+=2)a.push(String.fromCharCode(sa(e,n)));return a.join("").replace(P,"")};var Wt=y?function(e,r,t){if(!Buffer.isBuffer(e)||!_)return Bt(e,r,t);return e.toString("utf16le",r,t).replace(P,"")}:Bt;var Ht=function(e,r,t){var a=[];for(var n=r;n<r+t;++n)a.push(("0"+e[n].toString(16)).slice(-2));return a.join("")};var zt=y?function(e,r,t){return Buffer.isBuffer(e)?e.toString("hex",r,r+t):Ht(e,r,t)}:Ht;var Vt=function(e,r,t){var a=[];for(var n=r;n<t;n++)a.push(String.fromCharCode(ia(e,n)));return a.join("")};var Gt=y?function Ik(e,r,t){return Buffer.isBuffer(e)?e.toString("utf8",r,t):Vt(e,r,t)}:Vt;var $t=function(e,r){var t=la(e,r);return t>0?Gt(e,r+4,r+4+t-1):""};var jt=$t;var Xt=function(e,r){var t=la(e,r);return t>0?Gt(e,r+4,r+4+t-1):""};var Yt=Xt;var Kt=function(e,r){var t=2*la(e,r);return t>0?Gt(e,r+4,r+4+t-1):""};var Zt=Kt;var Jt=function Fk(e,r){var t=la(e,r);return t>0?Wt(e,r+4,r+4+t):""};var qt=Jt;var Qt=function(e,r){var t=la(e,r);return t>0?Gt(e,r+4,r+4+t):""};var ea=Qt;var ra=function(e,r){return Pt(e,r)};var ta=ra;var aa=function Dk(e){return Array.isArray(e)||typeof Uint8Array!=="undefined"&&e instanceof Uint8Array};if(y){jt=function Pk(e,r){if(!Buffer.isBuffer(e))return $t(e,r);var t=e.readUInt32LE(r);return t>0?e.toString("utf8",r+4,r+4+t-1):""};Yt=function Lk(e,r){if(!Buffer.isBuffer(e))return Xt(e,r);var t=e.readUInt32LE(r);return t>0?e.toString("utf8",r+4,r+4+t-1):""};Zt=function Mk(e,r){if(!Buffer.isBuffer(e)||!_)return Kt(e,r);var t=2*e.readUInt32LE(r);return e.toString("utf16le",r+4,r+4+t-1)};qt=function Uk(e,r){if(!Buffer.isBuffer(e)||!_)return Jt(e,r);var t=e.readUInt32LE(r);return e.toString("utf16le",r+4,r+4+t)};ea=function Bk(e,r){if(!Buffer.isBuffer(e))return Qt(e,r);var t=e.readUInt32LE(r);return e.toString("utf8",r+4,r+4+t)};ta=function Wk(e,r){if(Buffer.isBuffer(e))return e.readDoubleLE(r);return ra(e,r)};aa=function Hk(e){return Buffer.isBuffer(e)||Array.isArray(e)||typeof Uint8Array!=="undefined"&&e instanceof Uint8Array}}function na(){Wt=function(e,r,t){return a.utils.decode(1200,e.slice(r,t)).replace(P,"")};Gt=function(e,r,t){return a.utils.decode(65001,e.slice(r,t))};jt=function(e,r){var n=la(e,r);return n>0?a.utils.decode(t,e.slice(r+4,r+4+n-1)):""};Yt=function(e,t){var n=la(e,t);return n>0?a.utils.decode(r,e.slice(t+4,t+4+n-1)):""};Zt=function(e,r){var t=2*la(e,r);return t>0?a.utils.decode(1200,e.slice(r+4,r+4+t-1)):""};qt=function(e,r){var t=la(e,r);return t>0?a.utils.decode(1200,e.slice(r+4,r+4+t)):""};ea=function(e,r){var t=la(e,r);return t>0?a.utils.decode(65001,e.slice(r+4,r+4+t)):""}}if(typeof a!=="undefined")na();var ia=function(e,r){return e[r]};var sa=function(e,r){return e[r+1]*(1<<8)+e[r]};var fa=function(e,r){var t=e[r+1]*(1<<8)+e[r];return t<32768?t:(65535-t+1)*-1};var la=function(e,r){return e[r+3]*(1<<24)+(e[r+2]<<16)+(e[r+1]<<8)+e[r]};var oa=function(e,r){return e[r+3]<<24|e[r+2]<<16|e[r+1]<<8|e[r]};var ca=function(e,r){return e[r]<<24|e[r+1]<<16|e[r+2]<<8|e[r+3]};function ua(e,t){var n="",i,s,f=[],l,o,c,u;switch(t){case"dbcs":u=this.l;if(y&&Buffer.isBuffer(this)&&_)n=this.slice(this.l,this.l+2*e).toString("utf16le");else for(c=0;c<e;++c){n+=String.fromCharCode(sa(this,u));u+=2}e*=2;break;case"utf8":n=Gt(this,this.l,this.l+e);break;case"utf16le":e*=2;n=Wt(this,this.l,this.l+e);break;case"wstr":if(typeof a!=="undefined")n=a.utils.decode(r,this.slice(this.l,this.l+2*e));else return ua.call(this,e,"dbcs");e=2*e;break;case"lpstr-ansi":n=jt(this,this.l);e=4+la(this,this.l);break;case"lpstr-cp":n=Yt(this,this.l);e=4+la(this,this.l);break;case"lpwstr":n=Zt(this,this.l);e=4+2*la(this,this.l);break;case"lpp4":e=4+la(this,this.l);n=qt(this,this.l);if(e&2)e+=2;break;case"8lpp4":e=4+la(this,this.l);n=ea(this,this.l);if(e&3)e+=4-(e&3);break;case"cstr":e=0;n="";while((l=ia(this,this.l+e++))!==0)f.push(v(l));n=f.join("");break;case"_wstr":e=0;n="";while((l=sa(this,this.l+e))!==0){f.push(v(l));e+=2}e+=2;n=f.join("");break;case"dbcs-cont":n="";u=this.l;for(c=0;c<e;++c){if(this.lens&&this.lens.indexOf(u)!==-1){l=ia(this,u);this.l=u+1;o=ua.call(this,e-c,l?"dbcs-cont":"sbcs-cont");return f.join("")+o}f.push(v(sa(this,u)));u+=2}n=f.join("");e*=2;break;case"cpstr":if(typeof a!=="undefined"){n=a.utils.decode(r,this.slice(this.l,this.l+e));break};case"sbcs-cont":n="";u=this.l;for(c=0;c!=e;++c){if(this.lens&&this.lens.indexOf(u)!==-1){l=ia(this,u);this.l=u+1;o=ua.call(this,e-c,l?"dbcs-cont":"sbcs-cont");return f.join("")+o}f.push(v(ia(this,u)));u+=1}n=f.join("");break;default:switch(e){case 1:i=ia(this,this.l);this.l++;return i;case 2:i=(t==="i"?fa:sa)(this,this.l);this.l+=2;return i;case 4:;case-4:if(t==="i"||(this[this.l+3]&128)===0){i=(e>0?oa:ca)(this,this.l);this.l+=4;return i}else{s=la(this,this.l);this.l+=4}return s;case 8:;case-8:if(t==="f"){if(e==8)s=ta(this,this.l);else s=ta([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]],0);this.l+=8;return s}else e=8;case 16:n=zt(this,this.l,e);break;};}this.l+=e;return n}var ha=function(e,r,t){e[t]=r&255;e[t+1]=r>>>8&255;e[t+2]=r>>>16&255;e[t+3]=r>>>24&255};var da=function(e,r,t){e[t]=r&255;e[t+1]=r>>8&255;e[t+2]=r>>16&255;e[t+3]=r>>24&255};var va=function(e,r,t){e[t]=r&255;e[t+1]=r>>>8&255};function pa(e,n,i){var s=0,f=0;if(i==="dbcs"){for(f=0;f!=n.length;++f)va(this,n.charCodeAt(f),this.l+2*f);s=2*n.length}else if(i==="sbcs"||i=="cpstr"){if(typeof a!=="undefined"&&t==874){for(f=0;f!=n.length;++f){var l=a.utils.encode(t,n.charAt(f));this[this.l+f]=l[0]}s=n.length}else if(typeof a!=="undefined"&&i=="cpstr"){l=a.utils.encode(r,n);if(l.length==n.length)for(f=0;f<n.length;++f)if(l[f]==0&&n.charCodeAt(f)!=0)l[f]=95;if(l.length==2*n.length)for(f=0;f<n.length;++f)if(l[2*f]==0&&l[2*f+1]==0&&n.charCodeAt(f)!=0)l[2*f]=95;for(f=0;f<l.length;++f)this[this.l+f]=l[f];s=l.length}else{n=n.replace(/[^\x00-\x7F]/g,"_");for(f=0;f!=n.length;++f)this[this.l+f]=n.charCodeAt(f)&255;s=n.length}}else if(i==="hex"){for(;f<e;++f){this[this.l++]=parseInt(n.slice(2*f,2*f+2),16)||0}return this}else if(i==="utf16le"){var o=Math.min(this.l+e,this.length);for(f=0;f<Math.min(n.length,e);++f){var c=n.charCodeAt(f);this[this.l++]=c&255;this[this.l++]=c>>8}while(this.l<o)this[this.l++]=0;return this}else switch(e){case 1:s=1;this[this.l]=n&255;break;case 2:s=2;this[this.l]=n&255;n>>>=8;this[this.l+1]=n&255;break;case 3:s=3;this[this.l]=n&255;n>>>=8;this[this.l+1]=n&255;n>>>=8;this[this.l+2]=n&255;break;case 4:s=4;ha(this,n,this.l);break;case 8:s=8;if(i==="f"){Lt(this,n,this.l);break};case 16:break;case-4:s=4;da(this,n,this.l);break;}this.l+=s;return this}function ma(e,r){var t=zt(this,this.l,e.length>>1);if(t!==e)throw new Error(r+"Expected "+e+" saw "+t);this.l+=e.length>>1}function ba(e,r){e.l=r;e._R=ua;e.chk=ma;e._W=pa}function ga(e,r){e.l+=r}function wa(e){var r=A(e);ba(r,0);return r}function ka(e,r,t){if(!e)return;var a,n,i;ba(e,e.l||0);var s=e.length,f=0,l=0;while(e.l<s){f=e._R(1);if(f&128)f=(f&127)+((e._R(1)&127)<<7);var o=Fb[f]||Fb[65535];a=e._R(1);i=a&127;for(n=1;n<4&&a&128;++n)i+=((a=e._R(1))&127)<<7*n;l=e.l+i;var c=o.f&&o.f(e,i,t);e.l=l;if(r(c,o,f))return}}function Ta(){var e=[],r=y?256:2048;var t=function l(e){var r=wa(e);ba(r,0);return r};var a=t(r);var n=function o(){if(!a)return;if(a.l){if(a.length>a.l){a=a.slice(0,a.l);a.l=a.length}if(a.length>0)e.push(a)}a=null};var i=function c(e){if(a&&e<a.length-a.l)return a;n();return a=t(Math.max(e+1,r))};var s=function u(){n();return F(e)};var f=function h(e){n();a=e;if(a.l==null)a.l=a.length;i(r)};return{next:i,push:f,end:s,_bufs:e}}function Ea(e,r,t,a){var n=+r,i;if(isNaN(n))return;if(!a)a=Fb[n].p||(t||[]).length||0;i=1+(n>=128?1:0)+1;if(a>=128)++i;if(a>=16384)++i;if(a>=2097152)++i;var s=e.next(i);if(n<=127)s._W(1,n);else{s._W(1,(n&127)+128);s._W(1,n>>7)}for(var f=0;f!=4;++f){if(a>=128){s._W(1,(a&127)+128);a>>=7}else{s._W(1,a);break}}if(a>0&&aa(t))e.push(t)}function ya(e,r,t){var a=yr(e);if(r.s){if(a.cRel)a.c+=r.s.c;if(a.rRel)a.r+=r.s.r}else{if(a.cRel)a.c+=r.c;if(a.rRel)a.r+=r.r}if(!t||t.biff<12){while(a.c>=256)a.c-=256;while(a.r>=65536)a.r-=65536}return a}function Sa(e,r,t){var a=yr(e);a.s=ya(a.s,r.s,t);a.e=ya(a.e,r.s,t);return a}function _a(e,r){if(e.cRel&&e.c<0){e=yr(e);while(e.c<0)e.c+=r>8?16384:256}if(e.rRel&&e.r<0){e=yr(e);while(e.r<0)e.r+=r>8?1048576:r>5?65536:16384}var t=Ma(e);if(!e.cRel&&e.cRel!=null)t=Fa(t);if(!e.rRel&&e.rRel!=null)t=Oa(t);return t}function Aa(e,r){if(e.s.r==0&&!e.s.rRel){if(e.e.r==(r.biff>=12?1048575:r.biff>=8?65536:16384)&&!e.e.rRel){return(e.s.cRel?"":"$")+Ia(e.s.c)+":"+(e.e.cRel?"":"$")+Ia(e.e.c)}}if(e.s.c==0&&!e.s.cRel){if(e.e.c==(r.biff>=12?16383:255)&&!e.e.cRel){return(e.s.rRel?"":"$")+Ca(e.s.r)+":"+(e.e.rRel?"":"$")+Ca(e.e.r)}}return _a(e.s,r.biff)+":"+_a(e.e,r.biff)}if(typeof cptable!=="undefined")m(cptable);else if(typeof module!=="undefined"&&typeof require!=="undefined"){m(undefined)}function xa(e){return parseInt(Ra(e),10)-1}function Ca(e){return""+(e+1)}function Oa(e){return e.replace(/([A-Z]|^)(\d+)$/,"$1$$$2")}function Ra(e){return e.replace(/\$(\d+)$/,"$1")}function Na(e){var r=Da(e),t=0,a=0;for(;a!==r.length;++a)t=26*t+r.charCodeAt(a)-64;return t-1}function Ia(e){if(e<0)throw new Error("invalid column "+e);var r="";for(++e;e;e=Math.floor((e-1)/26))r=String.fromCharCode((e-1)%26+65)+r;return r}function Fa(e){return e.replace(/^([A-Z])/,"$$$1")}function Da(e){return e.replace(/^\$([A-Z])/,"$1")}function Pa(e){return e.replace(/(\$?[A-Z]*)(\$?\d*)/,"$1,$2").split(",")}function La(e){var r=0,t=0;for(var a=0;a<e.length;++a){var n=e.charCodeAt(a);if(n>=48&&n<=57)r=10*r+(n-48);else if(n>=65&&n<=90)t=26*t+(n-64)}return{c:t-1,r:r-1}}function Ma(e){var r=e.c+1;var t="";for(;r;r=(r-1)/26|0)t=String.fromCharCode((r-1)%26+65)+t;return t+(e.r+1)}function Ua(e){var r=e.indexOf(":");if(r==-1)return{s:La(e),e:La(e)};return{s:La(e.slice(0,r)),e:La(e.slice(r+1))}}function Ba(e,r){if(typeof r==="undefined"||typeof r==="number"){return Ba(e.s,e.e)}if(typeof e!=="string")e=Ma(e);if(typeof r!=="string")r=Ma(r);return e==r?e:e+":"+r}function Wa(e){var r=Ua(e);return"$"+Ia(r.s.c)+"$"+Ca(r.s.r)+":$"+Ia(r.e.c)+"$"+Ca(r.e.r)}function Ha(e,r){if(!e&&!(r&&r.biff<=5&&r.biff>=2))throw new Error("empty sheet name");if(/[^\w\u4E00-\u9FFF\u3040-\u30FF]/.test(e))return"'"+e.replace(/'/g,"''")+"'";return e}function za(e){var r={s:{c:0,r:0},e:{c:0,r:0}};var t=0,a=0,n=0;var i=e.length;for(t=0;a<i;++a){if((n=e.charCodeAt(a)-64)<1||n>26)break;t=26*t+n}r.s.c=--t;for(t=0;a<i;++a){if((n=e.charCodeAt(a)-48)<0||n>9)break;t=10*t+n}r.s.r=--t;if(a===i||n!=10){r.e.c=r.s.c;r.e.r=r.s.r;return r}++a;for(t=0;a!=i;++a){if((n=e.charCodeAt(a)-64)<1||n>26)break;t=26*t+n}r.e.c=--t;for(t=0;a!=i;++a){if((n=e.charCodeAt(a)-48)<0||n>9)break;t=10*t+n}r.e.r=--t;return r}function Va(e,r){var t=e.t=="d"&&r instanceof Date;if(e.z!=null)try{return e.w=ze(e.z,t?hr(r):r)}catch(a){}try{return e.w=ze((e.XF||{}).numFmtId||(t?14:0),t?hr(r):r)}catch(a){return""+r}}function Ga(e,r,t){if(e==null||e.t==null||e.t=="z")return"";if(e.w!==undefined)return e.w;if(e.t=="d"&&!e.z&&t&&t.dateNF)e.z=t.dateNF;if(e.t=="e")return Jn[e.v]||e.v;if(r==undefined)return Va(e,e.v);return Va(e,r)}function $a(e,r){var t=r&&r.sheet?r.sheet:"Sheet1";var a={};a[t]=e;return{SheetNames:[t],Sheets:a}}function ja(e,r,t){var a=t||{};var n=e?Array.isArray(e):a.dense;if(b!=null&&n==null)n=b;var i=e||(n?[]:{});var s=0,f=0;if(i&&a.origin!=null){if(typeof a.origin=="number")s=a.origin;else{var l=typeof a.origin=="string"?La(a.origin):a.origin;s=l.r;f=l.c}if(!i["!ref"])i["!ref"]="A1:A1"}var o={s:{c:1e7,r:1e7},e:{c:0,r:0}};if(i["!ref"]){var c=za(i["!ref"]);o.s.c=c.s.c;o.s.r=c.s.r;o.e.c=Math.max(o.e.c,c.e.c);o.e.r=Math.max(o.e.r,c.e.r);if(s==-1)o.e.r=s=c.e.r+1}for(var u=0;u!=r.length;++u){if(!r[u])continue;if(!Array.isArray(r[u]))throw new Error("aoa_to_sheet expects an array of arrays");for(var h=0;h!=r[u].length;++h){if(typeof r[u][h]==="undefined")continue;var d={v:r[u][h]};var v=s+u,p=f+h;if(o.s.r>v)o.s.r=v;if(o.s.c>p)o.s.c=p;if(o.e.r<v)o.e.r=v;if(o.e.c<p)o.e.c=p;if(r[u][h]&&typeof r[u][h]==="object"&&!Array.isArray(r[u][h])&&!(r[u][h]instanceof Date))d=r[u][h];else{if(Array.isArray(d.v)){d.f=r[u][h][1];d.v=d.v[0]}if(d.v===null){if(d.f)d.t="n";else if(a.nullError){d.t="e";d.v=0}else if(!a.sheetStubs)continue;else d.t="z"}else if(typeof d.v==="number")d.t="n";else if(typeof d.v==="boolean")d.t="b";else if(d.v instanceof Date){d.z=a.dateNF||Z[14];if(a.cellDates){d.t="d";d.w=ze(d.z,hr(d.v,a.date1904))}else{d.t="n";d.v=hr(d.v,a.date1904);d.w=ze(d.z,d.v)}}else d.t="s"}if(n){if(!i[v])i[v]=[];if(i[v][p]&&i[v][p].z)d.z=i[v][p].z;i[v][p]=d}else{var m=Ma({c:p,r:v});if(i[m]&&i[m].z)d.z=i[m].z;i[m]=d}}}if(o.s.c<1e7)i["!ref"]=Ba(o);return i}function Xa(e,r){return ja(null,e,r)}function Ya(e){return e._R(4,"i")}function Ka(e,r){if(!r)r=wa(4);r._W(4,e);return r}function Za(e){var r=e._R(4);return r===0?"":e._R(r,"dbcs")}function Ja(e,r){var t=false;if(r==null){t=true;r=wa(4+2*e.length)}r._W(4,e.length);if(e.length>0)r._W(0,e,"dbcs");return t?r.slice(0,r.l):r}function qa(e){return{ich:e._R(2),ifnt:e._R(2)}}function Qa(e,r){if(!r)r=wa(4);r._W(2,e.ich||0);r._W(2,e.ifnt||0);return r}function en(e,r){var t=e.l;var a=e._R(1);var n=Za(e);var i=[];var s={t:n,h:n};if((a&1)!==0){var f=e._R(4);for(var l=0;l!=f;++l)i.push(qa(e));s.r=i}else s.r=[{ich:0,ifnt:0}];e.l=t+r;return s}function rn(e,r){var t=false;if(r==null){t=true;r=wa(15+4*e.t.length)}r._W(1,0);Ja(e.t,r);return t?r.slice(0,r.l):r}var tn=en;function an(e,r){var t=false;if(r==null){t=true;r=wa(23+4*e.t.length)}r._W(1,1);Ja(e.t,r);r._W(4,1);Qa({ich:0,ifnt:0},r);return t?r.slice(0,r.l):r}function nn(e){var r=e._R(4);var t=e._R(2);t+=e._R(1)<<16;e.l++;return{c:r,iStyleRef:t}}function sn(e,r){if(r==null)r=wa(8);r._W(-4,e.c);r._W(3,e.iStyleRef||e.s);r._W(1,0);return r}function fn(e){var r=e._R(2);r+=e._R(1)<<16;e.l++;return{c:-1,iStyleRef:r}}function ln(e,r){if(r==null)r=wa(4);r._W(3,e.iStyleRef||e.s);r._W(1,0);return r}var on=Za;var cn=Ja;function un(e){var r=e._R(4);return r===0||r===4294967295?"":e._R(r,"dbcs")}function hn(e,r){var t=false;if(r==null){t=true;r=wa(127)}r._W(4,e.length>0?e.length:4294967295);if(e.length>0)r._W(0,e,"dbcs");return t?r.slice(0,r.l):r}var dn=Za;var vn=un;var pn=hn;function mn(e){var r=e.slice(e.l,e.l+4);var t=r[0]&1,a=r[0]&2;e.l+=4;var n=a===0?ta([0,0,0,0,r[0]&252,r[1],r[2],r[3]],0):oa(r,0)>>2;return t?n/100:n}function bn(e,r){if(r==null)r=wa(4);var t=0,a=0,n=e*100;if(e==(e|0)&&e>=-(1<<29)&&e<1<<29){a=1}else if(n==(n|0)&&n>=-(1<<29)&&n<1<<29){a=1;t=1}if(a)r._W(-4,((t?n:e)<<2)+(t+2));else throw new Error("unsupported RkNumber "+e)}function gn(e){var r={s:{},e:{}};r.s.r=e._R(4);r.e.r=e._R(4);r.s.c=e._R(4);r.e.c=e._R(4);return r}function wn(e,r){if(!r)r=wa(16);r._W(4,e.s.r);r._W(4,e.e.r);r._W(4,e.s.c);r._W(4,e.e.c);return r}var kn=gn;var Tn=wn;function En(e){if(e.length-e.l<8)throw"XLS Xnum Buffer underflow";return e._R(8,"f")}function yn(e,r){return(r||wa(8))._W(8,e,"f")}function Sn(e){var r={};var t=e._R(1);var a=t>>>1;var n=e._R(1);var i=e._R(2,"i");var s=e._R(1);var f=e._R(1);var l=e._R(1);e.l++;switch(a){case 0:r.auto=1;break;case 1:r.index=n;var o=Zn[n];if(o)r.rgb=Co(o);break;case 2:r.rgb=Co([s,f,l]);break;case 3:r.theme=n;break;}if(i!=0)r.tint=i>0?i/32767:i/32768;return r}function _n(e,r){if(!r)r=wa(8);if(!e||e.auto){r._W(4,0);r._W(4,0);return r}if(e.index!=null){r._W(1,2);r._W(1,e.index)}else if(e.theme!=null){r._W(1,6);r._W(1,e.theme)}else{r._W(1,5);r._W(1,0)}var t=e.tint||0;if(t>0)t*=32767;else if(t<0)t*=32768;r._W(2,t);if(!e.rgb||e.theme!=null){r._W(2,0);r._W(1,0);r._W(1,0)}else{var a=e.rgb||"FFFFFF";if(typeof a=="number")a=("000000"+a.toString(16)).slice(-6);r._W(1,parseInt(a.slice(0,2),16));r._W(1,parseInt(a.slice(2,4),16));r._W(1,parseInt(a.slice(4,6),16));r._W(1,255)}return r}function An(e){var r=e._R(1);e.l++;var t={fBold:r&1,fItalic:r&2,fUnderline:r&4,
-fStrikeout:r&8,fOutline:r&16,fShadow:r&32,fCondense:r&64,fExtend:r&128};return t}function xn(e,r){if(!r)r=wa(2);var t=(e.italic?2:0)|(e.strike?8:0)|(e.outline?16:0)|(e.shadow?32:0)|(e.condense?64:0)|(e.extend?128:0);r._W(1,t);r._W(1,0);return r}function Cn(e,r){var t={2:"BITMAP",3:"METAFILEPICT",8:"DIB",14:"ENHMETAFILE"};var a=e._R(4);switch(a){case 0:return"";case 4294967295:;case 4294967294:return t[e._R(4)]||"";}if(a>400)throw new Error("Unsupported Clipboard: "+a.toString(16));e.l-=4;return e._R(0,r==1?"lpstr":"lpwstr")}function On(e){return Cn(e,1)}function Rn(e){return Cn(e,2)}var Nn=2;var In=3;var Fn=11;var Dn=12;var Pn=19;var Ln=64;var Mn=65;var Un=71;var Bn=4108;var Wn=4126;var Hn=80;var zn=81;var Vn=[Hn,zn];var Gn={1:{n:"CodePage",t:Nn},2:{n:"Category",t:Hn},3:{n:"PresentationFormat",t:Hn},4:{n:"ByteCount",t:In},5:{n:"LineCount",t:In},6:{n:"ParagraphCount",t:In},7:{n:"SlideCount",t:In},8:{n:"NoteCount",t:In},9:{n:"HiddenCount",t:In},10:{n:"MultimediaClipCount",t:In},11:{n:"ScaleCrop",t:Fn},12:{n:"HeadingPairs",t:Bn},13:{n:"TitlesOfParts",t:Wn},14:{n:"Manager",t:Hn},15:{n:"Company",t:Hn},16:{n:"LinksUpToDate",t:Fn},17:{n:"CharacterCount",t:In},19:{n:"SharedDoc",t:Fn},22:{n:"HyperlinksChanged",t:Fn},23:{n:"AppVersion",t:In,p:"version"},24:{n:"DigSig",t:Mn},26:{n:"ContentType",t:Hn},27:{n:"ContentStatus",t:Hn},28:{n:"Language",t:Hn},29:{n:"Version",t:Hn},255:{},2147483648:{n:"Locale",t:Pn},2147483651:{n:"Behavior",t:Pn},1919054434:{}};var $n={1:{n:"CodePage",t:Nn},2:{n:"Title",t:Hn},3:{n:"Subject",t:Hn},4:{n:"Author",t:Hn},5:{n:"Keywords",t:Hn},6:{n:"Comments",t:Hn},7:{n:"Template",t:Hn},8:{n:"LastAuthor",t:Hn},9:{n:"RevNumber",t:Hn},10:{n:"EditTime",t:Ln},11:{n:"LastPrinted",t:Ln},12:{n:"CreatedDate",t:Ln},13:{n:"ModifiedDate",t:Ln},14:{n:"PageCount",t:In},15:{n:"WordCount",t:In},16:{n:"CharCount",t:In},17:{n:"Thumbnail",t:Un},18:{n:"Application",t:Hn},19:{n:"DocSecurity",t:In},255:{},2147483648:{n:"Locale",t:Pn},2147483651:{n:"Behavior",t:Pn},1919054434:{}};var jn={1:"US",2:"CA",3:"",7:"RU",20:"EG",30:"GR",31:"NL",32:"BE",33:"FR",34:"ES",36:"HU",39:"IT",41:"CH",43:"AT",44:"GB",45:"DK",46:"SE",47:"NO",48:"PL",49:"DE",52:"MX",55:"BR",61:"AU",64:"NZ",66:"TH",81:"JP",82:"KR",84:"VN",86:"CN",90:"TR",105:"JS",213:"DZ",216:"MA",218:"LY",351:"PT",354:"IS",358:"FI",420:"CZ",886:"TW",961:"LB",962:"JO",963:"SY",964:"IQ",965:"KW",966:"SA",971:"AE",972:"IL",974:"QA",981:"IR",65535:"US"};var Xn=[null,"solid","mediumGray","darkGray","lightGray","darkHorizontal","darkVertical","darkDown","darkUp","darkGrid","darkTrellis","lightHorizontal","lightVertical","lightDown","lightUp","lightGrid","lightTrellis","gray125","gray0625"];function Yn(e){return e.map(function(e){return[e>>16&255,e>>8&255,e&255]})}var Kn=Yn([0,16777215,16711680,65280,255,16776960,16711935,65535,0,16777215,16711680,65280,255,16776960,16711935,65535,8388608,32768,128,8421376,8388736,32896,12632256,8421504,10066431,10040166,16777164,13434879,6684774,16744576,26316,13421823,128,16711935,16776960,65535,8388736,8388608,32896,255,52479,13434879,13434828,16777113,10079487,16751052,13408767,16764057,3368703,3394764,10079232,16763904,16750848,16737792,6710937,9868950,13158,3381606,13056,3355392,10040064,10040166,3355545,3355443,0,16777215,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);var Zn=yr(Kn);var Jn={0:"#NULL!",7:"#DIV/0!",15:"#VALUE!",23:"#REF!",29:"#NAME?",36:"#NUM!",42:"#N/A",43:"#GETTING_DATA",255:"#WTF?"};var qn={"#NULL!":0,"#DIV/0!":7,"#VALUE!":15,"#REF!":23,"#NAME?":29,"#NUM!":36,"#N/A":42,"#GETTING_DATA":43,"#WTF?":255};var Qn=["_xlnm.Consolidate_Area","_xlnm.Auto_Open","_xlnm.Auto_Close","_xlnm.Extract","_xlnm.Database","_xlnm.Criteria","_xlnm.Print_Area","_xlnm.Print_Titles","_xlnm.Recorder","_xlnm.Data_Form","_xlnm.Auto_Activate","_xlnm.Auto_Deactivate","_xlnm.Sheet_Title","_xlnm._FilterDatabase"];var ei={"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":"workbooks","application/vnd.ms-excel.sheet.macroEnabled.main+xml":"workbooks","application/vnd.ms-excel.sheet.binary.macroEnabled.main":"workbooks","application/vnd.ms-excel.addin.macroEnabled.main+xml":"workbooks","application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":"workbooks","application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":"sheets","application/vnd.ms-excel.worksheet":"sheets","application/vnd.ms-excel.binIndexWs":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":"charts","application/vnd.ms-excel.chartsheet":"charts","application/vnd.ms-excel.macrosheet+xml":"macros","application/vnd.ms-excel.macrosheet":"macros","application/vnd.ms-excel.intlmacrosheet":"TODO","application/vnd.ms-excel.binIndexMs":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":"dialogs","application/vnd.ms-excel.dialogsheet":"dialogs","application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml":"strs","application/vnd.ms-excel.sharedStrings":"strs","application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":"styles","application/vnd.ms-excel.styles":"styles","application/vnd.openxmlformats-package.core-properties+xml":"coreprops","application/vnd.openxmlformats-officedocument.custom-properties+xml":"custprops","application/vnd.openxmlformats-officedocument.extended-properties+xml":"extprops","application/vnd.openxmlformats-officedocument.customXmlProperties+xml":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":"comments","application/vnd.ms-excel.comments":"comments","application/vnd.ms-excel.threadedcomments+xml":"threadedcomments","application/vnd.ms-excel.person+xml":"people","application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml":"metadata","application/vnd.ms-excel.sheetMetadata":"metadata","application/vnd.ms-excel.pivotTable":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml":"TODO","application/vnd.openxmlformats-officedocument.drawingml.chart+xml":"TODO","application/vnd.ms-office.chartcolorstyle+xml":"TODO","application/vnd.ms-office.chartstyle+xml":"TODO","application/vnd.ms-office.chartex+xml":"TODO","application/vnd.ms-excel.calcChain":"calcchains","application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml":"calcchains","application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings":"TODO","application/vnd.ms-office.activeX":"TODO","application/vnd.ms-office.activeX+xml":"TODO","application/vnd.ms-excel.attachedToolbars":"TODO","application/vnd.ms-excel.connections":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":"TODO","application/vnd.ms-excel.externalLink":"links","application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml":"links","application/vnd.ms-excel.pivotCacheDefinition":"TODO","application/vnd.ms-excel.pivotCacheRecords":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml":"TODO","application/vnd.ms-excel.queryTable":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml":"TODO","application/vnd.ms-excel.userNames":"TODO","application/vnd.ms-excel.revisionHeaders":"TODO","application/vnd.ms-excel.revisionLog":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml":"TODO","application/vnd.ms-excel.tableSingleCells":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml":"TODO","application/vnd.ms-excel.slicer":"TODO","application/vnd.ms-excel.slicerCache":"TODO","application/vnd.ms-excel.slicer+xml":"TODO","application/vnd.ms-excel.slicerCache+xml":"TODO","application/vnd.ms-excel.wsSortMap":"TODO","application/vnd.ms-excel.table":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":"TODO","application/vnd.openxmlformats-officedocument.theme+xml":"themes","application/vnd.openxmlformats-officedocument.themeOverride+xml":"TODO","application/vnd.ms-excel.Timeline+xml":"TODO","application/vnd.ms-excel.TimelineCache+xml":"TODO","application/vnd.ms-office.vbaProject":"vba","application/vnd.ms-office.vbaProjectSignature":"TODO","application/vnd.ms-office.volatileDependencies":"TODO","application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml":"TODO","application/vnd.ms-excel.controlproperties+xml":"TODO","application/vnd.openxmlformats-officedocument.model+data":"TODO","application/vnd.ms-excel.Survey+xml":"TODO","application/vnd.openxmlformats-officedocument.drawing+xml":"drawings","application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":"TODO","application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml":"TODO","application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml":"TODO","application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml":"TODO","application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml":"TODO","application/vnd.openxmlformats-officedocument.vmlDrawing":"TODO","application/vnd.openxmlformats-package.relationships+xml":"rels","application/vnd.openxmlformats-officedocument.oleObject":"TODO","image/png":"TODO",sheet:"js"};var ri={workbooks:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml",xlsm:"application/vnd.ms-excel.sheet.macroEnabled.main+xml",xlsb:"application/vnd.ms-excel.sheet.binary.macroEnabled.main",xlam:"application/vnd.ms-excel.addin.macroEnabled.main+xml",xltx:"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml"},strs:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml",xlsb:"application/vnd.ms-excel.sharedStrings"},comments:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml",xlsb:"application/vnd.ms-excel.comments"},sheets:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml",xlsb:"application/vnd.ms-excel.worksheet"},charts:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml",xlsb:"application/vnd.ms-excel.chartsheet"},dialogs:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml",xlsb:"application/vnd.ms-excel.dialogsheet"},macros:{xlsx:"application/vnd.ms-excel.macrosheet+xml",xlsb:"application/vnd.ms-excel.macrosheet"},metadata:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml",xlsb:"application/vnd.ms-excel.sheetMetadata"},styles:{xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml",xlsb:"application/vnd.ms-excel.styles"}};function ti(){return{workbooks:[],sheets:[],charts:[],dialogs:[],macros:[],rels:[],strs:[],comments:[],threadedcomments:[],links:[],coreprops:[],extprops:[],custprops:[],themes:[],styles:[],calcchains:[],vba:[],drawings:[],metadata:[],people:[],TODO:[],xmlns:""}}function ai(e){var r=ti();if(!e||!e.match)return r;var t={};(e.match(Yr)||[]).forEach(function(e){var a=Jr(e);switch(a[0].replace(Kr,"<")){case"<?xml":break;case"<Types":r.xmlns=a["xmlns"+(a[0].match(/<(\w+):/)||["",""])[1]];break;case"<Default":t[a.Extension.toLowerCase()]=a.ContentType;break;case"<Override":if(r[ei[a.ContentType]]!==undefined)r[ei[a.ContentType]].push(a.PartName);break;}});if(r.xmlns!==It.CT)throw new Error("Unknown Namespace: "+r.xmlns);r.calcchain=r.calcchains.length>0?r.calcchains[0]:"";r.sst=r.strs.length>0?r.strs[0]:"";r.style=r.styles.length>0?r.styles[0]:"";r.defaults=t;delete r.calcchains;return r}function ni(e,r,t){var a=cr(ei);var n=[],i;if(!t){n[n.length]=Gr;n[n.length]=xt("Types",null,{xmlns:It.CT,"xmlns:xsd":It.xsd,"xmlns:xsi":It.xsi});n=n.concat([["xml","application/xml"],["bin","application/vnd.ms-excel.sheet.binary.macroEnabled.main"],["vml","application/vnd.openxmlformats-officedocument.vmlDrawing"],["data","application/vnd.openxmlformats-officedocument.model+data"],["bmp","image/bmp"],["png","image/png"],["gif","image/gif"],["emf","image/x-emf"],["wmf","image/x-wmf"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["tif","image/tiff"],["tiff","image/tiff"],["pdf","application/pdf"],["rels","application/vnd.openxmlformats-package.relationships+xml"]].map(function(e){return xt("Default",null,{Extension:e[0],ContentType:e[1]})}))}var s=function(t){if(e[t]&&e[t].length>0){i=e[t][0];n[n.length]=xt("Override",null,{PartName:(i[0]=="/"?"":"/")+i,ContentType:ri[t][r.bookType]||ri[t]["xlsx"]})}};var f=function(t){(e[t]||[]).forEach(function(e){n[n.length]=xt("Override",null,{PartName:(e[0]=="/"?"":"/")+e,ContentType:ri[t][r.bookType]||ri[t]["xlsx"]})})};var l=function(r){(e[r]||[]).forEach(function(e){n[n.length]=xt("Override",null,{PartName:(e[0]=="/"?"":"/")+e,ContentType:a[r][0]})})};s("workbooks");f("sheets");f("charts");l("themes");["strs","styles"].forEach(s);["coreprops","extprops","custprops"].forEach(l);l("vba");l("comments");l("threadedcomments");l("drawings");f("metadata");l("people");if(!t&&n.length>2){n[n.length]="</Types>";n[1]=n[1].replace("/>",">")}return n.join("")}var ii={WB:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument",SHEET:"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument",HLINK:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink",VML:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing",XPATH:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath",XMISS:"http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing",XLINK:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink",CXML:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml",CXMLP:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps",CMNT:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments",CORE_PROPS:"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties",EXT_PROPS:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties",CUST_PROPS:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties",SST:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings",STY:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles",THEME:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme",CHART:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart",CHARTEX:"http://schemas.microsoft.com/office/2014/relationships/chartEx",CS:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet",WS:["http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet","http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet"],DS:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet",MS:"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet",IMG:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image",DRAW:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing",XLMETA:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata",TCMNT:"http://schemas.microsoft.com/office/2017/10/relationships/threadedComment",PEOPLE:"http://schemas.microsoft.com/office/2017/10/relationships/person",CONN:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/connections",VBA:"http://schemas.microsoft.com/office/2006/relationships/vbaProject"};function si(e){var r=e.lastIndexOf("/");return e.slice(0,r+1)+"_rels/"+e.slice(r+1)+".rels"}function fi(e,r){var t={"!id":{}};if(!e)return t;if(r.charAt(0)!=="/"){r="/"+r}var a={};(e.match(Yr)||[]).forEach(function(e){var n=Jr(e);if(n[0]==="<Relationship"){var i={};i.Type=n.Type;i.Target=n.Target;i.Id=n.Id;if(n.TargetMode)i.TargetMode=n.TargetMode;var s=n.TargetMode==="External"?n.Target:Vr(n.Target,r);t[s]=i;a[n.Id]=i}});t["!id"]=a;return t}function li(e){var r=[Gr,xt("Relationships",null,{xmlns:It.RELS})];sr(e["!id"]).forEach(function(t){r[r.length]=xt("Relationship",null,e["!id"][t])});if(r.length>2){r[r.length]="</Relationships>";r[1]=r[1].replace("/>",">")}return r.join("")}function oi(e,r,t,a,n,i){if(!n)n={};if(!e["!id"])e["!id"]={};if(!e["!idx"])e["!idx"]=1;if(r<0)for(r=e["!idx"];e["!id"]["rId"+r];++r){}e["!idx"]=r+1;n.Id="rId"+r;n.Type=a;n.Target=t;if(i)n.TargetMode=i;else if([ii.HLINK,ii.XPATH,ii.XMISS].indexOf(n.Type)>-1)n.TargetMode="External";if(e["!id"][n.Id])throw new Error("Cannot rewrite rId "+r);e["!id"][n.Id]=n;e[("/"+n.Target).replace("//","/")]=n;return r}var ci="application/vnd.oasis.opendocument.spreadsheet";function ui(e,r){var t=Rt(e);var a;var n;while(a=Nt.exec(t))switch(a[3]){case"manifest":break;case"file-entry":n=Jr(a[0],false);if(n.path=="/"&&n.type!==ci)throw new Error("This OpenDocument is not a spreadsheet");break;case"encryption-data":;case"algorithm":;case"start-key-generation":;case"key-derivation":throw new Error("Unsupported ODS Encryption");default:if(r&&r.WTF)throw a;}}function hi(e){var r=[Gr];r.push('<manifest:manifest xmlns:manifest="urn:oasis:names:tc:opendocument:xmlns:manifest:1.0" manifest:version="1.2">\n');r.push('  <manifest:file-entry manifest:full-path="/" manifest:version="1.2" manifest:media-type="application/vnd.oasis.opendocument.spreadsheet"/>\n');for(var t=0;t<e.length;++t)r.push('  <manifest:file-entry manifest:full-path="'+e[t][0]+'" manifest:media-type="'+e[t][1]+'"/>\n');r.push("</manifest:manifest>");return r.join("")}function di(e,r,t){return['  <rdf:Description rdf:about="'+e+'">\n','    <rdf:type rdf:resource="http://docs.oasis-open.org/ns/office/1.2/meta/'+(t||"odf")+"#"+r+'"/>\n',"  </rdf:Description>\n"].join("")}function vi(e,r){return['  <rdf:Description rdf:about="'+e+'">\n','    <ns0:hasPart xmlns:ns0="http://docs.oasis-open.org/ns/office/1.2/meta/pkg#" rdf:resource="'+r+'"/>\n',"  </rdf:Description>\n"].join("")}function pi(e){var r=[Gr];r.push('<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">\n');for(var t=0;t!=e.length;++t){r.push(di(e[t][0],e[t][1]));r.push(vi("",e[t][0]))}r.push(di("","Document","pkg"));r.push("</rdf:RDF>");return r.join("")}function mi(){return'<office:document-meta xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xlink="http://www.w3.org/1999/xlink" office:version="1.2"><office:meta><meta:generator>Sheet'+"JS "+e.version+"</meta:generator></office:meta></office:document-meta>"}var bi=[["cp:category","Category"],["cp:contentStatus","ContentStatus"],["cp:keywords","Keywords"],["cp:lastModifiedBy","LastAuthor"],["cp:lastPrinted","LastPrinted"],["cp:revision","RevNumber"],["cp:version","Version"],["dc:creator","Author"],["dc:description","Comments"],["dc:identifier","Identifier"],["dc:language","Language"],["dc:subject","Subject"],["dc:title","Title"],["dcterms:created","CreatedDate","date"],["dcterms:modified","ModifiedDate","date"]];var gi=function(){var e=new Array(bi.length);for(var r=0;r<bi.length;++r){var t=bi[r];var a="(?:"+t[0].slice(0,t[0].indexOf(":"))+":)"+t[0].slice(t[0].indexOf(":")+1);e[r]=new RegExp("<"+a+"[^>]*>([\\s\\S]*?)</"+a+">")}return e}();function wi(e){var r={};e=mt(e);for(var t=0;t<bi.length;++t){var a=bi[t],n=e.match(gi[t]);if(n!=null&&n.length>0)r[a[1]]=rt(n[1]);if(a[2]==="date"&&r[a[1]])r[a[1]]=Tr(r[a[1]])}return r}function ki(e,r,t,a,n){if(n[e]!=null||r==null||r==="")return;n[e]=r;r=nt(r);a[a.length]=t?xt(e,r,t):_t(e,r)}function Ti(e,r){var t=r||{};var a=[Gr,xt("cp:coreProperties",null,{"xmlns:cp":It.CORE_PROPS,"xmlns:dc":It.dc,"xmlns:dcterms":It.dcterms,"xmlns:dcmitype":It.dcmitype,"xmlns:xsi":It.xsi})],n={};if(!e&&!t.Props)return a.join("");if(e){if(e.CreatedDate!=null)ki("dcterms:created",typeof e.CreatedDate==="string"?e.CreatedDate:Ct(e.CreatedDate,t.WTF),{"xsi:type":"dcterms:W3CDTF"},a,n);if(e.ModifiedDate!=null)ki("dcterms:modified",typeof e.ModifiedDate==="string"?e.ModifiedDate:Ct(e.ModifiedDate,t.WTF),{"xsi:type":"dcterms:W3CDTF"},a,n)}for(var i=0;i!=bi.length;++i){var s=bi[i];var f=t.Props&&t.Props[s[1]]!=null?t.Props[s[1]]:e?e[s[1]]:null;if(f===true)f="1";else if(f===false)f="0";else if(typeof f=="number")f=String(f);if(f!=null)ki(s[0],f,null,a,n)}if(a.length>2){a[a.length]="</cp:coreProperties>";a[1]=a[1].replace("/>",">")}return a.join("")}var Ei=[["Application","Application","string"],["AppVersion","AppVersion","string"],["Company","Company","string"],["DocSecurity","DocSecurity","string"],["Manager","Manager","string"],["HyperlinksChanged","HyperlinksChanged","bool"],["SharedDoc","SharedDoc","bool"],["LinksUpToDate","LinksUpToDate","bool"],["ScaleCrop","ScaleCrop","bool"],["HeadingPairs","HeadingPairs","raw"],["TitlesOfParts","TitlesOfParts","raw"]];var yi=["Worksheets","SheetNames","NamedRanges","DefinedNames","Chartsheets","ChartNames"];function Si(e,r,t,a){var n=[];if(typeof e=="string")n=yt(e,a);else for(var i=0;i<e.length;++i)n=n.concat(e[i].map(function(e){return{v:e}}));var s=typeof r=="string"?yt(r,a).map(function(e){return e.v}):r;var f=0,l=0;if(s.length>0)for(var o=0;o!==n.length;o+=2){l=+n[o+1].v;switch(n[o].v){case"Worksheets":;case"å·¥ä½è¡¨":;case"ÐÐ¸ÑÑÑ":;case"Ø£ÙØ±Ø§Ù Ø§ÙØ¹ÙÙ":;case"ã¯ã¼ã¯ã·ã¼ã":;case"××××× ××ª ×¢××××":;case"ArbeitsblÃ¤tter":;case"ÃalÄ±Åma SayfalarÄ±":;case"Feuilles de calcul":;case"Fogli di lavoro":;case"Folhas de cÃ¡lculo":;case"Planilhas":;case"Regneark":;case"Hojas de cÃ¡lculo":;case"Werkbladen":t.Worksheets=l;t.SheetNames=s.slice(f,f+l);break;case"Named Ranges":;case"Rangos con nombre":;case"ååä»ãä¸è¦§":;case"Benannte Bereiche":;case"Navngivne omrÃ¥der":t.NamedRanges=l;t.DefinedNames=s.slice(f,f+l);break;case"Charts":;case"Diagramme":t.Chartsheets=l;t.ChartNames=s.slice(f,f+l);break;}f+=l}}function _i(e,r,t){var a={};if(!r)r={};e=mt(e);Ei.forEach(function(t){var n=(e.match(gt(t[0]))||[])[1];switch(t[2]){case"string":if(n)r[t[1]]=rt(n);break;case"bool":r[t[1]]=n==="true";break;case"raw":var i=e.match(new RegExp("<"+t[0]+"[^>]*>([\\s\\S]*?)</"+t[0]+">"));if(i&&i.length>0)a[t[1]]=i[1];break;}});if(a.HeadingPairs&&a.TitlesOfParts)Si(a.HeadingPairs,a.TitlesOfParts,r,t);return r}function Ai(e){var r=[],t=xt;if(!e)e={};e.Application="SheetJS";r[r.length]=Gr;r[r.length]=xt("Properties",null,{xmlns:It.EXT_PROPS,"xmlns:vt":It.vt});Ei.forEach(function(a){if(e[a[1]]===undefined)return;var n;switch(a[2]){case"string":n=nt(String(e[a[1]]));break;case"bool":n=e[a[1]]?"true":"false";break;}if(n!==undefined)r[r.length]=t(a[0],n)});r[r.length]=t("HeadingPairs",t("vt:vector",t("vt:variant","<vt:lpstr>Worksheets</vt:lpstr>")+t("vt:variant",t("vt:i4",String(e.Worksheets))),{size:2,baseType:"variant"}));r[r.length]=t("TitlesOfParts",t("vt:vector",e.SheetNames.map(function(e){return"<vt:lpstr>"+nt(e)+"</vt:lpstr>"}).join(""),{size:e.Worksheets,baseType:"lpstr"}));if(r.length>2){r[r.length]="</Properties>";r[1]=r[1].replace("/>",">")}return r.join("")}var xi=/<[^>]+>[^<]*/g;function Ci(e,r){var t={},a="";var n=e.match(xi);if(n)for(var i=0;i!=n.length;++i){var s=n[i],f=Jr(s);switch(qr(f[0])){case"<?xml":break;case"<Properties":break;case"<property":a=rt(f.name);break;case"</property>":a=null;break;default:if(s.indexOf("<vt:")===0){var l=s.split(">");var o=l[0].slice(4),c=l[1];switch(o){case"lpstr":;case"bstr":;case"lpwstr":t[a]=rt(c);break;case"bool":t[a]=ut(c);break;case"i1":;case"i2":;case"i4":;case"i8":;case"int":;case"uint":t[a]=parseInt(c,10);break;case"r4":;case"r8":;case"decimal":t[a]=parseFloat(c);break;case"filetime":;case"date":t[a]=Tr(c);break;case"cy":;case"error":t[a]=rt(c);break;default:if(o.slice(-1)=="/")break;if(r.WTF&&typeof console!=="undefined")console.warn("Unexpected",s,o,l);}}else if(s.slice(0,2)==="</"){}else if(r.WTF)throw new Error(s);}}return t}function Oi(e){var r=[Gr,xt("Properties",null,{xmlns:It.CUST_PROPS,"xmlns:vt":It.vt})];if(!e)return r.join("");var t=1;sr(e).forEach(function a(n){++t;r[r.length]=xt("property",Ot(e[n],true),{fmtid:"{D5CDD505-2E9C-101B-9397-08002B2CF9AE}",pid:t,name:nt(n)})});if(r.length>2){r[r.length]="</Properties>";r[1]=r[1].replace("/>",">")}return r.join("")}var Ri={Title:"Title",Subject:"Subject",Author:"Author",Keywords:"Keywords",Comments:"Description",LastAuthor:"LastAuthor",RevNumber:"Revision",Application:"AppName",LastPrinted:"LastPrinted",CreatedDate:"Created",ModifiedDate:"LastSaved",Category:"Category",Manager:"Manager",Company:"Company",AppVersion:"Version",ContentStatus:"ContentStatus",Identifier:"Identifier",Language:"Language"};var Ni;function Ii(e,r,t){if(!Ni)Ni=lr(Ri);r=Ni[r]||r;e[r]=t}function Fi(e,r){var t=[];sr(Ri).map(function(e){for(var r=0;r<bi.length;++r)if(bi[r][1]==e)return bi[r];for(r=0;r<Ei.length;++r)if(Ei[r][1]==e)return Ei[r];throw e}).forEach(function(a){if(e[a[1]]==null)return;var n=r&&r.Props&&r.Props[a[1]]!=null?r.Props[a[1]]:e[a[1]];switch(a[2]){case"date":n=new Date(n).toISOString().replace(/\.\d*Z/,"Z");break;}if(typeof n=="number")n=String(n);else if(n===true||n===false){n=n?"1":"0"}else if(n instanceof Date)n=new Date(n).toISOString().replace(/\.\d*Z/,"");t.push(_t(Ri[a[1]]||a[1],n))});return xt("DocumentProperties",t.join(""),{xmlns:Dt.o})}function Di(e,r){var t=["Worksheets","SheetNames"];var a="CustomDocumentProperties";var n=[];if(e)sr(e).forEach(function(r){if(!Object.prototype.hasOwnProperty.call(e,r))return;for(var a=0;a<bi.length;++a)if(r==bi[a][1])return;for(a=0;a<Ei.length;++a)if(r==Ei[a][1])return;for(a=0;a<t.length;++a)if(r==t[a])return;var i=e[r];var s="string";if(typeof i=="number"){s="float";i=String(i)}else if(i===true||i===false){s="boolean";i=i?"1":"0"}else i=String(i);n.push(xt(it(r),i,{"dt:dt":s}))});if(r)sr(r).forEach(function(t){if(!Object.prototype.hasOwnProperty.call(r,t))return;if(e&&Object.prototype.hasOwnProperty.call(e,t))return;var a=r[t];var i="string";if(typeof a=="number"){i="float";a=String(a)}else if(a===true||a===false){i="boolean";a=a?"1":"0"}else if(a instanceof Date){i="dateTime.tz";a=a.toISOString()}else a=String(a);n.push(xt(it(t),a,{"dt:dt":i}))});return"<"+a+' xmlns="'+Dt.o+'">'+n.join("")+"</"+a+">"}function Pi(e){var r=e._R(4),t=e._R(4);return new Date((t/1e7*Math.pow(2,32)+r/1e7-11644473600)*1e3).toISOString().replace(/\.000/,"")}function Li(e){var r=typeof e=="string"?new Date(Date.parse(e)):e;var t=r.getTime()/1e3+11644473600;var a=t%Math.pow(2,32),n=(t-a)/Math.pow(2,32);a*=1e7;n*=1e7;var i=a/Math.pow(2,32)|0;if(i>0){a=a%Math.pow(2,32);n+=i}var s=wa(8);s._W(4,a);s._W(4,n);return s}function Mi(e,r,t){var a=e.l;var n=e._R(0,"lpstr-cp");if(t)while(e.l-a&3)++e.l;return n}function Ui(e,r,t){var a=e._R(0,"lpwstr");if(t)e.l+=4-(a.length+1&3)&3;return a}function Bi(e,r,t){if(r===31)return Ui(e);return Mi(e,r,t)}function Wi(e,r,t){return Bi(e,r,t===false?0:4)}function Hi(e,r){if(!r)throw new Error("VtUnalignedString must have positive length");return Bi(e,r,0)}function zi(e){var r=e._R(4);var t=[];for(var a=0;a!=r;++a){var n=e.l;t[a]=e._R(0,"lpwstr").replace(P,"");if(e.l-n&2)e.l+=2}return t}function Vi(e){var r=e._R(4);var t=[];for(var a=0;a!=r;++a)t[a]=e._R(0,"lpstr-cp").replace(P,"");return t}function Gi(e){var r=e.l;var t=Ki(e,zn);if(e[e.l]==0&&e[e.l+1]==0&&e.l-r&2)e.l+=2;var a=Ki(e,In);return[t,a]}function $i(e){var r=e._R(4);var t=[];for(var a=0;a<r/2;++a)t.push(Gi(e));return t}function ji(e,r){var t=e._R(4);var a={};for(var n=0;n!=t;++n){var i=e._R(4);var s=e._R(4);a[i]=e._R(s,r===1200?"utf16le":"utf8").replace(P,"").replace(L,"!");if(r===1200&&s%2)e.l+=2}if(e.l&3)e.l=e.l>>2+1<<2;return a}function Xi(e){var r=e._R(4);var t=e.slice(e.l,e.l+r);e.l+=r;if((r&3)>0)e.l+=4-(r&3)&3;return t}function Yi(e){var r={};r.Size=e._R(4);e.l+=r.Size+3-(r.Size-1)%4;return r}function Ki(e,r,t){var a=e._R(2),n,i=t||{};e.l+=2;if(r!==Dn)if(a!==r&&Vn.indexOf(r)===-1&&!((r&65534)==4126&&(a&65534)==4126))throw new Error("Expected type "+r+" saw "+a);switch(r===Dn?a:r){case 2:n=e._R(2,"i");if(!i.raw)e.l+=2;return n;case 3:n=e._R(4,"i");return n;case 11:return e._R(4)!==0;case 19:n=e._R(4);return n;case 30:return Mi(e,a,4).replace(P,"");case 31:return Ui(e);case 64:return Pi(e);case 65:return Xi(e);case 71:return Yi(e);case 80:return Wi(e,a,!i.raw).replace(P,"");case 81:return Hi(e,a).replace(P,"");case 4108:return $i(e);case 4126:;case 4127:return a==4127?zi(e):Vi(e);default:throw new Error("TypedPropertyValue unrecognized type "+r+" "+a);}}function Zi(e,r){var t=wa(4),a=wa(4);t._W(4,e==80?31:e);switch(e){case 3:a._W(-4,r);break;case 5:a=wa(8);a._W(8,r,"f");break;case 11:a._W(4,r?1:0);break;case 64:a=Li(r);break;case 31:;case 80:a=wa(4+2*(r.length+1)+(r.length%2?0:2));a._W(4,r.length+1);a._W(0,r,"dbcs");while(a.l!=a.length)a._W(1,0);break;default:throw new Error("TypedPropertyValue unrecognized type "+e+" "+r);}return F([t,a])}function Ji(e,r){var t=e.l;var a=e._R(4);var n=e._R(4);var i=[],s=0;var f=0;var o=-1,c={};for(s=0;s!=n;++s){var u=e._R(4);var h=e._R(4);i[s]=[u,h+t]}i.sort(function(e,r){return e[1]-r[1]});var d={};for(s=0;s!=n;++s){if(e.l!==i[s][1]){var v=true;if(s>0&&r)switch(r[i[s-1][0]].t){case 2:if(e.l+2===i[s][1]){e.l+=2;v=false}break;case 80:if(e.l<=i[s][1]){e.l=i[s][1];v=false}break;case 4108:if(e.l<=i[s][1]){e.l=i[s][1];v=false}break;}if((!r||s==0)&&e.l<=i[s][1]){v=false;e.l=i[s][1]}if(v)throw new Error("Read Error: Expected address "+i[s][1]+" at "+e.l+" :"+s)}if(r){if(i[s][0]==0&&i.length>s+1&&i[s][1]==i[s+1][1])continue;var p=r[i[s][0]];d[p.n]=Ki(e,p.t,{raw:true});if(p.p==="version")d[p.n]=String(d[p.n]>>16)+"."+("0000"+String(d[p.n]&65535)).slice(-4);if(p.n=="CodePage")switch(d[p.n]){case 0:d[p.n]=1252;case 874:;case 932:;case 936:;case 949:;case 950:;case 1250:;case 1251:;case 1253:;case 1254:;case 1255:;case 1256:;case 1257:;case 1258:;case 1e4:;case 1200:;case 1201:;case 1252:;case 65e3:;case-536:;case 65001:;case-535:l(f=d[p.n]>>>0&65535);break;default:throw new Error("Unsupported CodePage: "+d[p.n]);}}else{if(i[s][0]===1){f=d.CodePage=Ki(e,Nn);l(f);if(o!==-1){var m=e.l;e.l=i[o][1];c=ji(e,f);e.l=m}}else if(i[s][0]===0){if(f===0){o=s;e.l=i[s+1][1];continue}c=ji(e,f)}else{var b=c[i[s][0]];var g;switch(e[e.l]){case 65:e.l+=4;g=Xi(e);break;case 30:e.l+=4;g=Wi(e,e[e.l-4]).replace(/\u0000+$/,"");break;case 31:e.l+=4;g=Wi(e,e[e.l-4]).replace(/\u0000+$/,"");break;case 3:e.l+=4;g=e._R(4,"i");break;case 19:e.l+=4;g=e._R(4);break;case 5:e.l+=4;g=e._R(8,"f");break;case 11:e.l+=4;g=ss(e,4);break;case 64:e.l+=4;g=Tr(Pi(e));break;default:throw new Error("unparsed value: "+e[e.l]);}d[b]=g}}}e.l=t+a;return d}var qi=["CodePage","Thumbnail","_PID_LINKBASE","_PID_HLINKS","SystemIdentifier","FMTID"];function Qi(e){switch(typeof e){case"boolean":return 11;case"number":return(e|0)==e?3:5;case"string":return 31;case"object":if(e instanceof Date)return 64;break;}return-1}function es(e,r,t){var a=wa(8),n=[],i=[];var s=8,f=0;var l=wa(8),o=wa(8);l._W(4,2);l._W(4,1200);o._W(4,1);i.push(l);n.push(o);s+=8+l.length;if(!r){o=wa(8);o._W(4,0);n.unshift(o);var c=[wa(4)];c[0]._W(4,e.length);for(f=0;f<e.length;++f){var u=e[f][0];l=wa(4+4+2*(u.length+1)+(u.length%2?0:2));l._W(4,f+2);l._W(4,u.length+1);l._W(0,u,"dbcs");while(l.l!=l.length)l._W(1,0);c.push(l)}l=F(c);i.unshift(l);s+=8+l.length;
-}for(f=0;f<e.length;++f){if(r&&!r[e[f][0]])continue;if(qi.indexOf(e[f][0])>-1||yi.indexOf(e[f][0])>-1)continue;if(e[f][1]==null)continue;var h=e[f][1],d=0;if(r){d=+r[e[f][0]];var v=t[d];if(v.p=="version"&&typeof h=="string"){var p=h.split(".");h=(+p[0]<<16)+(+p[1]||0)}l=Zi(v.t,h)}else{var m=Qi(h);if(m==-1){m=31;h=String(h)}l=Zi(m,h)}i.push(l);o=wa(8);o._W(4,!r?2+f:d);n.push(o);s+=8+l.length}var b=8*(i.length+1);for(f=0;f<i.length;++f){n[f]._W(4,b);b+=i[f].length}a._W(4,s);a._W(4,i.length);return F([a].concat(n).concat(i))}function rs(e,r,t){var a=e.content;if(!a)return{};ba(a,0);var n,i,s,f,l=0;a.chk("feff","Byte Order: ");a._R(2);var o=a._R(4);var c=a._R(16);if(c!==er.utils.consts.HEADER_CLSID&&c!==t)throw new Error("Bad PropertySet CLSID "+c);n=a._R(4);if(n!==1&&n!==2)throw new Error("Unrecognized #Sets: "+n);i=a._R(16);f=a._R(4);if(n===1&&f!==a.l)throw new Error("Length mismatch: "+f+" !== "+a.l);else if(n===2){s=a._R(16);l=a._R(4)}var u=Ji(a,r);var h={SystemIdentifier:o};for(var d in u)h[d]=u[d];h.FMTID=i;if(n===1)return h;if(l-a.l==2)a.l+=2;if(a.l!==l)throw new Error("Length mismatch 2: "+a.l+" !== "+l);var v;try{v=Ji(a,null)}catch(p){}for(d in v)h[d]=v[d];h.FMTID=[i,s];return h}function ts(e,r,t,a,n,i){var s=wa(n?68:48);var f=[s];s._W(2,65534);s._W(2,0);s._W(4,842412599);s._W(16,er.utils.consts.HEADER_CLSID,"hex");s._W(4,n?2:1);s._W(16,r,"hex");s._W(4,n?68:48);var l=es(e,t,a);f.push(l);if(n){var o=es(n,null,null);s._W(16,i,"hex");s._W(4,68+l.length);f.push(o)}return F(f)}function as(e,r){e._R(r);return null}function ns(e,r){if(!r)r=wa(e);for(var t=0;t<e;++t)r._W(1,0);return r}function is(e,r,t){var a=[],n=e.l+r;while(e.l<n)a.push(t(e,n-e.l));if(n!==e.l)throw new Error("Slurp error");return a}function ss(e,r){return e._R(r)===1}function fs(e,r){if(!r)r=wa(2);r._W(2,+!!e);return r}function ls(e){return e._R(2,"u")}function os(e,r){if(!r)r=wa(2);r._W(2,e);return r}function cs(e,r){return is(e,r,ls)}function us(e){var r=e._R(1),t=e._R(1);return t===1?r:r===1}function hs(e,r,t){if(!t)t=wa(2);t._W(1,r=="e"?+e:+!!e);t._W(1,r=="e"?1:0);return t}function ds(e,t,a){var n=e._R(a&&a.biff>=12?2:1);var i="sbcs-cont";var s=r;if(a&&a.biff>=8)r=1200;if(!a||a.biff==8){var f=e._R(1);if(f){i="dbcs-cont"}}else if(a.biff==12){i="wstr"}if(a.biff>=2&&a.biff<=5)i="cpstr";var l=n?e._R(n,i):"";r=s;return l}function vs(e){var t=r;r=1200;var a=e._R(2),n=e._R(1);var i=n&4,s=n&8;var f=1+(n&1);var l=0,o;var c={};if(s)l=e._R(2);if(i)o=e._R(4);var u=f==2?"dbcs-cont":"sbcs-cont";var h=a===0?"":e._R(a,u);if(s)e.l+=4*l;if(i)e.l+=o;c.t=h;if(!s){c.raw="<t>"+c.t+"</t>";c.r=c.t}r=t;return c}function ps(e){var r=e.t||"",t=1;var a=wa(3+(t>1?2:0));a._W(2,r.length);a._W(1,(t>1?8:0)|1);if(t>1)a._W(2,t);var n=wa(2*r.length);n._W(2*r.length,r,"utf16le");var i=[a,n];return F(i)}function ms(e,r,t){var a;if(t){if(t.biff>=2&&t.biff<=5)return e._R(r,"cpstr");if(t.biff>=12)return e._R(r,"dbcs-cont")}var n=e._R(1);if(n===0){a=e._R(r,"sbcs-cont")}else{a=e._R(r,"dbcs-cont")}return a}function bs(e,r,t){var a=e._R(t&&t.biff==2?1:2);if(a===0){e.l++;return""}return ms(e,a,t)}function gs(e,r,t){if(t.biff>5)return bs(e,r,t);var a=e._R(1);if(a===0){e.l++;return""}return e._R(a,t.biff<=4||!e.lens?"cpstr":"sbcs-cont")}function ws(e,r,t){if(!t)t=wa(3+2*e.length);t._W(2,e.length);t._W(1,1);t._W(31,e,"utf16le");return t}function ks(e){var r=e._R(1);e.l++;var t=e._R(2);e.l+=2;return[r,t]}function Ts(e){var r=e._R(4),t=e.l;var a=false;if(r>24){e.l+=r-24;if(e._R(16)==="795881f43b1d7f48af2c825dc4852763")a=true;e.l=t}var n=e._R((a?r-24:r)>>1,"utf16le").replace(P,"");if(a)e.l+=24;return n}function Es(e){var r=e._R(2);var t="";while(r-- >0)t+="../";var a=e._R(0,"lpstr-ansi");e.l+=2;if(e._R(2)!=57005)throw new Error("Bad FileMoniker");var n=e._R(4);if(n===0)return t+a.replace(/\\/g,"/");var i=e._R(4);if(e._R(2)!=3)throw new Error("Bad FileMoniker");var s=e._R(i>>1,"utf16le").replace(P,"");return t+s}function ys(e,r){var t=e._R(16);r-=16;switch(t){case"e0c9ea79f9bace118c8200aa004ba90b":return Ts(e,r);case"0303000000000000c000000000000046":return Es(e,r);default:throw new Error("Unsupported Moniker "+t);}}function Ss(e){var r=e._R(4);var t=r>0?e._R(r,"utf16le").replace(P,""):"";return t}function _s(e,r){if(!r)r=wa(6+e.length*2);r._W(4,1+e.length);for(var t=0;t<e.length;++t)r._W(2,e.charCodeAt(t));r._W(2,0);return r}function As(e,r){var t=e.l+r;var a=e._R(4);if(a!==2)throw new Error("Unrecognized streamVersion: "+a);var n=e._R(2);e.l+=2;var i,s,f,l,o="",c,u;if(n&16)i=Ss(e,t-e.l);if(n&128)s=Ss(e,t-e.l);if((n&257)===257)f=Ss(e,t-e.l);if((n&257)===1)l=ys(e,t-e.l);if(n&8)o=Ss(e,t-e.l);if(n&32)c=e._R(16);if(n&64)u=Pi(e);e.l=t;var h=s||f||l||"";if(h&&o)h+="#"+o;if(!h)h="#"+o;if(n&2&&h.charAt(0)=="/"&&h.charAt(1)!="/")h="file://"+h;var d={Target:h};if(c)d.guid=c;if(u)d.time=u;if(i)d.Tooltip=i;return d}function xs(e){var r=wa(512),t=0;var a=e.Target;if(a.slice(0,7)=="file://")a=a.slice(7);var n=a.indexOf("#");var i=n>-1?31:23;switch(a.charAt(0)){case"#":i=28;break;case".":i&=~2;break;}r._W(4,2);r._W(4,i);var s=[8,6815827,6619237,4849780,83];for(t=0;t<s.length;++t)r._W(4,s[t]);if(i==28){a=a.slice(1);_s(a,r)}else if(i&2){s="e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b".split(" ");for(t=0;t<s.length;++t)r._W(1,parseInt(s[t],16));var f=n>-1?a.slice(0,n):a;r._W(4,2*(f.length+1));for(t=0;t<f.length;++t)r._W(2,f.charCodeAt(t));r._W(2,0);if(i&8)_s(n>-1?a.slice(n+1):"",r)}else{s="03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46".split(" ");for(t=0;t<s.length;++t)r._W(1,parseInt(s[t],16));var l=0;while(a.slice(l*3,l*3+3)=="../"||a.slice(l*3,l*3+3)=="..\\")++l;r._W(2,l);r._W(4,a.length-3*l+1);for(t=0;t<a.length-3*l;++t)r._W(1,a.charCodeAt(t+3*l)&255);r._W(1,0);r._W(2,65535);r._W(2,57005);for(t=0;t<6;++t)r._W(4,0)}return r.slice(0,r.l)}function Cs(e){var r=e._R(1),t=e._R(1),a=e._R(1),n=e._R(1);return[r,t,a,n]}function Os(e,r){var t=Cs(e,r);t[3]=0;return t}function Rs(e){var r=e._R(2);var t=e._R(2);var a=e._R(2);return{r:r,c:t,ixfe:a}}function Ns(e,r,t,a){if(!a)a=wa(6);a._W(2,e);a._W(2,r);a._W(2,t||0);return a}function Is(e){var r=e._R(2);var t=e._R(2);e.l+=8;return{type:r,flags:t}}function Fs(e,r,t){return r===0?"":gs(e,r,t)}function Ds(e,r,t){var a=t.biff>8?4:2;var n=e._R(a),i=e._R(a,"i"),s=e._R(a,"i");return[n,i,s]}function Ps(e){var r=e._R(2);var t=mn(e);return[r,t]}function Ls(e,r,t){e.l+=4;r-=4;var a=e.l+r;var n=ds(e,r,t);var i=e._R(2);a-=e.l;if(i!==a)throw new Error("Malformed AddinUdf: padding = "+a+" != "+i);e.l+=i;return n}function Ms(e){var r=e._R(2);var t=e._R(2);var a=e._R(2);var n=e._R(2);return{s:{c:a,r:r},e:{c:n,r:t}}}function Us(e,r){if(!r)r=wa(8);r._W(2,e.s.r);r._W(2,e.e.r);r._W(2,e.s.c);r._W(2,e.e.c);return r}function Bs(e){var r=e._R(2);var t=e._R(2);var a=e._R(1);var n=e._R(1);return{s:{c:a,r:r},e:{c:n,r:t}}}var Ws=Bs;function Hs(e){e.l+=4;var r=e._R(2);var t=e._R(2);var a=e._R(2);e.l+=12;return[t,r,a]}function zs(e){var r={};e.l+=4;e.l+=16;r.fSharedNote=e._R(2);e.l+=4;return r}function Vs(e){var r={};e.l+=4;e.cf=e._R(2);return r}function Gs(e){e.l+=2;e.l+=e._R(2)}var $s={0:Gs,4:Gs,5:Gs,6:Gs,7:Vs,8:Gs,9:Gs,10:Gs,11:Gs,12:Gs,13:zs,14:Gs,15:Gs,16:Gs,17:Gs,18:Gs,19:Gs,20:Gs,21:Hs};function js(e,r){var t=e.l+r;var a=[];while(e.l<t){var n=e._R(2);e.l-=2;try{a.push($s[n](e,t-e.l))}catch(i){e.l=t;return a}}if(e.l!=t)e.l=t;return a}function Xs(e,r){var t={BIFFVer:0,dt:0};t.BIFFVer=e._R(2);r-=2;if(r>=2){t.dt=e._R(2);e.l-=2}switch(t.BIFFVer){case 1536:;case 1280:;case 1024:;case 768:;case 512:;case 2:;case 7:break;default:if(r>6)throw new Error("Unexpected BIFF Ver "+t.BIFFVer);}e._R(r);return t}function Ys(e,r,t){var a=1536,n=16;switch(t.bookType){case"biff8":break;case"biff5":a=1280;n=8;break;case"biff4":a=4;n=6;break;case"biff3":a=3;n=6;break;case"biff2":a=2;n=4;break;case"xla":break;default:throw new Error("unsupported BIFF version");}var i=wa(n);i._W(2,a);i._W(2,r);if(n>4)i._W(2,29282);if(n>6)i._W(2,1997);if(n>8){i._W(2,49161);i._W(2,1);i._W(2,1798);i._W(2,0)}return i}function Ks(e,r){if(r===0)return 1200;if(e._R(2)!==1200){}return 1200}function Zs(e,r,t){if(t.enc){e.l+=r;return""}var a=e.l;var n=gs(e,0,t);e._R(r+a-e.l);return n}function Js(e,r){var t=!r||r.biff==8;var a=wa(t?112:54);a._W(r.biff==8?2:1,7);if(t)a._W(1,0);a._W(4,859007059);a._W(4,5458548|(t?0:536870912));while(a.l<a.length)a._W(1,t?0:32);return a}function qs(e,r,t){var a=t&&t.biff==8||r==2?e._R(2):(e.l+=r,0);return{fDialog:a&16,fBelow:a&64,fRight:a&128}}function Qs(e,r,t){var a=e._R(4);var n=e._R(1)&3;var i=e._R(1);switch(i){case 0:i="Worksheet";break;case 1:i="Macrosheet";break;case 2:i="Chartsheet";break;case 6:i="VBAModule";break;}var s=ds(e,0,t);if(s.length===0)s="Sheet1";return{pos:a,hs:n,dt:i,name:s}}function ef(e,r){var t=!r||r.biff>=8?2:1;var a=wa(8+t*e.name.length);a._W(4,e.pos);a._W(1,e.hs||0);a._W(1,e.dt);a._W(1,e.name.length);if(r.biff>=8)a._W(1,1);a._W(t*e.name.length,e.name,r.biff<8?"sbcs":"utf16le");var n=a.slice(0,a.l);n.l=a.l;return n}function rf(e,r){var t=e.l+r;var a=e._R(4);var n=e._R(4);var i=[];for(var s=0;s!=n&&e.l<t;++s){i.push(vs(e))}i.Count=a;i.Unique=n;return i}function tf(e,r){var t=wa(8);t._W(4,e.Count);t._W(4,e.Unique);var a=[];for(var n=0;n<e.length;++n)a[n]=ps(e[n],r);var i=F([t].concat(a));i.parts=[t.length].concat(a.map(function(e){return e.length}));return i}function af(e,r){var t={};t.dsst=e._R(2);e.l+=r-2;return t}function nf(e){var r={};r.r=e._R(2);r.c=e._R(2);r.cnt=e._R(2)-r.c;var t=e._R(2);e.l+=4;var a=e._R(1);e.l+=3;if(a&7)r.level=a&7;if(a&32)r.hidden=true;if(a&64)r.hpt=t/20;return r}function sf(e){var r=Is(e);if(r.type!=2211)throw new Error("Invalid Future Record "+r.type);var t=e._R(4);return t!==0}function ff(e){e._R(2);return e._R(4)}function lf(e,r,t){var a=0;if(!(t&&t.biff==2)){a=e._R(2)}var n=e._R(2);if(t&&t.biff==2){a=1-(n>>15);n&=32767}var i={Unsynced:a&1,DyZero:(a&2)>>1,ExAsc:(a&4)>>2,ExDsc:(a&8)>>3};return[i,n]}function of(e){var r=e._R(2),t=e._R(2),a=e._R(2),n=e._R(2);var i=e._R(2),s=e._R(2),f=e._R(2);var l=e._R(2),o=e._R(2);return{Pos:[r,t],Dim:[a,n],Flags:i,CurTab:s,FirstTab:f,Selected:l,TabRatio:o}}function cf(){var e=wa(18);e._W(2,0);e._W(2,0);e._W(2,29280);e._W(2,17600);e._W(2,56);e._W(2,0);e._W(2,0);e._W(2,1);e._W(2,500);return e}function uf(e,r,t){if(t&&t.biff>=2&&t.biff<5)return{};var a=e._R(2);return{RTL:a&64}}function hf(e){var r=wa(18),t=1718;if(e&&e.RTL)t|=64;r._W(2,t);r._W(4,0);r._W(4,64);r._W(4,0);r._W(4,0);return r}function df(){}function vf(e,r,t){var a={dyHeight:e._R(2),fl:e._R(2)};switch(t&&t.biff||8){case 2:break;case 3:;case 4:e.l+=2;break;default:e.l+=10;break;}a.name=ds(e,0,t);return a}function pf(e,r){var t=e.name||"Arial";var a=r&&r.biff==5,n=a?15+t.length:16+2*t.length;var i=wa(n);i._W(2,(e.sz||12)*20);i._W(4,0);i._W(2,400);i._W(4,0);i._W(2,0);i._W(1,t.length);if(!a)i._W(1,1);i._W((a?1:2)*t.length,t,a?"sbcs":"utf16le");return i}function mf(e){var r=Rs(e);r.isst=e._R(4);return r}function bf(e,r,t,a){var n=wa(10);Ns(e,r,a,n);n._W(4,t);return n}function gf(e,r,t){if(t.biffguess&&t.biff==2)t.biff=5;var a=e.l+r;var n=Rs(e,6);if(t.biff==2)e.l++;var i=bs(e,a-e.l,t);n.val=i;return n}function wf(e,r,t,a,n){var i=!n||n.biff==8;var s=wa(6+2+ +i+(1+i)*t.length);Ns(e,r,a,s);s._W(2,t.length);if(i)s._W(1,1);s._W((1+i)*t.length,t,i?"utf16le":"sbcs");return s}function kf(e,r,t){var a=e._R(2);var n=gs(e,0,t);return[a,n]}function Tf(e,r,t,a){var n=t&&t.biff==5;if(!a)a=wa(n?3+r.length:5+2*r.length);a._W(2,e);a._W(n?1:2,r.length);if(!n)a._W(1,1);a._W((n?1:2)*r.length,r,n?"sbcs":"utf16le");var i=a.length>a.l?a.slice(0,a.l):a;if(i.l==null)i.l=i.length;return i}var Ef=gs;function yf(e,r,t){var a=e.l+r;var n=t.biff==8||!t.biff?4:2;var i=e._R(n),s=e._R(n);var f=e._R(2),l=e._R(2);e.l=a;return{s:{r:i,c:f},e:{r:s,c:l}}}function Sf(e,r){var t=r.biff==8||!r.biff?4:2;var a=wa(2*t+6);a._W(t,e.s.r);a._W(t,e.e.r+1);a._W(2,e.s.c);a._W(2,e.e.c+1);a._W(2,0);return a}function _f(e){var r=e._R(2),t=e._R(2);var a=Ps(e);return{r:r,c:t,ixfe:a[0],rknum:a[1]}}function Af(e,r){var t=e.l+r-2;var a=e._R(2),n=e._R(2);var i=[];while(e.l<t)i.push(Ps(e));if(e.l!==t)throw new Error("MulRK read error");var s=e._R(2);if(i.length!=s-n+1)throw new Error("MulRK length mismatch");return{r:a,c:n,C:s,rkrec:i}}function xf(e,r){var t=e.l+r-2;var a=e._R(2),n=e._R(2);var i=[];while(e.l<t)i.push(e._R(2));if(e.l!==t)throw new Error("MulBlank read error");var s=e._R(2);if(i.length!=s-n+1)throw new Error("MulBlank length mismatch");return{r:a,c:n,C:s,ixfe:i}}function Cf(e,r,t,a){var n={};var i=e._R(4),s=e._R(4);var f=e._R(4),l=e._R(2);n.patternType=Xn[f>>26];if(!a.cellStyles)return n;n.alc=i&7;n.fWrap=i>>3&1;n.alcV=i>>4&7;n.fJustLast=i>>7&1;n.trot=i>>8&255;n.cIndent=i>>16&15;n.fShrinkToFit=i>>20&1;n.iReadOrder=i>>22&2;n.fAtrNum=i>>26&1;n.fAtrFnt=i>>27&1;n.fAtrAlc=i>>28&1;n.fAtrBdr=i>>29&1;n.fAtrPat=i>>30&1;n.fAtrProt=i>>31&1;n.dgLeft=s&15;n.dgRight=s>>4&15;n.dgTop=s>>8&15;n.dgBottom=s>>12&15;n.icvLeft=s>>16&127;n.icvRight=s>>23&127;n.grbitDiag=s>>30&3;n.icvTop=f&127;n.icvBottom=f>>7&127;n.icvDiag=f>>14&127;n.dgDiag=f>>21&15;n.icvFore=l&127;n.icvBack=l>>7&127;n.fsxButton=l>>14&1;return n}function Of(e,r,t){var a={};a.ifnt=e._R(2);a.numFmtId=e._R(2);a.flags=e._R(2);a.fStyle=a.flags>>2&1;r-=6;a.data=Cf(e,r,a.fStyle,t);return a}function Rf(e,r,t,a){var n=t&&t.biff==5;if(!a)a=wa(n?16:20);a._W(2,0);if(e.style){a._W(2,e.numFmtId||0);a._W(2,65524)}else{a._W(2,e.numFmtId||0);a._W(2,r<<4)}var i=0;if(e.numFmtId>0&&n)i|=1024;a._W(4,i);a._W(4,0);if(!n)a._W(4,0);a._W(2,0);return a}function Nf(e){e.l+=4;var r=[e._R(2),e._R(2)];if(r[0]!==0)r[0]--;if(r[1]!==0)r[1]--;if(r[0]>7||r[1]>7)throw new Error("Bad Gutters: "+r.join("|"));return r}function If(e){var r=wa(8);r._W(4,0);r._W(2,e[0]?e[0]+1:0);r._W(2,e[1]?e[1]+1:0);return r}function Ff(e,r,t){var a=Rs(e,6);if(t.biff==2||r==9)++e.l;var n=us(e,2);a.val=n;a.t=n===true||n===false?"b":"e";return a}function Df(e,r,t,a,n,i){var s=wa(8);Ns(e,r,a,s);hs(t,i,s);return s}function Pf(e,r,t){if(t.biffguess&&t.biff==2)t.biff=5;var a=Rs(e,6);var n=En(e,8);a.val=n;return a}function Lf(e,r,t,a){var n=wa(14);Ns(e,r,a,n);yn(t,n);return n}var Mf=Fs;function Uf(e,r,t){var a=e.l+r;var n=e._R(2);var i=e._R(2);t.sbcch=i;if(i==1025||i==14849)return[i,n];if(i<1||i>255)throw new Error("Unexpected SupBook type: "+i);var s=ms(e,i);var f=[];while(a>e.l)f.push(bs(e));return[i,n,s,f]}function Bf(e,r,t){var a=e._R(2);var n;var i={fBuiltIn:a&1,fWantAdvise:a>>>1&1,fWantPict:a>>>2&1,fOle:a>>>3&1,fOleLink:a>>>4&1,cf:a>>>5&1023,fIcon:a>>>15&1};if(t.sbcch===14849)n=Ls(e,r-2,t);i.body=n||e._R(r-2);if(typeof n==="string")i.Name=n;return i}function Wf(e,r,t){var a=e.l+r;var n=e._R(2);var i=e._R(1);var s=e._R(1);var f=e._R(t&&t.biff==2?1:2);var l=0;if(!t||t.biff>=5){if(t.biff!=5)e.l+=2;l=e._R(2);if(t.biff==5)e.l+=2;e.l+=4}var o=ms(e,s,t);if(n&32)o=Qn[o.charCodeAt(0)];var c=a-e.l;if(t&&t.biff==2)--c;var u=a==e.l||f===0||!(c>0)?[]:kd(e,c,t,f);return{chKey:i,Name:o,itab:l,rgce:u}}function Hf(e,r,t){if(t.biff<8)return zf(e,r,t);var a=[],n=e.l+r,i=e._R(t.biff>8?4:2);while(i--!==0)a.push(Ds(e,t.biff>8?12:6,t));if(e.l!=n)throw new Error("Bad ExternSheet: "+e.l+" != "+n);return a}function zf(e,r,t){if(e[e.l+1]==3)e[e.l]++;var a=ds(e,r,t);return a.charCodeAt(0)==3?a.slice(1):a}function Vf(e,r,t){if(t.biff<8){e.l+=r;return}var a=e._R(2);var n=e._R(2);var i=ms(e,a,t);var s=ms(e,n,t);return[i,s]}function Gf(e,r,t){var a=Bs(e,6);e.l++;var n=e._R(1);r-=8;return[Td(e,r,t),n,a]}function $f(e,r,t){var a=Ws(e,6);switch(t.biff){case 2:e.l++;r-=7;break;case 3:;case 4:e.l+=2;r-=8;break;default:e.l+=6;r-=12;}return[a,gd(e,r,t,a)]}function jf(e){var r=e._R(4)!==0;var t=e._R(4)!==0;var a=e._R(4);return[r,t,a]}function Xf(e,r,t){if(t.biff<8)return;var a=e._R(2),n=e._R(2);var i=e._R(2),s=e._R(2);var f=gs(e,0,t);if(t.biff<8)e._R(1);return[{r:a,c:n},f,s,i]}function Yf(e,r,t){return Xf(e,r,t)}function Kf(e,r){var t=[];var a=e._R(2);while(a--)t.push(Ms(e,r));return t}function Zf(e){var r=wa(2+e.length*8);r._W(2,e.length);for(var t=0;t<e.length;++t)Us(e[t],r);return r}function Jf(e,r,t){if(t&&t.biff<8)return Qf(e,r,t);var a=Hs(e,22);var n=js(e,r-22,a[1]);return{cmo:a,ft:n}}var qf={8:function(e,r){var t=e.l+r;e.l+=10;var a=e._R(2);e.l+=4;e.l+=2;e.l+=2;e.l+=2;e.l+=4;var n=e._R(1);e.l+=n;e.l=t;return{fmt:a}}};function Qf(e,r,t){e.l+=4;var a=e._R(2);var n=e._R(2);var i=e._R(2);e.l+=2;e.l+=2;e.l+=2;e.l+=2;e.l+=2;e.l+=2;e.l+=2;e.l+=2;e.l+=2;e.l+=6;r-=36;var s=[];s.push((qf[a]||ga)(e,r,t));return{cmo:[n,a,i],ft:s}}function el(e,r,t){var a=e.l;var n="";try{e.l+=4;var i=(t.lastobj||{cmo:[0,0]}).cmo[1];var s;if([0,5,7,11,12,14].indexOf(i)==-1)e.l+=6;else s=ks(e,6,t);var f=e._R(2);e._R(2);ls(e,2);var l=e._R(2);e.l+=l;for(var o=1;o<e.lens.length-1;++o){if(e.l-a!=e.lens[o])throw new Error("TxO: bad continue record");var c=e[e.l];var u=ms(e,e.lens[o+1]-e.lens[o]-1);n+=u;if(n.length>=(c?f:2*f))break}if(n.length!==f&&n.length!==f*2){throw new Error("cchText: "+f+" != "+n.length)}e.l=a+r;return{t:n}}catch(h){e.l=a+r;return{t:n}}}function rl(e,r){var t=Ms(e,8);e.l+=16;var a=As(e,r-24);return[t,a]}function tl(e){var r=wa(24);var t=La(e[0]);r._W(2,t.r);r._W(2,t.r);r._W(2,t.c);r._W(2,t.c);var a="d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b".split(" ");for(var n=0;n<16;++n)r._W(1,parseInt(a[n],16));return F([r,xs(e[1])])}function al(e,r){e._R(2);var t=Ms(e,8);var a=e._R((r-10)/2,"dbcs-cont");a=a.replace(P,"");return[t,a]}function nl(e){var r=e[1].Tooltip;var t=wa(10+2*(r.length+1));t._W(2,2048);var a=La(e[0]);t._W(2,a.r);t._W(2,a.r);t._W(2,a.c);t._W(2,a.c);for(var n=0;n<r.length;++n)t._W(2,r.charCodeAt(n));t._W(2,0);return t}function il(e){var r=[0,0],t;t=e._R(2);r[0]=jn[t]||t;t=e._R(2);r[1]=jn[t]||t;return r}function sl(e){if(!e)e=wa(4);e._W(2,1);e._W(2,1);return e}function fl(e){var r=e._R(2);var t=[];while(r-- >0)t.push(Os(e,8));return t}function ll(e){var r=e._R(2);var t=[];while(r-- >0)t.push(Os(e,8));return t}function ol(e){e.l+=2;var r={cxfs:0,crc:0};r.cxfs=e._R(2);r.crc=e._R(4);return r}function cl(e,r,t){if(!t.cellStyles)return ga(e,r);var a=t&&t.biff>=12?4:2;var n=e._R(a);var i=e._R(a);var s=e._R(a);var f=e._R(a);var l=e._R(2);if(a==2)e.l+=2;var o={s:n,e:i,w:s,ixfe:f,flags:l};if(t.biff>=5||!t.biff)o.level=l>>8&7;return o}function ul(e,r){var t=wa(12);t._W(2,r);t._W(2,r);t._W(2,e.width*256);t._W(2,0);var a=0;if(e.hidden)a|=1;t._W(1,a);a=e.level||0;t._W(1,a);t._W(2,0);return t}function hl(e,r){var t={};if(r<32)return t;e.l+=16;t.header=En(e,8);t.footer=En(e,8);e.l+=2;return t}function dl(e,r,t){var a={area:false};if(t.biff!=5){e.l+=r;return a}var n=e._R(1);e.l+=3;if(n&16)a.area=true;return a}function vl(e){var r=wa(2*e);for(var t=0;t<e;++t)r._W(2,t+1);return r}var pl=Rs;var ml=cs;var bl=bs;function gl(e){var r=e._R(2);var t=e._R(2);var a=e._R(4);var n={fmt:r,env:t,len:a,data:e.slice(e.l,e.l+a)};e.l+=a;return n}function wl(e,r,t){if(t.biffguess&&t.biff==5)t.biff=2;var a=Rs(e,6);++e.l;var n=gs(e,r-7,t);a.t="str";a.val=n;return a}function kl(e){var r=Rs(e,6);++e.l;var t=En(e,8);r.t="n";r.val=t;return r}function Tl(e,r,t){var a=wa(15);Mb(a,e,r);a._W(8,t,"f");return a}function El(e){var r=Rs(e,6);++e.l;var t=e._R(2);r.t="n";r.val=t;return r}function yl(e,r,t){var a=wa(9);Mb(a,e,r);a._W(2,t);return a}function Sl(e){var r=e._R(1);if(r===0){e.l++;return""}return e._R(r,"sbcs-cont")}function _l(e,r){e.l+=6;e.l+=2;e.l+=1;e.l+=3;e.l+=1;e.l+=r-13}function Al(e,r,t){var a=e.l+r;var n=Rs(e,6);var i=e._R(2);var s=ms(e,i,t);e.l=a;n.t="str";n.val=s;return n}var xl=[2,3,48,49,131,139,140,245];var Cl=function(){var e={1:437,2:850,3:1252,4:1e4,100:852,101:866,102:865,103:861,104:895,105:620,106:737,107:857,120:950,121:949,122:936,123:932,124:874,125:1255,126:1256,150:10007,151:10029,152:10006,200:1250,201:1251,202:1254,203:1253,0:20127,8:865,9:437,10:850,11:437,13:437,14:850,15:437,16:850,17:437,18:850,19:932,20:850,21:437,22:850,23:865,24:437,25:437,26:850,27:437,28:863,29:850,31:852,34:852,35:852,36:860,37:850,38:866,55:850,64:852,77:936,78:949,79:950,80:874,87:1252,88:1252,89:1252,108:863,134:737,135:852,136:857,204:1257,255:16969};var n=lr({1:437,2:850,3:1252,4:1e4,100:852,101:866,102:865,103:861,104:895,105:620,106:737,107:857,120:950,121:949,122:936,123:932,124:874,125:1255,126:1256,150:10007,151:10029,152:10006,200:1250,201:1251,202:1254,203:1253,0:20127});function i(r,t){var n=[];var i=A(1);switch(t.type){case"base64":i=C(E(r));break;case"binary":i=C(r);break;case"buffer":;case"array":i=r;break;}ba(i,0);var s=i._R(1);var f=!!(s&136);var l=false,o=false;switch(s){case 2:break;case 3:break;case 48:l=true;f=true;break;case 49:l=true;f=true;break;case 131:break;case 139:break;case 140:o=true;break;case 245:break;default:throw new Error("DBF Unsupported Version: "+s.toString(16));}var c=0,u=521;if(s==2)c=i._R(2);i.l+=3;if(s!=2)c=i._R(4);if(c>1048576)c=1e6;if(s!=2)u=i._R(2);var h=i._R(2);var d=t.codepage||1252;if(s!=2){i.l+=16;i._R(1);if(i[i.l]!==0)d=e[i[i.l]];i.l+=1;i.l+=2}if(o)i.l+=36;var v=[],p={};var m=Math.min(i.length,s==2?521:u-10-(l?264:0));var b=o?32:11;while(i.l<m&&i[i.l]!=13){p={};p.name=(typeof a!=="undefined"?a.utils.decode(d,i.slice(i.l,i.l+b)):R(i.slice(i.l,i.l+b))).replace(/[\u0000\r\n].*$/g,"");i.l+=b;p.type=String.fromCharCode(i._R(1));if(s!=2&&!o)p.offset=i._R(4);p.len=i._R(1);if(s==2)p.offset=i._R(2);p.dec=i._R(1);if(p.name.length)v.push(p);if(s!=2)i.l+=o?13:14;switch(p.type){case"B":if((!l||p.len!=8)&&t.WTF)console.log("Skipping "+p.name+":"+p.type);break;case"G":;case"P":if(t.WTF)console.log("Skipping "+p.name+":"+p.type);break;case"+":;case"0":;case"@":;case"C":;case"D":;case"F":;case"I":;case"L":;case"M":;case"N":;case"O":;case"T":;case"Y":break;default:throw new Error("Unknown Field Type: "+p.type);}}if(i[i.l]!==13)i.l=u-1;if(i._R(1)!==13)throw new Error("DBF Terminator not found "+i.l+" "+i[i.l]);i.l=u;var g=0,w=0;n[0]=[];for(w=0;w!=v.length;++w)n[0][w]=v[w].name;while(c-- >0){if(i[i.l]===42){i.l+=h;continue}++i.l;n[++g]=[];w=0;for(w=0;w!=v.length;++w){var k=i.slice(i.l,i.l+v[w].len);i.l+=v[w].len;ba(k,0);var T=typeof a!=="undefined"?a.utils.decode(d,k):R(k);switch(v[w].type){case"C":if(T.trim().length)n[g][w]=T.replace(/\s+$/,"");break;case"D":if(T.length===8)n[g][w]=new Date(+T.slice(0,4),+T.slice(4,6)-1,+T.slice(6,8));else n[g][w]=T;break;case"F":n[g][w]=parseFloat(T.trim());break;case"+":;case"I":n[g][w]=o?k._R(-4,"i")^2147483648:k._R(4,"i");break;case"L":switch(T.trim().toUpperCase()){case"Y":;case"T":n[g][w]=true;break;case"N":;case"F":n[g][w]=false;break;case"":;case"?":break;default:throw new Error("DBF Unrecognized L:|"+T+"|");}break;case"M":if(!f)throw new Error("DBF Unexpected MEMO for type "+s.toString(16));n[g][w]="##MEMO##"+(o?parseInt(T.trim(),10):k._R(4));break;case"N":T=T.replace(/\u0000/g,"").trim();if(T&&T!=".")n[g][w]=+T||0;break;case"@":n[g][w]=new Date(k._R(-8,"f")-621356832e5);break;case"T":n[g][w]=new Date((k._R(4)-2440588)*864e5+k._R(4));break;case"Y":n[g][w]=k._R(4,"i")/1e4+k._R(4,"i")/1e4*Math.pow(2,32);break;case"O":n[g][w]=-k._R(-8,"f");break;case"B":if(l&&v[w].len==8){n[g][w]=k._R(8,"f");break};case"G":;case"P":k.l+=v[w].len;break;case"0":if(v[w].name==="_NullFlags")break;default:throw new Error("DBF Unsupported data type "+v[w].type);}}}if(s!=2)if(i.l<i.length&&i[i.l++]!=26)throw new Error("DBF EOF Marker missing "+(i.l-1)+" of "+i.length+" "+i[i.l-1].toString(16));if(t&&t.sheetRows)n=n.slice(0,t.sheetRows);t.DBF=v;return n}function s(e,r){var t=r||{};if(!t.dateNF)t.dateNF="yyyymmdd";var a=Xa(i(e,t),t);a["!cols"]=t.DBF.map(function(e){return{wch:e.len,DBF:e}});delete t.DBF;return a}function f(e,r){try{var t=$a(s(e,r),r);t.bookType="dbf";return t}catch(a){if(r&&r.WTF)throw a}return{SheetNames:[],Sheets:{}}}var o={B:8,C:250,L:1,D:8,"?":0,"":0};function c(i,s){var f=s||{};var c=r;if(+f.codepage>=0)l(+f.codepage);if(f.type=="string")throw new Error("Cannot write DBF to JS string");var u=Ta();var h=ek(i,{header:1,raw:true,cellDates:true});var d=h[0],v=h.slice(1),p=i["!cols"]||[];var m=0,b=0,g=0,w=1;for(m=0;m<d.length;++m){if(((p[m]||{}).DBF||{}).name){d[m]=p[m].DBF.name;++g;continue}if(d[m]==null)continue;++g;if(typeof d[m]==="number")d[m]=d[m].toString(10);if(typeof d[m]!=="string")throw new Error("DBF Invalid column name "+d[m]+" |"+typeof d[m]+"|");if(d.indexOf(d[m])!==m)for(b=0;b<1024;++b)if(d.indexOf(d[m]+"_"+b)==-1){d[m]+="_"+b;break}}var k=za(i["!ref"]);var T=[];var E=[];var y=[];for(m=0;m<=k.e.c-k.s.c;++m){var S="",_="",A=0;var x=[];for(b=0;b<v.length;++b){if(v[b][m]!=null)x.push(v[b][m])}if(x.length==0||d[m]==null){T[m]="?";continue}for(b=0;b<x.length;++b){switch(typeof x[b]){case"number":_="B";break;case"string":_="C";break;case"boolean":_="L";break;case"object":_=x[b]instanceof Date?"D":"C";break;default:_="C";}A=Math.max(A,(typeof a!=="undefined"&&typeof x[b]=="string"?a.utils.encode(t,x[b]):String(x[b])).length);S=S&&S!=_?"C":_}if(A>250)A=250;_=((p[m]||{}).DBF||{}).type;if(_=="C"){if(p[m].DBF.len>A)A=p[m].DBF.len}if(S=="B"&&_=="N"){S="N";y[m]=p[m].DBF.dec;A=p[m].DBF.len}E[m]=S=="C"||_=="N"?A:o[S]||0;w+=E[m];T[m]=S}var C=u.next(32);C._W(4,318902576);C._W(4,v.length);C._W(2,296+32*g);C._W(2,w);for(m=0;m<4;++m)C._W(4,0);var O=+n[r]||3;C._W(4,0|O<<8);if(e[O]!=+f.codepage){console.error("DBF Unsupported codepage "+r+", using 1252");r=1252}for(m=0,b=0;m<d.length;++m){if(d[m]==null)continue;var R=u.next(32);var N=(d[m].slice(-10)+"\0\0\0\0\0\0\0\0\0\0\0").slice(0,11);R._W(1,N,"sbcs");R._W(1,T[m]=="?"?"C":T[m],"sbcs");R._W(4,b);R._W(1,E[m]||o[T[m]]||0);R._W(1,y[m]||0);R._W(1,2);R._W(4,0);R._W(1,0);R._W(4,0);R._W(4,0);b+=E[m]||o[T[m]]||0}var I=u.next(264);I._W(4,13);for(m=0;m<65;++m)I._W(4,0);for(m=0;m<v.length;++m){var F=u.next(w);F._W(1,0);for(b=0;b<d.length;++b){if(d[b]==null)continue;switch(T[b]){case"L":F._W(1,v[m][b]==null?63:v[m][b]?84:70);break;case"B":F._W(8,v[m][b]||0,"f");break;case"N":var D="0";if(typeof v[m][b]=="number")D=v[m][b].toFixed(y[b]||0);for(g=0;g<E[b]-D.length;++g)F._W(1,32);F._W(1,D,"sbcs");break;case"D":if(!v[m][b])F._W(8,"00000000","sbcs");else{F._W(4,("0000"+v[m][b].getFullYear()).slice(-4),"sbcs");F._W(2,("00"+(v[m][b].getMonth()+1)).slice(-2),"sbcs");F._W(2,("00"+v[m][b].getDate()).slice(-2),"sbcs")}break;case"C":var P=F.l;var L=String(v[m][b]!=null?v[m][b]:"").slice(0,E[b]);F._W(1,L,"cpstr");P+=E[b]-F.l;for(g=0;g<P;++g)F._W(1,32);break;}}}r=c;u.next(1)._W(1,26);return u.end()}return{to_workbook:f,to_sheet:s,from_sheet:c}}();var Ol=function(){var e={AA:"Ã",BA:"Ã",CA:"Ã",DA:195,HA:"Ã",JA:197,AE:"Ã",BE:"Ã",CE:"Ã",HE:"Ã",AI:"Ã",BI:"Ã",CI:"Ã",HI:"Ã",AO:"Ã",BO:"Ã",CO:"Ã",DO:213,HO:"Ã",AU:"Ã",BU:"Ã",CU:"Ã",HU:"Ã",Aa:"Ã ",Ba:"Ã¡",Ca:"Ã¢",Da:227,Ha:"Ã¤",Ja:229,Ae:"Ã¨",Be:"Ã©",Ce:"Ãª",He:"Ã«",Ai:"Ã¬",Bi:"Ã­",Ci:"Ã®",Hi:"Ã¯",Ao:"Ã²",Bo:"Ã³",Co:"Ã´",Do:245,Ho:"Ã¶",Au:"Ã¹",Bu:"Ãº",Cu:"Ã»",Hu:"Ã¼",KC:"Ã",Kc:"Ã§",q:"Ã¦",z:"Å",a:"Ã",j:"Å",DN:209,Dn:241,Hy:255,S:169,c:170,R:174,"B ":180,0:176,1:177,2:178,3:179,5:181,6:182,7:183,Q:185,k:186,b:208,i:216,l:222,s:240,y:248,"!":161,'"':162,"#":163,"(":164,"%":165,"'":167,"H ":168,"+":171,";":187,"<":188,"=":189,">":190,"?":191,"{":223};var r=new RegExp("N("+sr(e).join("|").replace(/\|\|\|/,"|\\||").replace(/([?()+])/g,"\\$1")+"|\\|)","gm");var t=function(r,t){var a=e[t];return typeof a=="number"?p(a):a};var n=function(e,r,t){var a=r.charCodeAt(0)-32<<4|t.charCodeAt(0)-48;return a==59?e:p(a)};e["|"]=254;function i(e,r){switch(r.type){case"base64":return s(E(e),r);case"binary":return s(e,r);case"buffer":return s(y&&Buffer.isBuffer(e)?e.toString("binary"):R(e),r);case"array":return s(Er(e),r);}throw new Error("Unrecognized type "+r.type)}function s(e,i){var s=e.split(/[\n\r]+/),f=-1,o=-1,c=0,u=0,h=[];var d=[];var v=null;var p={},m=[],b=[],g=[];var w=0,k;var T={Workbook:{WBProps:{},Names:[]}};if(+i.codepage>=0)l(+i.codepage);for(;c!==s.length;++c){w=0;var E=s[c].trim().replace(/\x1B([\x20-\x2F])([\x30-\x3F])/g,n).replace(r,t);var y=E.replace(/;;/g,"\0").split(";").map(function(e){return e.replace(/\u0000/g,";")});var S=y[0],_;if(E.length>0)switch(S){case"ID":break;case"E":break;case"B":break;case"O":for(u=1;u<y.length;++u)switch(y[u].charAt(0)){case"V":{var A=parseInt(y[u].slice(1),10);if(A>=1&&A<=4)T.Workbook.WBProps.date1904=true}break;}break;case"W":break;case"P":switch(y[1].charAt(0)){case"P":d.push(E.slice(3).replace(/;;/g,";"));break;}break;case"NN":{var x={Sheet:0};for(u=1;u<y.length;++u)switch(y[u].charAt(0)){case"N":x.Name=y[u].slice(1);break;case"E":x.Ref=(i&&i.sheet||"Sheet1")+"!"+Lu(y[u].slice(1));break;}T.Workbook.Names.push(x)}break;case"C":var C=false,O=false,R=false,N=false,I=-1,F=-1,D="",P="z";for(u=1;u<y.length;++u)switch(y[u].charAt(0)){case"A":break;case"X":o=parseInt(y[u].slice(1),10)-1;O=true;break;case"Y":f=parseInt(y[u].slice(1),10)-1;if(!O)o=0;for(k=h.length;k<=f;++k)h[k]=[];break;case"K":_=y[u].slice(1);if(_.charAt(0)==='"'){_=_.slice(1,_.length-1);P="s"}else if(_==="TRUE"||_==="FALSE"){_=_==="TRUE";P="b"}else if(!isNaN(_r(_))){_=_r(_);P="n";if(v!==null&&Me(v)&&i.cellDates){_=mr(T.Workbook.WBProps.date1904?_+1462:_);
-P="d"}}else if(!isNaN(Or(_).getDate())){_=Tr(_);P="d";if(!i.cellDates){P="n";_=hr(_,T.Workbook.WBProps.date1904)}}if(typeof a!=="undefined"&&typeof _=="string"&&(i||{}).type!="string"&&(i||{}).codepage)_=a.utils.decode(i.codepage,_);C=true;break;case"E":N=true;D=Lu(y[u].slice(1),{r:f,c:o});break;case"S":R=true;break;case"G":break;case"R":I=parseInt(y[u].slice(1),10)-1;break;case"C":F=parseInt(y[u].slice(1),10)-1;break;default:if(i&&i.WTF)throw new Error("SYLK bad record "+E);}if(C){if(!h[f][o])h[f][o]={t:P,v:_};else{h[f][o].t=P;h[f][o].v=_}if(v)h[f][o].z=v;if(i.cellText!==false&&v)h[f][o].w=ze(h[f][o].z,h[f][o].v,{date1904:T.Workbook.WBProps.date1904});v=null}if(R){if(N)throw new Error("SYLK shared formula cannot have own formula");var L=I>-1&&h[I][F];if(!L||!L[1])throw new Error("SYLK shared formula cannot find base");D=Bu(L[1],{r:f-I,c:o-F})}if(D){if(!h[f][o])h[f][o]={t:"n",f:D};else h[f][o].f=D}break;case"F":var M=0;for(u=1;u<y.length;++u)switch(y[u].charAt(0)){case"X":o=parseInt(y[u].slice(1),10)-1;++M;break;case"Y":f=parseInt(y[u].slice(1),10)-1;for(k=h.length;k<=f;++k)h[k]=[];break;case"M":w=parseInt(y[u].slice(1),10)/20;break;case"F":break;case"G":break;case"P":v=d[parseInt(y[u].slice(1),10)];break;case"S":break;case"D":break;case"N":break;case"W":g=y[u].slice(1).split(" ");for(k=parseInt(g[0],10);k<=parseInt(g[1],10);++k){w=parseInt(g[2],10);b[k-1]=w===0?{hidden:true}:{wch:w}}break;case"C":o=parseInt(y[u].slice(1),10)-1;if(!b[o])b[o]={};break;case"R":f=parseInt(y[u].slice(1),10)-1;if(!m[f])m[f]={};if(w>0){m[f].hpt=w;m[f].hpx=$o(w)}else if(w===0)m[f].hidden=true;break;default:if(i&&i.WTF)throw new Error("SYLK bad record "+E);}if(M<1)v=null;break;default:if(i&&i.WTF)throw new Error("SYLK bad record "+E);}}if(m.length>0)p["!rows"]=m;if(b.length>0)p["!cols"]=b;b.forEach(function(e){Ho(e)});if(i&&i.sheetRows)h=h.slice(0,i.sheetRows);return[h,p,T]}function f(e,r){var t=i(e,r);var a=t[0],n=t[1],s=t[2];var f=yr(r);f.date1904=(((s||{}).Workbook||{}).WBProps||{}).date1904;var l=Xa(a,f);sr(n).forEach(function(e){l[e]=n[e]});var o=$a(l,r);sr(s).forEach(function(e){o[e]=s[e]});o.bookType="sylk";return o}function o(e,r,t,a){var n="C;Y"+(t+1)+";X"+(a+1)+";K";switch(e.t){case"n":n+=e.v||0;if(e.f&&!e.F)n+=";E"+Uu(e.f,{r:t,c:a});break;case"b":n+=e.v?"TRUE":"FALSE";break;case"e":n+=e.w||e.v;break;case"d":n+='"'+(e.w||e.v)+'"';break;case"s":n+='"'+e.v.replace(/"/g,"").replace(/;/g,";;")+'"';break;}return n}function c(e,r){r.forEach(function(r,t){var a="F;W"+(t+1)+" "+(t+1)+" ";if(r.hidden)a+="0";else{if(typeof r.width=="number"&&!r.wpx)r.wpx=Lo(r.width);if(typeof r.wpx=="number"&&!r.wch)r.wch=Mo(r.wpx);if(typeof r.wch=="number")a+=Math.round(r.wch)}if(a.charAt(a.length-1)!=" ")e.push(a)})}function u(e,r){r.forEach(function(r,t){var a="F;";if(r.hidden)a+="M0;";else if(r.hpt)a+="M"+20*r.hpt+";";else if(r.hpx)a+="M"+20*Go(r.hpx)+";";if(a.length>2)e.push(a+"R"+(t+1))})}function h(e,r,t){var a=["ID;PSheetJS;N;E"],n=[];var i=za(e["!ref"]),s;var f=Array.isArray(e);var l="\r\n";var h=(((t||{}).Workbook||{}).WBProps||{}).date1904;a.push("P;PGeneral");a.push("F;P0;DG0G8;M255");if(e["!cols"])c(a,e["!cols"]);if(e["!rows"])u(a,e["!rows"]);a.push("B;Y"+(i.e.r-i.s.r+1)+";X"+(i.e.c-i.s.c+1)+";D"+[i.s.c,i.s.r,i.e.c,i.e.r].join(" "));a.push("O;L;D;B"+(h?";V4":"")+";K47;G100 0.001");for(var d=i.s.r;d<=i.e.r;++d){var v=[];for(var p=i.s.c;p<=i.e.c;++p){var m=Ma({r:d,c:p});s=f?(e[d]||[])[p]:e[m];if(!s||s.v==null&&(!s.f||s.F))continue;v.push(o(s,e,d,p,r))}n.push(v.join(l))}return a.join(l)+l+n.join(l)+l+"E"+l}return{to_workbook:f,from_sheet:h}}();var Rl=function(){function e(e,t){switch(t.type){case"base64":return r(E(e),t);case"binary":return r(e,t);case"buffer":return r(y&&Buffer.isBuffer(e)?e.toString("binary"):R(e),t);case"array":return r(Er(e),t);}throw new Error("Unrecognized type "+t.type)}function r(e,r){var t=e.split("\n"),a=-1,n=-1,i=0,s=[];for(;i!==t.length;++i){if(t[i].trim()==="BOT"){s[++a]=[];n=0;continue}if(a<0)continue;var f=t[i].trim().split(",");var l=f[0],o=f[1];++i;var c=t[i]||"";while((c.match(/["]/g)||[]).length&1&&i<t.length-1)c+="\n"+t[++i];c=c.trim();switch(+l){case-1:if(c==="BOT"){s[++a]=[];n=0;continue}else if(c!=="EOD")throw new Error("Unrecognized DIF special command "+c);break;case 0:if(c==="TRUE")s[a][n]=true;else if(c==="FALSE")s[a][n]=false;else if(!isNaN(_r(o)))s[a][n]=_r(o);else if(!isNaN(Or(o).getDate()))s[a][n]=Tr(o);else s[a][n]=o;++n;break;case 1:c=c.slice(1,c.length-1);c=c.replace(/""/g,'"');if(g&&c&&c.match(/^=".*"$/))c=c.slice(2,-1);s[a][n++]=c!==""?c:null;break;}if(c==="EOD")break}if(r&&r.sheetRows)s=s.slice(0,r.sheetRows);return s}function t(r,t){return Xa(e(r,t),t)}function a(e,r){var a=$a(t(e,r),r);a.bookType="dif";return a}function n(e,r){return"0,"+String(e)+"\r\n"+r}function i(e){return'1,0\r\n"'+e.replace(/"/g,'""')+'"'}function s(e){var r=g;var t=za(e["!ref"]);var a=Array.isArray(e);var s=['TABLE\r\n0,1\r\n"sheetjs"\r\n',"VECTORS\r\n0,"+(t.e.r-t.s.r+1)+'\r\n""\r\n',"TUPLES\r\n0,"+(t.e.c-t.s.c+1)+'\r\n""\r\n','DATA\r\n0,0\r\n""\r\n'];for(var f=t.s.r;f<=t.e.r;++f){var l="-1,0\r\nBOT\r\n";for(var o=t.s.c;o<=t.e.c;++o){var c=a?e[f]&&e[f][o]:e[Ma({r:f,c:o})];if(c==null){l+='1,0\r\n""\r\n';continue}switch(c.t){case"n":if(r){if(c.w!=null)l+="0,"+c.w+"\r\nV";else if(c.v!=null)l+=n(c.v,"V");else if(c.f!=null&&!c.F)l+=i("="+c.f);else l+='1,0\r\n""'}else{if(c.v==null)l+='1,0\r\n""';else l+=n(c.v,"V")}break;case"b":l+=c.v?n(1,"TRUE"):n(0,"FALSE");break;case"s":l+=i(!r||isNaN(+c.v)?c.v:'="'+c.v+'"');break;case"d":if(!c.w)c.w=ze(c.z||Z[14],hr(Tr(c.v)));if(r)l+=n(c.w,"V");else l+=i(c.w);break;default:l+='1,0\r\n""';}l+="\r\n"}s.push(l)}return s.join("")+"-1,0\r\nEOD"}return{to_workbook:a,to_sheet:t,from_sheet:s}}();var Nl=function(){function e(e){return e.replace(/\\b/g,"\\").replace(/\\c/g,":").replace(/\\n/g,"\n")}function r(e){return e.replace(/\\/g,"\\b").replace(/:/g,"\\c").replace(/\n/g,"\\n")}function t(r,t){var a=r.split("\n"),n=-1,i=-1,s=0,f=[];for(;s!==a.length;++s){var l=a[s].trim().split(":");if(l[0]!=="cell")continue;var o=La(l[1]);if(f.length<=o.r)for(n=f.length;n<=o.r;++n)if(!f[n])f[n]=[];n=o.r;i=o.c;switch(l[2]){case"t":f[n][i]=e(l[3]);break;case"v":f[n][i]=+l[3];break;case"vtf":var c=l[l.length-1];case"vtc":switch(l[3]){case"nl":f[n][i]=+l[4]?true:false;break;default:f[n][i]=+l[4];break;}if(l[2]=="vtf")f[n][i]=[f[n][i],c];}}if(t&&t.sheetRows)f=f.slice(0,t.sheetRows);return f}function a(e,r){return Xa(t(e,r),r)}function n(e,r){return $a(a(e,r),r)}var i=["socialcalc:version:1.5","MIME-Version: 1.0","Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave"].join("\n");var s=["--SocialCalcSpreadsheetControlSave","Content-type: text/plain; charset=UTF-8"].join("\n")+"\n";var f=["# SocialCalc Spreadsheet Control Save","part:sheet"].join("\n");var l="--SocialCalcSpreadsheetControlSave--";function o(e){if(!e||!e["!ref"])return"";var t=[],a=[],n,i="";var s=Ua(e["!ref"]);var f=Array.isArray(e);for(var l=s.s.r;l<=s.e.r;++l){for(var o=s.s.c;o<=s.e.c;++o){i=Ma({r:l,c:o});n=f?(e[l]||[])[o]:e[i];if(!n||n.v==null||n.t==="z")continue;a=["cell",i,"t"];switch(n.t){case"s":;case"str":a.push(r(n.v));break;case"n":if(!n.f){a[2]="v";a[3]=n.v}else{a[2]="vtf";a[3]="n";a[4]=n.v;a[5]=r(n.f)}break;case"b":a[2]="vt"+(n.f?"f":"c");a[3]="nl";a[4]=n.v?"1":"0";a[5]=r(n.f||(n.v?"TRUE":"FALSE"));break;case"d":var c=hr(Tr(n.v));a[2]="vtc";a[3]="nd";a[4]=""+c;a[5]=n.w||ze(n.z||Z[14],c);break;case"e":continue;}t.push(a.join(":"))}}t.push("sheet:c:"+(s.e.c-s.s.c+1)+":r:"+(s.e.r-s.s.r+1)+":tvf:1");t.push("valueformat:1:text-wiki");return t.join("\n")}function c(e){return[i,s,f,s,o(e),l].join("\n")}return{to_workbook:n,to_sheet:a,from_sheet:c}}();var Il=function(){function e(e,r,t,a,n){if(n.raw)r[t][a]=e;else if(e===""){}else if(e==="TRUE")r[t][a]=true;else if(e==="FALSE")r[t][a]=false;else if(!isNaN(_r(e)))r[t][a]=_r(e);else if(!isNaN(Or(e).getDate()))r[t][a]=Tr(e);else r[t][a]=e}function r(r,t){var a=t||{};var n=[];if(!r||r.length===0)return n;var i=r.split(/[\r\n]/);var s=i.length-1;while(s>=0&&i[s].length===0)--s;var f=10,l=0;var o=0;for(;o<=s;++o){l=i[o].indexOf(" ");if(l==-1)l=i[o].length;else l++;f=Math.max(f,l)}for(o=0;o<=s;++o){n[o]=[];var c=0;e(i[o].slice(0,f).trim(),n,o,c,a);for(c=1;c<=(i[o].length-f)/10+1;++c)e(i[o].slice(f+(c-1)*10,f+c*10).trim(),n,o,c,a)}if(a.sheetRows)n=n.slice(0,a.sheetRows);return n}var t={44:",",9:"\t",59:";",124:"|"};var n={44:3,9:2,59:1,124:0};function i(e){var r={},a=false,i=0,s=0;for(;i<e.length;++i){if((s=e.charCodeAt(i))==34)a=!a;else if(!a&&s in t)r[s]=(r[s]||0)+1}s=[];for(i in r)if(Object.prototype.hasOwnProperty.call(r,i)){s.push([r[i],i])}if(!s.length){r=n;for(i in r)if(Object.prototype.hasOwnProperty.call(r,i)){s.push([r[i],i])}}s.sort(function(e,r){return e[0]-r[0]||n[e[1]]-n[r[1]]});return t[s.pop()[1]]||44}function s(e,r){var t=r||{};var a="";if(b!=null&&t.dense==null)t.dense=b;var n=t.dense?[]:{};var s={s:{c:0,r:0},e:{c:0,r:0}};if(e.slice(0,4)=="sep="){if(e.charCodeAt(5)==13&&e.charCodeAt(6)==10){a=e.charAt(4);e=e.slice(7)}else if(e.charCodeAt(5)==13||e.charCodeAt(5)==10){a=e.charAt(4);e=e.slice(6)}else a=i(e.slice(0,1024))}else if(t&&t.FS)a=t.FS;else a=i(e.slice(0,1024));var f=0,l=0,o=0;var c=0,u=0,h=a.charCodeAt(0),d=false,v=0,p=e.charCodeAt(0);var m=t.dateNF!=null?Ke(t.dateNF):null;function g(){var r=e.slice(c,u);if(r.slice(-1)=="\r")r=r.slice(0,-1);var a={};if(r.charAt(0)=='"'&&r.charAt(r.length-1)=='"')r=r.slice(1,-1).replace(/""/g,'"');if(r.length===0)a.t="z";else if(t.raw){a.t="s";a.v=r}else if(r.trim().length===0){a.t="s";a.v=r}else if(r.charCodeAt(0)==61){if(r.charCodeAt(1)==34&&r.charCodeAt(r.length-1)==34){a.t="s";a.v=r.slice(2,-1).replace(/""/g,'"')}else if(Hu(r)){a.t="n";a.f=r.slice(1)}else{a.t="s";a.v=r}}else if(r=="TRUE"){a.t="b";a.v=true}else if(r=="FALSE"){a.t="b";a.v=false}else if(!isNaN(o=_r(r))){a.t="n";if(t.cellText!==false)a.w=r;a.v=o}else if(!isNaN((o=Or(r)).getDate())||m&&r.match(m)){a.z=t.dateNF||Z[14];var i=0;if(m&&r.match(m)){r=Ze(r,t.dateNF,r.match(m)||[]);i=1;o=Tr(r,i)}if(t.cellDates){a.t="d";a.v=o}else{a.t="n";a.v=hr(o)}if(t.cellText!==false)a.w=ze(a.z,a.v instanceof Date?hr(a.v):a.v);if(!t.cellNF)delete a.z}else{a.t="s";a.v=r}if(a.t=="z"){}else if(t.dense){if(!n[f])n[f]=[];n[f][l]=a}else n[Ma({c:l,r:f})]=a;c=u+1;p=e.charCodeAt(c);if(s.e.c<l)s.e.c=l;if(s.e.r<f)s.e.r=f;if(v==h)++l;else{l=0;++f;if(t.sheetRows&&t.sheetRows<=f)return true}}e:for(;u<e.length;++u)switch(v=e.charCodeAt(u)){case 34:if(p===34)d=!d;break;case 13:if(d)break;if(e.charCodeAt(u+1)==10)++u;case h:;case 10:if(!d&&g())break e;break;default:break;}if(u-c>0)g();n["!ref"]=Ba(s);return n}function f(e,t){if(!(t&&t.PRN))return s(e,t);if(t.FS)return s(e,t);if(e.slice(0,4)=="sep=")return s(e,t);if(e.indexOf("\t")>=0||e.indexOf(",")>=0||e.indexOf(";")>=0)return s(e,t);return Xa(r(e,t),t)}function l(e,r){var t="",n=r.type=="string"?[0,0,0,0]:Cw(e,r);switch(r.type){case"base64":t=E(e);break;case"binary":t=e;break;case"buffer":if(r.codepage==65001)t=e.toString("utf8");else if(r.codepage&&typeof a!=="undefined")t=a.utils.decode(r.codepage,e);else t=y&&Buffer.isBuffer(e)?e.toString("binary"):R(e);break;case"array":t=Er(e);break;case"string":t=e;break;default:throw new Error("Unrecognized type "+r.type);}if(n[0]==239&&n[1]==187&&n[2]==191)t=mt(t.slice(3));else if(r.type!="string"&&r.type!="buffer"&&r.codepage==65001)t=mt(t);else if(r.type=="binary"&&typeof a!=="undefined"&&r.codepage)t=a.utils.decode(r.codepage,a.utils.encode(28591,t));if(t.slice(0,19)=="socialcalc:version:")return Nl.to_sheet(r.type=="string"?t:mt(t),r);return f(t,r)}function o(e,r){return $a(l(e,r),r)}function c(e){var r=[];var t=za(e["!ref"]),a;var n=Array.isArray(e);for(var i=t.s.r;i<=t.e.r;++i){var s=[];for(var f=t.s.c;f<=t.e.c;++f){var l=Ma({r:i,c:f});a=n?(e[i]||[])[f]:e[l];if(!a||a.v==null){s.push("          ");continue}var o=(a.w||(Ga(a),a.w)||"").slice(0,10);while(o.length<10)o+=" ";s.push(o+(f===0?" ":""))}r.push(s.join(""))}return r.join("\n")}return{to_workbook:o,to_sheet:l,from_sheet:c}}();function Fl(e,r){var t=r||{},a=!!t.WTF;t.WTF=true;try{var n=Ol.to_workbook(e,t);t.WTF=a;return n}catch(i){t.WTF=a;if(!i.message.match(/SYLK bad record ID/)&&a)throw i;return Il.to_workbook(e,r)}}var Dl=function(){function e(e,r,t){if(!e)return;ba(e,e.l||0);var a=t.Enum||H;while(e.l<e.length){var n=e._R(2);var i=a[n]||a[65535];var s=e._R(2);var f=e.l+s;var l=i.f&&i.f(e,s,t);e.l=f;if(r(l,i,n))return}}function r(e,r){switch(r.type){case"base64":return t(C(E(e)),r);case"binary":return t(C(e),r);case"buffer":;case"array":return t(e,r);}throw"Unsupported type "+r.type}function t(r,t){if(!r)return r;var a=t||{};if(b!=null&&a.dense==null)a.dense=b;var n=a.dense?[]:{},i="Sheet1",s="",f=0;var l={},o=[],c=[];var u={s:{r:0,c:0},e:{r:0,c:0}};var h=a.sheetRows||0;if(r[4]==81&&r[5]==80&&r[6]==87)return V(r,t);if(r[2]==0){if(r[3]==8||r[3]==9){if(r.length>=16&&r[14]==5&&r[15]===108)throw new Error("Unsupported Works 3 for Mac file")}}if(r[2]==2){a.Enum=H;e(r,function(e,r,t){switch(t){case 0:a.vers=e;if(e>=4096)a.qpro=true;break;case 255:a.vers=e;a.works=true;break;case 6:u=e;break;case 204:if(e)s=e;break;case 222:s=e;break;case 15:;case 51:if((!a.qpro&&!a.works||t==51)&&e[1].v.charCodeAt(0)<48)e[1].v=e[1].v.slice(1);if(a.works||a.works2)e[1].v=e[1].v.replace(/\r\n/g,"\n");case 13:;case 14:;case 16:if(t==14&&(e[2]&112)==112&&(e[2]&15)>1&&(e[2]&15)<15){e[1].z=a.dateNF||Z[14];if(a.cellDates){e[1].t="d";e[1].v=mr(e[1].v)}}if(a.qpro){if(e[3]>f){n["!ref"]=Ba(u);l[i]=n;o.push(i);n=a.dense?[]:{};u={s:{r:0,c:0},e:{r:0,c:0}};f=e[3];i=s||"Sheet"+(f+1);s=""}}var c=a.dense?(n[e[0].r]||[])[e[0].c]:n[Ma(e[0])];if(c){c.t=e[1].t;c.v=e[1].v;if(e[1].z!=null)c.z=e[1].z;if(e[1].f!=null)c.f=e[1].f;break}if(a.dense){if(!n[e[0].r])n[e[0].r]=[];n[e[0].r][e[0].c]=e[1]}else n[Ma(e[0])]=e[1];break;case 21509:a.works2=true;break;default:;}},a)}else if(r[2]==26||r[2]==14){a.Enum=z;if(r[2]==14){a.qpro=true;r.l=0}e(r,function(e,r,t){switch(t){case 204:i=e;break;case 22:if(e[1].v.charCodeAt(0)<48)e[1].v=e[1].v.slice(1);e[1].v=e[1].v.replace(/\x0F./g,function(e){return String.fromCharCode(e.charCodeAt(1)-32)}).replace(/\r\n/g,"\n");case 23:;case 24:;case 25:;case 37:;case 39:;case 40:if(e[3]>f){n["!ref"]=Ba(u);l[i]=n;o.push(i);n=a.dense?[]:{};u={s:{r:0,c:0},e:{r:0,c:0}};f=e[3];i="Sheet"+(f+1)}if(h>0&&e[0].r>=h)break;if(a.dense){if(!n[e[0].r])n[e[0].r]=[];n[e[0].r][e[0].c]=e[1]}else n[Ma(e[0])]=e[1];if(u.e.c<e[0].c)u.e.c=e[0].c;if(u.e.r<e[0].r)u.e.r=e[0].r;break;case 27:if(e[14e3])c[e[14e3][0]]=e[14e3][1];break;case 1537:c[e[0]]=e[1];if(e[0]==f)i=e[1];break;default:break;}},a)}else throw new Error("Unrecognized LOTUS BOF "+r[2]);n["!ref"]=Ba(u);l[s||i]=n;o.push(s||i);if(!c.length)return{SheetNames:o,Sheets:l};var d={},v=[];for(var p=0;p<c.length;++p)if(l[o[p]]){v.push(c[p]||o[p]);d[c[p]]=l[c[p]]||l[o[p]]}else{v.push(c[p]);d[c[p]]={"!ref":"A1"}}return{SheetNames:v,Sheets:d}}function a(e,r){var t=r||{};if(+t.codepage>=0)l(+t.codepage);if(t.type=="string")throw new Error("Cannot write WK1 to JS string");var a=Ta();var n=za(e["!ref"]);var s=Array.isArray(e);var f=[];Pb(a,0,i(1030));Pb(a,6,o(n));var c=Math.min(n.e.r,8191);for(var u=n.s.r;u<=c;++u){var d=Ca(u);for(var v=n.s.c;v<=n.e.c;++v){if(u===n.s.r)f[v]=Ia(v);var m=f[v]+d;var b=s?(e[u]||[])[v]:e[m];if(!b||b.t=="z")continue;if(b.t=="n"){if((b.v|0)==b.v&&b.v>=-32768&&b.v<=32767)Pb(a,13,p(u,v,b.v));else Pb(a,14,g(u,v,b.v))}else{var w=Ga(b);Pb(a,15,h(u,v,w.slice(0,239)))}}}Pb(a,1);return a.end()}function n(e,r){var t=r||{};if(+t.codepage>=0)l(+t.codepage);if(t.type=="string")throw new Error("Cannot write WK3 to JS string");var a=Ta();Pb(a,0,s(e));for(var n=0,i=0;n<e.SheetNames.length;++n)if((e.Sheets[e.SheetNames[n]]||{})["!ref"])Pb(a,27,W(e.SheetNames[n],i++));var f=0;for(n=0;n<e.SheetNames.length;++n){var o=e.Sheets[e.SheetNames[n]];if(!o||!o["!ref"])continue;var c=za(o["!ref"]);var u=Array.isArray(o);var h=[];var d=Math.min(c.e.r,8191);for(var v=c.s.r;v<=d;++v){var p=Ca(v);for(var m=c.s.c;m<=c.e.c;++m){if(v===c.s.r)h[m]=Ia(m);var b=h[m]+p;var g=u?(o[v]||[])[m]:o[b];if(!g||g.t=="z")continue;if(g.t=="n"){Pb(a,23,N(v,m,f,g.v))}else{var w=Ga(g);Pb(a,22,x(v,m,f,w.slice(0,239)))}}}++f}Pb(a,1);return a.end()}function i(e){var r=wa(2);r._W(2,e);return r}function s(e){var r=wa(26);r._W(2,4096);r._W(2,4);r._W(4,0);var t=0,a=0,n=0;for(var i=0;i<e.SheetNames.length;++i){var s=e.SheetNames[i];var f=e.Sheets[s];if(!f||!f["!ref"])continue;++n;var l=Ua(f["!ref"]);if(t<l.e.r)t=l.e.r;if(a<l.e.c)a=l.e.c}if(t>8191)t=8191;r._W(2,t);r._W(1,n);r._W(1,a);r._W(2,0);r._W(2,0);r._W(1,1);r._W(1,2);r._W(4,0);r._W(4,0);return r}function f(e,r,t){var a={s:{c:0,r:0},e:{c:0,r:0}};if(r==8&&t.qpro){a.s.c=e._R(1);e.l++;a.s.r=e._R(2);a.e.c=e._R(1);e.l++;a.e.r=e._R(2);return a}a.s.c=e._R(2);a.s.r=e._R(2);if(r==12&&t.qpro)e.l+=2;a.e.c=e._R(2);a.e.r=e._R(2);if(r==12&&t.qpro)e.l+=2;if(a.s.c==65535)a.s.c=a.e.c=a.s.r=a.e.r=0;return a}function o(e){var r=wa(8);r._W(2,e.s.c);r._W(2,e.s.r);r._W(2,e.e.c);r._W(2,e.e.r);return r}function c(e,r,t){var a=[{c:0,r:0},{t:"n",v:0},0,0];if(t.qpro&&t.vers!=20768){a[0].c=e._R(1);a[3]=e._R(1);a[0].r=e._R(2);e.l+=2}else if(t.works){a[0].c=e._R(2);a[0].r=e._R(2);a[2]=e._R(2)}else{a[2]=e._R(1);a[0].c=e._R(2);a[0].r=e._R(2)}return a}function u(e,r,t){var a=e.l+r;var n=c(e,r,t);n[1].t="s";if(t.vers==20768){e.l++;var i=e._R(1);n[1].v=e._R(i,"utf8");return n}if(t.qpro)e.l++;n[1].v=e._R(a-e.l,"cstr");return n}function h(e,r,t){var a=wa(7+t.length);a._W(1,255);a._W(2,r);a._W(2,e);a._W(1,39);for(var n=0;n<a.length;++n){var i=t.charCodeAt(n);a._W(1,i>=128?95:i)}a._W(1,0);return a}function d(e,r,t){var a=e.l+r;var n=c(e,r,t);n[1].t="s";if(t.vers==20768){var i=e._R(1);n[1].v=e._R(i,"utf8");return n}n[1].v=e._R(a-e.l,"cstr");return n}function v(e,r,t){var a=c(e,r,t);a[1].v=e._R(2,"i");return a}function p(e,r,t){var a=wa(7);a._W(1,255);a._W(2,r);a._W(2,e);a._W(2,t,"i");return a}function m(e,r,t){var a=c(e,r,t);a[1].v=e._R(8,"f");return a}function g(e,r,t){var a=wa(13);a._W(1,255);a._W(2,r);a._W(2,e);a._W(8,t,"f");return a}function w(e,r,t){var a=e.l+r;var n=c(e,r,t);n[1].v=e._R(8,"f");if(t.qpro)e.l=a;else{var i=e._R(2);S(e.slice(e.l,e.l+i),n);e.l+=i}return n}function k(e,r,t){var a=r&32768;r&=~32768;r=(a?e:0)+(r>=8192?r-16384:r);return(a?"":"$")+(t?Ia(r):Ca(r))}var T={31:["NA",0],33:["ABS",1],34:["TRUNC",1],35:["SQRT",1],36:["LOG",1],37:["LN",1],38:["PI",0],39:["SIN",1],40:["COS",1],41:["TAN",1],42:["ATAN2",2],43:["ATAN",1],44:["ASIN",1],45:["ACOS",1],46:["EXP",1],47:["MOD",2],49:["ISNA",1],50:["ISERR",1],51:["FALSE",0],52:["TRUE",0],53:["RAND",0],63:["ROUND",2],68:["ISNUMBER",1],69:["ISTEXT",1],70:["LEN",1],71:["VALUE",1],73:["MID",3],74:["CHAR",1],80:["SUM",69],81:["AVERAGEA",69],82:["COUNTA",69],83:["MINA",69],84:["MAXA",69],102:["UPPER",1],103:["LOWER",1],107:["PROPER",1],109:["TRIM",1],111:["T",1]};var y=["","","","","","","","","","+","-","*","/","^","=","<>","<=",">=","<",">","","","","","&","","","","","","",""];function S(e,r){ba(e,0);var t=[],a=0,n="",i="",s="",f="";while(e.l<e.length){var l=e[e.l++];switch(l){case 0:t.push(e._R(8,"f"));break;case 1:{i=k(r[0].c,e._R(2),true);n=k(r[0].r,e._R(2),false);t.push(i+n)}break;case 2:{var o=k(r[0].c,e._R(2),true);var c=k(r[0].r,e._R(2),false);i=k(r[0].c,e._R(2),true);n=k(r[0].r,e._R(2),false);t.push(o+c+":"+i+n)}break;case 3:if(e.l<e.length){console.error("WK1 premature formula end");return}break;case 4:t.push("("+t.pop()+")");break;case 5:t.push(e._R(2));break;case 6:{var u="";while(l=e[e.l++])u+=String.fromCharCode(l);t.push('"'+u.replace(/"/g,'""')+'"')}break;case 8:t.push("-"+t.pop());break;case 23:t.push("+"+t.pop());break;case 22:t.push("NOT("+t.pop()+")");break;case 20:;case 21:{f=t.pop();s=t.pop();t.push(["AND","OR"][l-20]+"("+s+","+f+")")}break;default:if(l<32&&y[l]){f=t.pop();s=t.pop();t.push(s+y[l]+f)}else if(T[l]){a=T[l][1];if(a==69)a=e[e.l++];if(a>t.length){console.error("WK1 bad formula parse 0x"+l.toString(16)+":|"+t.join("|")+"|");return}var h=t.slice(-a);t.length-=a;t.push(T[l][0]+"("+h.join(",")+")")}else if(l<=7)return console.error("WK1 invalid opcode "+l.toString(16));else if(l<=24)return console.error("WK1 unsupported op "+l.toString(16));else if(l<=30)return console.error("WK1 invalid opcode "+l.toString(16));else if(l<=115)return console.error("WK1 unsupported function opcode "+l.toString(16));else return console.error("WK1 unrecognized opcode "+l.toString(16));}}if(t.length==1)r[1].f=""+t[0];else console.error("WK1 bad formula parse |"+t.join("|")+"|")}function _(e){var r=[{c:0,r:0},{t:"n",v:0},0];r[0].r=e._R(2);r[3]=e[e.l++];r[0].c=e[e.l++];return r}function A(e,r){var t=_(e,r);t[1].t="s";t[1].v=e._R(r-4,"cstr");return t}function x(e,r,t,a){var n=wa(6+a.length);n._W(2,e);n._W(1,t);n._W(1,r);n._W(1,39);for(var i=0;i<a.length;++i){var s=a.charCodeAt(i);n._W(1,s>=128?95:s)}n._W(1,0);return n}function O(e,r){var t=_(e,r);t[1].v=e._R(2);var a=t[1].v>>1;if(t[1].v&1){switch(a&7){case 0:a=(a>>3)*5e3;break;case 1:a=(a>>3)*500;break;case 2:a=(a>>3)/20;break;case 3:a=(a>>3)/200;break;case 4:a=(a>>3)/2e3;break;case 5:a=(a>>3)/2e4;break;case 6:a=(a>>3)/16;break;case 7:a=(a>>3)/64;break;}}t[1].v=a;return t}function R(e,r){var t=_(e,r);var a=e._R(4);var n=e._R(4);var i=e._R(2);if(i==65535){if(a===0&&n===3221225472){t[1].t="e";t[1].v=15}else if(a===0&&n===3489660928){t[1].t="e";t[1].v=42}else t[1].v=0;return t}var s=i&32768;i=(i&32767)-16446;t[1].v=(1-s*2)*(n*Math.pow(2,i+32)+a*Math.pow(2,i));return t}function N(e,r,t,a){var n=wa(14);n._W(2,e);n._W(1,t);n._W(1,r);if(a==0){n._W(4,0);n._W(4,0);n._W(2,65535);return n}var i=0,s=0,f=0,l=0;if(a<0){i=1;a=-a}s=Math.log2(a)|0;a/=Math.pow(2,s-31);l=a>>>0;if((l&2147483648)==0){a/=2;++s;l=a>>>0}a-=l;l|=2147483648;l>>>=0;a*=Math.pow(2,32);f=a>>>0;n._W(4,f);n._W(4,l);s+=16383+(i?32768:0);n._W(2,s);return n}function I(e,r){var t=R(e,14);e.l+=r-14;return t}function F(e,r){var t=_(e,r);var a=e._R(4);t[1].v=a>>6;return t}function D(e,r){var t=_(e,r);var a=e._R(8,"f");t[1].v=a;return t}function P(e,r){var t=D(e,12);e.l+=r-12;return t}function L(e,r){return e[e.l+r-1]==0?e._R(r,"cstr"):""}function M(e,r){var t=e[e.l++];if(t>r-1)t=r-1;var a="";while(a.length<t)a+=String.fromCharCode(e[e.l++]);return a}function U(e,r,t){if(!t.qpro||r<21)return;var a=e._R(1);e.l+=17;e.l+=1;e.l+=2;var n=e._R(r-21,"cstr");return[a,n]}function B(e,r){var t={},a=e.l+r;while(e.l<a){var n=e._R(2);if(n==14e3){t[n]=[0,""];t[n][0]=e._R(2);while(e[e.l]){t[n][1]+=String.fromCharCode(e[e.l]);e.l++}e.l++}}return t}function W(e,r){var t=wa(5+e.length);t._W(2,14e3);t._W(2,r);for(var a=0;a<e.length;++a){var n=e.charCodeAt(a);t[t.l++]=n>127?95:n}t[t.l++]=0;return t}var H={0:{n:"BOF",f:ls},1:{n:"EOF"},2:{n:"CALCMODE"},3:{n:"CALCORDER"},4:{n:"SPLIT"},5:{n:"SYNC"},6:{n:"RANGE",f:f},7:{n:"WINDOW1"},8:{n:"COLW1"},9:{n:"WINTWO"},10:{n:"COLW2"},11:{n:"NAME"},12:{n:"BLANK"},13:{n:"INTEGER",f:v},14:{n:"NUMBER",f:m},15:{n:"LABEL",f:u},16:{n:"FORMULA",f:w},24:{n:"TABLE"},25:{n:"ORANGE"},26:{n:"PRANGE"},27:{n:"SRANGE"},28:{n:"FRANGE"},29:{n:"KRANGE1"},32:{n:"HRANGE"},35:{n:"KRANGE2"},36:{n:"PROTEC"},37:{n:"FOOTER"},38:{n:"HEADER"},39:{n:"SETUP"},40:{n:"MARGINS"},41:{n:"LABELFMT"},42:{n:"TITLES"},43:{n:"SHEETJS"},45:{n:"GRAPH"},46:{n:"NGRAPH"},47:{n:"CALCCOUNT"},48:{n:"UNFORMATTED"},49:{n:"CURSORW12"},50:{n:"WINDOW"},51:{n:"STRING",f:d},55:{n:"PASSWORD"},56:{n:"LOCKED"},60:{n:"QUERY"},61:{n:"QUERYNAME"},62:{n:"PRINT"},63:{n:"PRINTNAME"},64:{n:"GRAPH2"},65:{n:"GRAPHNAME"},66:{n:"ZOOM"},67:{n:"SYMSPLIT"},68:{n:"NSROWS"},69:{n:"NSCOLS"},70:{n:"RULER"},71:{n:"NNAME"},72:{n:"ACOMM"},73:{n:"AMACRO"},74:{n:"PARSE"},102:{n:"PRANGES??"},103:{n:"RRANGES??"},104:{n:"FNAME??"},105:{n:"MRANGES??"},204:{n:"SHEETNAMECS",f:L},222:{n:"SHEETNAMELP",f:M},255:{n:"BOF",f:ls},65535:{n:""}};var z={0:{n:"BOF"},1:{n:"EOF"},2:{n:"PASSWORD"},3:{n:"CALCSET"},4:{n:"WINDOWSET"},5:{n:"SHEETCELLPTR"},6:{n:"SHEETLAYOUT"},7:{n:"COLUMNWIDTH"},8:{n:"HIDDENCOLUMN"},9:{n:"USERRANGE"},10:{n:"SYSTEMRANGE"},11:{n:"ZEROFORCE"},12:{n:"SORTKEYDIR"},13:{n:"FILESEAL"},14:{n:"DATAFILLNUMS"},15:{n:"PRINTMAIN"},16:{n:"PRINTSTRING"},17:{n:"GRAPHMAIN"},18:{n:"GRAPHSTRING"},19:{n:"??"},20:{n:"ERRCELL"},21:{n:"NACELL"},22:{n:"LABEL16",f:A},23:{n:"NUMBER17",f:R},24:{n:"NUMBER18",f:O},25:{n:"FORMULA19",f:I},26:{n:"FORMULA1A"},27:{n:"XFORMAT",f:B},28:{n:"DTLABELMISC"},29:{n:"DTLABELCELL"},30:{n:"GRAPHWINDOW"},31:{n:"CPA"},32:{n:"LPLAUTO"},33:{n:"QUERY"},34:{n:"HIDDENSHEET"},35:{n:"??"},37:{n:"NUMBER25",f:F},38:{n:"??"},39:{n:"NUMBER27",f:D},40:{n:"FORMULA28",f:P},142:{n:"??"},147:{n:"??"},150:{n:"??"},151:{n:"??"},152:{n:"??"},153:{n:"??"},154:{n:"??"},155:{n:"??"},156:{n:"??"},163:{n:"??"},174:{n:"??"},175:{n:"??"},176:{n:"??"},177:{n:"??"},184:{n:"??"},185:{n:"??"},186:{n:"??"},187:{n:"??"},188:{n:"??"},195:{n:"??"},201:{n:"??"},204:{n:"SHEETNAMECS",f:L},205:{n:"??"},206:{n:"??"},207:{n:"??"},208:{n:"??"},256:{n:"??"},259:{n:"??"},260:{n:"??"},261:{n:"??"},262:{n:"??"},263:{n:"??"},265:{n:"??"},266:{n:"??"},267:{n:"??"},268:{n:"??"},270:{n:"??"},271:{n:"??"},384:{n:"??"},389:{n:"??"},390:{n:"??"},393:{n:"??"},396:{n:"??"},512:{n:"??"},514:{n:"??"},513:{n:"??"},516:{n:"??"},517:{n:"??"},640:{n:"??"},641:{n:"??"},642:{n:"??"},643:{n:"??"},644:{n:"??"},645:{n:"??"},646:{n:"??"},647:{n:"??"},648:{n:"??"},658:{n:"??"},659:{n:"??"},660:{n:"??"},661:{n:"??"},662:{n:"??"},665:{n:"??"},666:{n:"??"},768:{n:"??"},772:{n:"??"},1537:{n:"SHEETINFOQP",f:U},1600:{n:"??"},1602:{n:"??"},1793:{n:"??"},1794:{n:"??"},1795:{n:"??"},1796:{n:"??"},1920:{n:"??"},2048:{n:"??"},2049:{n:"??"},2052:{n:"??"},2688:{n:"??"},10998:{n:"??"},12849:{n:"??"},28233:{n:"??"},28484:{n:"??"},65535:{n:""}};function V(e,r){ba(e,0);var t=r||{};if(b!=null&&t.dense==null)t.dense=b;var a=t.dense?[]:{};var n=[],i="",s=[];var f={s:{r:-1,c:-1},e:{r:-1,c:-1}};var l=0,o=0,c=0,u=0;var h={SheetNames:[],Sheets:{}};e:while(e.l<e.length){var d=e._R(2),v=e._R(2);var p=e.slice(e.l,e.l+v);ba(p,0);switch(d){case 1:if(p._R(4)!=962023505)throw"Bad QPW9 BOF!";break;case 2:break e;case 1025:break;case 1026:break;case 1031:{p.l+=12;while(p.l<p.length){l=p._R(2);o=p._R(1);n.push(p._R(l,"cstr"))}}break;case 1032:{}break;case 1537:{var m=p._R(2);a=t.dense?[]:{};f.s.c=p._R(2);f.e.c=p._R(2);f.s.r=p._R(4);f.e.r=p._R(4);p.l+=4;if(p.l+2<p.length){l=p._R(2);o=p._R(1);i=l==0?"":p._R(l,"cstr")}if(!i)i=Ia(m)}break;case 1538:{if(f.s.c>255||f.s.r>999999)break;if(f.e.c<f.s.c)f.e.c=f.s.c;if(f.e.r<f.s.r)f.e.r=f.s.r;a["!ref"]=Ba(f);uk(h,a,i)}break;case 2561:{c=p._R(2);if(f.e.c<c)f.e.c=c;if(f.s.c>c)f.s.c=c;u=p._R(4);if(f.s.r>u)f.s.r=u;u=p._R(4);if(f.e.r<u)f.e.r=u}break;case 3073:{u=p._R(4),l=p._R(4);if(f.s.r>u)f.s.r=u;if(f.e.r<u+l-1)f.e.r=u+l-1;while(p.l<p.length){var g={t:"z"};var w=p._R(1);if(w&128)p.l+=2;var k=w&64?p._R(2)-1:0;switch(w&31){case 1:break;case 2:g={t:"n",v:p._R(2)};break;case 3:g={t:"n",v:p._R(2,"i")};break;case 5:g={t:"n",v:p._R(8,"f")};break;case 7:g={t:"s",v:n[o=p._R(4)-1]};break;case 8:g={t:"n",v:p._R(8,"f")};p.l+=2;p.l+=4;break;default:throw"Unrecognized QPW cell type "+(w&31);}var T=0;if(w&32)switch(w&31){case 2:T=p._R(2);break;case 3:T=p._R(2,"i");break;case 7:T=p._R(2);break;default:throw"Unsupported delta for QPW cell type "+(w&31);}if(!(!t.sheetStubs&&g.t=="z")){if(Array.isArray(a)){if(!a[u])a[u]=[];a[u][c]=g}else a[Ma({r:u,c:c})]=g}++u;--l;while(k-- >0&&l>=0){if(w&32)switch(w&31){case 2:g={t:"n",v:g.v+T&65535};break;case 3:g={t:"n",v:g.v+T&65535};if(g.v>32767)g.v-=65536;break;case 7:g={t:"s",v:n[o=o+T>>>0]};break;default:throw"Cannot apply delta for QPW cell type "+(w&31);}else switch(w&31){case 1:g={t:"z"};break;case 2:g={t:"n",v:p._R(2)};break;case 7:g={t:"s",v:n[o=p._R(4)-1]};break;default:throw"Cannot apply repeat for QPW cell type "+(w&31);}if(!(!t.sheetStubs&&g.t=="z")){if(Array.isArray(a)){if(!a[u])a[u]=[];a[u][c]=g}else a[Ma({r:u,c:c})]=g}++u;--l}}}break;default:break;}e.l+=v}return h}return{sheet_to_wk1:a,book_to_wk3:n,to_workbook:r}}();function Pl(e){var r={},t=e.match(Yr),a=0;var n=false;if(t)for(;a!=t.length;++a){var s=Jr(t[a]);switch(s[0].replace(/\w*:/g,"")){case"<condense":break;case"<extend":break;case"<shadow":if(!s.val)break;case"<shadow>":;case"<shadow/>":r.shadow=1;break;case"</shadow>":break;case"<charset":if(s.val=="1")break;r.cp=i[parseInt(s.val,10)];break;case"<outline":if(!s.val)break;case"<outline>":;case"<outline/>":r.outline=1;break;case"</outline>":break;case"<rFont":r.name=s.val;break;case"<sz":r.sz=s.val;break;case"<strike":if(!s.val)break;case"<strike>":;case"<strike/>":r.strike=1;break;case"</strike>":break;case"<u":if(!s.val)break;switch(s.val){case"double":r.uval="double";break;case"singleAccounting":r.uval="single-accounting";break;case"doubleAccounting":r.uval="double-accounting";break;};case"<u>":;case"<u/>":r.u=1;break;case"</u>":break;case"<b":if(s.val=="0")break;case"<b>":;case"<b/>":r.b=1;break;case"</b>":break;case"<i":if(s.val=="0")break;case"<i>":;case"<i/>":r.i=1;break;case"</i>":break;case"<color":if(s.rgb)r.color=s.rgb.slice(2,8);break;case"<color>":;case"<color/>":;case"</color>":break;case"<family":r.family=s.val;break;case"<family>":;case"<family/>":;case"</family>":break;case"<vertAlign":r.valign=s.val;break;case"<vertAlign>":;case"<vertAlign/>":;case"</vertAlign>":break;case"<scheme":break;case"<scheme>":;case"<scheme/>":;case"</scheme>":break;case"<extLst":;case"<extLst>":;case"</extLst>":break;case"<ext":n=true;break;case"</ext>":n=false;break;default:if(s[0].charCodeAt(1)!==47&&!n)throw new Error("Unrecognized rich format "+s[0]);}}return r}var Ll=function(){var e=gt("t"),r=gt("rPr");function t(t){var a=t.match(e);if(!a)return{t:"s",v:""};var n={t:"s",v:rt(a[1])};var i=t.match(r);if(i)n.s=Pl(i[1]);return n}var a=/<(?:\w+:)?r>/g,n=/<\/(?:\w+:)?r>/;return function i(e){return e.replace(a,"").split(n).map(t).filter(function(e){return e.v})}}();var Ml=function zk(){var e=/(\r\n|\n)/g;function r(e,r,t){var a=[];if(e.u)a.push("text-decoration: underline;");if(e.uval)a.push("text-underline-style:"+e.uval+";");if(e.sz)a.push("font-size:"+e.sz+"pt;");if(e.outline)a.push("text-effect: outline;");if(e.shadow)a.push("text-shadow: auto;");r.push('<span style="'+a.join("")+'">');if(e.b){r.push("<b>");t.push("</b>")}if(e.i){r.push("<i>");t.push("</i>")}if(e.strike){r.push("<s>");t.push("</s>")}var n=e.valign||"";if(n=="superscript"||n=="super")n="sup";else if(n=="subscript")n="sub";if(n!=""){r.push("<"+n+">");t.push("</"+n+">")}t.push("</span>");return e}function t(t){var a=[[],t.v,[]];if(!t.v)return"";if(t.s)r(t.s,a[0],a[2]);return a[0].join("")+a[1].replace(e,"<br/>")+a[2].join("")}return function a(e){return e.map(t).join("")}}();var Ul=/<(?:\w+:)?t[^>]*>([^<]*)<\/(?:\w+:)?t>/g,Bl=/<(?:\w+:)?r>/;var Wl=/<(?:\w+:)?rPh.*?>([\s\S]*?)<\/(?:\w+:)?rPh>/g;function Hl(e,r){var t=r?r.cellHTML:true;var a={};if(!e)return{t:""};if(e.match(/^\s*<(?:\w+:)?t[^>]*>/)){a.t=rt(mt(e.slice(e.indexOf(">")+1).split(/<\/(?:\w+:)?t>/)[0]||""),true);a.r=mt(e);if(t)a.h=ft(a.t)}else if(e.match(Bl)){a.r=mt(e);
-a.t=rt(mt((e.replace(Wl,"").match(Ul)||[]).join("").replace(Yr,"")),true);if(t)a.h=Ml(Ll(a.r))}return a}var zl=/<(?:\w+:)?sst([^>]*)>([\s\S]*)<\/(?:\w+:)?sst>/;var Vl=/<(?:\w+:)?(?:si|sstItem)>/g;var Gl=/<\/(?:\w+:)?(?:si|sstItem)>/;function $l(e,r){var t=[],a="";if(!e)return t;var n=e.match(zl);if(n){a=n[2].replace(Vl,"").split(Gl);for(var i=0;i!=a.length;++i){var s=Hl(a[i].trim(),r);if(s!=null)t[t.length]=s}n=Jr(n[1]);t.Count=n.count;t.Unique=n.uniqueCount}return t}var jl=/^\s|\s$|[\t\n\r]/;function Xl(e,r){if(!r.bookSST)return"";var t=[Gr];t[t.length]=xt("sst",null,{xmlns:Ft[0],count:e.Count,uniqueCount:e.Unique});for(var a=0;a!=e.length;++a){if(e[a]==null)continue;var n=e[a];var i="<si>";if(n.r)i+=n.r;else{i+="<t";if(!n.t)n.t="";if(n.t.match(jl))i+=' xml:space="preserve"';i+=">"+nt(n.t)+"</t>"}i+="</si>";t[t.length]=i}if(t.length>2){t[t.length]="</sst>";t[1]=t[1].replace("/>",">")}return t.join("")}function Yl(e){return[e._R(4),e._R(4)]}function Kl(e,r){var t=[];var a=false;ka(e,function n(e,i,s){switch(s){case 159:t.Count=e[0];t.Unique=e[1];break;case 19:t.push(e);break;case 160:return true;case 35:a=true;break;case 36:a=false;break;default:if(i.T){}if(!a||r.WTF)throw new Error("Unexpected record 0x"+s.toString(16));}});return t}function Zl(e,r){if(!r)r=wa(8);r._W(4,e.Count);r._W(4,e.Unique);return r}var Jl=rn;function ql(e){var r=Ta();Ea(r,159,Zl(e));for(var t=0;t<e.length;++t)Ea(r,19,Jl(e[t]));Ea(r,160);return r.end()}function Ql(e){if(typeof a!=="undefined")return a.utils.encode(t,e);var r=[],n=e.split("");for(var i=0;i<n.length;++i)r[i]=n[i].charCodeAt(0);return r}function eo(e,r){var t={};t.Major=e._R(2);t.Minor=e._R(2);if(r>=4)e.l+=r-4;return t}function ro(e){var r={};r.id=e._R(0,"lpp4");r.R=eo(e,4);r.U=eo(e,4);r.W=eo(e,4);return r}function to(e){var r=e._R(4);var t=e.l+r-4;var a={};var n=e._R(4);var i=[];while(n-- >0)i.push({t:e._R(4),v:e._R(0,"lpp4")});a.name=e._R(0,"lpp4");a.comps=i;if(e.l!=t)throw new Error("Bad DataSpaceMapEntry: "+e.l+" != "+t);return a}function ao(e){var r=[];e.l+=4;var t=e._R(4);while(t-- >0)r.push(to(e));return r}function no(e){var r=[];e.l+=4;var t=e._R(4);while(t-- >0)r.push(e._R(0,"lpp4"));return r}function io(e){var r={};e._R(4);e.l+=4;r.id=e._R(0,"lpp4");r.name=e._R(0,"lpp4");r.R=eo(e,4);r.U=eo(e,4);r.W=eo(e,4);return r}function so(e){var r=io(e);r.ename=e._R(0,"8lpp4");r.blksz=e._R(4);r.cmode=e._R(4);if(e._R(4)!=4)throw new Error("Bad !Primary record");return r}function fo(e,r){var t=e.l+r;var a={};a.Flags=e._R(4)&63;e.l+=4;a.AlgID=e._R(4);var n=false;switch(a.AlgID){case 26126:;case 26127:;case 26128:n=a.Flags==36;break;case 26625:n=a.Flags==4;break;case 0:n=a.Flags==16||a.Flags==4||a.Flags==36;break;default:throw"Unrecognized encryption algorithm: "+a.AlgID;}if(!n)throw new Error("Encryption Flags/AlgID mismatch");a.AlgIDHash=e._R(4);a.KeySize=e._R(4);a.ProviderType=e._R(4);e.l+=8;a.CSPName=e._R(t-e.l>>1,"utf16le");e.l=t;return a}function lo(e,r){var t={},a=e.l+r;e.l+=4;t.Salt=e.slice(e.l,e.l+16);e.l+=16;t.Verifier=e.slice(e.l,e.l+16);e.l+=16;e._R(4);t.VerifierHash=e.slice(e.l,a);e.l=a;return t}function oo(e){var r=eo(e);switch(r.Minor){case 2:return[r.Minor,co(e,r)];case 3:return[r.Minor,uo(e,r)];case 4:return[r.Minor,ho(e,r)];}throw new Error("ECMA-376 Encrypted file unrecognized Version: "+r.Minor)}function co(e){var r=e._R(4);if((r&63)!=36)throw new Error("EncryptionInfo mismatch");var t=e._R(4);var a=fo(e,t);var n=lo(e,e.length-e.l);return{t:"Std",h:a,v:n}}function uo(){throw new Error("File is password-protected: ECMA-376 Extensible")}function ho(e){var r=["saltSize","blockSize","keyBits","hashSize","cipherAlgorithm","cipherChaining","hashAlgorithm","saltValue"];e.l+=4;var t=e._R(e.length-e.l,"utf8");var a={};t.replace(Yr,function n(e){var t=Jr(e);switch(qr(t[0])){case"<?xml":break;case"<encryption":;case"</encryption>":break;case"<keyData":r.forEach(function(e){a[e]=t[e]});break;case"<dataIntegrity":a.encryptedHmacKey=t.encryptedHmacKey;a.encryptedHmacValue=t.encryptedHmacValue;break;case"<keyEncryptors>":;case"<keyEncryptors":a.encs=[];break;case"</keyEncryptors>":break;case"<keyEncryptor":a.uri=t.uri;break;case"</keyEncryptor>":break;case"<encryptedKey":a.encs.push(t);break;default:throw t[0];}});return a}function vo(e,r){var t={};var a=t.EncryptionVersionInfo=eo(e,4);r-=4;if(a.Minor!=2)throw new Error("unrecognized minor version code: "+a.Minor);if(a.Major>4||a.Major<2)throw new Error("unrecognized major version code: "+a.Major);t.Flags=e._R(4);r-=4;var n=e._R(4);r-=4;t.EncryptionHeader=fo(e,n);r-=n;t.EncryptionVerifier=lo(e,r);return t}function po(e){var r={};var t=r.EncryptionVersionInfo=eo(e,4);if(t.Major!=1||t.Minor!=1)throw"unrecognized version code "+t.Major+" : "+t.Minor;r.Salt=e._R(16);r.EncryptedVerifier=e._R(16);r.EncryptedVerifierHash=e._R(16);return r}function mo(e){var r=0,t;var a=Ql(e);var n=a.length+1,i,s;var f,l,o;t=A(n);t[0]=a.length;for(i=1;i!=n;++i)t[i]=a[i-1];for(i=n-1;i>=0;--i){s=t[i];f=(r&16384)===0?0:1;l=r<<1&32767;o=f|l;r=o^s}return r^52811}var bo=function(){var e=[187,255,255,186,255,255,185,128,0,190,15,0,191,15,0];var r=[57840,7439,52380,33984,4364,3600,61902,12606,6258,57657,54287,34041,10252,43370,20163];var t=[44796,19929,39858,10053,20106,40212,10761,31585,63170,64933,60267,50935,40399,11199,17763,35526,1453,2906,5812,11624,23248,885,1770,3540,7080,14160,28320,56640,55369,41139,20807,41614,21821,43642,17621,28485,56970,44341,19019,38038,14605,29210,60195,50791,40175,10751,21502,43004,24537,18387,36774,3949,7898,15796,31592,63184,47201,24803,49606,37805,14203,28406,56812,17824,35648,1697,3394,6788,13576,27152,43601,17539,35078,557,1114,2228,4456,30388,60776,51953,34243,7079,14158,28316,14128,28256,56512,43425,17251,34502,7597,13105,26210,52420,35241,883,1766,3532,4129,8258,16516,33032,4657,9314,18628];var a=function(e){return(e/2|e*128)&255};var n=function(e,r){return a(e^r)};var i=function(e){var a=r[e.length-1];var n=104;for(var i=e.length-1;i>=0;--i){var s=e[i];for(var f=0;f!=7;++f){if(s&64)a^=t[n];s*=2;--n}}return a};return function(r){var t=Ql(r);var a=i(t);var s=t.length;var f=A(16);for(var l=0;l!=16;++l)f[l]=0;var o,c,u;if((s&1)===1){o=a>>8;f[s]=n(e[0],o);--s;o=a&255;c=t[t.length-1];f[s]=n(c,o)}while(s>0){--s;o=a>>8;f[s]=n(t[s],o);--s;o=a&255;f[s]=n(t[s],o)}s=15;u=15-t.length;while(u>0){o=a>>8;f[s]=n(e[u],o);--s;--u;o=a&255;f[s]=n(t[s],o);--s;--u}return f}}();var go=function(e,r,t,a,n){if(!n)n=r;if(!a)a=bo(e);var i,s;for(i=0;i!=r.length;++i){s=r[i];s^=a[t];s=(s>>5|s<<3)&255;n[i]=s;++t}return[n,t,a]};var wo=function(e){var r=0,t=bo(e);return function(e){var a=go("",e,r,t);r=a[1];return a[0]}};function ko(e,r,t,a){var n={key:ls(e),verificationBytes:ls(e)};if(t.password)n.verifier=mo(t.password);a.valid=n.verificationBytes===n.verifier;if(a.valid)a.insitu=wo(t.password);return n}function To(e,r,t){var a=t||{};a.Info=e._R(2);e.l-=2;if(a.Info===1)a.Data=po(e,r);else a.Data=vo(e,r);return a}function Eo(e,r,t){var a={Type:t.biff>=8?e._R(2):0};if(a.Type)To(e,r-2,a);else ko(e,t.biff>=8?r:r-2,t,a);return a}function yo(e,r){switch(r.type){case"base64":return So(E(e),r);case"binary":return So(e,r);case"buffer":return So(y&&Buffer.isBuffer(e)?e.toString("binary"):R(e),r);case"array":return So(Er(e),r);}throw new Error("Unrecognized type "+r.type)}function So(e,r){var t=r||{};var a=t.dense?[]:{};var n=e.match(/\\trowd[\s\S]*?\\row\b/g);if(!n)throw new Error("RTF missing table");var i={s:{c:0,r:0},e:{c:0,r:n.length-1}};n.forEach(function(e,r){if(Array.isArray(a))a[r]=[];var n=/\\[\w\-]+\b/g;var s=0;var f;var l=-1;var o=[];while((f=n.exec(e))!=null){var c=e.slice(s,n.lastIndex-f[0].length);if(c.charCodeAt(0)==32)c=c.slice(1);if(c.length)o.push(c);switch(f[0]){case"\\cell":++l;if(o.length){var u={v:o.join(""),t:"s"};if(u.v=="TRUE"||u.v=="FALSE"){u.v=u.v=="TRUE";u.t="b"}else if(!isNaN(_r(u.v))){u.t="n";if(t.cellText!==false)u.w=u.v;u.v=_r(u.v)}if(Array.isArray(a))a[r][l]=u;else a[Ma({r:r,c:l})]=u}o=[];break;case"\\par":o.push("\n");break;}s=n.lastIndex}if(l>i.e.c)i.e.c=l});a["!ref"]=Ba(i);return a}function _o(e,r){var t=$a(yo(e,r),r);t.bookType="rtf";return t}function Ao(e,r){var t=["{\\rtf1\\ansi"];if(!e["!ref"])return t[0]+"}";var a=za(e["!ref"]),n;var i=Array.isArray(e);for(var s=a.s.r;s<=a.e.r;++s){t.push("\\trowd\\trautofit1");for(var f=a.s.c;f<=a.e.c;++f)t.push("\\cellx"+(f+1));t.push("\\pard\\intbl");for(f=a.s.c;f<=a.e.c;++f){var l=Ma({r:s,c:f});n=i?(e[s]||[])[f]:e[l];if(!n||n.v==null&&(!n.f||n.F)){t.push(" \\cell");continue}t.push(" "+(n.w||(Ga(n),n.w)||"").replace(/[\r\n]/g,"\\par "));t.push("\\cell")}t.push("\\pard\\intbl\\row")}return t.join("")+"}"}function xo(e){var r=e.slice(e[0]==="#"?1:0).slice(0,6);return[parseInt(r.slice(0,2),16),parseInt(r.slice(2,4),16),parseInt(r.slice(4,6),16)]}function Co(e){for(var r=0,t=1;r!=3;++r)t=t*256+(e[r]>255?255:e[r]<0?0:e[r]);return t.toString(16).toUpperCase().slice(1)}function Oo(e){var r=e[0]/255,t=e[1]/255,a=e[2]/255;var n=Math.max(r,t,a),i=Math.min(r,t,a),s=n-i;if(s===0)return[0,0,r];var f=0,l=0,o=n+i;l=s/(o>1?2-o:o);switch(n){case r:f=((t-a)/s+6)%6;break;case t:f=(a-r)/s+2;break;case a:f=(r-t)/s+4;break;}return[f/6,l,o/2]}function Ro(e){var r=e[0],t=e[1],a=e[2];var n=t*2*(a<.5?a:1-a),i=a-n/2;var s=[i,i,i],f=6*r;var l;if(t!==0)switch(f|0){case 0:;case 6:l=n*f;s[0]+=n;s[1]+=l;break;case 1:l=n*(2-f);s[0]+=l;s[1]+=n;break;case 2:l=n*(f-2);s[1]+=n;s[2]+=l;break;case 3:l=n*(4-f);s[1]+=l;s[2]+=n;break;case 4:l=n*(f-4);s[2]+=n;s[0]+=l;break;case 5:l=n*(6-f);s[2]+=l;s[0]+=n;break;}for(var o=0;o!=3;++o)s[o]=Math.round(s[o]*255);return s}function No(e,r){if(r===0)return e;var t=Oo(xo(e));if(r<0)t[2]=t[2]*(1+r);else t[2]=1-(1-t[2])*(1-r);return Co(Ro(t))}var Io=6,Fo=15,Do=1,Po=Io;function Lo(e){return Math.floor((e+Math.round(128/Po)/256)*Po)}function Mo(e){return Math.floor((e-5)/Po*100+.5)/100}function Uo(e){return Math.round((e*Po+5)/Po*256)/256}function Bo(e){return Uo(Mo(Lo(e)))}function Wo(e){var r=Math.abs(e-Bo(e)),t=Po;if(r>.005)for(Po=Do;Po<Fo;++Po)if(Math.abs(e-Bo(e))<=r){r=Math.abs(e-Bo(e));t=Po}Po=t}function Ho(e){if(e.width){e.wpx=Lo(e.width);e.wch=Mo(e.wpx);e.MDW=Po}else if(e.wpx){e.wch=Mo(e.wpx);e.width=Uo(e.wch);e.MDW=Po}else if(typeof e.wch=="number"){e.width=Uo(e.wch);e.wpx=Lo(e.width);e.MDW=Po}if(e.customWidth)delete e.customWidth}var zo=96,Vo=zo;function Go(e){return e*96/Vo}function $o(e){return e*Vo/96}var jo={None:"none",Solid:"solid",Gray50:"mediumGray",Gray75:"darkGray",Gray25:"lightGray",HorzStripe:"darkHorizontal",VertStripe:"darkVertical",ReverseDiagStripe:"darkDown",DiagStripe:"darkUp",DiagCross:"darkGrid",ThickDiagCross:"darkTrellis",ThinHorzStripe:"lightHorizontal",ThinVertStripe:"lightVertical",ThinReverseDiagStripe:"lightDown",ThinHorzCross:"lightGrid"};function Xo(e,r,t,a){r.Borders=[];var n={};var i=false;(e[0].match(Yr)||[]).forEach(function(e){var t=Jr(e);switch(qr(t[0])){case"<borders":;case"<borders>":;case"</borders>":break;case"<border":;case"<border>":;case"<border/>":n={};if(t.diagonalUp)n.diagonalUp=ut(t.diagonalUp);if(t.diagonalDown)n.diagonalDown=ut(t.diagonalDown);r.Borders.push(n);break;case"</border>":break;case"<left/>":break;case"<left":;case"<left>":break;case"</left>":break;case"<right/>":break;case"<right":;case"<right>":break;case"</right>":break;case"<top/>":break;case"<top":;case"<top>":break;case"</top>":break;case"<bottom/>":break;case"<bottom":;case"<bottom>":break;case"</bottom>":break;case"<diagonal":;case"<diagonal>":;case"<diagonal/>":break;case"</diagonal>":break;case"<horizontal":;case"<horizontal>":;case"<horizontal/>":break;case"</horizontal>":break;case"<vertical":;case"<vertical>":;case"<vertical/>":break;case"</vertical>":break;case"<start":;case"<start>":;case"<start/>":break;case"</start>":break;case"<end":;case"<end>":;case"<end/>":break;case"</end>":break;case"<color":;case"<color>":break;case"<color/>":;case"</color>":break;case"<extLst":;case"<extLst>":;case"</extLst>":break;case"<ext":i=true;break;case"</ext>":i=false;break;default:if(a&&a.WTF){if(!i)throw new Error("unrecognized "+t[0]+" in borders")};}})}function Yo(e,r,t,a){r.Fills=[];var n={};var i=false;(e[0].match(Yr)||[]).forEach(function(e){var t=Jr(e);switch(qr(t[0])){case"<fills":;case"<fills>":;case"</fills>":break;case"<fill>":;case"<fill":;case"<fill/>":n={};r.Fills.push(n);break;case"</fill>":break;case"<gradientFill>":break;case"<gradientFill":;case"</gradientFill>":r.Fills.push(n);n={};break;case"<patternFill":;case"<patternFill>":if(t.patternType)n.patternType=t.patternType;break;case"<patternFill/>":;case"</patternFill>":break;case"<bgColor":if(!n.bgColor)n.bgColor={};if(t.indexed)n.bgColor.indexed=parseInt(t.indexed,10);if(t.theme)n.bgColor.theme=parseInt(t.theme,10);if(t.tint)n.bgColor.tint=parseFloat(t.tint);if(t.rgb)n.bgColor.rgb=t.rgb.slice(-6);break;case"<bgColor/>":;case"</bgColor>":break;case"<fgColor":if(!n.fgColor)n.fgColor={};if(t.theme)n.fgColor.theme=parseInt(t.theme,10);if(t.tint)n.fgColor.tint=parseFloat(t.tint);if(t.rgb!=null)n.fgColor.rgb=t.rgb.slice(-6);break;case"<fgColor/>":;case"</fgColor>":break;case"<stop":;case"<stop/>":break;case"</stop>":break;case"<color":;case"<color/>":break;case"</color>":break;case"<extLst":;case"<extLst>":;case"</extLst>":break;case"<ext":i=true;break;case"</ext>":i=false;break;default:if(a&&a.WTF){if(!i)throw new Error("unrecognized "+t[0]+" in fills")};}})}function Ko(e,r,t,a){r.Fonts=[];var n={};var s=false;(e[0].match(Yr)||[]).forEach(function(e){var f=Jr(e);switch(qr(f[0])){case"<fonts":;case"<fonts>":;case"</fonts>":break;case"<font":;case"<font>":break;case"</font>":;case"<font/>":r.Fonts.push(n);n={};break;case"<name":if(f.val)n.name=mt(f.val);break;case"<name/>":;case"</name>":break;case"<b":n.bold=f.val?ut(f.val):1;break;case"<b/>":n.bold=1;break;case"<i":n.italic=f.val?ut(f.val):1;break;case"<i/>":n.italic=1;break;case"<u":switch(f.val){case"none":n.underline=0;break;case"single":n.underline=1;break;case"double":n.underline=2;break;case"singleAccounting":n.underline=33;break;case"doubleAccounting":n.underline=34;break;}break;case"<u/>":n.underline=1;break;case"<strike":n.strike=f.val?ut(f.val):1;break;case"<strike/>":n.strike=1;break;case"<outline":n.outline=f.val?ut(f.val):1;break;case"<outline/>":n.outline=1;break;case"<shadow":n.shadow=f.val?ut(f.val):1;break;case"<shadow/>":n.shadow=1;break;case"<condense":n.condense=f.val?ut(f.val):1;break;case"<condense/>":n.condense=1;break;case"<extend":n.extend=f.val?ut(f.val):1;break;case"<extend/>":n.extend=1;break;case"<sz":if(f.val)n.sz=+f.val;break;case"<sz/>":;case"</sz>":break;case"<vertAlign":if(f.val)n.vertAlign=f.val;break;case"<vertAlign/>":;case"</vertAlign>":break;case"<family":if(f.val)n.family=parseInt(f.val,10);break;case"<family/>":;case"</family>":break;case"<scheme":if(f.val)n.scheme=f.val;break;case"<scheme/>":;case"</scheme>":break;case"<charset":if(f.val=="1")break;f.codepage=i[parseInt(f.val,10)];break;case"<color":if(!n.color)n.color={};if(f.auto)n.color.auto=ut(f.auto);if(f.rgb)n.color.rgb=f.rgb.slice(-6);else if(f.indexed){n.color.index=parseInt(f.indexed,10);var l=Zn[n.color.index];if(n.color.index==81)l=Zn[1];if(!l)l=Zn[1];n.color.rgb=l[0].toString(16)+l[1].toString(16)+l[2].toString(16)}else if(f.theme){n.color.theme=parseInt(f.theme,10);if(f.tint)n.color.tint=parseFloat(f.tint);if(f.theme&&t.themeElements&&t.themeElements.clrScheme){n.color.rgb=No(t.themeElements.clrScheme[n.color.theme].rgb,n.color.tint||0)}}break;case"<color/>":;case"</color>":break;case"<AlternateContent":s=true;break;case"</AlternateContent>":s=false;break;case"<extLst":;case"<extLst>":;case"</extLst>":break;case"<ext":s=true;break;case"</ext>":s=false;break;default:if(a&&a.WTF){if(!s)throw new Error("unrecognized "+f[0]+" in fonts")};}})}function Zo(e,r,t){r.NumberFmt=[];var a=sr(Z);for(var n=0;n<a.length;++n)r.NumberFmt[a[n]]=Z[a[n]];var i=e[0].match(Yr);if(!i)return;for(n=0;n<i.length;++n){var s=Jr(i[n]);switch(qr(s[0])){case"<numFmts":;case"</numFmts>":;case"<numFmts/>":;case"<numFmts>":break;case"<numFmt":{var f=rt(mt(s.formatCode)),l=parseInt(s.numFmtId,10);r.NumberFmt[l]=f;if(l>0){if(l>392){for(l=392;l>60;--l)if(r.NumberFmt[l]==null)break;r.NumberFmt[l]=f}qe(f,l)}}break;case"</numFmt>":break;default:if(t.WTF)throw new Error("unrecognized "+s[0]+" in numFmts");}}}function Jo(e){var r=["<numFmts>"];[[5,8],[23,26],[41,44],[50,392]].forEach(function(t){for(var a=t[0];a<=t[1];++a)if(e[a]!=null)r[r.length]=xt("numFmt",null,{numFmtId:a,formatCode:nt(e[a])})});if(r.length===1)return"";r[r.length]="</numFmts>";r[0]=xt("numFmts",null,{count:r.length-2}).replace("/>",">");return r.join("")}var qo=["numFmtId","fillId","fontId","borderId","xfId"];var Qo=["applyAlignment","applyBorder","applyFill","applyFont","applyNumberFormat","applyProtection","pivotButton","quotePrefix"];function ec(e,r,t){r.CellXf=[];var a;var n=false;(e[0].match(Yr)||[]).forEach(function(e){var i=Jr(e),s=0;switch(qr(i[0])){case"<cellXfs":;case"<cellXfs>":;case"<cellXfs/>":;case"</cellXfs>":break;case"<xf":;case"<xf/>":a=i;delete a[0];for(s=0;s<qo.length;++s)if(a[qo[s]])a[qo[s]]=parseInt(a[qo[s]],10);for(s=0;s<Qo.length;++s)if(a[Qo[s]])a[Qo[s]]=ut(a[Qo[s]]);if(r.NumberFmt&&a.numFmtId>392){for(s=392;s>60;--s)if(r.NumberFmt[a.numFmtId]==r.NumberFmt[s]){a.numFmtId=s;break}}r.CellXf.push(a);break;case"</xf>":break;case"<alignment":;case"<alignment/>":var f={};if(i.vertical)f.vertical=i.vertical;if(i.horizontal)f.horizontal=i.horizontal;if(i.textRotation!=null)f.textRotation=i.textRotation;if(i.indent)f.indent=i.indent;if(i.wrapText)f.wrapText=ut(i.wrapText);a.alignment=f;break;case"</alignment>":break;case"<protection":break;case"</protection>":;case"<protection/>":break;case"<AlternateContent":n=true;break;case"</AlternateContent>":n=false;break;case"<extLst":;case"<extLst>":;case"</extLst>":break;case"<ext":n=true;break;case"</ext>":n=false;break;default:if(t&&t.WTF){if(!n)throw new Error("unrecognized "+i[0]+" in cellXfs")};}})}function rc(e){var r=[];r[r.length]=xt("cellXfs",null);e.forEach(function(e){r[r.length]=xt("xf",null,e)});r[r.length]="</cellXfs>";if(r.length===2)return"";r[0]=xt("cellXfs",null,{count:r.length-2}).replace("/>",">");return r.join("")}var tc=function Vk(){var e=/<(?:\w+:)?numFmts([^>]*)>[\S\s]*?<\/(?:\w+:)?numFmts>/;var r=/<(?:\w+:)?cellXfs([^>]*)>[\S\s]*?<\/(?:\w+:)?cellXfs>/;var t=/<(?:\w+:)?fills([^>]*)>[\S\s]*?<\/(?:\w+:)?fills>/;var a=/<(?:\w+:)?fonts([^>]*)>[\S\s]*?<\/(?:\w+:)?fonts>/;var n=/<(?:\w+:)?borders([^>]*)>[\S\s]*?<\/(?:\w+:)?borders>/;return function i(s,f,l){var o={};if(!s)return o;s=s.replace(/<!--([\s\S]*?)-->/gm,"").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm,"");var c;if(c=s.match(e))Zo(c,o,l);if(c=s.match(a))Ko(c,o,f,l);if(c=s.match(t))Yo(c,o,f,l);if(c=s.match(n))Xo(c,o,f,l);if(c=s.match(r))ec(c,o,l);return o}}();function ac(e,r){var t=[Gr,xt("styleSheet",null,{xmlns:Ft[0],"xmlns:vt":It.vt})],a;if(e.SSF&&(a=Jo(e.SSF))!=null)t[t.length]=a;t[t.length]='<fonts count="1"><font><sz val="12"/><color theme="1"/><name val="Calibri"/><family val="2"/><scheme val="minor"/></font></fonts>';t[t.length]='<fills count="2"><fill><patternFill patternType="none"/></fill><fill><patternFill patternType="gray125"/></fill></fills>';t[t.length]='<borders count="1"><border><left/><right/><top/><bottom/><diagonal/></border></borders>';t[t.length]='<cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0"/></cellStyleXfs>';if(a=rc(r.cellXfs))t[t.length]=a;t[t.length]='<cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0"/></cellStyles>';t[t.length]='<dxfs count="0"/>';t[t.length]='<tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4"/>';if(t.length>2){t[t.length]="</styleSheet>";t[1]=t[1].replace("/>",">")}return t.join("")}function nc(e,r){var t=e._R(2);var a=Za(e,r-2);return[t,a]}function ic(e,r,t){if(!t)t=wa(6+4*r.length);t._W(2,e);Ja(r,t);var a=t.length>t.l?t.slice(0,t.l):t;if(t.l==null)t.l=t.length;return a}function sc(e,r,t){var a={};a.sz=e._R(2)/20;var n=An(e,2,t);if(n.fItalic)a.italic=1;if(n.fCondense)a.condense=1;if(n.fExtend)a.extend=1;if(n.fShadow)a.shadow=1;if(n.fOutline)a.outline=1;if(n.fStrikeout)a.strike=1;var i=e._R(2);if(i===700)a.bold=1;switch(e._R(2)){case 1:a.vertAlign="superscript";break;case 2:a.vertAlign="subscript";break;}var s=e._R(1);if(s!=0)a.underline=s;var f=e._R(1);if(f>0)a.family=f;var l=e._R(1);if(l>0)a.charset=l;e.l++;a.color=Sn(e,8);switch(e._R(1)){case 1:a.scheme="major";break;case 2:a.scheme="minor";break;}a.name=Za(e,r-21);return a}function fc(e,r){if(!r)r=wa(25+4*32);r._W(2,e.sz*20);xn(e,r);r._W(2,e.bold?700:400);var t=0;if(e.vertAlign=="superscript")t=1;else if(e.vertAlign=="subscript")t=2;r._W(2,t);r._W(1,e.underline||0);r._W(1,e.family||0);r._W(1,e.charset||0);r._W(1,0);_n(e.color,r);var a=0;if(e.scheme=="major")a=1;if(e.scheme=="minor")a=2;r._W(1,a);Ja(e.name,r);return r.length>r.l?r.slice(0,r.l):r}var lc=["none","solid","mediumGray","darkGray","lightGray","darkHorizontal","darkVertical","darkDown","darkUp","darkGrid","darkTrellis","lightHorizontal","lightVertical","lightDown","lightUp","lightGrid","lightTrellis","gray125","gray0625"];var oc;var cc=ga;function uc(e,r){if(!r)r=wa(4*3+8*7+16*1);if(!oc)oc=lr(lc);var t=oc[e.patternType];if(t==null)t=40;r._W(4,t);var a=0;if(t!=40){_n({auto:1},r);_n({auto:1},r);for(;a<12;++a)r._W(4,0)}else{for(;a<4;++a)r._W(4,0);for(;a<12;++a)r._W(4,0)}return r.length>r.l?r.slice(0,r.l):r}function hc(e,r){var t=e.l+r;var a=e._R(2);var n=e._R(2);e.l=t;return{ixfe:a,numFmtId:n}}function dc(e,r,t){if(!t)t=wa(16);t._W(2,r||0);t._W(2,e.numFmtId||0);t._W(2,0);t._W(2,0);t._W(2,0);t._W(1,0);t._W(1,0);var a=0;t._W(1,a);t._W(1,0);t._W(1,0);t._W(1,0);return t}function vc(e,r){if(!r)r=wa(10);r._W(1,0);r._W(1,0);r._W(4,0);r._W(4,0);return r}var pc=ga;function mc(e,r){if(!r)r=wa(51);r._W(1,0);vc(null,r);vc(null,r);vc(null,r);vc(null,r);vc(null,r);return r.length>r.l?r.slice(0,r.l):r}function bc(e,r){if(!r)r=wa(12+4*10);r._W(4,e.xfId);r._W(2,1);r._W(1,+e.builtinId);r._W(1,0);hn(e.name||"",r);return r.length>r.l?r.slice(0,r.l):r}function gc(e,r,t){var a=wa(4+256*2*4);a._W(4,e);hn(r,a);hn(t,a);return a.length>a.l?a.slice(0,a.l):a}function wc(e,r,t){var a={};a.NumberFmt=[];for(var n in Z)a.NumberFmt[n]=Z[n];a.CellXf=[];a.Fonts=[];var i=[];var s=false;ka(e,function f(e,n,l){switch(l){case 44:a.NumberFmt[e[0]]=e[1];qe(e[1],e[0]);break;case 43:a.Fonts.push(e);if(e.color.theme!=null&&r&&r.themeElements&&r.themeElements.clrScheme){e.color.rgb=No(r.themeElements.clrScheme[e.color.theme].rgb,e.color.tint||0)}break;case 1025:break;case 45:break;case 46:break;case 47:if(i[i.length-1]==617){a.CellXf.push(e)}break;case 48:;case 507:;case 572:;case 475:break;case 1171:;case 2102:;case 1130:;case 512:;case 2095:;case 3072:break;case 35:s=true;break;case 36:s=false;break;case 37:i.push(l);s=true;break;case 38:i.pop();s=false;break;default:if(n.T>0)i.push(l);else if(n.T<0)i.pop();else if(!s||t.WTF&&i[i.length-1]!=37)throw new Error("Unexpected record 0x"+l.toString(16));}});return a}function kc(e,r){if(!r)return;var t=0;[[5,8],[23,26],[41,44],[50,392]].forEach(function(e){for(var a=e[0];a<=e[1];++a)if(r[a]!=null)++t});if(t==0)return;Ea(e,615,Ka(t));[[5,8],[23,26],[41,44],[50,392]].forEach(function(t){for(var a=t[0];a<=t[1];++a)if(r[a]!=null)Ea(e,44,ic(a,r[a]))});Ea(e,616)}function Tc(e){var r=1;if(r==0)return;Ea(e,611,Ka(r));Ea(e,43,fc({sz:12,color:{theme:1},name:"Calibri",family:2,scheme:"minor"}));Ea(e,612)}function Ec(e){var r=2;if(r==0)return;Ea(e,603,Ka(r));Ea(e,45,uc({patternType:"none"}));Ea(e,45,uc({patternType:"gray125"}));Ea(e,604)}function yc(e){var r=1;if(r==0)return;Ea(e,613,Ka(r));Ea(e,46,mc({}));Ea(e,614)}function Sc(e){var r=1;Ea(e,626,Ka(r));Ea(e,47,dc({numFmtId:0,fontId:0,fillId:0,borderId:0},65535));Ea(e,627)}function _c(e,r){Ea(e,617,Ka(r.length));r.forEach(function(r){Ea(e,47,dc(r,0))});Ea(e,618)}function Ac(e){var r=1;Ea(e,619,Ka(r));Ea(e,48,bc({xfId:0,builtinId:0,name:"Normal"}));Ea(e,620)}function xc(e){var r=0;Ea(e,505,Ka(r));Ea(e,506)}function Cc(e){var r=0;Ea(e,508,gc(r,"TableStyleMedium9","PivotStyleMedium4"));Ea(e,509)}function Oc(){return}function Rc(e,r){var t=Ta();Ea(t,278);kc(t,e.SSF);Tc(t,e);Ec(t,e);yc(t,e);Sc(t,e);_c(t,r.cellXfs);Ac(t,e);xc(t,e);Cc(t,e);Oc(t,e);Ea(t,279);return t.end()}var Nc=["</a:lt1>","</a:dk1>","</a:lt2>","</a:dk2>","</a:accent1>","</a:accent2>","</a:accent3>","</a:accent4>","</a:accent5>","</a:accent6>","</a:hlink>","</a:folHlink>"];function Ic(e,r,t){r.themeElements.clrScheme=[];var a={};(e[0].match(Yr)||[]).forEach(function(e){var n=Jr(e);switch(n[0]){case"<a:clrScheme":;case"</a:clrScheme>":break;case"<a:srgbClr":a.rgb=n.val;break;case"<a:sysClr":a.rgb=n.lastClr;break;case"<a:dk1>":;case"</a:dk1>":;case"<a:lt1>":;case"</a:lt1>":;case"<a:dk2>":;case"</a:dk2>":;case"<a:lt2>":;case"</a:lt2>":;case"<a:accent1>":;case"</a:accent1>":;case"<a:accent2>":;case"</a:accent2>":;case"<a:accent3>":;case"</a:accent3>":;case"<a:accent4>":;case"</a:accent4>":;case"<a:accent5>":;case"</a:accent5>":;case"<a:accent6>":;case"</a:accent6>":;case"<a:hlink>":;case"</a:hlink>":;case"<a:folHlink>":;case"</a:folHlink>":if(n[0].charAt(1)==="/"){r.themeElements.clrScheme[Nc.indexOf(n[0])]=a;a={}}else{a.name=n[0].slice(3,n[0].length-1)}break;default:if(t&&t.WTF)throw new Error("Unrecognized "+n[0]+" in clrScheme");}})}function Fc(){}function Dc(){}var Pc=/<a:clrScheme([^>]*)>[\s\S]*<\/a:clrScheme>/;var Lc=/<a:fontScheme([^>]*)>[\s\S]*<\/a:fontScheme>/;var Mc=/<a:fmtScheme([^>]*)>[\s\S]*<\/a:fmtScheme>/;function Uc(e,r,t){r.themeElements={};var a;[["clrScheme",Pc,Ic],["fontScheme",Lc,Fc],["fmtScheme",Mc,Dc]].forEach(function(n){if(!(a=e.match(n[1])))throw new Error(n[0]+" not found in themeElements");n[2](a,r,t)})}var Bc=/<a:themeElements([^>]*)>[\s\S]*<\/a:themeElements>/;function Wc(e,r){if(!e||e.length===0)e=Hc();var t;var a={};if(!(t=e.match(Bc)))throw new Error("themeElements not found in theme");Uc(t[0],a,r);a.raw=e;return a}function Hc(e,r){if(r&&r.themeXLSX)return r.themeXLSX;if(e&&typeof e.raw=="string")return e.raw;var t=[Gr];t[t.length]='<a:theme xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" name="Office Theme">';t[t.length]="<a:themeElements>";t[t.length]='<a:clrScheme name="Office">';t[t.length]='<a:dk1><a:sysClr val="windowText" lastClr="000000"/></a:dk1>';t[t.length]='<a:lt1><a:sysClr val="window" lastClr="FFFFFF"/></a:lt1>';t[t.length]='<a:dk2><a:srgbClr val="1F497D"/></a:dk2>';t[t.length]='<a:lt2><a:srgbClr val="EEECE1"/></a:lt2>';t[t.length]='<a:accent1><a:srgbClr val="4F81BD"/></a:accent1>';t[t.length]='<a:accent2><a:srgbClr val="C0504D"/></a:accent2>';t[t.length]='<a:accent3><a:srgbClr val="9BBB59"/></a:accent3>';t[t.length]='<a:accent4><a:srgbClr val="8064A2"/></a:accent4>';t[t.length]='<a:accent5><a:srgbClr val="4BACC6"/></a:accent5>';t[t.length]='<a:accent6><a:srgbClr val="F79646"/></a:accent6>';t[t.length]='<a:hlink><a:srgbClr val="0000FF"/></a:hlink>';t[t.length]='<a:folHlink><a:srgbClr val="800080"/></a:folHlink>';t[t.length]="</a:clrScheme>";t[t.length]='<a:fontScheme name="Office">';t[t.length]="<a:majorFont>";t[t.length]='<a:latin typeface="Cambria"/>';t[t.length]='<a:ea typeface=""/>';t[t.length]='<a:cs typeface=""/>';t[t.length]='<a:font script="Jpan" typeface="ï¼­ï¼³ ï¼°ã´ã·ãã¯"/>';t[t.length]='<a:font script="Hang" typeface="ë§ì ê³ ë"/>';t[t.length]='<a:font script="Hans" typeface="å®ä½"/>';t[t.length]='<a:font script="Hant" typeface="æ°ç´°æé«"/>';t[t.length]='<a:font script="Arab" typeface="Times New Roman"/>';t[t.length]='<a:font script="Hebr" typeface="Times New Roman"/>';t[t.length]='<a:font script="Thai" typeface="Tahoma"/>';t[t.length]='<a:font script="Ethi" typeface="Nyala"/>';t[t.length]='<a:font script="Beng" typeface="Vrinda"/>';t[t.length]='<a:font script="Gujr" typeface="Shruti"/>';t[t.length]='<a:font script="Khmr" typeface="MoolBoran"/>';t[t.length]='<a:font script="Knda" typeface="Tunga"/>';t[t.length]='<a:font script="Guru" typeface="Raavi"/>';t[t.length]='<a:font script="Cans" typeface="Euphemia"/>';t[t.length]='<a:font script="Cher" typeface="Plantagenet Cherokee"/>';t[t.length]='<a:font script="Yiii" typeface="Microsoft Yi Baiti"/>';t[t.length]='<a:font script="Tibt" typeface="Microsoft Himalaya"/>';t[t.length]='<a:font script="Thaa" typeface="MV Boli"/>';t[t.length]='<a:font script="Deva" typeface="Mangal"/>';t[t.length]='<a:font script="Telu" typeface="Gautami"/>';t[t.length]='<a:font script="Taml" typeface="Latha"/>';t[t.length]='<a:font script="Syrc" typeface="Estrangelo Edessa"/>';t[t.length]='<a:font script="Orya" typeface="Kalinga"/>';t[t.length]='<a:font script="Mlym" typeface="Kartika"/>';t[t.length]='<a:font script="Laoo" typeface="DokChampa"/>';t[t.length]='<a:font script="Sinh" typeface="Iskoola Pota"/>';t[t.length]='<a:font script="Mong" typeface="Mongolian Baiti"/>';t[t.length]='<a:font script="Viet" typeface="Times New Roman"/>';t[t.length]='<a:font script="Uigh" typeface="Microsoft Uighur"/>';t[t.length]='<a:font script="Geor" typeface="Sylfaen"/>';t[t.length]="</a:majorFont>";t[t.length]="<a:minorFont>";t[t.length]='<a:latin typeface="Calibri"/>';t[t.length]='<a:ea typeface=""/>';t[t.length]='<a:cs typeface=""/>';t[t.length]='<a:font script="Jpan" typeface="ï¼­ï¼³ ï¼°ã´ã·ãã¯"/>';t[t.length]='<a:font script="Hang" typeface="ë§ì ê³ ë"/>';t[t.length]='<a:font script="Hans" typeface="å®ä½"/>';t[t.length]='<a:font script="Hant" typeface="æ°ç´°æé«"/>';t[t.length]='<a:font script="Arab" typeface="Arial"/>';t[t.length]='<a:font script="Hebr" typeface="Arial"/>';t[t.length]='<a:font script="Thai" typeface="Tahoma"/>';t[t.length]='<a:font script="Ethi" typeface="Nyala"/>';t[t.length]='<a:font script="Beng" typeface="Vrinda"/>';t[t.length]='<a:font script="Gujr" typeface="Shruti"/>';t[t.length]='<a:font script="Khmr" typeface="DaunPenh"/>';t[t.length]='<a:font script="Knda" typeface="Tunga"/>';t[t.length]='<a:font script="Guru" typeface="Raavi"/>';t[t.length]='<a:font script="Cans" typeface="Euphemia"/>';t[t.length]='<a:font script="Cher" typeface="Plantagenet Cherokee"/>';t[t.length]='<a:font script="Yiii" typeface="Microsoft Yi Baiti"/>';t[t.length]='<a:font script="Tibt" typeface="Microsoft Himalaya"/>';t[t.length]='<a:font script="Thaa" typeface="MV Boli"/>';t[t.length]='<a:font script="Deva" typeface="Mangal"/>';t[t.length]='<a:font script="Telu" typeface="Gautami"/>';t[t.length]='<a:font script="Taml" typeface="Latha"/>';t[t.length]='<a:font script="Syrc" typeface="Estrangelo Edessa"/>';t[t.length]='<a:font script="Orya" typeface="Kalinga"/>';t[t.length]='<a:font script="Mlym" typeface="Kartika"/>';t[t.length]='<a:font script="Laoo" typeface="DokChampa"/>';t[t.length]='<a:font script="Sinh" typeface="Iskoola Pota"/>';t[t.length]='<a:font script="Mong" typeface="Mongolian Baiti"/>';t[t.length]='<a:font script="Viet" typeface="Arial"/>';t[t.length]='<a:font script="Uigh" typeface="Microsoft Uighur"/>';t[t.length]='<a:font script="Geor" typeface="Sylfaen"/>';t[t.length]="</a:minorFont>";t[t.length]="</a:fontScheme>";t[t.length]='<a:fmtScheme name="Office">';t[t.length]="<a:fillStyleLst>";t[t.length]='<a:solidFill><a:schemeClr val="phClr"/></a:solidFill>';t[t.length]='<a:gradFill rotWithShape="1">';t[t.length]="<a:gsLst>";t[t.length]='<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="50000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';t[t.length]='<a:gs pos="35000"><a:schemeClr val="phClr"><a:tint val="37000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';
-t[t.length]='<a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="15000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';t[t.length]="</a:gsLst>";t[t.length]='<a:lin ang="16200000" scaled="1"/>';t[t.length]="</a:gradFill>";t[t.length]='<a:gradFill rotWithShape="1">';t[t.length]="<a:gsLst>";t[t.length]='<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="100000"/><a:shade val="100000"/><a:satMod val="130000"/></a:schemeClr></a:gs>';t[t.length]='<a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="50000"/><a:shade val="100000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';t[t.length]="</a:gsLst>";t[t.length]='<a:lin ang="16200000" scaled="0"/>';t[t.length]="</a:gradFill>";t[t.length]="</a:fillStyleLst>";t[t.length]="<a:lnStyleLst>";t[t.length]='<a:ln w="9525" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"><a:shade val="95000"/><a:satMod val="105000"/></a:schemeClr></a:solidFill><a:prstDash val="solid"/></a:ln>';t[t.length]='<a:ln w="25400" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln>';t[t.length]='<a:ln w="38100" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln>';t[t.length]="</a:lnStyleLst>";t[t.length]="<a:effectStyleLst>";t[t.length]="<a:effectStyle>";t[t.length]="<a:effectLst>";t[t.length]='<a:outerShdw blurRad="40000" dist="20000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="38000"/></a:srgbClr></a:outerShdw>';t[t.length]="</a:effectLst>";t[t.length]="</a:effectStyle>";t[t.length]="<a:effectStyle>";t[t.length]="<a:effectLst>";t[t.length]='<a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw>';t[t.length]="</a:effectLst>";t[t.length]="</a:effectStyle>";t[t.length]="<a:effectStyle>";t[t.length]="<a:effectLst>";t[t.length]='<a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw>';t[t.length]="</a:effectLst>";t[t.length]='<a:scene3d><a:camera prst="orthographicFront"><a:rot lat="0" lon="0" rev="0"/></a:camera><a:lightRig rig="threePt" dir="t"><a:rot lat="0" lon="0" rev="1200000"/></a:lightRig></a:scene3d>';t[t.length]='<a:sp3d><a:bevelT w="63500" h="25400"/></a:sp3d>';t[t.length]="</a:effectStyle>";t[t.length]="</a:effectStyleLst>";t[t.length]="<a:bgFillStyleLst>";t[t.length]='<a:solidFill><a:schemeClr val="phClr"/></a:solidFill>';t[t.length]='<a:gradFill rotWithShape="1">';t[t.length]="<a:gsLst>";t[t.length]='<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="40000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';t[t.length]='<a:gs pos="40000"><a:schemeClr val="phClr"><a:tint val="45000"/><a:shade val="99000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';t[t.length]='<a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="20000"/><a:satMod val="255000"/></a:schemeClr></a:gs>';t[t.length]="</a:gsLst>";t[t.length]='<a:path path="circle"><a:fillToRect l="50000" t="-80000" r="50000" b="180000"/></a:path>';t[t.length]="</a:gradFill>";t[t.length]='<a:gradFill rotWithShape="1">';t[t.length]="<a:gsLst>";t[t.length]='<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="80000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';t[t.length]='<a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="30000"/><a:satMod val="200000"/></a:schemeClr></a:gs>';t[t.length]="</a:gsLst>";t[t.length]='<a:path path="circle"><a:fillToRect l="50000" t="50000" r="50000" b="50000"/></a:path>';t[t.length]="</a:gradFill>";t[t.length]="</a:bgFillStyleLst>";t[t.length]="</a:fmtScheme>";t[t.length]="</a:themeElements>";t[t.length]="<a:objectDefaults>";t[t.length]="<a:spDef>";t[t.length]='<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx="1"><a:schemeClr val="accent1"/></a:lnRef><a:fillRef idx="3"><a:schemeClr val="accent1"/></a:fillRef><a:effectRef idx="2"><a:schemeClr val="accent1"/></a:effectRef><a:fontRef idx="minor"><a:schemeClr val="lt1"/></a:fontRef></a:style>';t[t.length]="</a:spDef>";t[t.length]="<a:lnDef>";t[t.length]='<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx="2"><a:schemeClr val="accent1"/></a:lnRef><a:fillRef idx="0"><a:schemeClr val="accent1"/></a:fillRef><a:effectRef idx="1"><a:schemeClr val="accent1"/></a:effectRef><a:fontRef idx="minor"><a:schemeClr val="tx1"/></a:fontRef></a:style>';t[t.length]="</a:lnDef>";t[t.length]="</a:objectDefaults>";t[t.length]="<a:extraClrSchemeLst/>";t[t.length]="</a:theme>";return t.join("")}function zc(e,r,t){var a=e.l+r;var n=e._R(4);if(n===124226)return;if(!t.cellStyles){e.l=a;return}var i=e.slice(e.l);e.l=a;var s;try{s=zr(i,{type:"array"})}catch(f){return}var l=Mr(s,"theme/theme/theme1.xml",true);if(!l)return;return Wc(l,t)}function Vc(e){return e._R(4)}function Gc(e){var r={};r.xclrType=e._R(2);r.nTintShade=e._R(2);switch(r.xclrType){case 0:e.l+=4;break;case 1:r.xclrValue=$c(e,4);break;case 2:r.xclrValue=Cs(e,4);break;case 3:r.xclrValue=Vc(e,4);break;case 4:e.l+=4;break;}e.l+=8;return r}function $c(e,r){return ga(e,r)}function jc(e,r){return ga(e,r)}function Xc(e){var r=e._R(2);var t=e._R(2)-4;var a=[r];switch(r){case 4:;case 5:;case 7:;case 8:;case 9:;case 10:;case 11:;case 13:a[1]=Gc(e,t);break;case 6:a[1]=jc(e,t);break;case 14:;case 15:a[1]=e._R(t===1?1:2);break;default:throw new Error("Unrecognized ExtProp type: "+r+" "+t);}return a}function Yc(e,r){var t=e.l+r;e.l+=2;var a=e._R(2);e.l+=2;var n=e._R(2);var i=[];while(n-- >0)i.push(Xc(e,t-e.l));return{ixfe:a,ext:i}}function Kc(e,r){r.forEach(function(e){switch(e[0]){case 4:break;case 5:break;case 6:break;case 7:break;case 8:break;case 9:break;case 10:break;case 11:break;case 13:break;case 14:break;case 15:break;}})}function Zc(e,r){return{flags:e._R(4),version:e._R(4),name:Za(e,r-8)}}function Jc(e){var r=wa(12+2*e.name.length);r._W(4,e.flags);r._W(4,e.version);Ja(e.name,r);return r.slice(0,r.l)}function qc(e){var r=[];var t=e._R(4);while(t-- >0)r.push([e._R(4),e._R(4)]);return r}function Qc(e){var r=wa(4+8*e.length);r._W(4,e.length);for(var t=0;t<e.length;++t){r._W(4,e[t][0]);r._W(4,e[t][1])}return r}function eu(e,r){var t=wa(8+2*r.length);t._W(4,e);Ja(r,t);return t.slice(0,t.l)}function ru(e){e.l+=4;return e._R(4)!=0}function tu(e,r){var t=wa(8);t._W(4,e);t._W(4,r?1:0);return t}function au(e,r,t){var a={Types:[],Cell:[],Value:[]};var n=t||{};var i=[];var s=false;var f=2;ka(e,function(e,r,t){switch(t){case 335:a.Types.push({name:e.name});break;case 51:e.forEach(function(e){if(f==1)a.Cell.push({type:a.Types[e[0]-1].name,index:e[1]});else if(f==0)a.Value.push({type:a.Types[e[0]-1].name,index:e[1]})});break;case 337:f=e?1:0;break;case 338:f=2;break;case 35:i.push(t);s=true;break;case 36:i.pop();s=false;break;default:if(r.T){}else if(!s||n.WTF&&i[i.length-1]!=35)throw new Error("Unexpected record 0x"+t.toString(16));}});return a}function nu(){var e=Ta();Ea(e,332);Ea(e,334,Ka(1));Ea(e,335,Jc({name:"XLDAPR",version:12e4,flags:3496657072}));Ea(e,336);Ea(e,339,eu(1,"XLDAPR"));Ea(e,52);Ea(e,35,Ka(514));Ea(e,4096,Ka(0));Ea(e,4097,os(1));Ea(e,36);Ea(e,53);Ea(e,340);Ea(e,337,tu(1,true));Ea(e,51,Qc([[1,0]]));Ea(e,338);Ea(e,333);return e.end()}function iu(e,r,t){var a={Types:[],Cell:[],Value:[]};if(!e)return a;var n=false;var i=2;var s;e.replace(Yr,function(e){var r=Jr(e);switch(qr(r[0])){case"<?xml":break;case"<metadata":;case"</metadata>":break;case"<metadataTypes":;case"</metadataTypes>":break;case"<metadataType":a.Types.push({name:r.name});break;case"</metadataType>":break;case"<futureMetadata":for(var f=0;f<a.Types.length;++f)if(a.Types[f].name==r.name)s=a.Types[f];break;case"</futureMetadata>":break;case"<bk>":break;case"</bk>":break;case"<rc":if(i==1)a.Cell.push({type:a.Types[r.t-1].name,index:+r.v});else if(i==0)a.Value.push({type:a.Types[r.t-1].name,index:+r.v});break;case"</rc>":break;case"<cellMetadata":i=1;break;case"</cellMetadata>":i=2;break;case"<valueMetadata":i=0;break;case"</valueMetadata>":i=2;break;case"<extLst":;case"<extLst>":;case"</extLst>":;case"<extLst/>":break;case"<ext":n=true;break;case"</ext>":n=false;break;case"<rvb":if(!s)break;if(!s.offsets)s.offsets=[];s.offsets.push(+r.i);break;default:if(!n&&(t==null?void 0:t.WTF))throw new Error("unrecognized "+r[0]+" in metadata");}return e});return a}function su(){var e=[Gr];e.push('<metadata xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:xlrd="http://schemas.microsoft.com/office/spreadsheetml/2017/richdata" xmlns:xda="http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray">\n  <metadataTypes count="1">\n    <metadataType name="XLDAPR" minSupportedVersion="120000" copy="1" pasteAll="1" pasteValues="1" merge="1" splitFirst="1" rowColShift="1" clearFormats="1" clearComments="1" assign="1" coerce="1" cellMeta="1"/>\n  </metadataTypes>\n  <futureMetadata name="XLDAPR" count="1">\n    <bk>\n      <extLst>\n        <ext uri="{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}">\n          <xda:dynamicArrayProperties fDynamic="1" fCollapsed="0"/>\n        </ext>\n      </extLst>\n    </bk>\n  </futureMetadata>\n  <cellMetadata count="1">\n    <bk>\n      <rc t="1" v="0"/>\n    </bk>\n  </cellMetadata>\n</metadata>');return e.join("")}function fu(e){var r=[];if(!e)return r;var t=1;(e.match(Yr)||[]).forEach(function(e){var a=Jr(e);switch(a[0]){case"<?xml":break;case"<calcChain":;case"<calcChain>":;case"</calcChain>":break;case"<c":delete a[0];if(a.i)t=a.i;else a.i=t;r.push(a);break;}});return r}function lu(e){var r={};r.i=e._R(4);var t={};t.r=e._R(4);t.c=e._R(4);r.r=Ma(t);var a=e._R(1);if(a&2)r.l="1";if(a&8)r.a="1";return r}function ou(e,r,t){var a=[];var n=false;ka(e,function i(e,r,s){switch(s){case 63:a.push(e);break;default:if(r.T){}else if(!n||t.WTF)throw new Error("Unexpected record 0x"+s.toString(16));}});return a}function cu(){}function uu(e,r,t,a){if(!e)return e;var n=a||{};var i=false,s=false;ka(e,function f(e,r,t){if(s)return;switch(t){case 359:;case 363:;case 364:;case 366:;case 367:;case 368:;case 369:;case 370:;case 371:;case 472:;case 577:;case 578:;case 579:;case 580:;case 581:;case 582:;case 583:;case 584:;case 585:;case 586:;case 587:break;case 35:i=true;break;case 36:i=false;break;default:if(r.T){}else if(!i||n.WTF)throw new Error("Unexpected record 0x"+t.toString(16));}},n)}function hu(e,r){if(!e)return"??";var t=(e.match(/<c:chart [^>]*r:id="([^"]*)"/)||["",""])[1];return r["!id"][t].Target}function du(e,r){var t=[21600,21600];var a=["m0,0l0",t[1],t[0],t[1],t[0],"0xe"].join(",");var n=[xt("xml",null,{"xmlns:v":Dt.v,"xmlns:o":Dt.o,"xmlns:x":Dt.x,"xmlns:mv":Dt.mv}).replace(/\/>/,">"),xt("o:shapelayout",xt("o:idmap",null,{"v:ext":"edit",data:e}),{"v:ext":"edit"})];var i=65536*e;var s=r||[];if(s.length>0)n.push(xt("v:shapetype",[xt("v:stroke",null,{joinstyle:"miter"}),xt("v:path",null,{gradientshapeok:"t","o:connecttype":"rect"})].join(""),{id:"_x0000_t202",coordsize:t.join(","),"o:spt":202,path:a}));s.forEach(function(e){++i;n.push(vu(e,i))});n.push("</xml>");return n.join("")}function vu(e,r){var t=La(e[0]);var a={color2:"#BEFF82",type:"gradient"};if(a.type=="gradient")a.angle="-180";var n=a.type=="gradient"?xt("o:fill",null,{type:"gradientUnscaled","v:ext":"view"}):null;var i=xt("v:fill",n,a);var s={on:"t",obscured:"t"};return["<v:shape"+At({id:"_x0000_s"+r,type:"#_x0000_t202",style:"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10"+(e[1].hidden?";visibility:hidden":""),fillcolor:"#ECFAD4",strokecolor:"#edeaa1"})+">",i,xt("v:shadow",null,s),xt("v:path",null,{"o:connecttype":"none"}),'<v:textbox><div style="text-align:left"></div></v:textbox>','<x:ClientData ObjectType="Note">',"<x:MoveWithCells/>","<x:SizeWithCells/>",_t("x:Anchor",[t.c+1,0,t.r+1,0,t.c+3,20,t.r+5,20].join(",")),_t("x:AutoFill","False"),_t("x:Row",String(t.r)),_t("x:Column",String(t.c)),e[1].hidden?"":"<x:Visible/>","</x:ClientData>","</v:shape>"].join("")}function pu(e,r,t,a){var n=Array.isArray(e);var i;r.forEach(function(r){var s=La(r.ref);if(n){if(!e[s.r])e[s.r]=[];i=e[s.r][s.c]}else i=e[r.ref];if(!i){i={t:"z"};if(n)e[s.r][s.c]=i;else e[r.ref]=i;var f=za(e["!ref"]||"BDWGO1000001:A1");if(f.s.r>s.r)f.s.r=s.r;if(f.e.r<s.r)f.e.r=s.r;if(f.s.c>s.c)f.s.c=s.c;if(f.e.c<s.c)f.e.c=s.c;var l=Ba(f);if(l!==e["!ref"])e["!ref"]=l}if(!i.c)i.c=[];var o={a:r.author,t:r.t,r:r.r,T:t};if(r.h)o.h=r.h;for(var c=i.c.length-1;c>=0;--c){if(!t&&i.c[c].T)return;if(t&&!i.c[c].T)i.c.splice(c,1)}if(t&&a)for(c=0;c<a.length;++c){if(o.a==a[c].id){o.a=a[c].name||o.a;break}}i.c.push(o)})}function mu(e,r){if(e.match(/<(?:\w+:)?comments *\/>/))return[];var t=[];var a=[];var n=e.match(/<(?:\w+:)?authors>([\s\S]*)<\/(?:\w+:)?authors>/);if(n&&n[1])n[1].split(/<\/\w*:?author>/).forEach(function(e){if(e===""||e.trim()==="")return;var r=e.match(/<(?:\w+:)?author[^>]*>(.*)/);if(r)t.push(r[1])});var i=e.match(/<(?:\w+:)?commentList>([\s\S]*)<\/(?:\w+:)?commentList>/);if(i&&i[1])i[1].split(/<\/\w*:?comment>/).forEach(function(e){if(e===""||e.trim()==="")return;var n=e.match(/<(?:\w+:)?comment[^>]*>/);if(!n)return;var i=Jr(n[0]);var s={author:i.authorId&&t[i.authorId]||"sheetjsghost",ref:i.ref,guid:i.guid};var f=La(i.ref);if(r.sheetRows&&r.sheetRows<=f.r)return;var l=e.match(/<(?:\w+:)?text>([\s\S]*)<\/(?:\w+:)?text>/);var o=!!l&&!!l[1]&&Hl(l[1])||{r:"",t:"",h:""};s.r=o.r;if(o.r=="<t></t>")o.t=o.h="";s.t=(o.t||"").replace(/\r\n/g,"\n").replace(/\r/g,"\n");if(r.cellHTML)s.h=o.h;a.push(s)});return a}function bu(e){var r=[Gr,xt("comments",null,{xmlns:Ft[0]})];var t=[];r.push("<authors>");e.forEach(function(e){e[1].forEach(function(e){var a=nt(e.a);if(t.indexOf(a)==-1){t.push(a);r.push("<author>"+a+"</author>")}if(e.T&&e.ID&&t.indexOf("tc="+e.ID)==-1){t.push("tc="+e.ID);r.push("<author>"+"tc="+e.ID+"</author>")}})});if(t.length==0){t.push("SheetJ5");r.push("<author>SheetJ5</author>")}r.push("</authors>");r.push("<commentList>");e.forEach(function(e){var a=0,n=[],i=0;if(e[1][0]&&e[1][0].T&&e[1][0].ID)a=t.indexOf("tc="+e[1][0].ID);e[1].forEach(function(e){if(e.a)a=t.indexOf(nt(e.a));if(e.T)++i;n.push(e.t==null?"":nt(e.t))});if(i===0){e[1].forEach(function(a){r.push('<comment ref="'+e[0]+'" authorId="'+t.indexOf(nt(a.a))+'"><text>');r.push(_t("t",a.t==null?"":nt(a.t)));r.push("</text></comment>")})}else{r.push('<comment ref="'+e[0]+'" authorId="'+a+'"><text>');var s="Comment:\n    "+n[0]+"\n";for(var f=1;f<n.length;++f)s+="Reply:\n    "+n[f]+"\n";r.push(_t("t",nt(s)));r.push("</text></comment>")}});r.push("</commentList>");if(r.length>2){r[r.length]="</comments>";r[1]=r[1].replace("/>",">")}return r.join("")}function gu(e,r){var t=[];var a=false,n={},i=0;e.replace(Yr,function s(f,l){var o=Jr(f);switch(qr(o[0])){case"<?xml":break;case"<ThreadedComments":break;case"</ThreadedComments>":break;case"<threadedComment":n={author:o.personId,guid:o.id,ref:o.ref,T:1};break;case"</threadedComment>":if(n.t!=null)t.push(n);break;case"<text>":;case"<text":i=l+f.length;break;case"</text>":n.t=e.slice(i,l).replace(/\r\n/g,"\n").replace(/\r/g,"\n");break;case"<mentions":;case"<mentions>":a=true;break;case"</mentions>":a=false;break;case"<extLst":;case"<extLst>":;case"</extLst>":;case"<extLst/>":break;case"<ext":a=true;break;case"</ext>":a=false;break;default:if(!a&&r.WTF)throw new Error("unrecognized "+o[0]+" in threaded comments");}return f});return t}function wu(e,r,t){var a=[Gr,xt("ThreadedComments",null,{xmlns:It.TCMNT}).replace(/[\/]>/,">")];e.forEach(function(e){var n="";(e[1]||[]).forEach(function(i,s){if(!i.T){delete i.ID;return}if(i.a&&r.indexOf(i.a)==-1)r.push(i.a);var f={ref:e[0],id:"{54EE7951-7262-4200-6969-"+("000000000000"+t.tcid++).slice(-12)+"}"};if(s==0)n=f.id;else f.parentId=n;i.ID=f.id;if(i.a)f.personId="{54EE7950-7262-4200-6969-"+("000000000000"+r.indexOf(i.a)).slice(-12)+"}";a.push(xt("threadedComment",_t("text",i.t||""),f))})});a.push("</ThreadedComments>");return a.join("")}function ku(e,r){var t=[];var a=false;e.replace(Yr,function n(e){var n=Jr(e);switch(qr(n[0])){case"<?xml":break;case"<personList":break;case"</personList>":break;case"<person":t.push({name:n.displayname,id:n.id});break;case"</person>":break;case"<extLst":;case"<extLst>":;case"</extLst>":;case"<extLst/>":break;case"<ext":a=true;break;case"</ext>":a=false;break;default:if(!a&&r.WTF)throw new Error("unrecognized "+n[0]+" in threaded comments");}return e});return t}function Tu(e){var r=[Gr,xt("personList",null,{xmlns:It.TCMNT,"xmlns:x":Ft[0]}).replace(/[\/]>/,">")];e.forEach(function(e,t){r.push(xt("person",null,{displayName:e,id:"{54EE7950-7262-4200-6969-"+("000000000000"+t).slice(-12)+"}",userId:e,providerId:"None"}))});r.push("</personList>");return r.join("")}function Eu(e){var r={};r.iauthor=e._R(4);var t=kn(e,16);r.rfx=t.s;r.ref=Ma(t.s);e.l+=16;return r}function yu(e,r){if(r==null)r=wa(36);r._W(4,e[1].iauthor);Tn(e[0],r);r._W(4,0);r._W(4,0);r._W(4,0);r._W(4,0);return r}var Su=Za;function _u(e){return Ja(e.slice(0,54))}function Au(e,r){var t=[];var a=[];var n={};var i=false;ka(e,function s(e,f,l){switch(l){case 632:a.push(e);break;case 635:n=e;break;case 637:n.t=e.t;n.h=e.h;n.r=e.r;break;case 636:n.author=a[n.iauthor];delete n.iauthor;if(r.sheetRows&&n.rfx&&r.sheetRows<=n.rfx.r)break;if(!n.t)n.t="";delete n.rfx;t.push(n);break;case 3072:break;case 35:i=true;break;case 36:i=false;break;case 37:break;case 38:break;default:if(f.T){}else if(!i||r.WTF)throw new Error("Unexpected record 0x"+l.toString(16));}});return t}function xu(e){var r=Ta();var t=[];Ea(r,628);Ea(r,630);e.forEach(function(e){e[1].forEach(function(e){if(t.indexOf(e.a)>-1)return;t.push(e.a.slice(0,54));Ea(r,632,_u(e.a))})});Ea(r,631);Ea(r,633);e.forEach(function(e){e[1].forEach(function(a){a.iauthor=t.indexOf(a.a);var n={s:La(e[0]),e:La(e[0])};Ea(r,635,yu([n,a]));if(a.t&&a.t.length>0)Ea(r,637,an(a));Ea(r,636);delete a.iauthor})});Ea(r,634);Ea(r,629);return r.end()}var Cu="application/vnd.ms-office.vbaProject";function Ou(e){var r=er.utils.cfb_new({root:"R"});e.FullPaths.forEach(function(t,a){if(t.slice(-1)==="/"||!t.match(/_VBA_PROJECT_CUR/))return;var n=t.replace(/^[^\/]*/,"R").replace(/\/_VBA_PROJECT_CUR\u0000*/,"");er.utils.cfb_add(r,n,e.FileIndex[a].content)});return er.write(r)}function Ru(e,r){r.FullPaths.forEach(function(t,a){if(a==0)return;var n=t.replace(/[^\/]*[\/]/,"/_VBA_PROJECT_CUR/");if(n.slice(-1)!=="/")er.utils.cfb_add(e,n,r.FileIndex[a].content)})}var Nu=["xlsb","xlsm","xlam","biff8","xla"];function Iu(){return{"!type":"dialog"}}function Fu(){return{"!type":"dialog"}}function Du(){return{"!type":"macro"}}function Pu(){return{"!type":"macro"}}var Lu=function(){var e=/(^|[^A-Za-z_])R(\[?-?\d+\]|[1-9]\d*|)C(\[?-?\d+\]|[1-9]\d*|)(?![A-Za-z0-9_])/g;var r={r:0,c:0};function t(e,t,a,n){var i=false,s=false;if(a.length==0)s=true;else if(a.charAt(0)=="["){s=true;a=a.slice(1,-1)}if(n.length==0)i=true;else if(n.charAt(0)=="["){i=true;n=n.slice(1,-1)}var f=a.length>0?parseInt(a,10)|0:0,l=n.length>0?parseInt(n,10)|0:0;if(i)l+=r.c;else--l;if(s)f+=r.r;else--f;return t+(i?"":"$")+Ia(l)+(s?"":"$")+Ca(f)}return function a(n,i){r=i;return n.replace(e,t)}}();var Mu=/(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})(?![_.\(A-Za-z0-9])/g;var Uu=function(){return function e(r,t){return r.replace(Mu,function(e,r,a,n,i,s){var f=Na(n)-(a?0:t.c);var l=xa(s)-(i?0:t.r);var o=i=="$"?l+1:l==0?"":"["+l+"]";var c=a=="$"?f+1:f==0?"":"["+f+"]";return r+"R"+o+"C"+c})}}();function Bu(e,r){return e.replace(Mu,function(e,t,a,n,i,s){return t+(a=="$"?a+n:Ia(Na(n)+r.c))+(i=="$"?i+s:Ca(xa(s)+r.r))})}function Wu(e,r,t){var a=Ua(r),n=a.s,i=La(t);var s={r:i.r-n.r,c:i.c-n.c};return Bu(e,s)}function Hu(e){if(e.length==1)return false;return true}function zu(e){return e.replace(/_xlfn\./g,"")}function Vu(e){e.l+=1;return}function Gu(e,r){var t=e._R(r==1?1:2);return[t&16383,t>>14&1,t>>15&1]}function $u(e,r,t){var a=2;if(t){if(t.biff>=2&&t.biff<=5)return ju(e,r,t);else if(t.biff==12)a=4}var n=e._R(a),i=e._R(a);var s=Gu(e,2);var f=Gu(e,2);return{s:{r:n,c:s[0],cRel:s[1],rRel:s[2]},e:{r:i,c:f[0],cRel:f[1],rRel:f[2]}}}function ju(e){var r=Gu(e,2),t=Gu(e,2);var a=e._R(1);var n=e._R(1);return{s:{r:r[0],c:a,cRel:r[1],rRel:r[2]},e:{r:t[0],c:n,cRel:t[1],rRel:t[2]}}}function Xu(e,r,t){if(t.biff<8)return ju(e,r,t);var a=e._R(t.biff==12?4:2),n=e._R(t.biff==12?4:2);var i=Gu(e,2);var s=Gu(e,2);return{s:{r:a,c:i[0],cRel:i[1],rRel:i[2]},e:{r:n,c:s[0],cRel:s[1],rRel:s[2]}}}function Yu(e,r,t){if(t&&t.biff>=2&&t.biff<=5)return Ku(e,r,t);var a=e._R(t&&t.biff==12?4:2);var n=Gu(e,2);return{r:a,c:n[0],cRel:n[1],rRel:n[2]}}function Ku(e){var r=Gu(e,2);var t=e._R(1);return{r:r[0],c:t,cRel:r[1],rRel:r[2]}}function Zu(e){var r=e._R(2);var t=e._R(2);return{r:r,c:t&255,fQuoted:!!(t&16384),cRel:t>>15,rRel:t>>15}}function Ju(e,r,t){var a=t&&t.biff?t.biff:8;if(a>=2&&a<=5)return qu(e,r,t);var n=e._R(a>=12?4:2);var i=e._R(2);var s=(i&16384)>>14,f=(i&32768)>>15;i&=16383;if(f==1)while(n>524287)n-=1048576;if(s==1)while(i>8191)i=i-16384;return{r:n,c:i,cRel:s,rRel:f}}function qu(e){var r=e._R(2);var t=e._R(1);var a=(r&32768)>>15,n=(r&16384)>>14;r&=16383;if(a==1&&r>=8192)r=r-16384;if(n==1&&t>=128)t=t-256;return{r:r,c:t,cRel:n,rRel:a}}function Qu(e,r,t){var a=(e[e.l++]&96)>>5;var n=$u(e,t.biff>=2&&t.biff<=5?6:8,t);return[a,n]}function eh(e,r,t){var a=(e[e.l++]&96)>>5;var n=e._R(2,"i");var i=8;if(t)switch(t.biff){case 5:e.l+=12;i=6;break;case 12:i=12;break;}var s=$u(e,i,t);return[a,n,s]}function rh(e,r,t){var a=(e[e.l++]&96)>>5;e.l+=t&&t.biff>8?12:t.biff<8?6:8;return[a]}function th(e,r,t){var a=(e[e.l++]&96)>>5;var n=e._R(2);var i=8;if(t)switch(t.biff){case 5:e.l+=12;i=6;break;case 12:i=12;break;}e.l+=i;return[a,n]}function ah(e,r,t){var a=(e[e.l++]&96)>>5;var n=Xu(e,r-1,t);return[a,n]}function nh(e,r,t){var a=(e[e.l++]&96)>>5;e.l+=t.biff==2?6:t.biff==12?14:7;return[a]}function ih(e){var r=e[e.l+1]&1;var t=1;e.l+=4;return[r,t]}function sh(e,r,t){e.l+=2;var a=e._R(t&&t.biff==2?1:2);var n=[];for(var i=0;i<=a;++i)n.push(e._R(t&&t.biff==2?1:2));return n}function fh(e,r,t){var a=e[e.l+1]&255?1:0;e.l+=2;return[a,e._R(t&&t.biff==2?1:2)]}function lh(e,r,t){var a=e[e.l+1]&255?1:0;e.l+=2;return[a,e._R(t&&t.biff==2?1:2)]}function oh(e){var r=e[e.l+1]&255?1:0;e.l+=2;return[r,e._R(2)]}function ch(e,r,t){var a=e[e.l+1]&255?1:0;e.l+=t&&t.biff==2?3:4;return[a]}function uh(e){var r=e._R(1),t=e._R(1);return[r,t]}function hh(e){e._R(2);return uh(e,2)}function dh(e){e._R(2);return uh(e,2)}function vh(e,r,t){var a=(e[e.l]&96)>>5;e.l+=1;var n=Yu(e,0,t);return[a,n]}function ph(e,r,t){var a=(e[e.l]&96)>>5;e.l+=1;var n=Ju(e,0,t);return[a,n]}function mh(e,r,t){var a=(e[e.l]&96)>>5;e.l+=1;var n=e._R(2);if(t&&t.biff==5)e.l+=12;var i=Yu(e,0,t);return[a,n,i]}function bh(e,r,t){var a=(e[e.l]&96)>>5;e.l+=1;var n=e._R(t&&t.biff<=3?1:2);return[$d[n],Gd[n],a]}function gh(e,r,t){var a=e[e.l++];var n=e._R(1),i=t&&t.biff<=3?[a==88?-1:0,e._R(1)]:wh(e);return[n,(i[0]===0?Gd:Vd)[i[1]]]}function wh(e){return[e[e.l+1]>>7,e._R(2)&32767]}function kh(e,r,t){e.l+=t&&t.biff==2?3:4;return}function Th(e,r,t){e.l++;if(t&&t.biff==12)return[e._R(4,"i"),0];var a=e._R(2);var n=e._R(t&&t.biff==2?1:2);return[a,n]}function Eh(e){e.l++;return Jn[e._R(1)]}function yh(e){e.l++;return e._R(2)}function Sh(e){e.l++;return e._R(1)!==0}function _h(e){e.l++;return En(e,8)}function Ah(e,r,t){e.l++;return ds(e,r-1,t)}function xh(e,r){var t=[e._R(1)];if(r==12)switch(t[0]){case 2:t[0]=4;break;case 4:t[0]=16;break;case 0:t[0]=1;break;case 1:t[0]=2;break;}switch(t[0]){case 4:t[1]=ss(e,1)?"TRUE":"FALSE";if(r!=12)e.l+=7;break;case 37:;case 16:t[1]=Jn[e[e.l]];e.l+=r==12?4:8;break;case 0:e.l+=8;break;case 1:t[1]=En(e,8);break;case 2:t[1]=gs(e,0,{biff:r>0&&r<8?2:r});break;default:throw new Error("Bad SerAr: "+t[0]);}return t}function Ch(e,r,t){var a=e._R(t.biff==12?4:2);var n=[];for(var i=0;i!=a;++i)n.push((t.biff==12?kn:Ms)(e,8));return n}function Oh(e,r,t){var a=0,n=0;if(t.biff==12){a=e._R(4);n=e._R(4)}else{n=1+e._R(1);a=1+e._R(2)}if(t.biff>=2&&t.biff<8){--a;if(--n==0)n=256}for(var i=0,s=[];i!=a&&(s[i]=[]);++i)for(var f=0;f!=n;++f)s[i][f]=xh(e,t.biff);return s}function Rh(e,r,t){var a=e._R(1)>>>5&3;var n=!t||t.biff>=8?4:2;var i=e._R(n);switch(t.biff){case 2:e.l+=5;break;case 3:;case 4:e.l+=8;break;case 5:e.l+=12;break;}return[a,0,i]}function Nh(e,r,t){if(t.biff==5)return Ih(e,r,t);var a=e._R(1)>>>5&3;var n=e._R(2);var i=e._R(4);return[a,n,i]}function Ih(e){var r=e._R(1)>>>5&3;var t=e._R(2,"i");e.l+=8;var a=e._R(2);e.l+=12;return[r,t,a]}function Fh(e,r,t){var a=e._R(1)>>>5&3;e.l+=t&&t.biff==2?3:4;var n=e._R(t&&t.biff==2?1:2);return[a,n]}function Dh(e,r,t){var a=e._R(1)>>>5&3;var n=e._R(t&&t.biff==2?1:2);return[a,n]}function Ph(e,r,t){var a=e._R(1)>>>5&3;e.l+=4;if(t.biff<8)e.l--;if(t.biff==12)e.l+=2;return[a]}function Lh(e,r,t){var a=(e[e.l++]&96)>>5;var n=e._R(2);var i=4;if(t)switch(t.biff){case 5:i=15;break;case 12:i=6;break;}e.l+=i;return[a,n]}var Mh=ga;var Uh=ga;var Bh=ga;function Wh(e,r,t){e.l+=2;return[Zu(e,4,t)]}function Hh(e){e.l+=6;return[]}var zh=Wh;var Vh=Hh;var Gh=Hh;var $h=Wh;function jh(e){e.l+=2;return[ls(e),e._R(2)&1]}var Xh=Wh;var Yh=jh;var Kh=Hh;var Zh=Wh;var Jh=Wh;var qh=["Data","All","Headers","??","?Data2","??","?DataHeaders","??","Totals","??","??","??","?DataTotals","??","??","??","?Current"];function Qh(e){e.l+=2;var r=e._R(2);var t=e._R(2);var a=e._R(4);var n=e._R(2);var i=e._R(2);var s=qh[t>>2&31];return{ixti:r,coltype:t&3,rt:s,idx:a,c:n,C:i}}function ed(e){e.l+=2;return[e._R(4)]}function rd(e,r,t){e.l+=5;e.l+=2;e.l+=t.biff==2?1:4;return["PTGSHEET"]}function td(e,r,t){e.l+=t.biff==2?4:5;return["PTGENDSHEET"]}function ad(e){var r=e._R(1)>>>5&3;var t=e._R(2);return[r,t]}function nd(e){var r=e._R(1)>>>5&3;var t=e._R(2);return[r,t]}function id(e){e.l+=4;return[0,0]}var sd={1:{n:"PtgExp",f:Th},2:{n:"PtgTbl",f:Bh},3:{n:"PtgAdd",f:Vu},4:{n:"PtgSub",f:Vu},5:{n:"PtgMul",f:Vu},6:{n:"PtgDiv",f:Vu},7:{n:"PtgPower",f:Vu},8:{n:"PtgConcat",f:Vu},9:{n:"PtgLt",f:Vu},10:{n:"PtgLe",f:Vu},11:{n:"PtgEq",f:Vu},12:{n:"PtgGe",f:Vu},13:{n:"PtgGt",f:Vu},14:{n:"PtgNe",f:Vu},15:{n:"PtgIsect",f:Vu},16:{n:"PtgUnion",f:Vu},17:{n:"PtgRange",f:Vu},18:{n:"PtgUplus",f:Vu},19:{n:"PtgUminus",f:Vu},20:{n:"PtgPercent",f:Vu},21:{n:"PtgParen",f:Vu},22:{n:"PtgMissArg",f:Vu},23:{n:"PtgStr",f:Ah},26:{n:"PtgSheet",f:rd},27:{n:"PtgEndSheet",f:td},28:{n:"PtgErr",f:Eh},29:{n:"PtgBool",f:Sh},30:{n:"PtgInt",f:yh},31:{n:"PtgNum",f:_h},32:{n:"PtgArray",f:nh},33:{n:"PtgFunc",f:bh},34:{n:"PtgFuncVar",f:gh},35:{n:"PtgName",f:Rh},36:{n:"PtgRef",f:vh},37:{n:"PtgArea",f:Qu},38:{n:"PtgMemArea",f:Fh},39:{n:"PtgMemErr",f:Mh},40:{n:"PtgMemNoMem",f:Uh},41:{n:"PtgMemFunc",f:Dh},42:{n:"PtgRefErr",f:Ph},43:{n:"PtgAreaErr",f:rh},44:{n:"PtgRefN",f:ph},45:{n:"PtgAreaN",f:ah},46:{n:"PtgMemAreaN",f:ad},47:{n:"PtgMemNoMemN",f:nd},57:{n:"PtgNameX",f:Nh},58:{n:"PtgRef3d",f:mh},59:{n:"PtgArea3d",f:eh},60:{n:"PtgRefErr3d",f:Lh},61:{n:"PtgAreaErr3d",f:th},255:{}};var fd={64:32,96:32,65:33,97:33,66:34,98:34,67:35,99:35,68:36,100:36,69:37,101:37,70:38,102:38,71:39,103:39,72:40,104:40,73:41,105:41,74:42,106:42,75:43,107:43,76:44,108:44,77:45,109:45,78:46,110:46,79:47,111:47,88:34,120:34,89:57,121:57,90:58,122:58,91:59,123:59,92:60,124:60,93:61,125:61};var ld={1:{n:"PtgElfLel",f:jh},2:{n:"PtgElfRw",f:Zh},3:{n:"PtgElfCol",f:zh},6:{n:"PtgElfRwV",f:Jh},7:{n:"PtgElfColV",f:$h},10:{n:"PtgElfRadical",f:Xh},11:{n:"PtgElfRadicalS",f:Kh},13:{n:"PtgElfColS",f:Vh},15:{n:"PtgElfColSV",f:Gh},16:{n:"PtgElfRadicalLel",f:Yh},25:{n:"PtgList",f:Qh},29:{n:"PtgSxName",f:ed},255:{}};var od={0:{n:"PtgAttrNoop",f:id},1:{n:"PtgAttrSemi",f:ch},2:{n:"PtgAttrIf",f:lh},4:{n:"PtgAttrChoose",f:sh},8:{n:"PtgAttrGoto",f:fh},16:{n:"PtgAttrSum",f:kh},32:{n:"PtgAttrBaxcel",f:ih},33:{n:"PtgAttrBaxcel",f:ih},64:{n:"PtgAttrSpace",f:hh},65:{n:"PtgAttrSpaceSemi",f:dh},128:{n:"PtgAttrIfError",f:oh},255:{}};function cd(e,r,t,a){if(a.biff<8)return ga(e,r);var n=e.l+r;var i=[];for(var s=0;s!==t.length;++s){switch(t[s][0]){case"PtgArray":t[s][1]=Oh(e,0,a);i.push(t[s][1]);break;case"PtgMemArea":t[s][2]=Ch(e,t[s][1],a);i.push(t[s][2]);break;case"PtgExp":if(a&&a.biff==12){t[s][1][1]=e._R(4);i.push(t[s][1])}break;case"PtgList":;case"PtgElfRadicalS":;case"PtgElfColS":;case"PtgElfColSV":throw"Unsupported "+t[s][0];default:break;}}r=n-e.l;if(r!==0)i.push(ga(e,r));return i}function ud(e,r,t){var a=e.l+r;var n,i,s=[];while(a!=e.l){r=a-e.l;i=e[e.l];n=sd[i]||sd[fd[i]];if(i===24||i===25)n=(i===24?ld:od)[e[e.l+1]];if(!n||!n.f){ga(e,r)}else{s.push([n.n,n.f(e,r,t)])}}return s}function hd(e){var r=[];for(var t=0;t<e.length;++t){var a=e[t],n=[];for(var i=0;i<a.length;++i){var s=a[i];if(s)switch(s[0]){case 2:n.push('"'+s[1].replace(/"/g,'""')+'"');break;default:n.push(s[1]);}else n.push("")}r.push(n.join(","))}return r.join(";")}var dd={PtgAdd:"+",PtgConcat:"&",PtgDiv:"/",PtgEq:"=",PtgGe:">=",PtgGt:">",PtgLe:"<=",PtgLt:"<",PtgMul:"*",PtgNe:"<>",PtgPower:"^",PtgSub:"-"};function vd(e,r){var t=e.lastIndexOf("!"),a=r.lastIndexOf("!");if(t==-1&&a==-1)return e+":"+r;if(t>0&&a>0&&e.slice(0,t).toLowerCase()==r.slice(0,a).toLowerCase())return e+":"+r.slice(a+1);console.error("Cannot hydrate range",e,r);return e+":"+r}function pd(e,r,t){if(!e)return"SH33TJSERR0";if(t.biff>8&&(!e.XTI||!e.XTI[r]))return e.SheetNames[r];if(!e.XTI)return"SH33TJSERR6";var a=e.XTI[r];if(t.biff<8){if(r>1e4)r-=65536;if(r<0)r=-r;return r==0?"":e.XTI[r-1]}if(!a)return"SH33TJSERR1";var n="";if(t.biff>8)switch(e[a[0]][0]){case 357:n=a[1]==-1?"#REF":e.SheetNames[a[1]];return a[1]==a[2]?n:n+":"+e.SheetNames[a[2]];case 358:if(t.SID!=null)return e.SheetNames[t.SID];return"SH33TJSSAME"+e[a[0]][0];case 355:;default:return"SH33TJSSRC"+e[a[0]][0];}switch(e[a[0]][0][0]){case 1025:n=a[1]==-1?"#REF":e.SheetNames[a[1]]||"SH33TJSERR3";return a[1]==a[2]?n:n+":"+e.SheetNames[a[2]];case 14849:return e[a[0]].slice(1).map(function(e){return e.Name}).join(";;");default:if(!e[a[0]][0][3])return"SH33TJSERR2";n=a[1]==-1?"#REF":e[a[0]][0][3][a[1]]||"SH33TJSERR4";return a[1]==a[2]?n:n+":"+e[a[0]][0][3][a[2]];}}function md(e,r,t){var a=pd(e,r,t);return a=="#REF"?a:Ha(a,t)}function bd(e,r,t,a,n){var i=n&&n.biff||8;var s={s:{c:0,r:0},e:{c:0,r:0}};var f=[],l,o,c,u=0,h=0,d,v="";if(!e[0]||!e[0][0])return"";var p=-1,m="";for(var b=0,g=e[0].length;b<g;++b){var w=e[0][b];switch(w[0]){case"PtgUminus":f.push("-"+f.pop());break;case"PtgUplus":f.push("+"+f.pop());break;case"PtgPercent":f.push(f.pop()+"%");break;case"PtgAdd":;case"PtgConcat":;case"PtgDiv":;case"PtgEq":;case"PtgGe":;case"PtgGt":;case"PtgLe":;case"PtgLt":;case"PtgMul":;case"PtgNe":;case"PtgPower":;case"PtgSub":l=f.pop();o=f.pop();if(p>=0){switch(e[0][p][1][0]){case 0:m=Sr(" ",e[0][p][1][1]);break;case 1:m=Sr("\r",e[0][p][1][1]);break;default:m="";if(n.WTF)throw new Error("Unexpected PtgAttrSpaceType "+e[0][p][1][0]);}o=o+m;p=-1}f.push(o+dd[w[0]]+l);break;case"PtgIsect":l=f.pop();o=f.pop();f.push(o+" "+l);break;case"PtgUnion":l=f.pop();o=f.pop();f.push(o+","+l);break;case"PtgRange":l=f.pop();o=f.pop();f.push(vd(o,l));break;case"PtgAttrChoose":break;case"PtgAttrGoto":break;case"PtgAttrIf":break;case"PtgAttrIfError":break;case"PtgRef":c=ya(w[1][1],s,n);f.push(_a(c,i));break;case"PtgRefN":c=t?ya(w[1][1],t,n):w[1][1];
-f.push(_a(c,i));break;case"PtgRef3d":u=w[1][1];c=ya(w[1][2],s,n);v=md(a,u,n);var k=v;f.push(v+"!"+_a(c,i));break;case"PtgFunc":;case"PtgFuncVar":var T=w[1][0],E=w[1][1];if(!T)T=0;T&=127;var y=T==0?[]:f.slice(-T);f.length-=T;if(E==="User")E=y.shift();f.push(E+"("+y.join(",")+")");break;case"PtgBool":f.push(w[1]?"TRUE":"FALSE");break;case"PtgInt":f.push(w[1]);break;case"PtgNum":f.push(String(w[1]));break;case"PtgStr":f.push('"'+w[1].replace(/"/g,'""')+'"');break;case"PtgErr":f.push(w[1]);break;case"PtgAreaN":d=Sa(w[1][1],t?{s:t}:s,n);f.push(Aa(d,n));break;case"PtgArea":d=Sa(w[1][1],s,n);f.push(Aa(d,n));break;case"PtgArea3d":u=w[1][1];d=w[1][2];v=md(a,u,n);f.push(v+"!"+Aa(d,n));break;case"PtgAttrSum":f.push("SUM("+f.pop()+")");break;case"PtgAttrBaxcel":;case"PtgAttrSemi":break;case"PtgName":h=w[1][2];var S=(a.names||[])[h-1]||(a[0]||[])[h];var _=S?S.Name:"SH33TJSNAME"+String(h);if(_&&_.slice(0,6)=="_xlfn."&&!n.xlfn)_=_.slice(6);f.push(_);break;case"PtgNameX":var A=w[1][1];h=w[1][2];var x;if(n.biff<=5){if(A<0)A=-A;if(a[A])x=a[A][h]}else{var C="";if(((a[A]||[])[0]||[])[0]==14849){}else if(((a[A]||[])[0]||[])[0]==1025){if(a[A][h]&&a[A][h].itab>0){C=a.SheetNames[a[A][h].itab-1]+"!"}}else C=a.SheetNames[h-1]+"!";if(a[A]&&a[A][h])C+=a[A][h].Name;else if(a[0]&&a[0][h])C+=a[0][h].Name;else{var O=(pd(a,A,n)||"").split(";;");if(O[h-1])C=O[h-1];else C+="SH33TJSERRX"}f.push(C);break}if(!x)x={Name:"SH33TJSERRY"};f.push(x.Name);break;case"PtgParen":var R="(",N=")";if(p>=0){m="";switch(e[0][p][1][0]){case 2:R=Sr(" ",e[0][p][1][1])+R;break;case 3:R=Sr("\r",e[0][p][1][1])+R;break;case 4:N=Sr(" ",e[0][p][1][1])+N;break;case 5:N=Sr("\r",e[0][p][1][1])+N;break;default:if(n.WTF)throw new Error("Unexpected PtgAttrSpaceType "+e[0][p][1][0]);}p=-1}f.push(R+f.pop()+N);break;case"PtgRefErr":f.push("#REF!");break;case"PtgRefErr3d":f.push("#REF!");break;case"PtgExp":c={c:w[1][1],r:w[1][0]};var I={c:t.c,r:t.r};if(a.sharedf[Ma(c)]){var F=a.sharedf[Ma(c)];f.push(bd(F,s,I,a,n))}else{var D=false;for(l=0;l!=a.arrayf.length;++l){o=a.arrayf[l];if(c.c<o[0].s.c||c.c>o[0].e.c)continue;if(c.r<o[0].s.r||c.r>o[0].e.r)continue;f.push(bd(o[1],s,I,a,n));D=true;break}if(!D)f.push(w[1])}break;case"PtgArray":f.push("{"+hd(w[1])+"}");break;case"PtgMemArea":break;case"PtgAttrSpace":;case"PtgAttrSpaceSemi":p=b;break;case"PtgTbl":break;case"PtgMemErr":break;case"PtgMissArg":f.push("");break;case"PtgAreaErr":f.push("#REF!");break;case"PtgAreaErr3d":f.push("#REF!");break;case"PtgList":f.push("Table"+w[1].idx+"[#"+w[1].rt+"]");break;case"PtgMemAreaN":;case"PtgMemNoMemN":;case"PtgAttrNoop":;case"PtgSheet":;case"PtgEndSheet":break;case"PtgMemFunc":break;case"PtgMemNoMem":break;case"PtgElfCol":;case"PtgElfColS":;case"PtgElfColSV":;case"PtgElfColV":;case"PtgElfLel":;case"PtgElfRadical":;case"PtgElfRadicalLel":;case"PtgElfRadicalS":;case"PtgElfRw":;case"PtgElfRwV":throw new Error("Unsupported ELFs");case"PtgSxName":throw new Error("Unrecognized Formula Token: "+String(w));default:throw new Error("Unrecognized Formula Token: "+String(w));}var P=["PtgAttrSpace","PtgAttrSpaceSemi","PtgAttrGoto"];if(n.biff!=3)if(p>=0&&P.indexOf(e[0][b][0])==-1){w=e[0][p];var L=true;switch(w[1][0]){case 4:L=false;case 0:m=Sr(" ",w[1][1]);break;case 5:L=false;case 1:m=Sr("\r",w[1][1]);break;default:m="";if(n.WTF)throw new Error("Unexpected PtgAttrSpaceType "+w[1][0]);}f.push((L?m:"")+f.pop()+(L?"":m));p=-1}}if(f.length>1&&n.WTF)throw new Error("bad formula stack");if(f[0]=="TRUE")return true;if(f[0]=="FALSE")return false;return f[0]}function gd(e,r,t){var a=e.l+r,n=t.biff==2?1:2;var i,s=e._R(n);if(s==65535)return[[],ga(e,r-2)];var f=ud(e,s,t);if(r!==s+n)i=cd(e,r-s-n,f,t);e.l=a;return[f,i]}function wd(e,r,t){var a=e.l+r,n=t.biff==2?1:2;var i,s=e._R(n);if(s==65535)return[[],ga(e,r-2)];var f=ud(e,s,t);if(r!==s+n)i=cd(e,r-s-n,f,t);e.l=a;return[f,i]}function kd(e,r,t,a){var n=e.l+r;var i=ud(e,a,t);var s;if(n!==e.l)s=cd(e,n-e.l,i,t);return[i,s]}function Td(e,r,t){var a=e.l+r;var n,i=e._R(2);var s=ud(e,i,t);if(i==65535)return[[],ga(e,r-2)];if(r!==i+2)n=cd(e,a-i-2,s,t);return[s,n]}function Ed(e){var r;if(sa(e,e.l+6)!==65535)return[En(e),"n"];switch(e[e.l]){case 0:e.l+=8;return["String","s"];case 1:r=e[e.l+2]===1;e.l+=8;return[r,"b"];case 2:r=e[e.l+2];e.l+=8;return[r,"e"];case 3:e.l+=8;return["","s"];}return[]}function yd(e){if(e==null){var r=wa(8);r._W(1,3);r._W(1,0);r._W(2,0);r._W(2,0);r._W(2,65535);return r}else if(typeof e=="number")return yn(e);return yn(0)}function Sd(e,r,t){var a=e.l+r;var n=Rs(e,6);if(t.biff==2)++e.l;var i=Ed(e,8);var s=e._R(1);if(t.biff!=2){e._R(1);if(t.biff>=5){e._R(4)}}var f=wd(e,a-e.l,t);return{cell:n,val:i[0],formula:f,shared:s>>3&1,tt:i[1]}}function _d(e,r,t,a,n){var i=Ns(r,t,n);var s=yd(e.v);var f=wa(6);var l=1|32;f._W(2,l);f._W(4,0);var o=wa(e.bf.length);for(var c=0;c<e.bf.length;++c)o[c]=e.bf[c];var u=F([i,s,f,o]);return u}function Ad(e,r,t){var a=e._R(4);var n=ud(e,a,t);var i=e._R(4);var s=i>0?cd(e,i,n,t):null;return[n,s]}var xd=Ad;var Cd=Ad;var Od=Ad;var Rd=Ad;function Nd(e){if((e|0)==e&&e<Math.pow(2,16)&&e>=0){var r=wa(11);r._W(4,3);r._W(1,30);r._W(2,e);r._W(4,0);return r}var t=wa(17);t._W(4,11);t._W(1,31);t._W(8,e);t._W(4,0);return t}function Id(e){var r=wa(10);r._W(4,2);r._W(1,28);r._W(1,e);r._W(4,0);return r}function Fd(e){var r=wa(10);r._W(4,2);r._W(1,29);r._W(1,e?1:0);r._W(4,0);return r}function Dd(e){var r=wa(7);r._W(4,3+2*e.length);r._W(1,23);r._W(2,e.length);var t=wa(2*e.length);t._W(2*e.length,e,"utf16le");var a=wa(4);a._W(4,0);return F([r,t,a])}function Pd(e){var r=La(e);var t=wa(15);t._W(4,7);t._W(1,4|1<<5);t._W(4,r.r);t._W(2,r.c|(e.charAt(0)=="$"?0:1)<<14|(e.match(/\$\d/)?0:1)<<15);t._W(4,0);return t}function Ld(e,r){var t=e.lastIndexOf("!");var a=e.slice(0,t);e=e.slice(t+1);var n=La(e);if(a.charAt(0)=="'")a=a.slice(1,-1).replace(/''/g,"'");var i=wa(17);i._W(4,9);i._W(1,26|1<<5);i._W(2,2+r.SheetNames.map(function(e){return e.toLowerCase()}).indexOf(a.toLowerCase()));i._W(4,n.r);i._W(2,n.c|(e.charAt(0)=="$"?0:1)<<14|(e.match(/\$\d/)?0:1)<<15);i._W(4,0);return i}function Md(e,r){var t=e.lastIndexOf("!");var a=e.slice(0,t);e=e.slice(t+1);if(a.charAt(0)=="'")a=a.slice(1,-1).replace(/''/g,"'");var n=wa(17);n._W(4,9);n._W(1,28|1<<5);n._W(2,2+r.SheetNames.map(function(e){return e.toLowerCase()}).indexOf(a.toLowerCase()));n._W(4,0);n._W(2,0);n._W(4,0);return n}function Ud(e){var r=e.split(":"),t=r[0];var a=wa(23);a._W(4,15);t=r[0];var n=La(t);a._W(1,4|1<<5);a._W(4,n.r);a._W(2,n.c|(t.charAt(0)=="$"?0:1)<<14|(t.match(/\$\d/)?0:1)<<15);a._W(4,0);t=r[1];n=La(t);a._W(1,4|1<<5);a._W(4,n.r);a._W(2,n.c|(t.charAt(0)=="$"?0:1)<<14|(t.match(/\$\d/)?0:1)<<15);a._W(4,0);a._W(1,17);a._W(4,0);return a}function Bd(e,r){var t=e.lastIndexOf("!");var a=e.slice(0,t);e=e.slice(t+1);if(a.charAt(0)=="'")a=a.slice(1,-1).replace(/''/g,"'");var n=e.split(":");s=n[0];var i=wa(27);i._W(4,19);var s=n[0],f=La(s);i._W(1,26|1<<5);i._W(2,2+r.SheetNames.map(function(e){return e.toLowerCase()}).indexOf(a.toLowerCase()));i._W(4,f.r);i._W(2,f.c|(s.charAt(0)=="$"?0:1)<<14|(s.match(/\$\d/)?0:1)<<15);s=n[1];f=La(s);i._W(1,26|1<<5);i._W(2,2+r.SheetNames.map(function(e){return e.toLowerCase()}).indexOf(a.toLowerCase()));i._W(4,f.r);i._W(2,f.c|(s.charAt(0)=="$"?0:1)<<14|(s.match(/\$\d/)?0:1)<<15);i._W(1,17);i._W(4,0);return i}function Wd(e,r){var t=e.lastIndexOf("!");var a=e.slice(0,t);e=e.slice(t+1);if(a.charAt(0)=="'")a=a.slice(1,-1).replace(/''/g,"'");var n=Ua(e);var i=wa(23);i._W(4,15);i._W(1,27|1<<5);i._W(2,2+r.SheetNames.map(function(e){return e.toLowerCase()}).indexOf(a.toLowerCase()));i._W(4,n.s.r);i._W(4,n.e.r);i._W(2,n.s.c);i._W(2,n.e.c);i._W(4,0);return i}function Hd(e,r){if(typeof e=="number")return Nd(e);if(typeof e=="boolean")return Fd(e);if(/^#(DIV\/0!|GETTING_DATA|N\/A|NAME\?|NULL!|NUM!|REF!|VALUE!)$/.test(e))return Id(+qn[e]);if(e.match(/^\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\$?(?:10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})$/))return Pd(e);if(e.match(/^\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\$?(?:10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5}):\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\$?(?:10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})$/))return Ud(e);if(e.match(/^#REF!\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\$?(?:10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5}):\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\$?(?:10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})$/))return Wd(e,r);if(e.match(/^(?:'[^\\\/?*\[\]:]*'|[^'][^\\\/?*\[\]:'`~!@#$%^()\-=+{}|;,<.>]*)!\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\$?(?:10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})$/))return Ld(e,r);if(e.match(/^(?:'[^\\\/?*\[\]:]*'|[^'][^\\\/?*\[\]:'`~!@#$%^()\-=+{}|;,<.>]*)!\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\$?(?:10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5}):\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\$?(?:10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})$/))return Bd(e,r);if(/^(?:'[^\\\/?*\[\]:]*'|[^'][^\\\/?*\[\]:'`~!@#$%^()\-=+{}|;,<.>]*)!#REF!$/.test(e))return Md(e,r);if(/^".*"$/.test(e))return Dd(e);if(/^[+-]\d+$/.test(e))return Nd(parseInt(e,10));throw"Formula |"+e+"| not supported for XLSB"}var zd=Hd;var Vd={0:"BEEP",1:"OPEN",2:"OPEN.LINKS",3:"CLOSE.ALL",4:"SAVE",5:"SAVE.AS",6:"FILE.DELETE",7:"PAGE.SETUP",8:"PRINT",9:"PRINTER.SETUP",10:"QUIT",11:"NEW.WINDOW",12:"ARRANGE.ALL",13:"WINDOW.SIZE",14:"WINDOW.MOVE",15:"FULL",16:"CLOSE",17:"RUN",22:"SET.PRINT.AREA",23:"SET.PRINT.TITLES",24:"SET.PAGE.BREAK",25:"REMOVE.PAGE.BREAK",26:"FONT",27:"DISPLAY",28:"PROTECT.DOCUMENT",29:"PRECISION",30:"A1.R1C1",31:"CALCULATE.NOW",32:"CALCULATION",34:"DATA.FIND",35:"EXTRACT",36:"DATA.DELETE",37:"SET.DATABASE",38:"SET.CRITERIA",39:"SORT",40:"DATA.SERIES",41:"TABLE",42:"FORMAT.NUMBER",43:"ALIGNMENT",44:"STYLE",45:"BORDER",46:"CELL.PROTECTION",47:"COLUMN.WIDTH",48:"UNDO",49:"CUT",50:"COPY",51:"PASTE",52:"CLEAR",53:"PASTE.SPECIAL",54:"EDIT.DELETE",55:"INSERT",56:"FILL.RIGHT",57:"FILL.DOWN",61:"DEFINE.NAME",62:"CREATE.NAMES",63:"FORMULA.GOTO",64:"FORMULA.FIND",65:"SELECT.LAST.CELL",66:"SHOW.ACTIVE.CELL",67:"GALLERY.AREA",68:"GALLERY.BAR",69:"GALLERY.COLUMN",70:"GALLERY.LINE",71:"GALLERY.PIE",72:"GALLERY.SCATTER",73:"COMBINATION",74:"PREFERRED",75:"ADD.OVERLAY",76:"GRIDLINES",77:"SET.PREFERRED",78:"AXES",79:"LEGEND",80:"ATTACH.TEXT",81:"ADD.ARROW",82:"SELECT.CHART",83:"SELECT.PLOT.AREA",84:"PATTERNS",85:"MAIN.CHART",86:"OVERLAY",87:"SCALE",88:"FORMAT.LEGEND",89:"FORMAT.TEXT",90:"EDIT.REPEAT",91:"PARSE",92:"JUSTIFY",93:"HIDE",94:"UNHIDE",95:"WORKSPACE",96:"FORMULA",97:"FORMULA.FILL",98:"FORMULA.ARRAY",99:"DATA.FIND.NEXT",100:"DATA.FIND.PREV",101:"FORMULA.FIND.NEXT",102:"FORMULA.FIND.PREV",103:"ACTIVATE",104:"ACTIVATE.NEXT",105:"ACTIVATE.PREV",106:"UNLOCKED.NEXT",107:"UNLOCKED.PREV",108:"COPY.PICTURE",109:"SELECT",110:"DELETE.NAME",111:"DELETE.FORMAT",112:"VLINE",113:"HLINE",114:"VPAGE",115:"HPAGE",116:"VSCROLL",117:"HSCROLL",118:"ALERT",119:"NEW",120:"CANCEL.COPY",121:"SHOW.CLIPBOARD",122:"MESSAGE",124:"PASTE.LINK",125:"APP.ACTIVATE",126:"DELETE.ARROW",127:"ROW.HEIGHT",128:"FORMAT.MOVE",129:"FORMAT.SIZE",130:"FORMULA.REPLACE",131:"SEND.KEYS",132:"SELECT.SPECIAL",133:"APPLY.NAMES",134:"REPLACE.FONT",135:"FREEZE.PANES",136:"SHOW.INFO",137:"SPLIT",138:"ON.WINDOW",139:"ON.DATA",140:"DISABLE.INPUT",142:"OUTLINE",143:"LIST.NAMES",144:"FILE.CLOSE",145:"SAVE.WORKBOOK",146:"DATA.FORM",147:"COPY.CHART",148:"ON.TIME",149:"WAIT",150:"FORMAT.FONT",151:"FILL.UP",152:"FILL.LEFT",153:"DELETE.OVERLAY",155:"SHORT.MENUS",159:"SET.UPDATE.STATUS",161:"COLOR.PALETTE",162:"DELETE.STYLE",163:"WINDOW.RESTORE",164:"WINDOW.MAXIMIZE",166:"CHANGE.LINK",167:"CALCULATE.DOCUMENT",168:"ON.KEY",169:"APP.RESTORE",170:"APP.MOVE",171:"APP.SIZE",172:"APP.MINIMIZE",173:"APP.MAXIMIZE",174:"BRING.TO.FRONT",175:"SEND.TO.BACK",185:"MAIN.CHART.TYPE",186:"OVERLAY.CHART.TYPE",187:"SELECT.END",188:"OPEN.MAIL",189:"SEND.MAIL",190:"STANDARD.FONT",191:"CONSOLIDATE",192:"SORT.SPECIAL",193:"GALLERY.3D.AREA",194:"GALLERY.3D.COLUMN",195:"GALLERY.3D.LINE",196:"GALLERY.3D.PIE",197:"VIEW.3D",198:"GOAL.SEEK",199:"WORKGROUP",200:"FILL.GROUP",201:"UPDATE.LINK",202:"PROMOTE",203:"DEMOTE",204:"SHOW.DETAIL",206:"UNGROUP",207:"OBJECT.PROPERTIES",208:"SAVE.NEW.OBJECT",209:"SHARE",210:"SHARE.NAME",211:"DUPLICATE",212:"APPLY.STYLE",213:"ASSIGN.TO.OBJECT",214:"OBJECT.PROTECTION",215:"HIDE.OBJECT",216:"SET.EXTRACT",217:"CREATE.PUBLISHER",218:"SUBSCRIBE.TO",219:"ATTRIBUTES",220:"SHOW.TOOLBAR",222:"PRINT.PREVIEW",223:"EDIT.COLOR",224:"SHOW.LEVELS",225:"FORMAT.MAIN",226:"FORMAT.OVERLAY",227:"ON.RECALC",228:"EDIT.SERIES",229:"DEFINE.STYLE",240:"LINE.PRINT",243:"ENTER.DATA",249:"GALLERY.RADAR",250:"MERGE.STYLES",251:"EDITION.OPTIONS",252:"PASTE.PICTURE",253:"PASTE.PICTURE.LINK",254:"SPELLING",256:"ZOOM",259:"INSERT.OBJECT",260:"WINDOW.MINIMIZE",265:"SOUND.NOTE",266:"SOUND.PLAY",267:"FORMAT.SHAPE",268:"EXTEND.POLYGON",269:"FORMAT.AUTO",272:"GALLERY.3D.BAR",273:"GALLERY.3D.SURFACE",274:"FILL.AUTO",276:"CUSTOMIZE.TOOLBAR",277:"ADD.TOOL",278:"EDIT.OBJECT",279:"ON.DOUBLECLICK",280:"ON.ENTRY",281:"WORKBOOK.ADD",282:"WORKBOOK.MOVE",283:"WORKBOOK.COPY",284:"WORKBOOK.OPTIONS",285:"SAVE.WORKSPACE",288:"CHART.WIZARD",289:"DELETE.TOOL",290:"MOVE.TOOL",291:"WORKBOOK.SELECT",292:"WORKBOOK.ACTIVATE",293:"ASSIGN.TO.TOOL",295:"COPY.TOOL",296:"RESET.TOOL",297:"CONSTRAIN.NUMERIC",298:"PASTE.TOOL",302:"WORKBOOK.NEW",305:"SCENARIO.CELLS",306:"SCENARIO.DELETE",307:"SCENARIO.ADD",308:"SCENARIO.EDIT",309:"SCENARIO.SHOW",310:"SCENARIO.SHOW.NEXT",311:"SCENARIO.SUMMARY",312:"PIVOT.TABLE.WIZARD",313:"PIVOT.FIELD.PROPERTIES",314:"PIVOT.FIELD",315:"PIVOT.ITEM",316:"PIVOT.ADD.FIELDS",318:"OPTIONS.CALCULATION",319:"OPTIONS.EDIT",320:"OPTIONS.VIEW",321:"ADDIN.MANAGER",322:"MENU.EDITOR",323:"ATTACH.TOOLBARS",324:"VBAActivate",325:"OPTIONS.CHART",328:"VBA.INSERT.FILE",330:"VBA.PROCEDURE.DEFINITION",336:"ROUTING.SLIP",338:"ROUTE.DOCUMENT",339:"MAIL.LOGON",342:"INSERT.PICTURE",343:"EDIT.TOOL",344:"GALLERY.DOUGHNUT",350:"CHART.TREND",352:"PIVOT.ITEM.PROPERTIES",354:"WORKBOOK.INSERT",355:"OPTIONS.TRANSITION",356:"OPTIONS.GENERAL",370:"FILTER.ADVANCED",373:"MAIL.ADD.MAILER",374:"MAIL.DELETE.MAILER",375:"MAIL.REPLY",376:"MAIL.REPLY.ALL",377:"MAIL.FORWARD",378:"MAIL.NEXT.LETTER",379:"DATA.LABEL",380:"INSERT.TITLE",381:"FONT.PROPERTIES",382:"MACRO.OPTIONS",383:"WORKBOOK.HIDE",384:"WORKBOOK.UNHIDE",385:"WORKBOOK.DELETE",386:"WORKBOOK.NAME",388:"GALLERY.CUSTOM",390:"ADD.CHART.AUTOFORMAT",391:"DELETE.CHART.AUTOFORMAT",392:"CHART.ADD.DATA",393:"AUTO.OUTLINE",394:"TAB.ORDER",395:"SHOW.DIALOG",396:"SELECT.ALL",397:"UNGROUP.SHEETS",398:"SUBTOTAL.CREATE",399:"SUBTOTAL.REMOVE",400:"RENAME.OBJECT",412:"WORKBOOK.SCROLL",413:"WORKBOOK.NEXT",414:"WORKBOOK.PREV",415:"WORKBOOK.TAB.SPLIT",416:"FULL.SCREEN",417:"WORKBOOK.PROTECT",420:"SCROLLBAR.PROPERTIES",421:"PIVOT.SHOW.PAGES",422:"TEXT.TO.COLUMNS",423:"FORMAT.CHARTTYPE",424:"LINK.FORMAT",425:"TRACER.DISPLAY",430:"TRACER.NAVIGATE",431:"TRACER.CLEAR",432:"TRACER.ERROR",433:"PIVOT.FIELD.GROUP",434:"PIVOT.FIELD.UNGROUP",435:"CHECKBOX.PROPERTIES",436:"LABEL.PROPERTIES",437:"LISTBOX.PROPERTIES",438:"EDITBOX.PROPERTIES",439:"PIVOT.REFRESH",440:"LINK.COMBO",441:"OPEN.TEXT",442:"HIDE.DIALOG",443:"SET.DIALOG.FOCUS",444:"ENABLE.OBJECT",445:"PUSHBUTTON.PROPERTIES",446:"SET.DIALOG.DEFAULT",447:"FILTER",448:"FILTER.SHOW.ALL",449:"CLEAR.OUTLINE",450:"FUNCTION.WIZARD",451:"ADD.LIST.ITEM",452:"SET.LIST.ITEM",453:"REMOVE.LIST.ITEM",454:"SELECT.LIST.ITEM",455:"SET.CONTROL.VALUE",456:"SAVE.COPY.AS",458:"OPTIONS.LISTS.ADD",459:"OPTIONS.LISTS.DELETE",460:"SERIES.AXES",461:"SERIES.X",462:"SERIES.Y",463:"ERRORBAR.X",464:"ERRORBAR.Y",465:"FORMAT.CHART",466:"SERIES.ORDER",467:"MAIL.LOGOFF",468:"CLEAR.ROUTING.SLIP",469:"APP.ACTIVATE.MICROSOFT",470:"MAIL.EDIT.MAILER",471:"ON.SHEET",472:"STANDARD.WIDTH",473:"SCENARIO.MERGE",474:"SUMMARY.INFO",475:"FIND.FILE",476:"ACTIVE.CELL.FONT",477:"ENABLE.TIPWIZARD",478:"VBA.MAKE.ADDIN",480:"INSERTDATATABLE",481:"WORKGROUP.OPTIONS",482:"MAIL.SEND.MAILER",485:"AUTOCORRECT",489:"POST.DOCUMENT",491:"PICKLIST",493:"VIEW.SHOW",494:"VIEW.DEFINE",495:"VIEW.DELETE",509:"SHEET.BACKGROUND",510:"INSERT.MAP.OBJECT",511:"OPTIONS.MENONO",517:"MSOCHECKS",518:"NORMAL",519:"LAYOUT",520:"RM.PRINT.AREA",521:"CLEAR.PRINT.AREA",522:"ADD.PRINT.AREA",523:"MOVE.BRK",545:"HIDECURR.NOTE",546:"HIDEALL.NOTES",547:"DELETE.NOTE",548:"TRAVERSE.NOTES",549:"ACTIVATE.NOTES",620:"PROTECT.REVISIONS",621:"UNPROTECT.REVISIONS",647:"OPTIONS.ME",653:"WEB.PUBLISH",667:"NEWWEBQUERY",673:"PIVOT.TABLE.CHART",753:"OPTIONS.SAVE",755:"OPTIONS.SPELL",808:"HIDEALL.INKANNOTS"};var Gd={0:"COUNT",1:"IF",2:"ISNA",3:"ISERROR",4:"SUM",5:"AVERAGE",6:"MIN",7:"MAX",8:"ROW",9:"COLUMN",10:"NA",11:"NPV",12:"STDEV",13:"DOLLAR",14:"FIXED",15:"SIN",16:"COS",17:"TAN",18:"ATAN",19:"PI",20:"SQRT",21:"EXP",22:"LN",23:"LOG10",24:"ABS",25:"INT",26:"SIGN",27:"ROUND",28:"LOOKUP",29:"INDEX",30:"REPT",31:"MID",32:"LEN",33:"VALUE",34:"TRUE",35:"FALSE",36:"AND",37:"OR",38:"NOT",39:"MOD",40:"DCOUNT",41:"DSUM",42:"DAVERAGE",43:"DMIN",44:"DMAX",45:"DSTDEV",46:"VAR",47:"DVAR",48:"TEXT",49:"LINEST",50:"TREND",51:"LOGEST",52:"GROWTH",53:"GOTO",54:"HALT",55:"RETURN",56:"PV",57:"FV",58:"NPER",59:"PMT",60:"RATE",61:"MIRR",62:"IRR",63:"RAND",64:"MATCH",65:"DATE",66:"TIME",67:"DAY",68:"MONTH",69:"YEAR",70:"WEEKDAY",71:"HOUR",72:"MINUTE",73:"SECOND",74:"NOW",75:"AREAS",76:"ROWS",77:"COLUMNS",78:"OFFSET",79:"ABSREF",80:"RELREF",81:"ARGUMENT",82:"SEARCH",83:"TRANSPOSE",84:"ERROR",85:"STEP",86:"TYPE",87:"ECHO",88:"SET.NAME",89:"CALLER",90:"DEREF",91:"WINDOWS",92:"SERIES",93:"DOCUMENTS",94:"ACTIVE.CELL",95:"SELECTION",96:"RESULT",97:"ATAN2",98:"ASIN",99:"ACOS",100:"CHOOSE",101:"HLOOKUP",102:"VLOOKUP",103:"LINKS",104:"INPUT",105:"ISREF",106:"GET.FORMULA",107:"GET.NAME",108:"SET.VALUE",109:"LOG",110:"EXEC",111:"CHAR",112:"LOWER",113:"UPPER",114:"PROPER",115:"LEFT",116:"RIGHT",117:"EXACT",118:"TRIM",119:"REPLACE",120:"SUBSTITUTE",121:"CODE",122:"NAMES",123:"DIRECTORY",124:"FIND",125:"CELL",126:"ISERR",127:"ISTEXT",128:"ISNUMBER",129:"ISBLANK",130:"T",131:"N",132:"FOPEN",133:"FCLOSE",134:"FSIZE",135:"FREADLN",136:"FREAD",137:"FWRITELN",138:"FWRITE",139:"FPOS",140:"DATEVALUE",141:"TIMEVALUE",142:"SLN",143:"SYD",144:"DDB",145:"GET.DEF",146:"REFTEXT",147:"TEXTREF",148:"INDIRECT",149:"REGISTER",150:"CALL",151:"ADD.BAR",152:"ADD.MENU",153:"ADD.COMMAND",154:"ENABLE.COMMAND",155:"CHECK.COMMAND",156:"RENAME.COMMAND",157:"SHOW.BAR",158:"DELETE.MENU",159:"DELETE.COMMAND",160:"GET.CHART.ITEM",161:"DIALOG.BOX",162:"CLEAN",163:"MDETERM",164:"MINVERSE",165:"MMULT",166:"FILES",167:"IPMT",168:"PPMT",169:"COUNTA",170:"CANCEL.KEY",171:"FOR",172:"WHILE",173:"BREAK",174:"NEXT",175:"INITIATE",176:"REQUEST",177:"POKE",178:"EXECUTE",179:"TERMINATE",180:"RESTART",181:"HELP",182:"GET.BAR",183:"PRODUCT",184:"FACT",185:"GET.CELL",186:"GET.WORKSPACE",187:"GET.WINDOW",188:"GET.DOCUMENT",189:"DPRODUCT",190:"ISNONTEXT",191:"GET.NOTE",192:"NOTE",193:"STDEVP",194:"VARP",195:"DSTDEVP",196:"DVARP",197:"TRUNC",198:"ISLOGICAL",199:"DCOUNTA",200:"DELETE.BAR",201:"UNREGISTER",204:"USDOLLAR",205:"FINDB",206:"SEARCHB",207:"REPLACEB",208:"LEFTB",209:"RIGHTB",210:"MIDB",211:"LENB",212:"ROUNDUP",213:"ROUNDDOWN",214:"ASC",215:"DBCS",216:"RANK",219:"ADDRESS",220:"DAYS360",221:"TODAY",222:"VDB",223:"ELSE",224:"ELSE.IF",225:"END.IF",226:"FOR.CELL",227:"MEDIAN",228:"SUMPRODUCT",229:"SINH",230:"COSH",231:"TANH",232:"ASINH",233:"ACOSH",234:"ATANH",235:"DGET",236:"CREATE.OBJECT",237:"VOLATILE",238:"LAST.ERROR",239:"CUSTOM.UNDO",240:"CUSTOM.REPEAT",241:"FORMULA.CONVERT",242:"GET.LINK.INFO",243:"TEXT.BOX",244:"INFO",245:"GROUP",246:"GET.OBJECT",247:"DB",248:"PAUSE",251:"RESUME",252:"FREQUENCY",253:"ADD.TOOLBAR",254:"DELETE.TOOLBAR",255:"User",256:"RESET.TOOLBAR",257:"EVALUATE",258:"GET.TOOLBAR",259:"GET.TOOL",260:"SPELLING.CHECK",261:"ERROR.TYPE",262:"APP.TITLE",263:"WINDOW.TITLE",264:"SAVE.TOOLBAR",265:"ENABLE.TOOL",266:"PRESS.TOOL",267:"REGISTER.ID",268:"GET.WORKBOOK",269:"AVEDEV",270:"BETADIST",271:"GAMMALN",272:"BETAINV",273:"BINOMDIST",274:"CHIDIST",275:"CHIINV",276:"COMBIN",277:"CONFIDENCE",278:"CRITBINOM",279:"EVEN",280:"EXPONDIST",281:"FDIST",282:"FINV",283:"FISHER",284:"FISHERINV",285:"FLOOR",286:"GAMMADIST",287:"GAMMAINV",288:"CEILING",289:"HYPGEOMDIST",290:"LOGNORMDIST",291:"LOGINV",292:"NEGBINOMDIST",293:"NORMDIST",294:"NORMSDIST",295:"NORMINV",296:"NORMSINV",297:"STANDARDIZE",298:"ODD",299:"PERMUT",300:"POISSON",301:"TDIST",302:"WEIBULL",303:"SUMXMY2",304:"SUMX2MY2",305:"SUMX2PY2",306:"CHITEST",307:"CORREL",308:"COVAR",309:"FORECAST",310:"FTEST",311:"INTERCEPT",312:"PEARSON",313:"RSQ",314:"STEYX",315:"SLOPE",316:"TTEST",317:"PROB",318:"DEVSQ",319:"GEOMEAN",320:"HARMEAN",321:"SUMSQ",322:"KURT",323:"SKEW",324:"ZTEST",325:"LARGE",326:"SMALL",327:"QUARTILE",328:"PERCENTILE",329:"PERCENTRANK",330:"MODE",331:"TRIMMEAN",332:"TINV",334:"MOVIE.COMMAND",335:"GET.MOVIE",336:"CONCATENATE",337:"POWER",338:"PIVOT.ADD.DATA",339:"GET.PIVOT.TABLE",340:"GET.PIVOT.FIELD",341:"GET.PIVOT.ITEM",342:"RADIANS",343:"DEGREES",344:"SUBTOTAL",345:"SUMIF",346:"COUNTIF",347:"COUNTBLANK",348:"SCENARIO.GET",349:"OPTIONS.LISTS.GET",350:"ISPMT",351:"DATEDIF",352:"DATESTRING",353:"NUMBERSTRING",354:"ROMAN",355:"OPEN.DIALOG",356:"SAVE.DIALOG",357:"VIEW.GET",358:"GETPIVOTDATA",359:"HYPERLINK",360:"PHONETIC",361:"AVERAGEA",362:"MAXA",363:"MINA",364:"STDEVPA",365:"VARPA",366:"STDEVA",367:"VARA",368:"BAHTTEXT",369:"THAIDAYOFWEEK",370:"THAIDIGIT",371:"THAIMONTHOFYEAR",372:"THAINUMSOUND",373:"THAINUMSTRING",374:"THAISTRINGLENGTH",375:"ISTHAIDIGIT",376:"ROUNDBAHTDOWN",377:"ROUNDBAHTUP",378:"THAIYEAR",379:"RTD",380:"CUBEVALUE",381:"CUBEMEMBER",382:"CUBEMEMBERPROPERTY",383:"CUBERANKEDMEMBER",384:"HEX2BIN",385:"HEX2DEC",386:"HEX2OCT",387:"DEC2BIN",388:"DEC2HEX",389:"DEC2OCT",390:"OCT2BIN",391:"OCT2HEX",392:"OCT2DEC",393:"BIN2DEC",394:"BIN2OCT",395:"BIN2HEX",396:"IMSUB",397:"IMDIV",398:"IMPOWER",399:"IMABS",400:"IMSQRT",401:"IMLN",402:"IMLOG2",403:"IMLOG10",404:"IMSIN",405:"IMCOS",406:"IMEXP",407:"IMARGUMENT",408:"IMCONJUGATE",409:"IMAGINARY",410:"IMREAL",411:"COMPLEX",412:"IMSUM",413:"IMPRODUCT",414:"SERIESSUM",415:"FACTDOUBLE",416:"SQRTPI",417:"QUOTIENT",418:"DELTA",419:"GESTEP",420:"ISEVEN",421:"ISODD",422:"MROUND",423:"ERF",424:"ERFC",425:"BESSELJ",426:"BESSELK",427:"BESSELY",428:"BESSELI",429:"XIRR",430:"XNPV",431:"PRICEMAT",432:"YIELDMAT",433:"INTRATE",434:"RECEIVED",435:"DISC",436:"PRICEDISC",437:"YIELDDISC",438:"TBILLEQ",439:"TBILLPRICE",440:"TBILLYIELD",441:"PRICE",442:"YIELD",443:"DOLLARDE",444:"DOLLARFR",445:"NOMINAL",446:"EFFECT",447:"CUMPRINC",448:"CUMIPMT",449:"EDATE",450:"EOMONTH",451:"YEARFRAC",452:"COUPDAYBS",453:"COUPDAYS",454:"COUPDAYSNC",455:"COUPNCD",456:"COUPNUM",457:"COUPPCD",458:"DURATION",459:"MDURATION",460:"ODDLPRICE",461:"ODDLYIELD",462:"ODDFPRICE",463:"ODDFYIELD",464:"RANDBETWEEN",465:"WEEKNUM",466:"AMORDEGRC",467:"AMORLINC",468:"CONVERT",724:"SHEETJS",469:"ACCRINT",470:"ACCRINTM",471:"WORKDAY",472:"NETWORKDAYS",473:"GCD",474:"MULTINOMIAL",475:"LCM",476:"FVSCHEDULE",477:"CUBEKPIMEMBER",478:"CUBESET",479:"CUBESETCOUNT",480:"IFERROR",481:"COUNTIFS",482:"SUMIFS",483:"AVERAGEIF",484:"AVERAGEIFS"};var $d={2:1,3:1,10:0,15:1,16:1,17:1,18:1,19:0,20:1,21:1,22:1,23:1,24:1,25:1,26:1,27:2,30:2,31:3,32:1,33:1,34:0,35:0,38:1,39:2,40:3,41:3,42:3,43:3,44:3,45:3,47:3,48:2,53:1,61:3,63:0,65:3,66:3,67:1,68:1,69:1,70:1,71:1,72:1,73:1,74:0,75:1,76:1,77:1,79:2,80:2,83:1,85:0,86:1,89:0,90:1,94:0,95:0,97:2,98:1,99:1,101:3,102:3,105:1,106:1,108:2,111:1,112:1,113:1,114:1,117:2,118:1,119:4,121:1,126:1,127:1,128:1,129:1,130:1,131:1,133:1,134:1,135:1,136:2,137:2,138:2,140:1,141:1,142:3,143:4,144:4,161:1,162:1,163:1,164:1,165:2,172:1,175:2,176:2,177:3,178:2,179:1,184:1,186:1,189:3,190:1,195:3,196:3,197:1,198:1,199:3,201:1,207:4,210:3,211:1,212:2,213:2,214:1,215:1,225:0,229:1,230:1,231:1,232:1,233:1,234:1,235:3,244:1,247:4,252:2,257:1,261:1,271:1,273:4,274:2,275:2,276:2,277:3,278:3,279:1,280:3,281:3,282:3,283:1,284:1,285:2,286:4,287:3,288:2,289:4,290:3,291:3,292:3,293:4,294:1,295:3,296:1,297:3,298:1,299:2,300:3,301:3,302:4,303:2,304:2,305:2,306:2,307:2,308:2,309:3,310:2,311:2,312:2,313:2,314:2,315:2,316:4,325:2,326:2,327:2,328:2,331:2,332:2,337:2,342:1,343:1,346:2,347:1,350:4,351:3,352:1,353:2,360:1,368:1,369:1,370:1,371:1,372:1,373:1,374:1,375:1,376:1,377:1,378:1,382:3,385:1,392:1,393:1,396:2,397:2,398:2,399:1,400:1,401:1,402:1,403:1,404:1,405:1,406:1,407:1,408:1,409:1,410:1,414:4,415:1,416:1,417:2,420:1,421:1,422:2,424:1,425:2,426:2,427:2,428:2,430:3,438:3,439:3,440:3,443:2,444:2,445:2,446:2,447:6,448:6,449:2,450:2,464:2,468:3,476:2,479:1,480:2,65535:0};function jd(e){if(e.slice(0,3)=="of:")e=e.slice(3);if(e.charCodeAt(0)==61){e=e.slice(1);if(e.charCodeAt(0)==61)e=e.slice(1)}e=e.replace(/COM\.MICROSOFT\./g,"");e=e.replace(/\[((?:\.[A-Z]+[0-9]+)(?::\.[A-Z]+[0-9]+)?)\]/g,function(e,r){return r.replace(/\./g,"")});e=e.replace(/\$'([^']|'')+'/g,function(e){return e.slice(1)});e=e.replace(/\$([^\]\. #$]+)/g,function(e,r){return r.match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})?$/)?e:r});e=e.replace(/\[.(#[A-Z]*[?!])\]/g,"$1");return e.replace(/[;~]/g,",").replace(/\|/g,";")}function Xd(e){var r="of:="+e.replace(Mu,"$1[.$2$3$4$5]").replace(/\]:\[/g,":");return r.replace(/;/g,"|").replace(/,/g,";")}function Yd(e){e=e.replace(/\$'([^']|'')+'/g,function(e){return e.slice(1)});e=e.replace(/\$([^\]\. #$]+)/g,function(e,r){return r.match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})?$/)?e:r});var r=e.split(":");var t=r[0].split(".")[0];return[t,r[0].split(".")[1]+(r.length>1?":"+(r[1].split(".")[1]||r[1].split(".")[0]):"")]}function Kd(e){return e.replace(/!/,".")}var Zd={};var Jd={};var qd=typeof Map!=="undefined";function Qd(e,r,t){var a=0,n=e.length;if(t){if(qd?t.has(r):Object.prototype.hasOwnProperty.call(t,r)){var i=qd?t.get(r):t[r];for(;a<i.length;++a){if(e[i[a]].t===r){e.Count++;return i[a]}}}}else for(;a<n;++a){if(e[a].t===r){e.Count++;return a}}e[n]={t:r};e.Count++;e.Unique++;if(t){if(qd){if(!t.has(r))t.set(r,[]);t.get(r).push(n)}else{if(!Object.prototype.hasOwnProperty.call(t,r))t[r]=[];t[r].push(n)}}return n}function ev(e,r){var t={min:e+1,max:e+1};var a=-1;if(r.MDW)Po=r.MDW;if(r.width!=null)t.customWidth=1;else if(r.wpx!=null)a=Mo(r.wpx);else if(r.wch!=null)a=r.wch;if(a>-1){t.width=Uo(a);t.customWidth=1}else if(r.width!=null)t.width=r.width;if(r.hidden)t.hidden=true;if(r.level!=null){t.outlineLevel=t.level=r.level}return t}function rv(e,r){if(!e)return;var t=[.7,.7,.75,.75,.3,.3];if(r=="xlml")t=[1,1,1,1,.5,.5];if(e.left==null)e.left=t[0];if(e.right==null)e.right=t[1];if(e.top==null)e.top=t[2];if(e.bottom==null)e.bottom=t[3];if(e.header==null)e.header=t[4];if(e.footer==null)e.footer=t[5]}function tv(e,r,t){var a=t.revssf[r.z!=null?r.z:"General"];var n=60,i=e.length;if(a==null&&t.ssf){for(;n<392;++n)if(t.ssf[n]==null){qe(r.z,n);t.ssf[n]=r.z;t.revssf[r.z]=a=n;break}}for(n=0;n!=i;++n)if(e[n].numFmtId===a)return n;e[i]={numFmtId:a,fontId:0,fillId:0,borderId:0,xfId:0,applyNumberFormat:1};return i}function av(e,r,t,a,n,i){try{if(a.cellNF)e.z=Z[r]}catch(s){if(a.WTF)throw s}if(e.t==="z"&&!a.cellStyles)return;if(e.t==="d"&&typeof e.v==="string")e.v=Tr(e.v);if((!a||a.cellText!==false)&&e.t!=="z")try{if(Z[r]==null)qe(Xe[r]||"General",r);if(e.t==="e")e.w=e.w||Jn[e.v];else if(r===0){if(e.t==="n"){if((e.v|0)===e.v)e.w=e.v.toString(10);else e.w=oe(e.v)}else if(e.t==="d"){var f=hr(e.v);if((f|0)===f)e.w=f.toString(10);else e.w=oe(f)}else if(e.v===undefined)return"";else e.w=ce(e.v,Jd)}else if(e.t==="d")e.w=ze(r,hr(e.v),Jd);else e.w=ze(r,e.v,Jd)}catch(s){if(a.WTF)throw s}if(!a.cellStyles)return;if(t!=null)try{e.s=i.Fills[t];if(e.s.fgColor&&e.s.fgColor.theme&&!e.s.fgColor.rgb){e.s.fgColor.rgb=No(n.themeElements.clrScheme[e.s.fgColor.theme].rgb,e.s.fgColor.tint||0);if(a.WTF)e.s.fgColor.raw_rgb=n.themeElements.clrScheme[e.s.fgColor.theme].rgb}if(e.s.bgColor&&e.s.bgColor.theme){e.s.bgColor.rgb=No(n.themeElements.clrScheme[e.s.bgColor.theme].rgb,e.s.bgColor.tint||0);if(a.WTF)e.s.bgColor.raw_rgb=n.themeElements.clrScheme[e.s.bgColor.theme].rgb}}catch(s){if(a.WTF&&i.Fills)throw s}}function nv(e,r,t){if(e&&e["!ref"]){var a=za(e["!ref"]);if(a.e.c<a.s.c||a.e.r<a.s.r)throw new Error("Bad range ("+t+"): "+e["!ref"])}}function iv(e,r){var t=za(r);if(t.s.r<=t.e.r&&t.s.c<=t.e.c&&t.s.r>=0&&t.s.c>=0)e["!ref"]=Ba(t)}var sv=/<(?:\w:)?mergeCell ref="[A-Z0-9:]+"\s*[\/]?>/g;var fv=/<(?:\w+:)?sheetData[^>]*>([\s\S]*)<\/(?:\w+:)?sheetData>/;var lv=/<(?:\w:)?hyperlink [^>]*>/gm;var ov=/"(\w*:\w*)"/;var cv=/<(?:\w:)?col\b[^>]*[\/]?>/g;var uv=/<(?:\w:)?autoFilter[^>]*([\/]|>([\s\S]*)<\/(?:\w:)?autoFilter)>/g;var hv=/<(?:\w:)?pageMargins[^>]*\/>/g;var dv=/<(?:\w:)?sheetPr\b(?:[^>a-z][^>]*)?\/>/;var vv=/<(?:\w:)?sheetPr[^>]*(?:[\/]|>([\s\S]*)<\/(?:\w:)?sheetPr)>/;var pv=/<(?:\w:)?sheetViews[^>]*(?:[\/]|>([\s\S]*)<\/(?:\w:)?sheetViews)>/;function mv(e,r,t,a,n,i,s){if(!e)return e;if(!a)a={"!id":{}};if(b!=null&&r.dense==null)r.dense=b;var f=r.dense?[]:{};var l={s:{r:2e6,c:2e6},e:{r:0,c:0}};var o="",c="";var u=e.match(fv);if(u){o=e.slice(0,u.index);c=e.slice(u.index+u[0].length)}else o=c=e;var h=o.match(dv);if(h)gv(h[0],f,n,t);else if(h=o.match(vv))wv(h[0],h[1]||"",f,n,t,s,i);var d=(o.match(/<(?:\w*:)?dimension/)||{index:-1}).index;if(d>0){var v=o.slice(d,d+50).match(ov);if(v)iv(f,v[1])}var p=o.match(pv);if(p&&p[1])Iv(p[1],n);var m=[];if(r.cellStyles){var g=o.match(cv);if(g)xv(m,g)}if(u)Pv(u[1],f,r,l,i,s);var w=c.match(uv);if(w)f["!autofilter"]=Ov(w[0]);var k=[];var T=c.match(sv);if(T)for(d=0;d!=T.length;++d)k[d]=za(T[d].slice(T[d].indexOf('"')+1));var E=c.match(lv);if(E)Sv(f,E,a);var y=c.match(hv);if(y)f["!margins"]=_v(Jr(y[0]));if(!f["!ref"]&&l.e.c>=l.s.c&&l.e.r>=l.s.r)f["!ref"]=Ba(l);if(r.sheetRows>0&&f["!ref"]){var S=za(f["!ref"]);if(r.sheetRows<=+S.e.r){S.e.r=r.sheetRows-1;if(S.e.r>l.e.r)S.e.r=l.e.r;if(S.e.r<S.s.r)S.s.r=S.e.r;if(S.e.c>l.e.c)S.e.c=l.e.c;if(S.e.c<S.s.c)S.s.c=S.e.c;f["!fullref"]=f["!ref"];f["!ref"]=Ba(S)}}if(m.length>0)f["!cols"]=m;if(k.length>0)f["!merges"]=k;return f}function bv(e){if(e.length===0)return"";var r='<mergeCells count="'+e.length+'">';for(var t=0;t!=e.length;++t)r+='<mergeCell ref="'+Ba(e[t])+'"/>';return r+"</mergeCells>"}function gv(e,r,t,a){var n=Jr(e);if(!t.Sheets[a])t.Sheets[a]={};if(n.codeName)t.Sheets[a].CodeName=rt(mt(n.codeName))}function wv(e,r,t,a,n){gv(e.slice(0,e.indexOf(">")),t,a,n)}function kv(e,r,t,a,n){var i=false;var s={},f=null;if(a.bookType!=="xlsx"&&r.vbaraw){var l=r.SheetNames[t];try{if(r.Workbook)l=r.Workbook.Sheets[t].CodeName||l}catch(o){}i=true;s.codeName=bt(nt(l))}if(e&&e["!outline"]){var c={summaryBelow:1,summaryRight:1};if(e["!outline"].above)c.summaryBelow=0;if(e["!outline"].left)c.summaryRight=0;f=(f||"")+xt("outlinePr",null,c)}if(!i&&!f)return;n[n.length]=xt("sheetPr",f,s)}var Tv=["objects","scenarios","selectLockedCells","selectUnlockedCells"];var Ev=["formatColumns","formatRows","formatCells","insertColumns","insertRows","insertHyperlinks","deleteColumns","deleteRows","sort","autoFilter","pivotTables"];
-function yv(e){var r={sheet:1};Tv.forEach(function(t){if(e[t]!=null&&e[t])r[t]="1"});Ev.forEach(function(t){if(e[t]!=null&&!e[t])r[t]="0"});if(e.password)r.password=mo(e.password).toString(16).toUpperCase();return xt("sheetProtection",null,r)}function Sv(e,r,t){var a=Array.isArray(e);for(var n=0;n!=r.length;++n){var i=Jr(mt(r[n]),true);if(!i.ref)return;var s=((t||{})["!id"]||[])[i.id];if(s){i.Target=s.Target;if(i.location)i.Target+="#"+rt(i.location)}else{i.Target="#"+rt(i.location);s={Target:i.Target,TargetMode:"Internal"}}i.Rel=s;if(i.tooltip){i.Tooltip=i.tooltip;delete i.tooltip}var f=za(i.ref);for(var l=f.s.r;l<=f.e.r;++l)for(var o=f.s.c;o<=f.e.c;++o){var c=Ma({c:o,r:l});if(a){if(!e[l])e[l]=[];if(!e[l][o])e[l][o]={t:"z",v:undefined};e[l][o].l=i}else{if(!e[c])e[c]={t:"z",v:undefined};e[c].l=i}}}}function _v(e){var r={};["left","right","top","bottom","header","footer"].forEach(function(t){if(e[t])r[t]=parseFloat(e[t])});return r}function Av(e){rv(e);return xt("pageMargins",null,e)}function xv(e,r){var t=false;for(var a=0;a!=r.length;++a){var n=Jr(r[a],true);if(n.hidden)n.hidden=ut(n.hidden);var i=parseInt(n.min,10)-1,s=parseInt(n.max,10)-1;if(n.outlineLevel)n.level=+n.outlineLevel||0;delete n.min;delete n.max;n.width=+n.width;if(!t&&n.width){t=true;Wo(n.width)}Ho(n);while(i<=s)e[i++]=yr(n)}}function Cv(e,r){var t=["<cols>"],a;for(var n=0;n!=r.length;++n){if(!(a=r[n]))continue;t[t.length]=xt("col",null,ev(n,a))}t[t.length]="</cols>";return t.join("")}function Ov(e){var r={ref:(e.match(/ref="([^"]*)"/)||[])[1]};return r}function Rv(e,r,t,a){var n=typeof e.ref=="string"?e.ref:Ba(e.ref);if(!t.Workbook)t.Workbook={Sheets:[]};if(!t.Workbook.Names)t.Workbook.Names=[];var i=t.Workbook.Names;var s=Ua(n);if(s.s.r==s.e.r){s.e.r=Ua(r["!ref"]).e.r;n=Ba(s)}for(var f=0;f<i.length;++f){var l=i[f];if(l.Name!="_xlnm._FilterDatabase")continue;if(l.Sheet!=a)continue;l.Ref=Ha(t.SheetNames[a])+"!"+Wa(n);break}if(f==i.length)i.push({Name:"_xlnm._FilterDatabase",Sheet:a,Ref:"'"+t.SheetNames[a]+"'!"+n});return xt("autoFilter",null,{ref:n})}var Nv=/<(?:\w:)?sheetView(?:[^>a-z][^>]*)?\/?>/g;function Iv(e,r){if(!r.Views)r.Views=[{}];(e.match(Nv)||[]).forEach(function(e,t){var a=Jr(e);if(!r.Views[t])r.Views[t]={};if(+a.zoomScale)r.Views[t].zoom=+a.zoomScale;if(a.rightToLeft&&ut(a.rightToLeft))r.Views[t].RTL=true})}function Fv(e,r,t,a){var n={workbookViewId:"0"};if((((a||{}).Workbook||{}).Views||[])[0])n.rightToLeft=a.Workbook.Views[0].RTL?"1":"0";return xt("sheetViews",xt("sheetView",null,n),{})}function Dv(e,r,t,a){if(e.c)t["!comments"].push([r,e.c]);if((e.v===undefined||e.t==="z"&&!(a||{}).sheetStubs)&&typeof e.f!=="string"&&typeof e.z=="undefined")return"";var n="";var i=e.t,s=e.v;if(e.t!=="z")switch(e.t){case"b":n=e.v?"1":"0";break;case"n":n=""+e.v;break;case"e":n=Jn[e.v];break;case"d":if(a&&a.cellDates)n=Tr(e.v,-1).toISOString();else{e=yr(e);e.t="n";n=""+(e.v=hr(Tr(e.v)))}if(typeof e.z==="undefined")e.z=Z[14];break;default:n=e.v;break;}var f=e.t=="z"||e.v==null?"":_t("v",nt(n)),l={r:r};var o=tv(a.cellXfs,e,a);if(o!==0)l.s=o;switch(e.t){case"n":break;case"d":l.t="d";break;case"b":l.t="b";break;case"e":l.t="e";break;case"z":break;default:if(e.v==null){delete e.t;break}if(e.v.length>32767)throw new Error("Text length must not exceed 32767 characters");if(a&&a.bookSST){f=_t("v",""+Qd(a.Strings,e.v,a.revStrings));l.t="s";break}else l.t="str";break;}if(e.t!=i){e.t=i;e.v=s}if(typeof e.f=="string"&&e.f){var c=e.F&&e.F.slice(0,r.length)==r?{t:"array",ref:e.F}:null;f=xt("f",nt(e.f),c)+(e.v!=null?f:"")}if(e.l)t["!links"].push([r,e.l]);if(e.D)l.cm=1;return xt("c",f,l)}var Pv=function(){var e=/<(?:\w+:)?c[ \/>]/,r=/<\/(?:\w+:)?row>/;var t=/r=["']([^"']*)["']/,a=/<(?:\w+:)?is>([\S\s]*?)<\/(?:\w+:)?is>/;var n=/ref=["']([^"']*)["']/;var i=gt("v"),s=gt("f");return function f(l,o,c,u,h,d){var v=0,p="",m=[],b=[],g=0,w=0,k=0,T="",E;var y,S=0,_=0;var A,x;var C=0,O=0;var R=Array.isArray(d.CellXf),N;var I=[];var F=[];var D=Array.isArray(o);var P=[],L={},M=false;var U=!!c.sheetStubs;for(var B=l.split(r),W=0,H=B.length;W!=H;++W){p=B[W].trim();var z=p.length;if(z===0)continue;var V=0;e:for(v=0;v<z;++v)switch(p[v]){case">":if(p[v-1]!="/"){++v;break e}if(c&&c.cellStyles){y=Jr(p.slice(V,v),true);S=y.r!=null?parseInt(y.r,10):S+1;_=-1;if(c.sheetRows&&c.sheetRows<S)continue;L={};M=false;if(y.ht){M=true;L.hpt=parseFloat(y.ht);L.hpx=$o(L.hpt)}if(y.hidden&&ut(y.hidden)){M=true;L.hidden=true}if(y.outlineLevel!=null){M=true;L.level=+y.outlineLevel}if(M)P[S-1]=L}break;case"<":V=v;break;}if(V>=v)break;y=Jr(p.slice(V,v),true);S=y.r!=null?parseInt(y.r,10):S+1;_=-1;if(c.sheetRows&&c.sheetRows<S)continue;if(u.s.r>S-1)u.s.r=S-1;if(u.e.r<S-1)u.e.r=S-1;if(c&&c.cellStyles){L={};M=false;if(y.ht){M=true;L.hpt=parseFloat(y.ht);L.hpx=$o(L.hpt)}if(y.hidden&&ut(y.hidden)){M=true;L.hidden=true}if(y.outlineLevel!=null){M=true;L.level=+y.outlineLevel}if(M)P[S-1]=L}m=p.slice(v).split(e);for(var G=0;G!=m.length;++G)if(m[G].trim().charAt(0)!="<")break;m=m.slice(G);for(v=0;v!=m.length;++v){p=m[v].trim();if(p.length===0)continue;b=p.match(t);g=v;w=0;k=0;p="<c "+(p.slice(0,1)=="<"?">":"")+p;if(b!=null&&b.length===2){g=0;T=b[1];for(w=0;w!=T.length;++w){if((k=T.charCodeAt(w)-64)<1||k>26)break;g=26*g+k}--g;_=g}else++_;for(w=0;w!=p.length;++w)if(p.charCodeAt(w)===62)break;++w;y=Jr(p.slice(0,w),true);if(!y.r)y.r=Ma({r:S-1,c:_});T=p.slice(w);E={t:""};if((b=T.match(i))!=null&&b[1]!=="")E.v=rt(b[1]);if(c.cellFormula){if((b=T.match(s))!=null&&b[1]!==""){E.f=rt(mt(b[1]),true);if(!c.xlfn)E.f=zu(E.f);if(b[0].indexOf('t="array"')>-1){E.F=(T.match(n)||[])[1];if(E.F.indexOf(":")>-1)I.push([za(E.F),E.F])}else if(b[0].indexOf('t="shared"')>-1){x=Jr(b[0]);var $=rt(mt(b[1]));if(!c.xlfn)$=zu($);F[parseInt(x.si,10)]=[x,$,y.r]}}else if(b=T.match(/<f[^>]*\/>/)){x=Jr(b[0]);if(F[x.si])E.f=Wu(F[x.si][1],F[x.si][2],y.r)}var j=La(y.r);for(w=0;w<I.length;++w)if(j.r>=I[w][0].s.r&&j.r<=I[w][0].e.r)if(j.c>=I[w][0].s.c&&j.c<=I[w][0].e.c)E.F=I[w][1]}if(y.t==null&&E.v===undefined){if(E.f||E.F){E.v=0;E.t="n"}else if(!U)continue;else E.t="z"}else E.t=y.t||"n";if(u.s.c>_)u.s.c=_;if(u.e.c<_)u.e.c=_;switch(E.t){case"n":if(E.v==""||E.v==null){if(!U)continue;E.t="z"}else E.v=parseFloat(E.v);break;case"s":if(typeof E.v=="undefined"){if(!U)continue;E.t="z"}else{A=Zd[parseInt(E.v,10)];E.v=A.t;E.r=A.r;if(c.cellHTML)E.h=A.h}break;case"str":E.t="s";E.v=E.v!=null?rt(mt(E.v),true):"";if(c.cellHTML)E.h=ft(E.v);break;case"inlineStr":b=T.match(a);E.t="s";if(b!=null&&(A=Hl(b[1]))){E.v=A.t;if(c.cellHTML)E.h=A.h}else E.v="";break;case"b":E.v=ut(E.v);break;case"d":if(c.cellDates)E.v=Tr(E.v,1);else{E.v=hr(Tr(E.v,1));E.t="n"}break;case"e":if(!c||c.cellText!==false)E.w=E.v;E.v=qn[E.v];break;}C=O=0;N=null;if(R&&y.s!==undefined){N=d.CellXf[y.s];if(N!=null){if(N.numFmtId!=null)C=N.numFmtId;if(c.cellStyles){if(N.fillId!=null)O=N.fillId}}}av(E,C,O,c,h,d);if(c.cellDates&&R&&E.t=="n"&&Me(Z[C])){E.t="d";E.v=mr(E.v)}if(y.cm&&c.xlmeta){var X=(c.xlmeta.Cell||[])[+y.cm-1];if(X&&X.type=="XLDAPR")E.D=true}if(D){var Y=La(y.r);if(!o[Y.r])o[Y.r]=[];o[Y.r][Y.c]=E}else o[y.r]=E}}if(P.length>0)o["!rows"]=P}}();function Lv(e,r,t,a){var n=[],i=[],s=za(e["!ref"]),f="",l,o="",c=[],u=0,h=0,d=e["!rows"];var v=Array.isArray(e);var p={r:o},m,b=-1;for(h=s.s.c;h<=s.e.c;++h)c[h]=Ia(h);for(u=s.s.r;u<=s.e.r;++u){i=[];o=Ca(u);for(h=s.s.c;h<=s.e.c;++h){l=c[h]+o;var g=v?(e[u]||[])[h]:e[l];if(g===undefined)continue;if((f=Dv(g,l,e,r,t,a))!=null)i.push(f)}if(i.length>0||d&&d[u]){p={r:o};if(d&&d[u]){m=d[u];if(m.hidden)p.hidden=1;b=-1;if(m.hpx)b=Go(m.hpx);else if(m.hpt)b=m.hpt;if(b>-1){p.ht=b;p.customHeight=1}if(m.level){p.outlineLevel=m.level}}n[n.length]=xt("row",i.join(""),p)}}if(d)for(;u<d.length;++u){if(d&&d[u]){p={r:u+1};m=d[u];if(m.hidden)p.hidden=1;b=-1;if(m.hpx)b=Go(m.hpx);else if(m.hpt)b=m.hpt;if(b>-1){p.ht=b;p.customHeight=1}if(m.level){p.outlineLevel=m.level}n[n.length]=xt("row","",p)}}return n.join("")}function Mv(e,r,t,a){var n=[Gr,xt("worksheet",null,{xmlns:Ft[0],"xmlns:r":It.r})];var i=t.SheetNames[e],s=0,f="";var l=t.Sheets[i];if(l==null)l={};var o=l["!ref"]||"A1";var c=za(o);if(c.e.c>16383||c.e.r>1048575){if(r.WTF)throw new Error("Range "+o+" exceeds format limit A1:XFD1048576");c.e.c=Math.min(c.e.c,16383);c.e.r=Math.min(c.e.c,1048575);o=Ba(c)}if(!a)a={};l["!comments"]=[];var u=[];kv(l,t,e,r,n);n[n.length]=xt("dimension",null,{ref:o});n[n.length]=Fv(l,r,e,t);if(r.sheetFormat)n[n.length]=xt("sheetFormatPr",null,{defaultRowHeight:r.sheetFormat.defaultRowHeight||"16",baseColWidth:r.sheetFormat.baseColWidth||"10",outlineLevelRow:r.sheetFormat.outlineLevelRow||"7"});if(l["!cols"]!=null&&l["!cols"].length>0)n[n.length]=Cv(l,l["!cols"]);n[s=n.length]="<sheetData/>";l["!links"]=[];if(l["!ref"]!=null){f=Lv(l,r,e,t,a);if(f.length>0)n[n.length]=f}if(n.length>s+1){n[n.length]="</sheetData>";n[s]=n[s].replace("/>",">")}if(l["!protect"])n[n.length]=yv(l["!protect"]);if(l["!autofilter"]!=null)n[n.length]=Rv(l["!autofilter"],l,t,e);if(l["!merges"]!=null&&l["!merges"].length>0)n[n.length]=bv(l["!merges"]);var h=-1,d,v=-1;if(l["!links"].length>0){n[n.length]="<hyperlinks>";l["!links"].forEach(function(e){if(!e[1].Target)return;d={ref:e[0]};if(e[1].Target.charAt(0)!="#"){v=oi(a,-1,nt(e[1].Target).replace(/#.*$/,""),ii.HLINK);d["r:id"]="rId"+v}if((h=e[1].Target.indexOf("#"))>-1)d.location=nt(e[1].Target.slice(h+1));if(e[1].Tooltip)d.tooltip=nt(e[1].Tooltip);n[n.length]=xt("hyperlink",null,d)});n[n.length]="</hyperlinks>"}delete l["!links"];if(l["!margins"]!=null)n[n.length]=Av(l["!margins"]);if(!r||r.ignoreEC||r.ignoreEC==void 0)n[n.length]=_t("ignoredErrors",xt("ignoredError",null,{numberStoredAsText:1,sqref:o}));if(u.length>0){v=oi(a,-1,"../drawings/drawing"+(e+1)+".xml",ii.DRAW);n[n.length]=xt("drawing",null,{"r:id":"rId"+v});l["!drawing"]=u}if(l["!comments"].length>0){v=oi(a,-1,"../drawings/vmlDrawing"+(e+1)+".vml",ii.VML);n[n.length]=xt("legacyDrawing",null,{"r:id":"rId"+v});l["!legacy"]=v}if(n.length>1){n[n.length]="</worksheet>";n[1]=n[1].replace("/>",">")}return n.join("")}function Uv(e,r){var t={};var a=e.l+r;t.r=e._R(4);e.l+=4;var n=e._R(2);e.l+=1;var i=e._R(1);e.l=a;if(i&7)t.level=i&7;if(i&16)t.hidden=true;if(i&32)t.hpt=n/20;return t}function Bv(e,r,t){var a=wa(17+8*16);var n=(t["!rows"]||[])[e]||{};a._W(4,e);a._W(4,0);var i=320;if(n.hpx)i=Go(n.hpx)*20;else if(n.hpt)i=n.hpt*20;a._W(2,i);a._W(1,0);var s=0;if(n.level)s|=n.level;if(n.hidden)s|=16;if(n.hpx||n.hpt)s|=32;a._W(1,s);a._W(1,0);var f=0,l=a.l;a.l+=4;var o={r:e,c:0};for(var c=0;c<16;++c){if(r.s.c>c+1<<10||r.e.c<c<<10)continue;var u=-1,h=-1;for(var d=c<<10;d<c+1<<10;++d){o.c=d;var v=Array.isArray(t)?(t[o.r]||[])[o.c]:t[Ma(o)];if(v){if(u<0)u=d;h=d}}if(u<0)continue;++f;a._W(4,u);a._W(4,h)}var p=a.l;a.l=l;a._W(4,f);a.l=p;return a.length>a.l?a.slice(0,a.l):a}function Wv(e,r,t,a){var n=Bv(a,t,r);if(n.length>17||(r["!rows"]||[])[a])Ea(e,0,n)}var Hv=kn;var zv=Tn;function Vv(){}function Gv(e,r){var t={};var a=e[e.l];++e.l;t.above=!(a&64);t.left=!(a&128);e.l+=18;t.name=on(e,r-19);return t}function $v(e,r,t){if(t==null)t=wa(84+4*e.length);var a=192;if(r){if(r.above)a&=~64;if(r.left)a&=~128}t._W(1,a);for(var n=1;n<3;++n)t._W(1,0);_n({auto:1},t);t._W(-4,-1);t._W(-4,-1);cn(e,t);return t.slice(0,t.l)}function jv(e){var r=nn(e);return[r]}function Xv(e,r,t){if(t==null)t=wa(8);return sn(r,t)}function Yv(e){var r=fn(e);return[r]}function Kv(e,r,t){if(t==null)t=wa(4);return ln(r,t)}function Zv(e){var r=nn(e);var t=e._R(1);return[r,t,"b"]}function Jv(e,r,t){if(t==null)t=wa(9);sn(r,t);t._W(1,e.v?1:0);return t}function qv(e){var r=fn(e);var t=e._R(1);return[r,t,"b"]}function Qv(e,r,t){if(t==null)t=wa(5);ln(r,t);t._W(1,e.v?1:0);return t}function ep(e){var r=nn(e);var t=e._R(1);return[r,t,"e"]}function rp(e,r,t){if(t==null)t=wa(9);sn(r,t);t._W(1,e.v);return t}function tp(e){var r=fn(e);var t=e._R(1);return[r,t,"e"]}function ap(e,r,t){if(t==null)t=wa(8);ln(r,t);t._W(1,e.v);t._W(2,0);t._W(1,0);return t}function np(e){var r=nn(e);var t=e._R(4);return[r,t,"s"]}function ip(e,r,t){if(t==null)t=wa(12);sn(r,t);t._W(4,r.v);return t}function sp(e){var r=fn(e);var t=e._R(4);return[r,t,"s"]}function fp(e,r,t){if(t==null)t=wa(8);ln(r,t);t._W(4,r.v);return t}function lp(e){var r=nn(e);var t=En(e);return[r,t,"n"]}function op(e,r,t){if(t==null)t=wa(16);sn(r,t);yn(e.v,t);return t}function cp(e){var r=fn(e);var t=En(e);return[r,t,"n"]}function up(e,r,t){if(t==null)t=wa(12);ln(r,t);yn(e.v,t);return t}function hp(e){var r=nn(e);var t=mn(e);return[r,t,"n"]}function dp(e,r,t){if(t==null)t=wa(12);sn(r,t);bn(e.v,t);return t}function vp(e){var r=fn(e);var t=mn(e);return[r,t,"n"]}function pp(e,r,t){if(t==null)t=wa(8);ln(r,t);bn(e.v,t);return t}function mp(e){var r=nn(e);var t=en(e);return[r,t,"is"]}function bp(e){var r=nn(e);var t=Za(e);return[r,t,"str"]}function gp(e,r,t){if(t==null)t=wa(12+4*e.v.length);sn(r,t);Ja(e.v,t);return t.length>t.l?t.slice(0,t.l):t}function wp(e){var r=fn(e);var t=Za(e);return[r,t,"str"]}function kp(e,r,t){if(t==null)t=wa(8+4*e.v.length);ln(r,t);Ja(e.v,t);return t.length>t.l?t.slice(0,t.l):t}function Tp(e,r,t){var a=e.l+r;var n=nn(e);n.r=t["!row"];var i=e._R(1);var s=[n,i,"b"];if(t.cellFormula){e.l+=2;var f=Cd(e,a-e.l,t);s[3]=bd(f,null,n,t.supbooks,t)}else e.l=a;return s}function Ep(e,r,t){var a=e.l+r;var n=nn(e);n.r=t["!row"];var i=e._R(1);var s=[n,i,"e"];if(t.cellFormula){e.l+=2;var f=Cd(e,a-e.l,t);s[3]=bd(f,null,n,t.supbooks,t)}else e.l=a;return s}function yp(e,r,t){var a=e.l+r;var n=nn(e);n.r=t["!row"];var i=En(e);var s=[n,i,"n"];if(t.cellFormula){e.l+=2;var f=Cd(e,a-e.l,t);s[3]=bd(f,null,n,t.supbooks,t)}else e.l=a;return s}function Sp(e,r,t){var a=e.l+r;var n=nn(e);n.r=t["!row"];var i=Za(e);var s=[n,i,"str"];if(t.cellFormula){e.l+=2;var f=Cd(e,a-e.l,t);s[3]=bd(f,null,n,t.supbooks,t)}else e.l=a;return s}var _p=kn;var Ap=Tn;function xp(e,r){if(r==null)r=wa(4);r._W(4,e);return r}function Cp(e,r){var t=e.l+r;var a=kn(e,16);var n=un(e);var i=Za(e);var s=Za(e);var f=Za(e);e.l=t;var l={rfx:a,relId:n,loc:i,display:f};if(s)l.Tooltip=s;return l}function Op(e,r){var t=wa(50+4*(e[1].Target.length+(e[1].Tooltip||"").length));Tn({s:La(e[0]),e:La(e[0])},t);pn("rId"+r,t);var a=e[1].Target.indexOf("#");var n=a==-1?"":e[1].Target.slice(a+1);Ja(n||"",t);Ja(e[1].Tooltip||"",t);Ja("",t);return t.slice(0,t.l)}function Rp(){}function Np(e,r,t){var a=e.l+r;var n=gn(e,16);var i=e._R(1);var s=[n];s[2]=i;if(t.cellFormula){var f=xd(e,a-e.l,t);s[1]=f}else e.l=a;return s}function Ip(e,r,t){var a=e.l+r;var n=kn(e,16);var i=[n];if(t.cellFormula){var s=Rd(e,a-e.l,t);i[1]=s;e.l=a}else e.l=a;return i}function Fp(e,r,t){if(t==null)t=wa(18);var a=ev(e,r);t._W(-4,e);t._W(-4,e);t._W(4,(a.width||10)*256);t._W(4,0);var n=0;if(r.hidden)n|=1;if(typeof a.width=="number")n|=2;if(r.level)n|=r.level<<8;t._W(2,n);return t}var Dp=["left","right","top","bottom","header","footer"];function Pp(e){var r={};Dp.forEach(function(t){r[t]=En(e,8)});return r}function Lp(e,r){if(r==null)r=wa(6*8);rv(e);Dp.forEach(function(t){yn(e[t],r)});return r}function Mp(e){var r=e._R(2);e.l+=28;return{RTL:r&32}}function Up(e,r,t){if(t==null)t=wa(30);var a=924;if((((r||{}).Views||[])[0]||{}).RTL)a|=32;t._W(2,a);t._W(4,0);t._W(4,0);t._W(4,0);t._W(1,0);t._W(1,0);t._W(2,0);t._W(2,100);t._W(2,0);t._W(2,0);t._W(2,0);t._W(4,0);return t}function Bp(e){var r=wa(24);r._W(4,4);r._W(4,1);Tn(e,r);return r}function Wp(e,r){if(r==null)r=wa(16*4+2);r._W(2,e.password?mo(e.password):0);r._W(4,1);[["objects",false],["scenarios",false],["formatCells",true],["formatColumns",true],["formatRows",true],["insertColumns",true],["insertRows",true],["insertHyperlinks",true],["deleteColumns",true],["deleteRows",true],["selectLockedCells",false],["sort",true],["autoFilter",true],["pivotTables",true],["selectUnlockedCells",false]].forEach(function(t){if(t[1])r._W(4,e[t[0]]!=null&&!e[t[0]]?1:0);else r._W(4,e[t[0]]!=null&&e[t[0]]?0:1)});return r}function Hp(){}function zp(){}function Vp(e,r,t,a,n,i,s){if(!e)return e;var f=r||{};if(!a)a={"!id":{}};if(b!=null&&f.dense==null)f.dense=b;var l=f.dense?[]:{};var o;var c={s:{r:2e6,c:2e6},e:{r:0,c:0}};var u=[];var h=false,d=false;var v,p,m,g,w,k,T,E,y;var S=[];f.biff=12;f["!row"]=0;var _=0,A=false;var x=[];var C={};var O=f.supbooks||n.supbooks||[[]];O.sharedf=C;O.arrayf=x;O.SheetNames=n.SheetNames||n.Sheets.map(function(e){return e.name});if(!f.supbooks){f.supbooks=O;if(n.Names)for(var R=0;R<n.Names.length;++R)O[0][R+1]=n.Names[R]}var N=[],I=[];var F=false;Fb[16]={n:"BrtShortReal",f:cp};var D,P;ka(e,function M(e,r,b){if(d)return;switch(b){case 148:o=e;break;case 0:v=e;if(f.sheetRows&&f.sheetRows<=v.r)d=true;E=Ca(g=v.r);f["!row"]=v.r;if(e.hidden||e.hpt||e.level!=null){if(e.hpt)e.hpx=$o(e.hpt);I[e.r]=e}break;case 2:;case 3:;case 4:;case 5:;case 6:;case 7:;case 8:;case 9:;case 10:;case 11:;case 13:;case 14:;case 15:;case 16:;case 17:;case 18:;case 62:p={t:e[2]};switch(e[2]){case"n":p.v=e[1];break;case"s":T=Zd[e[1]];p.v=T.t;p.r=T.r;break;case"b":p.v=e[1]?true:false;break;case"e":p.v=e[1];if(f.cellText!==false)p.w=Jn[p.v];break;case"str":p.t="s";p.v=e[1];break;case"is":p.t="s";p.v=e[1].t;break;}if(m=s.CellXf[e[0].iStyleRef])av(p,m.numFmtId,null,f,i,s);w=e[0].c==-1?w+1:e[0].c;if(f.dense){if(!l[g])l[g]=[];l[g][w]=p}else l[Ia(w)+E]=p;if(f.cellFormula){A=false;for(_=0;_<x.length;++_){var R=x[_];if(v.r>=R[0].s.r&&v.r<=R[0].e.r)if(w>=R[0].s.c&&w<=R[0].e.c){p.F=Ba(R[0]);A=true}}if(!A&&e.length>3)p.f=e[3]}if(c.s.r>v.r)c.s.r=v.r;if(c.s.c>w)c.s.c=w;if(c.e.r<v.r)c.e.r=v.r;if(c.e.c<w)c.e.c=w;if(f.cellDates&&m&&p.t=="n"&&Me(Z[m.numFmtId])){var L=ee(p.v);if(L){p.t="d";p.v=new Date(L.y,L.m-1,L.d,L.H,L.M,L.S,L.u)}}if(D){if(D.type=="XLDAPR")p.D=true;D=void 0}if(P)P=void 0;break;case 1:;case 12:if(!f.sheetStubs||h)break;p={t:"z",v:void 0};w=e[0].c==-1?w+1:e[0].c;if(f.dense){if(!l[g])l[g]=[];l[g][w]=p}else l[Ia(w)+E]=p;if(c.s.r>v.r)c.s.r=v.r;if(c.s.c>w)c.s.c=w;if(c.e.r<v.r)c.e.r=v.r;if(c.e.c<w)c.e.c=w;if(D){if(D.type=="XLDAPR")p.D=true;D=void 0}if(P)P=void 0;break;case 176:S.push(e);break;case 49:{D=((f.xlmeta||{}).Cell||[])[e-1]}break;case 494:var M=a["!id"][e.relId];if(M){e.Target=M.Target;if(e.loc)e.Target+="#"+e.loc;e.Rel=M}else if(e.relId==""){e.Target="#"+e.loc}for(g=e.rfx.s.r;g<=e.rfx.e.r;++g)for(w=e.rfx.s.c;w<=e.rfx.e.c;++w){if(f.dense){if(!l[g])l[g]=[];if(!l[g][w])l[g][w]={t:"z",v:undefined};l[g][w].l=e}else{k=Ma({c:w,r:g});if(!l[k])l[k]={t:"z",v:undefined};l[k].l=e}}break;case 426:if(!f.cellFormula)break;x.push(e);y=f.dense?l[g][w]:l[Ia(w)+E];y.f=bd(e[1],c,{r:v.r,c:w},O,f);y.F=Ba(e[0]);break;case 427:if(!f.cellFormula)break;C[Ma(e[0].s)]=e[1];y=f.dense?l[g][w]:l[Ia(w)+E];y.f=bd(e[1],c,{r:v.r,c:w},O,f);break;case 60:if(!f.cellStyles)break;while(e.e>=e.s){N[e.e--]={width:e.w/256,hidden:!!(e.flags&1),level:e.level};if(!F){F=true;Wo(e.w/256)}Ho(N[e.e+1])}break;case 161:l["!autofilter"]={ref:Ba(e)};break;case 476:l["!margins"]=e;break;case 147:if(!n.Sheets[t])n.Sheets[t]={};if(e.name)n.Sheets[t].CodeName=e.name;if(e.above||e.left)l["!outline"]={above:e.above,left:e.left};break;case 137:if(!n.Views)n.Views=[{}];if(!n.Views[0])n.Views[0]={};if(e.RTL)n.Views[0].RTL=true;break;case 485:break;case 64:;case 1053:break;case 151:break;case 152:;case 175:;case 644:;case 625:;case 562:;case 396:;case 1112:;case 1146:;case 471:;case 1050:;case 649:;case 1105:;case 589:;case 607:;case 564:;case 1055:;case 168:;case 174:;case 1180:;case 499:;case 507:;case 550:;case 171:;case 167:;case 1177:;case 169:;case 1181:;case 551:;case 552:;case 661:;case 639:;case 478:;case 537:;case 477:;case 536:;case 1103:;case 680:;case 1104:;case 1024:;case 663:;case 535:;case 678:;case 504:;case 1043:;case 428:;case 170:;case 3072:;case 50:;case 2070:;case 1045:break;case 35:h=true;break;case 36:h=false;break;case 37:u.push(b);h=true;break;case 38:u.pop();h=false;break;default:if(r.T){}else if(!h||f.WTF)throw new Error("Unexpected record 0x"+b.toString(16));}},f);delete f.supbooks;delete f["!row"];if(!l["!ref"]&&(c.s.r<2e6||o&&(o.e.r>0||o.e.c>0||o.s.r>0||o.s.c>0)))l["!ref"]=Ba(o||c);if(f.sheetRows&&l["!ref"]){var L=za(l["!ref"]);if(f.sheetRows<=+L.e.r){L.e.r=f.sheetRows-1;if(L.e.r>c.e.r)L.e.r=c.e.r;if(L.e.r<L.s.r)L.s.r=L.e.r;if(L.e.c>c.e.c)L.e.c=c.e.c;if(L.e.c<L.s.c)L.s.c=L.e.c;l["!fullref"]=l["!ref"];l["!ref"]=Ba(L)}}if(S.length>0)l["!merges"]=S;if(N.length>0)l["!cols"]=N;if(I.length>0)l["!rows"]=I;return l}function Gp(e,r,t,a,n,i,s){var f={r:t,c:a};if(r.c)i["!comments"].push([Ma(f),r.c]);if(r.v===undefined)return false;var l="";switch(r.t){case"b":l=r.v?"1":"0";break;case"d":r=yr(r);r.z=r.z||Z[14];r.v=hr(Tr(r.v));r.t="n";break;case"n":;case"e":l=""+r.v;break;default:l=r.v;break;}f.s=tv(n.cellXfs,r,n);if(r.l)i["!links"].push([Ma(f),r.l]);switch(r.t){case"s":;case"str":if(n.bookSST){l=Qd(n.Strings,r.v,n.revStrings);f.t="s";f.v=l;if(s)Ea(e,18,fp(r,f));else Ea(e,7,ip(r,f))}else{f.t="str";if(s)Ea(e,17,kp(r,f));else Ea(e,6,gp(r,f))}return true;case"n":if(r.v==(r.v|0)&&r.v>-1e3&&r.v<1e3){if(s)Ea(e,13,pp(r,f));else Ea(e,2,dp(r,f))}else{if(s)Ea(e,16,up(r,f));else Ea(e,5,op(r,f))}return true;case"b":f.t="b";if(s)Ea(e,15,Qv(r,f));else Ea(e,4,Jv(r,f));return true;case"e":f.t="e";if(s)Ea(e,14,ap(r,f));else Ea(e,3,rp(r,f));return true;}if(s)Ea(e,12,Kv(r,f));else Ea(e,1,Xv(r,f));return true}function $p(e,r,t,a){var n=za(r["!ref"]||"A1"),i,s="",f=[];Ea(e,145);var l=Array.isArray(r);var o=n.e.r;if(r["!rows"])o=Math.max(n.e.r,r["!rows"].length-1);for(var c=n.s.r;c<=o;++c){s=Ca(c);Wv(e,r,n,c);var u=false;if(c<=n.e.r)for(var h=n.s.c;h<=n.e.c;++h){if(c===n.s.r)f[h]=Ia(h);i=f[h]+s;var d=l?(r[c]||[])[h]:r[i];if(!d){u=false;continue}u=Gp(e,d,c,h,a,r,u)}}Ea(e,146)}function jp(e,r){if(!r||!r["!merges"])return;Ea(e,177,xp(r["!merges"].length));r["!merges"].forEach(function(r){Ea(e,176,Ap(r))});Ea(e,178)}function Xp(e,r){if(!r||!r["!cols"])return;Ea(e,390);r["!cols"].forEach(function(r,t){if(r)Ea(e,60,Fp(t,r))});Ea(e,391)}function Yp(e,r){if(!r||!r["!ref"])return;Ea(e,648);Ea(e,649,Bp(za(r["!ref"])));Ea(e,650)}function Kp(e,r,t){r["!links"].forEach(function(r){if(!r[1].Target)return;var a=oi(t,-1,r[1].Target.replace(/#.*$/,""),ii.HLINK);Ea(e,494,Op(r,a))});delete r["!links"]}function Zp(e,r,t,a){if(r["!comments"].length>0){var n=oi(a,-1,"../drawings/vmlDrawing"+(t+1)+".vml",ii.VML);Ea(e,551,pn("rId"+n));r["!legacy"]=n}}function Jp(e,r,t,a){if(!r["!autofilter"])return;var n=r["!autofilter"];var i=typeof n.ref==="string"?n.ref:Ba(n.ref);if(!t.Workbook)t.Workbook={Sheets:[]};if(!t.Workbook.Names)t.Workbook.Names=[];var s=t.Workbook.Names;var f=Ua(i);if(f.s.r==f.e.r){f.e.r=Ua(r["!ref"]).e.r;i=Ba(f)}for(var l=0;l<s.length;++l){var o=s[l];if(o.Name!="_xlnm._FilterDatabase")continue;if(o.Sheet!=a)continue;o.Ref=Ha(t.SheetNames[a])+"!"+Wa(i);break}if(l==s.length)s.push({Name:"_xlnm._FilterDatabase",Sheet:a,Ref:Ha(t.SheetNames[a])+"!"+Wa(i)});Ea(e,161,Tn(za(i)));Ea(e,162)}function qp(e,r,t){Ea(e,133);{Ea(e,137,Up(r,t));Ea(e,138)}Ea(e,134)}function Qp(){}function em(e,r){if(!r["!protect"])return;Ea(e,535,Wp(r["!protect"]))}function rm(e,r,t,a){var n=Ta();var i=t.SheetNames[e],s=t.Sheets[i]||{};var f=i;try{if(t&&t.Workbook)f=t.Workbook.Sheets[e].CodeName||f}catch(l){}var o=za(s["!ref"]||"A1");if(o.e.c>16383||o.e.r>1048575){if(r.WTF)throw new Error("Range "+(s["!ref"]||"A1")+" exceeds format limit A1:XFD1048576");o.e.c=Math.min(o.e.c,16383);o.e.r=Math.min(o.e.c,1048575)}s["!links"]=[];s["!comments"]=[];Ea(n,129);if(t.vbaraw||s["!outline"])Ea(n,147,$v(f,s["!outline"]));Ea(n,148,zv(o));qp(n,s,t.Workbook);Qp(n,s);Xp(n,s,e,r,t);$p(n,s,e,r,t);em(n,s);Jp(n,s,t,e);jp(n,s);Kp(n,s,a);if(s["!margins"])Ea(n,476,Lp(s["!margins"]));if(!r||r.ignoreEC||r.ignoreEC==void 0)Yp(n,s);Zp(n,s,e,a);Ea(n,130);return n.end()}function tm(e){var r=[];var t=e.match(/^<c:numCache>/);var a;(e.match(/<c:pt idx="(\d*)">(.*?)<\/c:pt>/gm)||[]).forEach(function(e){var a=e.match(/<c:pt idx="(\d*?)"><c:v>(.*)<\/c:v><\/c:pt>/);if(!a)return;r[+a[1]]=t?+a[2]:a[2]});var n=rt((e.match(/<c:formatCode>([\s\S]*?)<\/c:formatCode>/)||["","General"])[1]);(e.match(/<c:f>(.*?)<\/c:f>/gm)||[]).forEach(function(e){a=e.replace(/<.*?>/g,"")});return[r,n,a]}function am(e,r,t,a,n,i){var s=i||{"!type":"chart"};if(!e)return i;var f=0,l=0,o="A";var c={s:{r:2e6,c:2e6},e:{r:0,c:0}};(e.match(/<c:numCache>[\s\S]*?<\/c:numCache>/gm)||[]).forEach(function(e){var r=tm(e);c.s.r=c.s.c=0;c.e.c=f;o=Ia(f);r[0].forEach(function(e,t){s[o+Ca(t)]={t:"n",v:e,z:r[1]};l=t});if(c.e.r<l)c.e.r=l;++f});if(f>0)s["!ref"]=Ba(c);return s}function nm(e,r,t,a,n){if(!e)return e;if(!a)a={"!id":{}};var i={"!type":"chart","!drawel":null,"!rel":""};var s;var f=e.match(dv);if(f)gv(f[0],i,n,t);if(s=e.match(/drawing r:id="(.*?)"/))i["!rel"]=s[1];if(a["!id"][i["!rel"]])i["!drawel"]=a["!id"][i["!rel"]];return i}function im(e,r){e.l+=10;var t=Za(e,r-10);return{name:t}}function sm(e,r,t,a,n){if(!e)return e;if(!a)a={"!id":{}};var i={"!type":"chart","!drawel":null,"!rel":""};var s=[];var f=false;ka(e,function l(e,a,o){switch(o){case 550:i["!rel"]=e;break;case 651:if(!n.Sheets[t])n.Sheets[t]={};if(e.name)n.Sheets[t].CodeName=e.name;break;case 562:;case 652:;case 669:;case 679:;case 551:;case 552:;case 476:;case 3072:break;case 35:f=true;break;case 36:f=false;break;case 37:s.push(o);break;case 38:s.pop();break;default:if(a.T>0)s.push(o);else if(a.T<0)s.pop();else if(!f||r.WTF)throw new Error("Unexpected record 0x"+o.toString(16));}},r);if(a["!id"][i["!rel"]])i["!drawel"]=a["!id"][i["!rel"]];return i}var fm=[["allowRefreshQuery",false,"bool"],["autoCompressPictures",true,"bool"],["backupFile",false,"bool"],["checkCompatibility",false,"bool"],["CodeName",""],["date1904",false,"bool"],["defaultThemeVersion",0,"int"],["filterPrivacy",false,"bool"],["hidePivotFieldList",false,"bool"],["promptedSolutions",false,"bool"],["publishItems",false,"bool"],["refreshAllConnections",false,"bool"],["saveExternalLinkValues",true,"bool"],["showBorderUnselectedTables",true,"bool"],["showInkAnnotation",true,"bool"],["showObjects","all"],["showPivotChartFilter",false,"bool"],["updateLinks","userSet"]];var lm=[["activeTab",0,"int"],["autoFilterDateGrouping",true,"bool"],["firstSheet",0,"int"],["minimized",false,"bool"],["showHorizontalScroll",true,"bool"],["showSheetTabs",true,"bool"],["showVerticalScroll",true,"bool"],["tabRatio",600,"int"],["visibility","visible"]];var om=[];var cm=[["calcCompleted","true"],["calcMode","auto"],["calcOnSave","true"],["concurrentCalc","true"],["fullCalcOnLoad","false"],["fullPrecision","true"],["iterate","false"],["iterateCount","100"],["iterateDelta","0.001"],["refMode","A1"]];function um(e,r){for(var t=0;t!=e.length;++t){var a=e[t];for(var n=0;n!=r.length;++n){var i=r[n];if(a[i[0]]==null)a[i[0]]=i[1];else switch(i[2]){case"bool":if(typeof a[i[0]]=="string")a[i[0]]=ut(a[i[0]]);break;case"int":if(typeof a[i[0]]=="string")a[i[0]]=parseInt(a[i[0]],10);break;}}}}function hm(e,r){for(var t=0;t!=r.length;++t){var a=r[t];if(e[a[0]]==null)e[a[0]]=a[1];else switch(a[2]){case"bool":if(typeof e[a[0]]=="string")e[a[0]]=ut(e[a[0]]);break;case"int":if(typeof e[a[0]]=="string")e[a[0]]=parseInt(e[a[0]],10);break;}}}function dm(e){hm(e.WBProps,fm);hm(e.CalcPr,cm);um(e.WBView,lm);um(e.Sheets,om);Jd.date1904=ut(e.WBProps.date1904)}function vm(e){if(!e.Workbook)return"false";if(!e.Workbook.WBProps)return"false";return ut(e.Workbook.WBProps.date1904)?"true":"false"}var pm=":][*?/\\".split("");function mm(e,r){if(e.length>31){if(r)return false;throw new Error("Sheet names cannot exceed 31 chars")}var t=true;pm.forEach(function(a){if(e.indexOf(a)==-1)return;if(!r)throw new Error("Sheet name cannot contain : \\ / ? * [ ]");t=false});return t}function bm(e,r,t){e.forEach(function(a,n){mm(a);for(var i=0;i<n;++i)if(a==e[i])throw new Error("Duplicate Sheet Name: "+a);if(t){var s=r&&r[n]&&r[n].CodeName||a;if(s.charCodeAt(0)==95&&s.length>22)throw new Error("Bad Code Name: Worksheet"+s)}})}function gm(e){if(!e||!e.SheetNames||!e.Sheets)throw new Error("Invalid Workbook");if(!e.SheetNames.length)throw new Error("Workbook is empty");var r=e.Workbook&&e.Workbook.Sheets||[];bm(e.SheetNames,r,!!e.vbaraw);for(var t=0;t<e.SheetNames.length;++t)nv(e.Sheets[e.SheetNames[t]],e.SheetNames[t],t);e.SheetNames.forEach(function(r,t){var a=e.Sheets[r];if(!a||!a["!autofilter"])return;var n;if(!e.Workbook)e.Workbook={};if(!e.Workbook.Names)e.Workbook.Names=[];e.Workbook.Names.forEach(function(e){if(e.Name=="_xlnm._FilterDatabase"&&e.Sheet==t)n=e});var i=Ha(r)+"!"+Wa(a["!autofilter"].ref);if(n)n.Ref=i;else e.Workbook.Names.push({Name:"_xlnm._FilterDatabase",Sheet:t,Ref:i})})}var wm=/<\w+:workbook/;function km(e,r){if(!e)throw new Error("Could not find file");var t={AppVersion:{},WBProps:{},WBView:[],Sheets:[],CalcPr:{},Names:[],xmlns:""};var a=false,n="xmlns";var i={},s=0;e.replace(Yr,function f(l,o){var c=Jr(l);switch(qr(c[0])){case"<?xml":break;case"<workbook":if(l.match(wm))n="xmlns"+l.match(/<(\w+):/)[1];t.xmlns=c[n];break;case"</workbook>":break;case"<fileVersion":delete c[0];t.AppVersion=c;break;case"<fileVersion/>":;case"</fileVersion>":break;case"<fileSharing":break;case"<fileSharing/>":break;case"<workbookPr":;case"<workbookPr/>":fm.forEach(function(e){if(c[e[0]]==null)return;switch(e[2]){case"bool":t.WBProps[e[0]]=ut(c[e[0]]);break;case"int":t.WBProps[e[0]]=parseInt(c[e[0]],10);break;default:t.WBProps[e[0]]=c[e[0]];}});if(c.codeName)t.WBProps.CodeName=mt(c.codeName);break;case"</workbookPr>":break;case"<workbookProtection":break;case"<workbookProtection/>":break;case"<bookViews":;case"<bookViews>":;case"</bookViews>":break;case"<workbookView":;case"<workbookView/>":delete c[0];t.WBView.push(c);break;case"</workbookView>":break;case"<sheets":;case"<sheets>":;case"</sheets>":break;case"<sheet":switch(c.state){case"hidden":c.Hidden=1;break;case"veryHidden":c.Hidden=2;break;default:c.Hidden=0;}delete c.state;c.name=rt(mt(c.name));delete c[0];t.Sheets.push(c);break;case"</sheet>":break;case"<functionGroups":;case"<functionGroups/>":break;case"<functionGroup":break;case"<externalReferences":;case"</externalReferences>":;case"<externalReferences>":break;case"<externalReference":break;case"<definedNames/>":break;case"<definedNames>":;case"<definedNames":a=true;break;case"</definedNames>":a=false;break;case"<definedName":{i={};i.Name=mt(c.name);if(c.comment)i.Comment=c.comment;if(c.localSheetId)i.Sheet=+c.localSheetId;if(ut(c.hidden||"0"))i.Hidden=true;s=o+l.length}break;case"</definedName>":{i.Ref=rt(mt(e.slice(s,o)));t.Names.push(i)}break;case"<definedName/>":break;case"<calcPr":delete c[0];t.CalcPr=c;break;case"<calcPr/>":delete c[0];t.CalcPr=c;break;case"</calcPr>":break;case"<oleSize":break;case"<customWorkbookViews>":;case"</customWorkbookViews>":;case"<customWorkbookViews":break;case"<customWorkbookView":;case"</customWorkbookView>":break;case"<pivotCaches>":;case"</pivotCaches>":;case"<pivotCaches":break;case"<pivotCache":break;case"<smartTagPr":;case"<smartTagPr/>":break;case"<smartTagTypes":;case"<smartTagTypes>":;case"</smartTagTypes>":break;case"<smartTagType":break;case"<webPublishing":;case"<webPublishing/>":break;case"<fileRecoveryPr":;case"<fileRecoveryPr/>":break;case"<webPublishObjects>":;case"<webPublishObjects":;case"</webPublishObjects>":break;case"<webPublishObject":break;case"<extLst":;case"<extLst>":;case"</extLst>":;case"<extLst/>":break;case"<ext":a=true;break;case"</ext>":a=false;break;case"<ArchID":break;case"<AlternateContent":;case"<AlternateContent>":a=true;break;case"</AlternateContent>":a=false;break;case"<revisionPtr":break;default:if(!a&&r.WTF)throw new Error("unrecognized "+c[0]+" in workbook");}return l});if(Ft.indexOf(t.xmlns)===-1)throw new Error("Unknown Namespace: "+t.xmlns);
-dm(t);return t}function Tm(e){var r=[Gr];r[r.length]=xt("workbook",null,{xmlns:Ft[0],"xmlns:r":It.r});var t=e.Workbook&&(e.Workbook.Names||[]).length>0;var a={codeName:"ThisWorkbook"};if(e.Workbook&&e.Workbook.WBProps){fm.forEach(function(r){if(e.Workbook.WBProps[r[0]]==null)return;if(e.Workbook.WBProps[r[0]]==r[1])return;a[r[0]]=e.Workbook.WBProps[r[0]]});if(e.Workbook.WBProps.CodeName){a.codeName=e.Workbook.WBProps.CodeName;delete a.CodeName}}r[r.length]=xt("workbookPr",null,a);var n=e.Workbook&&e.Workbook.Sheets||[];var i=0;if(n&&n[0]&&!!n[0].Hidden){r[r.length]="<bookViews>";for(i=0;i!=e.SheetNames.length;++i){if(!n[i])break;if(!n[i].Hidden)break}if(i==e.SheetNames.length)i=0;r[r.length]='<workbookView firstSheet="'+i+'" activeTab="'+i+'"/>';r[r.length]="</bookViews>"}r[r.length]="<sheets>";for(i=0;i!=e.SheetNames.length;++i){var s={name:nt(e.SheetNames[i].slice(0,31))};s.sheetId=""+(i+1);s["r:id"]="rId"+(i+1);if(n[i])switch(n[i].Hidden){case 1:s.state="hidden";break;case 2:s.state="veryHidden";break;}r[r.length]=xt("sheet",null,s)}r[r.length]="</sheets>";if(t){r[r.length]="<definedNames>";if(e.Workbook&&e.Workbook.Names)e.Workbook.Names.forEach(function(e){var t={name:e.Name};if(e.Comment)t.comment=e.Comment;if(e.Sheet!=null)t.localSheetId=""+e.Sheet;if(e.Hidden)t.hidden="1";if(!e.Ref)return;r[r.length]=xt("definedName",nt(e.Ref),t)});r[r.length]="</definedNames>"}if(r.length>2){r[r.length]="</workbook>";r[1]=r[1].replace("/>",">")}return r.join("")}function Em(e,r){var t={};t.Hidden=e._R(4);t.iTabID=e._R(4);t.strRelID=vn(e,r-8);t.name=Za(e);return t}function ym(e,r){if(!r)r=wa(127);r._W(4,e.Hidden);r._W(4,e.iTabID);pn(e.strRelID,r);Ja(e.name.slice(0,31),r);return r.length>r.l?r.slice(0,r.l):r}function Sm(e,r){var t={};var a=e._R(4);t.defaultThemeVersion=e._R(4);var n=r>8?Za(e):"";if(n.length>0)t.CodeName=n;t.autoCompressPictures=!!(a&65536);t.backupFile=!!(a&64);t.checkCompatibility=!!(a&4096);t.date1904=!!(a&1);t.filterPrivacy=!!(a&8);t.hidePivotFieldList=!!(a&1024);t.promptedSolutions=!!(a&16);t.publishItems=!!(a&2048);t.refreshAllConnections=!!(a&262144);t.saveExternalLinkValues=!!(a&128);t.showBorderUnselectedTables=!!(a&4);t.showInkAnnotation=!!(a&32);t.showObjects=["all","placeholders","none"][a>>13&3];t.showPivotChartFilter=!!(a&32768);t.updateLinks=["userSet","never","always"][a>>8&3];return t}function _m(e,r){if(!r)r=wa(72);var t=0;if(e){if(e.date1904)t|=1;if(e.filterPrivacy)t|=8}r._W(4,t);r._W(4,0);cn(e&&e.CodeName||"ThisWorkbook",r);return r.slice(0,r.l)}function Am(e,r){var t={};e._R(4);t.ArchID=e._R(4);e.l+=r-8;return t}function xm(e,r,t){var a=e.l+r;var n=e._R(4);e.l+=1;var i=e._R(4);var s=dn(e);var f=Od(e,0,t);var l=un(e);if(n&32)s="_xlnm."+s;e.l=a;var o={Name:s,Ptg:f,Flags:n};if(i<268435455)o.Sheet=i;if(l)o.Comment=l;return o}function Cm(e,r){var t=wa(9);var a=0;var n=e.Name;if(Qn.indexOf(n)>-1){a|=32;n=n.slice(6)}t._W(4,a);t._W(1,0);t._W(4,e.Sheet==null?4294967295:e.Sheet);var i=[t,Ja(n),zd(e.Ref,r)];if(e.Comment)i.push(hn(e.Comment));else{var s=wa(4);s._W(4,4294967295);i.push(s)}return F(i)}function Om(e,r){var t={AppVersion:{},WBProps:{},WBView:[],Sheets:[],CalcPr:{},xmlns:""};var a=[];var n=false;if(!r)r={};r.biff=12;var i=[];var s=[[]];s.SheetNames=[];s.XTI=[];Fb[16]={n:"BrtFRTArchID$",f:Am};ka(e,function f(e,l,o){switch(o){case 156:s.SheetNames.push(e.name);t.Sheets.push(e);break;case 153:t.WBProps=e;break;case 39:if(e.Sheet!=null)r.SID=e.Sheet;e.Ref=bd(e.Ptg,null,null,s,r);delete r.SID;delete e.Ptg;i.push(e);break;case 1036:break;case 357:;case 358:;case 355:;case 667:if(!s[0].length)s[0]=[o,e];else s.push([o,e]);s[s.length-1].XTI=[];break;case 362:if(s.length===0){s[0]=[];s[0].XTI=[]}s[s.length-1].XTI=s[s.length-1].XTI.concat(e);s.XTI=s.XTI.concat(e);break;case 361:break;case 2071:;case 158:;case 143:;case 664:;case 353:break;case 3072:;case 3073:;case 534:;case 677:;case 157:;case 610:;case 2050:;case 155:;case 548:;case 676:;case 128:;case 665:;case 2128:;case 2125:;case 549:;case 2053:;case 596:;case 2076:;case 2075:;case 2082:;case 397:;case 154:;case 1117:;case 553:;case 2091:break;case 35:a.push(o);n=true;break;case 36:a.pop();n=false;break;case 37:a.push(o);n=true;break;case 38:a.pop();n=false;break;case 16:break;default:if(l.T){}else if(!n||r.WTF&&a[a.length-1]!=37&&a[a.length-1]!=35)throw new Error("Unexpected record 0x"+o.toString(16));}},r);dm(t);t.Names=i;t.supbooks=s;return t}function Rm(e,r){Ea(e,143);for(var t=0;t!=r.SheetNames.length;++t){var a=r.Workbook&&r.Workbook.Sheets&&r.Workbook.Sheets[t]&&r.Workbook.Sheets[t].Hidden||0;var n={Hidden:a,iTabID:t+1,strRelID:"rId"+(t+1),name:r.SheetNames[t]};Ea(e,156,ym(n))}Ea(e,144)}function Nm(r,t){if(!t)t=wa(127);for(var a=0;a!=4;++a)t._W(4,0);Ja("SheetJS",t);Ja(e.version,t);Ja(e.version,t);Ja("7262",t);return t.length>t.l?t.slice(0,t.l):t}function Im(e,r){if(!r)r=wa(29);r._W(-4,0);r._W(-4,460);r._W(4,28800);r._W(4,17600);r._W(4,500);r._W(4,e);r._W(4,e);var t=120;r._W(1,t);return r.length>r.l?r.slice(0,r.l):r}function Fm(e,r){if(!r.Workbook||!r.Workbook.Sheets)return;var t=r.Workbook.Sheets;var a=0,n=-1,i=-1;for(;a<t.length;++a){if(!t[a]||!t[a].Hidden&&n==-1)n=a;else if(t[a].Hidden==1&&i==-1)i=a}if(i>n)return;Ea(e,135);Ea(e,158,Im(n));Ea(e,136)}function Dm(e,r){if(!r.Workbook||!r.Workbook.Names)return;r.Workbook.Names.forEach(function(t){try{if(t.Flags&14)return;Ea(e,39,Cm(t,r))}catch(a){console.error("Could not serialize defined name "+JSON.stringify(t))}})}function Pm(e){var r=e.SheetNames.length;var t=wa(12*r+28);t._W(4,r+2);t._W(4,0);t._W(4,-2);t._W(4,-2);t._W(4,0);t._W(4,-1);t._W(4,-1);for(var a=0;a<r;++a){t._W(4,0);t._W(4,a);t._W(4,a)}return t}function Lm(e,r){Ea(e,353);Ea(e,357);Ea(e,362,Pm(r,0));Ea(e,354)}function Mm(e,r){var t=Ta();Ea(t,131);Ea(t,128,Nm());Ea(t,153,_m(e.Workbook&&e.Workbook.WBProps||null));Fm(t,e,r);Rm(t,e,r);Lm(t,e);if((e.Workbook||{}).Names)Dm(t,e);Ea(t,132);return t.end()}function Um(e,r,t){if(r.slice(-4)===".bin")return Om(e,t);return km(e,t)}function Bm(e,r,t,a,n,i,s,f){if(r.slice(-4)===".bin")return Vp(e,a,t,n,i,s,f);return mv(e,a,t,n,i,s,f)}function Wm(e,r,t,a,n,i,s,f){if(r.slice(-4)===".bin")return sm(e,a,t,n,i,s,f);return nm(e,a,t,n,i,s,f)}function Hm(e,r,t,a,n,i,s,f){if(r.slice(-4)===".bin")return Du(e,a,t,n,i,s,f);return Pu(e,a,t,n,i,s,f)}function zm(e,r,t,a,n,i,s,f){if(r.slice(-4)===".bin")return Iu(e,a,t,n,i,s,f);return Fu(e,a,t,n,i,s,f)}function Vm(e,r,t,a){if(r.slice(-4)===".bin")return wc(e,t,a);return tc(e,t,a)}function Gm(e,r,t){if(r.slice(-4)===".bin")return Kl(e,t);return $l(e,t)}function $m(e,r,t){if(r.slice(-4)===".bin")return Au(e,t);return mu(e,t)}function jm(e,r,t){if(r.slice(-4)===".bin")return ou(e,r,t);return fu(e,r,t)}function Xm(e,r,t,a){if(t.slice(-4)===".bin")return uu(e,r,t,a);return cu(e,r,t,a)}function Ym(e,r,t){if(r.slice(-4)===".bin")return au(e,r,t);return iu(e,r,t)}var Km=/([\w:]+)=((?:")([^"]*)(?:")|(?:')([^']*)(?:'))/g;var Zm=/([\w:]+)=((?:")(?:[^"]*)(?:")|(?:')(?:[^']*)(?:'))/;function Jm(e,r){var t=e.split(/\s+/);var a=[];if(!r)a[0]=t[0];if(t.length===1)return a;var n=e.match(Km),i,s,f,l;if(n)for(l=0;l!=n.length;++l){i=n[l].match(Zm);if((s=i[1].indexOf(":"))===-1)a[i[1]]=i[2].slice(1,i[2].length-1);else{if(i[1].slice(0,6)==="xmlns:")f="xmlns"+i[1].slice(6);else f=i[1].slice(s+1);a[f]=i[2].slice(1,i[2].length-1)}}return a}function qm(e){var r=e.split(/\s+/);var t={};if(r.length===1)return t;var a=e.match(Km),n,i,s,f;if(a)for(f=0;f!=a.length;++f){n=a[f].match(Zm);if((i=n[1].indexOf(":"))===-1)t[n[1]]=n[2].slice(1,n[2].length-1);else{if(n[1].slice(0,6)==="xmlns:")s="xmlns"+n[1].slice(6);else s=n[1].slice(i+1);t[s]=n[2].slice(1,n[2].length-1)}}return t}var Qm;function eb(e,r){var t=Qm[e]||rt(e);if(t==="General")return ce(r);return ze(t,r)}function rb(e,r,t,a){var n=a;switch((t[0].match(/dt:dt="([\w.]+)"/)||["",""])[1]){case"boolean":n=ut(a);break;case"i2":;case"int":n=parseInt(a,10);break;case"r4":;case"float":n=parseFloat(a);break;case"date":;case"dateTime.tz":n=Tr(a);break;case"i8":;case"string":;case"fixed":;case"uuid":;case"bin.base64":break;default:throw new Error("bad custprop:"+t[0]);}e[rt(r)]=n}function tb(e,r,t){if(e.t==="z")return;if(!t||t.cellText!==false)try{if(e.t==="e"){e.w=e.w||Jn[e.v]}else if(r==="General"){if(e.t==="n"){if((e.v|0)===e.v)e.w=e.v.toString(10);else e.w=oe(e.v)}else e.w=ce(e.v)}else e.w=eb(r||"General",e.v)}catch(a){if(t.WTF)throw a}try{var n=Qm[r]||r||"General";if(t.cellNF)e.z=n;if(t.cellDates&&e.t=="n"&&Me(n)){var i=ee(e.v);if(i){e.t="d";e.v=new Date(i.y,i.m-1,i.d,i.H,i.M,i.S,i.u)}}}catch(a){if(t.WTF)throw a}}function ab(e,r,t){if(t.cellStyles){if(r.Interior){var a=r.Interior;if(a.Pattern)a.patternType=jo[a.Pattern]||a.Pattern}}e[r.ID]=r}function nb(e,r,t,a,n,i,s,f,l,o){var c="General",u=a.StyleID,h={};o=o||{};var d=[];var v=0;if(u===undefined&&f)u=f.StyleID;if(u===undefined&&s)u=s.StyleID;while(i[u]!==undefined){if(i[u].nf)c=i[u].nf;if(i[u].Interior)d.push(i[u].Interior);if(!i[u].Parent)break;u=i[u].Parent}switch(t.Type){case"Boolean":a.t="b";a.v=ut(e);break;case"String":a.t="s";a.r=ot(rt(e));a.v=e.indexOf("<")>-1?rt(r||e).replace(/<.*?>/g,""):a.r;break;case"DateTime":if(e.slice(-1)!="Z")e+="Z";a.v=(Tr(e)-new Date(Date.UTC(1899,11,30)))/(24*60*60*1e3);if(a.v!==a.v)a.v=rt(e);else if(a.v<60)a.v=a.v-1;if(!c||c=="General")c="yyyy-mm-dd";case"Number":if(a.v===undefined)a.v=+e;if(!a.t)a.t="n";break;case"Error":a.t="e";a.v=qn[e];if(o.cellText!==false)a.w=e;break;default:if(e==""&&r==""){a.t="z"}else{a.t="s";a.v=ot(r||e)}break;}tb(a,c,o);if(o.cellFormula!==false){if(a.Formula){var p=rt(a.Formula);if(p.charCodeAt(0)==61)p=p.slice(1);a.f=Lu(p,n);delete a.Formula;if(a.ArrayRange=="RC")a.F=Lu("RC:RC",n);else if(a.ArrayRange){a.F=Lu(a.ArrayRange,n);l.push([za(a.F),a.F])}}else{for(v=0;v<l.length;++v)if(n.r>=l[v][0].s.r&&n.r<=l[v][0].e.r)if(n.c>=l[v][0].s.c&&n.c<=l[v][0].e.c)a.F=l[v][1]}}if(o.cellStyles){d.forEach(function(e){if(!h.patternType&&e.patternType)h.patternType=e.patternType});a.s=h}if(a.StyleID!==undefined)a.ixfe=a.StyleID}function ib(e){return Qn.indexOf("_xlnm."+e)>-1?"_xlnm."+e:e}function sb(e){e.t=e.v||"";e.t=e.t.replace(/\r\n/g,"\n").replace(/\r/g,"\n");e.v=e.w=e.ixfe=undefined}function fb(e,r){var t=r||{};$e();var n=d(Rt(e));if(t.type=="binary"||t.type=="array"||t.type=="base64"){if(typeof a!=="undefined")n=a.utils.decode(65001,c(n));else n=mt(n)}var i=n.slice(0,1024).toLowerCase(),s=false;i=i.replace(/".*?"/g,"");if((i.indexOf(">")&1023)>Math.min(i.indexOf(",")&1023,i.indexOf(";")&1023)){var f=yr(t);f.type="string";return Il.to_workbook(n,f)}if(i.indexOf("<?xml")==-1)["html","table","head","meta","script","style","div"].forEach(function(e){if(i.indexOf("<"+e)>=0)s=true});if(s)return ng(n,t);Qm={"General Number":"General","General Date":Z[22],"Long Date":"dddd, mmmm dd, yyyy","Medium Date":Z[15],"Short Date":Z[14],"Long Time":Z[19],"Medium Time":Z[18],"Short Time":Z[20],Currency:'"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',Fixed:Z[2],Standard:Z[4],Percent:Z[10],Scientific:Z[11],"Yes/No":'"Yes";"Yes";"No";@',"True/False":'"True";"True";"False";@',"On/Off":'"Yes";"Yes";"No";@'};var l;var o=[],u;if(b!=null&&t.dense==null)t.dense=b;var h={},v=[],p=t.dense?[]:{},m="";var g={},w={};var k=Jm('<Data ss:Type="String">'),T=0;var E=0,y=0;var S={s:{r:2e6,c:2e6},e:{r:0,c:0}};var _={},A={};var x="",C=0;var O=[];var R={},N={},I=0,F=[];var D=[],P={};var L=[],M,U=false;var B=[];var W=[],H={},z=0,V=0;var G={Sheets:[],WBProps:{date1904:false}},$={};Nt.lastIndex=0;n=n.replace(/<!--([\s\S]*?)-->/gm,"");var j="";while(l=Nt.exec(n))switch(l[3]=(j=l[3]).toLowerCase()){case"data":if(j=="data"){if(l[1]==="/"){if((u=o.pop())[0]!==l[3])throw new Error("Bad state: "+u.join("|"))}else if(l[0].charAt(l[0].length-2)!=="/")o.push([l[3],true]);break}if(o[o.length-1][1])break;if(l[1]==="/")nb(n.slice(T,l.index),x,k,o[o.length-1][0]=="comment"?P:g,{c:E,r:y},_,L[E],w,B,t);else{x="";k=Jm(l[0]);T=l.index+l[0].length}break;case"cell":if(l[1]==="/"){if(D.length>0)g.c=D;if((!t.sheetRows||t.sheetRows>y)&&g.v!==void 0){if(t.dense){if(!p[y])p[y]=[];p[y][E]=g}else p[Ia(E)+Ca(y)]=g}if(g.HRef){g.l={Target:rt(g.HRef)};if(g.HRefScreenTip)g.l.Tooltip=g.HRefScreenTip;delete g.HRef;delete g.HRefScreenTip}if(g.MergeAcross||g.MergeDown){z=E+(parseInt(g.MergeAcross,10)|0);V=y+(parseInt(g.MergeDown,10)|0);if(z>E||V>y)O.push({s:{c:E,r:y},e:{c:z,r:V}})}if(!t.sheetStubs){if(g.MergeAcross)E=z+1;else++E}else if(g.MergeAcross||g.MergeDown){for(var X=E;X<=z;++X){for(var Y=y;Y<=V;++Y){if(X>E||Y>y){if(t.dense){if(!p[Y])p[Y]=[];p[Y][X]={t:"z"}}else p[Ia(X)+Ca(Y)]={t:"z"}}}}E=z+1}else++E}else{g=qm(l[0]);if(g.Index)E=+g.Index-1;if(E<S.s.c)S.s.c=E;if(E>S.e.c)S.e.c=E;if(l[0].slice(-2)==="/>")++E;D=[]}break;case"row":if(l[1]==="/"||l[0].slice(-2)==="/>"){if(y<S.s.r)S.s.r=y;if(y>S.e.r)S.e.r=y;if(l[0].slice(-2)==="/>"){w=Jm(l[0]);if(w.Index)y=+w.Index-1}E=0;++y}else{w=Jm(l[0]);if(w.Index)y=+w.Index-1;H={};if(w.AutoFitHeight=="0"||w.Height){H.hpx=parseInt(w.Height,10);H.hpt=Go(H.hpx);W[y]=H}if(w.Hidden=="1"){H.hidden=true;W[y]=H}}break;case"worksheet":if(l[1]==="/"){if((u=o.pop())[0]!==l[3])throw new Error("Bad state: "+u.join("|"));v.push(m);if(S.s.r<=S.e.r&&S.s.c<=S.e.c){p["!ref"]=Ba(S);if(t.sheetRows&&t.sheetRows<=S.e.r){p["!fullref"]=p["!ref"];S.e.r=t.sheetRows-1;p["!ref"]=Ba(S)}}if(O.length)p["!merges"]=O;if(L.length>0)p["!cols"]=L;if(W.length>0)p["!rows"]=W;h[m]=p}else{S={s:{r:2e6,c:2e6},e:{r:0,c:0}};y=E=0;o.push([l[3],false]);u=Jm(l[0]);m=rt(u.Name);p=t.dense?[]:{};O=[];B=[];W=[];$={name:m,Hidden:0};G.Sheets.push($)}break;case"table":if(l[1]==="/"){if((u=o.pop())[0]!==l[3])throw new Error("Bad state: "+u.join("|"))}else if(l[0].slice(-2)=="/>")break;else{o.push([l[3],false]);L=[];U=false}break;case"style":if(l[1]==="/")ab(_,A,t);else A=Jm(l[0]);break;case"numberformat":A.nf=rt(Jm(l[0]).Format||"General");if(Qm[A.nf])A.nf=Qm[A.nf];for(var K=0;K!=392;++K)if(Z[K]==A.nf)break;if(K==392)for(K=57;K!=392;++K)if(Z[K]==null){qe(A.nf,K);break}break;case"column":if(o[o.length-1][0]!=="table")break;if(l[1]==="/")break;M=Jm(l[0]);if(M.Hidden){M.hidden=true;delete M.Hidden}if(M.Width)M.wpx=parseInt(M.Width,10);if(!U&&M.wpx>10){U=true;Po=Io;for(var J=0;J<L.length;++J)if(L[J])Ho(L[J])}if(U)Ho(M);L[M.Index-1||L.length]=M;for(var q=0;q<+M.Span;++q)L[L.length]=yr(M);break;case"namedrange":if(l[1]==="/")break;if(!G.Names)G.Names=[];var Q=Jr(l[0]);var ee={Name:ib(Q.Name),Ref:Lu(Q.RefersTo.slice(1),{r:0,c:0})};if(G.Sheets.length>0)ee.Sheet=G.Sheets.length-1;G.Names.push(ee);break;case"namedcell":break;case"b":break;case"i":break;case"u":break;case"s":break;case"em":break;case"h2":break;case"h3":break;case"sub":break;case"sup":break;case"span":break;case"alignment":break;case"borders":break;case"border":break;case"font":if(l[0].slice(-2)==="/>")break;else if(l[1]==="/")x+=n.slice(C,l.index);else C=l.index+l[0].length;break;case"interior":if(!t.cellStyles)break;A.Interior=Jm(l[0]);break;case"protection":break;case"author":;case"title":;case"description":;case"created":;case"keywords":;case"subject":;case"category":;case"company":;case"lastauthor":;case"lastsaved":;case"lastprinted":;case"version":;case"revision":;case"totaltime":;case"hyperlinkbase":;case"manager":;case"contentstatus":;case"identifier":;case"language":;case"appname":if(l[0].slice(-2)==="/>")break;else if(l[1]==="/")Ii(R,j,n.slice(I,l.index));else I=l.index+l[0].length;break;case"paragraphs":break;case"styles":;case"workbook":if(l[1]==="/"){if((u=o.pop())[0]!==l[3])throw new Error("Bad state: "+u.join("|"))}else o.push([l[3],false]);break;case"comment":if(l[1]==="/"){if((u=o.pop())[0]!==l[3])throw new Error("Bad state: "+u.join("|"));sb(P);D.push(P)}else{o.push([l[3],false]);u=Jm(l[0]);P={a:u.Author}}break;case"autofilter":if(l[1]==="/"){if((u=o.pop())[0]!==l[3])throw new Error("Bad state: "+u.join("|"))}else if(l[0].charAt(l[0].length-2)!=="/"){var re=Jm(l[0]);p["!autofilter"]={ref:Lu(re.Range).replace(/\$/g,"")};o.push([l[3],true])}break;case"name":break;case"datavalidation":if(l[1]==="/"){if((u=o.pop())[0]!==l[3])throw new Error("Bad state: "+u.join("|"))}else{if(l[0].charAt(l[0].length-2)!=="/")o.push([l[3],true])}break;case"pixelsperinch":break;case"componentoptions":;case"documentproperties":;case"customdocumentproperties":;case"officedocumentsettings":;case"pivottable":;case"pivotcache":;case"names":;case"mapinfo":;case"pagebreaks":;case"querytable":;case"sorting":;case"schema":;case"conditionalformatting":;case"smarttagtype":;case"smarttags":;case"excelworkbook":;case"workbookoptions":;case"worksheetoptions":if(l[1]==="/"){if((u=o.pop())[0]!==l[3])throw new Error("Bad state: "+u.join("|"))}else if(l[0].charAt(l[0].length-2)!=="/")o.push([l[3],true]);break;case"null":break;default:if(o.length==0&&l[3]=="document")return mg(n,t);if(o.length==0&&l[3]=="uof")return mg(n,t);var te=true;switch(o[o.length-1][0]){case"officedocumentsettings":switch(l[3]){case"allowpng":break;case"removepersonalinformation":break;case"downloadcomponents":break;case"locationofcomponents":break;case"colors":break;case"color":break;case"index":break;case"rgb":break;case"targetscreensize":break;case"readonlyrecommended":break;default:te=false;}break;case"componentoptions":switch(l[3]){case"toolbar":break;case"hideofficelogo":break;case"spreadsheetautofit":break;case"label":break;case"caption":break;case"maxheight":break;case"maxwidth":break;case"nextsheetnumber":break;default:te=false;}break;case"excelworkbook":switch(l[3]){case"date1904":G.WBProps.date1904=true;break;case"windowheight":break;case"windowwidth":break;case"windowtopx":break;case"windowtopy":break;case"tabratio":break;case"protectstructure":break;case"protectwindow":break;case"protectwindows":break;case"activesheet":break;case"displayinknotes":break;case"firstvisiblesheet":break;case"supbook":break;case"sheetname":break;case"sheetindex":break;case"sheetindexfirst":break;case"sheetindexlast":break;case"dll":break;case"acceptlabelsinformulas":break;case"donotsavelinkvalues":break;case"iteration":break;case"maxiterations":break;case"maxchange":break;case"path":break;case"xct":break;case"count":break;case"selectedsheets":break;case"calculation":break;case"uncalced":break;case"startupprompt":break;case"crn":break;case"externname":break;case"formula":break;case"colfirst":break;case"collast":break;case"wantadvise":break;case"boolean":break;case"error":break;case"text":break;case"ole":break;case"noautorecover":break;case"publishobjects":break;case"donotcalculatebeforesave":break;case"number":break;case"refmoder1c1":break;case"embedsavesmarttags":break;default:te=false;}break;case"workbookoptions":switch(l[3]){case"owcversion":break;case"height":break;case"width":break;default:te=false;}break;case"worksheetoptions":switch(l[3]){case"visible":if(l[0].slice(-2)==="/>"){}else if(l[1]==="/")switch(n.slice(I,l.index)){case"SheetHidden":$.Hidden=1;break;case"SheetVeryHidden":$.Hidden=2;break;}else I=l.index+l[0].length;break;case"header":if(!p["!margins"])rv(p["!margins"]={},"xlml");if(!isNaN(+Jr(l[0]).Margin))p["!margins"].header=+Jr(l[0]).Margin;break;case"footer":if(!p["!margins"])rv(p["!margins"]={},"xlml");if(!isNaN(+Jr(l[0]).Margin))p["!margins"].footer=+Jr(l[0]).Margin;break;case"pagemargins":var ae=Jr(l[0]);if(!p["!margins"])rv(p["!margins"]={},"xlml");if(!isNaN(+ae.Top))p["!margins"].top=+ae.Top;if(!isNaN(+ae.Left))p["!margins"].left=+ae.Left;if(!isNaN(+ae.Right))p["!margins"].right=+ae.Right;if(!isNaN(+ae.Bottom))p["!margins"].bottom=+ae.Bottom;break;case"displayrighttoleft":if(!G.Views)G.Views=[];if(!G.Views[0])G.Views[0]={};G.Views[0].RTL=true;break;case"freezepanes":break;case"frozennosplit":break;case"splithorizontal":;case"splitvertical":break;case"donotdisplaygridlines":break;case"activerow":break;case"activecol":break;case"toprowbottompane":break;case"leftcolumnrightpane":break;case"unsynced":break;case"print":break;case"printerrors":break;case"panes":break;case"scale":break;case"pane":break;case"number":break;case"layout":break;case"pagesetup":break;case"selected":break;case"protectobjects":break;case"enableselection":break;case"protectscenarios":break;case"validprinterinfo":break;case"horizontalresolution":break;case"verticalresolution":break;case"numberofcopies":break;case"activepane":break;case"toprowvisible":break;case"leftcolumnvisible":break;case"fittopage":break;case"rangeselection":break;case"papersizeindex":break;case"pagelayoutzoom":break;case"pagebreakzoom":break;case"filteron":break;case"fitwidth":break;case"fitheight":break;case"commentslayout":break;case"zoom":break;case"lefttoright":break;case"gridlines":break;case"allowsort":break;case"allowfilter":break;case"allowinsertrows":break;case"allowdeleterows":break;case"allowinsertcols":break;case"allowdeletecols":break;case"allowinserthyperlinks":break;case"allowformatcells":break;case"allowsizecols":break;case"allowsizerows":break;case"nosummaryrowsbelowdetail":if(!p["!outline"])p["!outline"]={};p["!outline"].above=true;break;case"tabcolorindex":break;case"donotdisplayheadings":break;case"showpagelayoutzoom":break;case"nosummarycolumnsrightdetail":if(!p["!outline"])p["!outline"]={};p["!outline"].left=true;break;case"blackandwhite":break;case"donotdisplayzeros":break;case"displaypagebreak":break;case"rowcolheadings":break;case"donotdisplayoutline":break;case"noorientation":break;case"allowusepivottables":break;case"zeroheight":break;case"viewablerange":break;case"selection":break;case"protectcontents":break;default:te=false;}break;case"pivottable":;case"pivotcache":switch(l[3]){case"immediateitemsondrop":break;case"showpagemultipleitemlabel":break;case"compactrowindent":break;case"location":break;case"pivotfield":break;case"orientation":break;case"layoutform":break;case"layoutsubtotallocation":break;case"layoutcompactrow":break;case"position":break;case"pivotitem":break;case"datatype":break;case"datafield":break;case"sourcename":break;case"parentfield":break;case"ptlineitems":break;case"ptlineitem":break;case"countofsameitems":break;case"item":break;case"itemtype":break;case"ptsource":break;case"cacheindex":break;case"consolidationreference":break;case"filename":break;case"reference":break;case"nocolumngrand":break;case"norowgrand":break;case"blanklineafteritems":break;case"hidden":break;case"subtotal":break;case"basefield":break;case"mapchilditems":break;case"function":break;case"refreshonfileopen":break;case"printsettitles":break;case"mergelabels":break;case"defaultversion":break;case"refreshname":break;case"refreshdate":break;case"refreshdatecopy":break;case"versionlastrefresh":break;case"versionlastupdate":break;case"versionupdateablemin":break;case"versionrefreshablemin":break;case"calculation":break;default:te=false;}break;case"pagebreaks":switch(l[3]){case"colbreaks":break;case"colbreak":break;case"rowbreaks":break;case"rowbreak":break;case"colstart":break;case"colend":break;case"rowend":break;default:te=false;}break;case"autofilter":switch(l[3]){case"autofiltercolumn":break;case"autofiltercondition":break;case"autofilterand":break;case"autofilteror":break;default:te=false;}break;case"querytable":switch(l[3]){case"id":break;case"autoformatfont":break;case"autoformatpattern":break;case"querysource":break;case"querytype":break;case"enableredirections":break;case"refreshedinxl9":break;case"urlstring":break;case"htmltables":break;case"connection":break;case"commandtext":break;case"refreshinfo":break;case"notitles":break;case"nextid":break;case"columninfo":break;case"overwritecells":break;case"donotpromptforfile":break;case"textwizardsettings":break;case"source":break;case"number":break;case"decimal":break;case"thousandseparator":break;case"trailingminusnumbers":break;case"formatsettings":break;case"fieldtype":break;case"delimiters":break;case"tab":break;case"comma":break;case"autoformatname":break;case"versionlastedit":break;case"versionlastrefresh":break;default:te=false;}break;case"datavalidation":switch(l[3]){case"range":break;case"type":break;case"min":break;case"max":break;case"sort":break;case"descending":break;case"order":break;case"casesensitive":break;case"value":break;case"errorstyle":break;case"errormessage":break;case"errortitle":break;case"inputmessage":break;case"inputtitle":break;case"combohide":break;case"inputhide":break;case"condition":break;case"qualifier":break;case"useblank":break;case"value1":break;case"value2":break;case"format":break;case"cellrangelist":break;default:te=false;}break;case"sorting":;case"conditionalformatting":switch(l[3]){case"range":break;case"type":break;case"min":break;case"max":break;case"sort":break;case"descending":break;case"order":break;case"casesensitive":break;case"value":break;case"errorstyle":break;case"errormessage":break;case"errortitle":break;case"cellrangelist":break;case"inputmessage":break;case"inputtitle":break;case"combohide":break;case"inputhide":break;case"condition":break;case"qualifier":break;case"useblank":break;case"value1":break;case"value2":break;case"format":break;default:te=false;}break;case"mapinfo":;case"schema":;case"data":switch(l[3]){case"map":break;case"entry":break;case"range":break;case"xpath":break;case"field":break;case"xsdtype":break;case"filteron":break;case"aggregate":break;case"elementtype":break;case"attributetype":break;case"schema":;case"element":;case"complextype":;case"datatype":;case"all":;case"attribute":;case"extends":break;case"row":break;default:te=false;}break;case"smarttags":break;default:te=false;break;}if(te)break;if(l[3].match(/!\[CDATA/))break;if(!o[o.length-1][1])throw"Unrecognized tag: "+l[3]+"|"+o.join("|");if(o[o.length-1][0]==="customdocumentproperties"){if(l[0].slice(-2)==="/>")break;else if(l[1]==="/")rb(N,j,F,n.slice(I,l.index));else{F=l;I=l.index+l[0].length}break}if(t.WTF)throw"Unrecognized tag: "+l[3]+"|"+o.join("|");}var ne={};if(!t.bookSheets&&!t.bookProps)ne.Sheets=h;ne.SheetNames=v;ne.Workbook=G;ne.SSF=yr(Z);ne.Props=R;ne.Custprops=N;ne.bookType="xlml";return ne}function lb(e,r){gw(r=r||{});switch(r.type||"base64"){case"base64":return fb(E(e),r);case"binary":;case"buffer":;case"file":return fb(e,r);case"array":return fb(R(e),r);}}function ob(e,r){var t=[];if(e.Props)t.push(Fi(e.Props,r));if(e.Custprops)t.push(Di(e.Props,e.Custprops,r));return t.join("")}function cb(e){if((((e||{}).Workbook||{}).WBProps||{}).date1904)return'<ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel"><Date1904/></ExcelWorkbook>';return""}function ub(e,r){var t=['<Style ss:ID="Default" ss:Name="Normal"><NumberFormat/></Style>'];r.cellXfs.forEach(function(e,r){var a=[];a.push(xt("NumberFormat",null,{"ss:Format":nt(Z[e.numFmtId])}));var n={"ss:ID":"s"+(21+r)};t.push(xt("Style",a.join(""),n))});return xt("Styles",t.join(""))}function hb(e){return xt("NamedRange",null,{"ss:Name":e.Name.slice(0,6)=="_xlnm."?e.Name.slice(6):e.Name,"ss:RefersTo":"="+Uu(e.Ref,{r:0,c:0})})}function db(e){if(!((e||{}).Workbook||{}).Names)return"";var r=e.Workbook.Names;var t=[];for(var a=0;a<r.length;++a){var n=r[a];if(n.Sheet!=null)continue;if(n.Name.match(/^_xlfn\./))continue;t.push(hb(n))}return xt("Names",t.join(""))}function vb(e,r,t,a){if(!e)return"";if(!((a||{}).Workbook||{}).Names)return"";var n=a.Workbook.Names;var i=[];for(var s=0;s<n.length;++s){var f=n[s];if(f.Sheet!=t)continue;if(f.Name.match(/^_xlfn\./))continue;i.push(hb(f))}return i.join("")}function pb(e,r,t,a){if(!e)return"";var n=[];if(e["!margins"]){n.push("<PageSetup>");if(e["!margins"].header)n.push(xt("Header",null,{"x:Margin":e["!margins"].header}));if(e["!margins"].footer)n.push(xt("Footer",null,{"x:Margin":e["!margins"].footer}));n.push(xt("PageMargins",null,{"x:Bottom":e["!margins"].bottom||"0.75","x:Left":e["!margins"].left||"0.7","x:Right":e["!margins"].right||"0.7","x:Top":e["!margins"].top||"0.75"}));n.push("</PageSetup>")}if(a&&a.Workbook&&a.Workbook.Sheets&&a.Workbook.Sheets[t]){if(a.Workbook.Sheets[t].Hidden)n.push(xt("Visible",a.Workbook.Sheets[t].Hidden==1?"SheetHidden":"SheetVeryHidden",{}));else{for(var i=0;i<t;++i)if(a.Workbook.Sheets[i]&&!a.Workbook.Sheets[i].Hidden)break;if(i==t)n.push("<Selected/>")}}if(((((a||{}).Workbook||{}).Views||[])[0]||{}).RTL)n.push("<DisplayRightToLeft/>");if(e["!protect"]){n.push(_t("ProtectContents","True"));if(e["!protect"].objects)n.push(_t("ProtectObjects","True"));if(e["!protect"].scenarios)n.push(_t("ProtectScenarios","True"));if(e["!protect"].selectLockedCells!=null&&!e["!protect"].selectLockedCells)n.push(_t("EnableSelection","NoSelection"));else if(e["!protect"].selectUnlockedCells!=null&&!e["!protect"].selectUnlockedCells)n.push(_t("EnableSelection","UnlockedCells"));[["formatCells","AllowFormatCells"],["formatColumns","AllowSizeCols"],["formatRows","AllowSizeRows"],["insertColumns","AllowInsertCols"],["insertRows","AllowInsertRows"],["insertHyperlinks","AllowInsertHyperlinks"],["deleteColumns","AllowDeleteCols"],["deleteRows","AllowDeleteRows"],["sort","AllowSort"],["autoFilter","AllowFilter"],["pivotTables","AllowUsePivotTables"]].forEach(function(r){if(e["!protect"][r[0]])n.push("<"+r[1]+"/>")})}if(n.length==0)return"";return xt("WorksheetOptions",n.join(""),{xmlns:Dt.x})}function mb(e){return e.map(function(e){var r=ct(e.t||"");var t=xt("ss:Data",r,{xmlns:"http://www.w3.org/TR/REC-html40"});return xt("Comment",t,{"ss:Author":e.a})}).join("")}function bb(e,r,t,a,n,i,s){if(!e||e.v==undefined&&e.f==undefined)return"";var f={};if(e.f)f["ss:Formula"]="="+nt(Uu(e.f,s));if(e.F&&e.F.slice(0,r.length)==r){var l=La(e.F.slice(r.length+1));f["ss:ArrayRange"]="RC:R"+(l.r==s.r?"":"["+(l.r-s.r)+"]")+"C"+(l.c==s.c?"":"["+(l.c-s.c)+"]")}if(e.l&&e.l.Target){f["ss:HRef"]=nt(e.l.Target);if(e.l.Tooltip)f["x:HRefScreenTip"]=nt(e.l.Tooltip)}if(t["!merges"]){var o=t["!merges"];for(var c=0;c!=o.length;++c){if(o[c].s.c!=s.c||o[c].s.r!=s.r)continue;if(o[c].e.c>o[c].s.c)f["ss:MergeAcross"]=o[c].e.c-o[c].s.c;if(o[c].e.r>o[c].s.r)f["ss:MergeDown"]=o[c].e.r-o[c].s.r}}var u="",h="";switch(e.t){case"z":if(!a.sheetStubs)return"";break;case"n":u="Number";h=String(e.v);break;case"b":u="Boolean";h=e.v?"1":"0";break;case"e":u="Error";h=Jn[e.v];break;case"d":u="DateTime";h=new Date(e.v).toISOString();if(e.z==null)e.z=e.z||Z[14];break;case"s":u="String";h=lt(e.v||"");break;}var d=tv(a.cellXfs,e,a);f["ss:StyleID"]="s"+(21+d);f["ss:Index"]=s.c+1;var v=e.v!=null?h:"";var p=e.t=="z"?"":'<Data ss:Type="'+u+'">'+v+"</Data>";if((e.c||[]).length>0)p+=mb(e.c);return xt("Cell",p,f)}function gb(e,r){var t='<Row ss:Index="'+(e+1)+'"';if(r){if(r.hpt&&!r.hpx)r.hpx=$o(r.hpt);if(r.hpx)t+=' ss:AutoFitHeight="0" ss:Height="'+r.hpx+'"';if(r.hidden)t+=' ss:Hidden="1"'}return t+">"}function wb(e,r,t,a){if(!e["!ref"])return"";var n=za(e["!ref"]);var i=e["!merges"]||[],s=0;var f=[];if(e["!cols"])e["!cols"].forEach(function(e,r){Ho(e);var t=!!e.width;var a=ev(r,e);var n={"ss:Index":r+1};if(t)n["ss:Width"]=Lo(a.width);if(e.hidden)n["ss:Hidden"]="1";f.push(xt("Column",null,n))});var l=Array.isArray(e);for(var o=n.s.r;o<=n.e.r;++o){var c=[gb(o,(e["!rows"]||[])[o])];for(var u=n.s.c;u<=n.e.c;++u){var h=false;for(s=0;s!=i.length;++s){if(i[s].s.c>u)continue;if(i[s].s.r>o)continue;if(i[s].e.c<u)continue;if(i[s].e.r<o)continue;if(i[s].s.c!=u||i[s].s.r!=o)h=true;break}if(h)continue;var d={r:o,c:u};var v=Ma(d),p=l?(e[o]||[])[u]:e[v];c.push(bb(p,v,e,r,t,a,d))}c.push("</Row>");if(c.length>2)f.push(c.join(""))}return f.join("")}function kb(e,r,t){var a=[];var n=t.SheetNames[e];var i=t.Sheets[n];var s=i?vb(i,r,e,t):"";if(s.length>0)a.push("<Names>"+s+"</Names>");s=i?wb(i,r,e,t):"";if(s.length>0)a.push("<Table>"+s+"</Table>");a.push(pb(i,r,e,t));if(i["!autofilter"])a.push('<AutoFilter x:Range="'+Uu(Wa(i["!autofilter"].ref),{r:0,c:0})+'" xmlns="urn:schemas-microsoft-com:office:excel"></AutoFilter>');return a.join("")}function Tb(e,r){if(!r)r={};if(!e.SSF)e.SSF=yr(Z);if(e.SSF){$e();Ge(e.SSF);r.revssf=or(e.SSF);
-r.revssf[e.SSF[65535]]=0;r.ssf=e.SSF;r.cellXfs=[];tv(r.cellXfs,{},{revssf:{General:0}})}var t=[];t.push(ob(e,r));t.push(cb(e,r));t.push("");t.push("");for(var a=0;a<e.SheetNames.length;++a)t.push(xt("Worksheet",kb(a,r,e),{"ss:Name":nt(e.SheetNames[a])}));t[2]=ub(e,r);t[3]=db(e,r);return Gr+xt("Workbook",t.join(""),{xmlns:Dt.ss,"xmlns:o":Dt.o,"xmlns:x":Dt.x,"xmlns:ss":Dt.ss,"xmlns:dt":Dt.dt,"xmlns:html":Dt.html})}function Eb(e){var r={};var t=e.content;t.l=28;r.AnsiUserType=t._R(0,"lpstr-ansi");r.AnsiClipboardFormat=On(t);if(t.length-t.l<=4)return r;var a=t._R(4);if(a==0||a>40)return r;t.l-=4;r.Reserved1=t._R(0,"lpstr-ansi");if(t.length-t.l<=4)return r;a=t._R(4);if(a!==1907505652)return r;r.UnicodeClipboardFormat=Rn(t);a=t._R(4);if(a==0||a>40)return r;t.l-=4;r.Reserved2=t._R(0,"lpwstr")}var yb=[60,1084,2066,2165,2175];function Sb(e,r,t,a,n){var i=a;var s=[];var f=t.slice(t.l,t.l+i);if(n&&n.enc&&n.enc.insitu&&f.length>0)switch(e){case 9:;case 521:;case 1033:;case 2057:;case 47:;case 405:;case 225:;case 406:;case 312:;case 404:;case 10:break;case 133:break;default:n.enc.insitu(f);}s.push(f);t.l+=i;var l=sa(t,t.l),o=Db[l];var c=0;while(o!=null&&yb.indexOf(l)>-1){i=sa(t,t.l+2);c=t.l+4;if(l==2066)c+=4;else if(l==2165||l==2175){c+=12}f=t.slice(c,t.l+4+i);s.push(f);t.l+=4+i;o=Db[l=sa(t,t.l)]}var u=F(s);ba(u,0);var h=0;u.lens=[];for(var d=0;d<s.length;++d){u.lens.push(h);h+=s[d].length}if(u.length<a)throw"XLS Record 0x"+e.toString(16)+" Truncated: "+u.length+" < "+a;return r.f(u,u.length,n)}function _b(e,r,t){if(e.t==="z")return;if(!e.XF)return;var a=0;try{a=e.z||e.XF.numFmtId||0;if(r.cellNF)e.z=Z[a]}catch(n){if(r.WTF)throw n}if(!r||r.cellText!==false)try{if(e.t==="e"){e.w=e.w||Jn[e.v]}else if(a===0||a=="General"){if(e.t==="n"){if((e.v|0)===e.v)e.w=e.v.toString(10);else e.w=oe(e.v)}else e.w=ce(e.v)}else e.w=ze(a,e.v,{date1904:!!t,dateNF:r&&r.dateNF})}catch(n){if(r.WTF)throw n}if(r.cellDates&&a&&e.t=="n"&&Me(Z[a]||String(a))){var i=ee(e.v);if(i){e.t="d";e.v=new Date(i.y,i.m-1,i.d,i.H,i.M,i.S,i.u)}}}function Ab(e,r,t){return{v:e,ixfe:r,t:t}}function xb(e,r){var t={opts:{}};var a={};if(b!=null&&r.dense==null)r.dense=b;var n=r.dense?[]:{};var i={};var s={};var f=null;var o=[];var c="";var u={};var h,d="",v,p,m,g;var w={};var k=[];var T;var E;var y=[];var S=[];var _={Sheets:[],WBProps:{date1904:false},Views:[{}]},A={};var x=function ve(e){if(e<8)return Zn[e];if(e<64)return S[e-8]||Zn[e];return Zn[e]};var C=function pe(e,r,t){var a=r.XF.data;if(!a||!a.patternType||!t||!t.cellStyles)return;r.s={};r.s.patternType=a.patternType;var n;if(n=Co(x(a.icvFore))){r.s.fgColor={rgb:n}}if(n=Co(x(a.icvBack))){r.s.bgColor={rgb:n}}};var O=function me(e,r,t){if(B>1)return;if(t.sheetRows&&e.r>=t.sheetRows)return;if(t.cellStyles&&r.XF&&r.XF.data)C(e,r,t);delete r.ixfe;delete r.XF;h=e;d=Ma(e);if(!s||!s.s||!s.e)s={s:{r:0,c:0},e:{r:0,c:0}};if(e.r<s.s.r)s.s.r=e.r;if(e.c<s.s.c)s.s.c=e.c;if(e.r+1>s.e.r)s.e.r=e.r+1;if(e.c+1>s.e.c)s.e.c=e.c+1;if(t.cellFormula&&r.f){for(var a=0;a<k.length;++a){if(k[a][0].s.c>e.c||k[a][0].s.r>e.r)continue;if(k[a][0].e.c<e.c||k[a][0].e.r<e.r)continue;r.F=Ba(k[a][0]);if(k[a][0].s.c!=e.c||k[a][0].s.r!=e.r)delete r.f;if(r.f)r.f=""+bd(k[a][1],s,e,M,R);break}}{if(t.dense){if(!n[e.r])n[e.r]=[];n[e.r][e.c]=r}else n[d]=r}};var R={enc:false,sbcch:0,snames:[],sharedf:w,arrayf:k,rrtabid:[],lastuser:"",biff:8,codepage:0,winlocked:0,cellStyles:!!r&&!!r.cellStyles,WTF:!!r&&!!r.wtf};if(r.password)R.password=r.password;var N;var I=[];var F=[];var D=[],P=[];var L=false;var M=[];M.SheetNames=R.snames;M.sharedf=R.sharedf;M.arrayf=R.arrayf;M.names=[];M.XTI=[];var U=0;var B=0;var W=0,H=[];var z=[];var V;R.codepage=1200;l(1200);var G=false;while(e.l<e.length-1){var $=e.l;var j=e._R(2);if(j===0&&U===10)break;var X=e.l===e.length?0:e._R(2);var Y=Db[j];if(B==0&&[9,521,1033,2057].indexOf(j)==-1)break;if(Y&&Y.f){if(r.bookSheets){if(U===133&&j!==133)break}U=j;if(Y.r===2||Y.r==12){var K=e._R(2);X-=2;if(!R.enc&&K!==j&&((K&255)<<8|K>>8)!==j)throw new Error("rt mismatch: "+K+"!="+j);if(Y.r==12){e.l+=10;X-=10}}var J={};if(j===10)J=Y.f(e,X,R);else J=Sb(j,Y,e,X,R);if(B==0&&[9,521,1033,2057].indexOf(U)===-1)continue;switch(j){case 34:t.opts.Date1904=_.WBProps.date1904=J;break;case 134:t.opts.WriteProtect=true;break;case 47:if(!R.enc)e.l=0;R.enc=J;if(!r.password)throw new Error("File is password-protected");if(J.valid==null)throw new Error("Encryption scheme unsupported");if(!J.valid)throw new Error("Password is incorrect");break;case 92:R.lastuser=J;break;case 66:var q=Number(J);switch(q){case 21010:q=1200;break;case 32768:q=1e4;break;case 32769:q=1252;break;}l(R.codepage=q);G=true;break;case 317:R.rrtabid=J;break;case 25:R.winlocked=J;break;case 439:t.opts["RefreshAll"]=J;break;case 12:t.opts["CalcCount"]=J;break;case 16:t.opts["CalcDelta"]=J;break;case 17:t.opts["CalcIter"]=J;break;case 13:t.opts["CalcMode"]=J;break;case 14:t.opts["CalcPrecision"]=J;break;case 95:t.opts["CalcSaveRecalc"]=J;break;case 15:R.CalcRefMode=J;break;case 2211:t.opts.FullCalc=J;break;case 129:if(J.fDialog)n["!type"]="dialog";if(!J.fBelow)(n["!outline"]||(n["!outline"]={})).above=true;if(!J.fRight)(n["!outline"]||(n["!outline"]={})).left=true;break;case 224:y.push(J);break;case 430:M.push([J]);M[M.length-1].XTI=[];break;case 35:;case 547:M[M.length-1].push(J);break;case 24:;case 536:V={Name:J.Name,Ref:bd(J.rgce,s,null,M,R)};if(J.itab>0)V.Sheet=J.itab-1;M.names.push(V);if(!M[0]){M[0]=[];M[0].XTI=[]}M[M.length-1].push(J);if(J.Name=="_xlnm._FilterDatabase"&&J.itab>0)if(J.rgce&&J.rgce[0]&&J.rgce[0][0]&&J.rgce[0][0][0]=="PtgArea3d")z[J.itab-1]={ref:Ba(J.rgce[0][0][1][2])};break;case 22:R.ExternCount=J;break;case 23:if(M.length==0){M[0]=[];M[0].XTI=[]}M[M.length-1].XTI=M[M.length-1].XTI.concat(J);M.XTI=M.XTI.concat(J);break;case 2196:if(R.biff<8)break;if(V!=null)V.Comment=J[1];break;case 18:n["!protect"]=J;break;case 19:if(J!==0&&R.WTF)console.error("Password verifier: "+J);break;case 133:{i[J.pos]=J;R.snames.push(J.name)}break;case 10:{if(--B)break;if(s.e){if(s.e.r>0&&s.e.c>0){s.e.r--;s.e.c--;n["!ref"]=Ba(s);if(r.sheetRows&&r.sheetRows<=s.e.r){var Q=s.e.r;s.e.r=r.sheetRows-1;n["!fullref"]=n["!ref"];n["!ref"]=Ba(s);s.e.r=Q}s.e.r++;s.e.c++}if(I.length>0)n["!merges"]=I;if(F.length>0)n["!objects"]=F;if(D.length>0)n["!cols"]=D;if(P.length>0)n["!rows"]=P;_.Sheets.push(A)}if(c==="")u=n;else a[c]=n;n=r.dense?[]:{}}break;case 9:;case 521:;case 1033:;case 2057:{if(R.biff===8)R.biff={9:2,521:3,1033:4}[j]||{512:2,768:3,1024:4,1280:5,1536:8,2:2,7:2}[J.BIFFVer]||8;R.biffguess=J.BIFFVer==0;if(J.BIFFVer==0&&J.dt==4096){R.biff=5;G=true;l(R.codepage=28591)}if(R.biff==8&&J.BIFFVer==0&&J.dt==16)R.biff=2;if(B++)break;n=r.dense?[]:{};if(R.biff<8&&!G){G=true;l(R.codepage=r.codepage||1252)}if(R.biff<5||J.BIFFVer==0&&J.dt==4096){if(c==="")c="Sheet1";s={s:{r:0,c:0},e:{r:0,c:0}};var ee={pos:e.l-X,name:c};i[ee.pos]=ee;R.snames.push(c)}else c=(i[$]||{name:""}).name;if(J.dt==32)n["!type"]="chart";if(J.dt==64)n["!type"]="macro";I=[];F=[];R.arrayf=k=[];D=[];P=[];L=false;A={Hidden:(i[$]||{hs:0}).hs,name:c}}break;case 515:;case 3:;case 2:{if(n["!type"]=="chart")if(r.dense?(n[J.r]||[])[J.c]:n[Ma({c:J.c,r:J.r})])++J.c;T={ixfe:J.ixfe,XF:y[J.ixfe]||{},v:J.val,t:"n"};if(W>0)T.z=H[T.ixfe>>8&63];_b(T,r,t.opts.Date1904);O({c:J.c,r:J.r},T,r)}break;case 5:;case 517:{T={ixfe:J.ixfe,XF:y[J.ixfe],v:J.val,t:J.t};if(W>0)T.z=H[T.ixfe>>8&63];_b(T,r,t.opts.Date1904);O({c:J.c,r:J.r},T,r)}break;case 638:{T={ixfe:J.ixfe,XF:y[J.ixfe],v:J.rknum,t:"n"};if(W>0)T.z=H[T.ixfe>>8&63];_b(T,r,t.opts.Date1904);O({c:J.c,r:J.r},T,r)}break;case 189:{for(var re=J.c;re<=J.C;++re){var te=J.rkrec[re-J.c][0];T={ixfe:te,XF:y[te],v:J.rkrec[re-J.c][1],t:"n"};if(W>0)T.z=H[T.ixfe>>8&63];_b(T,r,t.opts.Date1904);O({c:re,r:J.r},T,r)}}break;case 6:;case 518:;case 1030:{if(J.val=="String"){f=J;break}T=Ab(J.val,J.cell.ixfe,J.tt);T.XF=y[T.ixfe];if(r.cellFormula){var ae=J.formula;if(ae&&ae[0]&&ae[0][0]&&ae[0][0][0]=="PtgExp"){var ne=ae[0][0][1][0],ie=ae[0][0][1][1];var se=Ma({r:ne,c:ie});if(w[se])T.f=""+bd(J.formula,s,J.cell,M,R);else T.F=((r.dense?(n[ne]||[])[ie]:n[se])||{}).F}else T.f=""+bd(J.formula,s,J.cell,M,R)}if(W>0)T.z=H[T.ixfe>>8&63];_b(T,r,t.opts.Date1904);O(J.cell,T,r);f=J}break;case 7:;case 519:{if(f){f.val=J;T=Ab(J,f.cell.ixfe,"s");T.XF=y[T.ixfe];if(r.cellFormula){T.f=""+bd(f.formula,s,f.cell,M,R)}if(W>0)T.z=H[T.ixfe>>8&63];_b(T,r,t.opts.Date1904);O(f.cell,T,r);f=null}else throw new Error("String record expects Formula")}break;case 33:;case 545:{k.push(J);var fe=Ma(J[0].s);v=r.dense?(n[J[0].s.r]||[])[J[0].s.c]:n[fe];if(r.cellFormula&&v){if(!f)break;if(!fe||!v)break;v.f=""+bd(J[1],s,J[0],M,R);v.F=Ba(J[0])}}break;case 1212:{if(!r.cellFormula)break;if(d){if(!f)break;w[Ma(f.cell)]=J[0];v=r.dense?(n[f.cell.r]||[])[f.cell.c]:n[Ma(f.cell)];(v||{}).f=""+bd(J[0],s,h,M,R)}}break;case 253:T=Ab(o[J.isst].t,J.ixfe,"s");if(o[J.isst].h)T.h=o[J.isst].h;T.XF=y[T.ixfe];if(W>0)T.z=H[T.ixfe>>8&63];_b(T,r,t.opts.Date1904);O({c:J.c,r:J.r},T,r);break;case 513:if(r.sheetStubs){T={ixfe:J.ixfe,XF:y[J.ixfe],t:"z"};if(W>0)T.z=H[T.ixfe>>8&63];_b(T,r,t.opts.Date1904);O({c:J.c,r:J.r},T,r)}break;case 190:if(r.sheetStubs){for(var le=J.c;le<=J.C;++le){var oe=J.ixfe[le-J.c];T={ixfe:oe,XF:y[oe],t:"z"};if(W>0)T.z=H[T.ixfe>>8&63];_b(T,r,t.opts.Date1904);O({c:le,r:J.r},T,r)}}break;case 214:;case 516:;case 4:T=Ab(J.val,J.ixfe,"s");T.XF=y[T.ixfe];if(W>0)T.z=H[T.ixfe>>8&63];_b(T,r,t.opts.Date1904);O({c:J.c,r:J.r},T,r);break;case 0:;case 512:{if(B===1)s=J}break;case 252:{o=J}break;case 1054:{if(R.biff==4){H[W++]=J[1];for(var ce=0;ce<W+163;++ce)if(Z[ce]==J[1])break;if(ce>=163)qe(J[1],W+163)}else qe(J[1],J[0])}break;case 30:{H[W++]=J;for(var ue=0;ue<W+163;++ue)if(Z[ue]==J)break;if(ue>=163)qe(J,W+163)}break;case 229:I=I.concat(J);break;case 93:F[J.cmo[0]]=R.lastobj=J;break;case 438:R.lastobj.TxO=J;break;case 127:R.lastobj.ImData=J;break;case 440:{for(g=J[0].s.r;g<=J[0].e.r;++g)for(m=J[0].s.c;m<=J[0].e.c;++m){v=r.dense?(n[g]||[])[m]:n[Ma({c:m,r:g})];if(v)v.l=J[1]}}break;case 2048:{for(g=J[0].s.r;g<=J[0].e.r;++g)for(m=J[0].s.c;m<=J[0].e.c;++m){v=r.dense?(n[g]||[])[m]:n[Ma({c:m,r:g})];if(v&&v.l)v.l.Tooltip=J[1]}}break;case 28:{if(R.biff<=5&&R.biff>=2)break;v=r.dense?(n[J[0].r]||[])[J[0].c]:n[Ma(J[0])];var he=F[J[2]];if(!v){if(r.dense){if(!n[J[0].r])n[J[0].r]=[];v=n[J[0].r][J[0].c]={t:"z"}}else{v=n[Ma(J[0])]={t:"z"}}s.e.r=Math.max(s.e.r,J[0].r);s.s.r=Math.min(s.s.r,J[0].r);s.e.c=Math.max(s.e.c,J[0].c);s.s.c=Math.min(s.s.c,J[0].c)}if(!v.c)v.c=[];p={a:J[1],t:he.TxO.t};v.c.push(p)}break;case 2173:Kc(y[J.ixfe],J.ext);break;case 125:{if(!R.cellStyles)break;while(J.e>=J.s){D[J.e--]={width:J.w/256,level:J.level||0,hidden:!!(J.flags&1)};if(!L){L=true;Wo(J.w/256)}Ho(D[J.e+1])}}break;case 520:{var de={};if(J.level!=null){P[J.r]=de;de.level=J.level}if(J.hidden){P[J.r]=de;de.hidden=true}if(J.hpt){P[J.r]=de;de.hpt=J.hpt;de.hpx=$o(J.hpt)}}break;case 38:;case 39:;case 40:;case 41:if(!n["!margins"])rv(n["!margins"]={});n["!margins"][{38:"left",39:"right",40:"top",41:"bottom"}[j]]=J;break;case 161:if(!n["!margins"])rv(n["!margins"]={});n["!margins"].header=J.header;n["!margins"].footer=J.footer;break;case 574:if(J.RTL)_.Views[0].RTL=true;break;case 146:S=J;break;case 2198:N=J;break;case 140:E=J;break;case 442:{if(!c)_.WBProps.CodeName=J||"ThisWorkbook";else A.CodeName=J||A.name}break;}}else{if(!Y)console.error("Missing Info for XLS Record 0x"+j.toString(16));e.l+=X}}t.SheetNames=sr(i).sort(function(e,r){return Number(e)-Number(r)}).map(function(e){return i[e].name});if(!r.bookSheets)t.Sheets=a;if(!t.SheetNames.length&&u["!ref"]){t.SheetNames.push("Sheet1");if(t.Sheets)t.Sheets["Sheet1"]=u}else t.Preamble=u;if(t.Sheets)z.forEach(function(e,r){t.Sheets[t.SheetNames[r]]["!autofilter"]=e});t.Strings=o;t.SSF=yr(Z);if(R.enc)t.Encryption=R.enc;if(N)t.Themes=N;t.Metadata={};if(E!==undefined)t.Metadata.Country=E;if(M.names.length>0)_.Names=M.names;t.Workbook=_;return t}var Cb={SI:"e0859ff2f94f6810ab9108002b27b3d9",DSI:"02d5cdd59c2e1b10939708002b2cf9ae",UDI:"05d5cdd59c2e1b10939708002b2cf9ae"};function Ob(e,r,t){var a=er.find(e,"/!DocumentSummaryInformation");if(a&&a.size>0)try{var n=rs(a,Gn,Cb.DSI);for(var i in n)r[i]=n[i]}catch(s){if(t.WTF)throw s}var f=er.find(e,"/!SummaryInformation");if(f&&f.size>0)try{var l=rs(f,$n,Cb.SI);for(var o in l)if(r[o]==null)r[o]=l[o]}catch(s){if(t.WTF)throw s}if(r.HeadingPairs&&r.TitlesOfParts){Si(r.HeadingPairs,r.TitlesOfParts,r,t);delete r.HeadingPairs;delete r.TitlesOfParts}}function Rb(e,r){var t=[],a=[],n=[];var i=0,s;var f=fr(Gn,"n");var l=fr($n,"n");if(e.Props){s=sr(e.Props);for(i=0;i<s.length;++i)(Object.prototype.hasOwnProperty.call(f,s[i])?t:Object.prototype.hasOwnProperty.call(l,s[i])?a:n).push([s[i],e.Props[s[i]]])}if(e.Custprops){s=sr(e.Custprops);for(i=0;i<s.length;++i)if(!Object.prototype.hasOwnProperty.call(e.Props||{},s[i]))(Object.prototype.hasOwnProperty.call(f,s[i])?t:Object.prototype.hasOwnProperty.call(l,s[i])?a:n).push([s[i],e.Custprops[s[i]]])}var o=[];for(i=0;i<n.length;++i){if(qi.indexOf(n[i][0])>-1||yi.indexOf(n[i][0])>-1)continue;if(n[i][1]==null)continue;o.push(n[i])}if(a.length)er.utils.cfb_add(r,"/SummaryInformation",ts(a,Cb.SI,l,$n));if(t.length||o.length)er.utils.cfb_add(r,"/DocumentSummaryInformation",ts(t,Cb.DSI,f,Gn,o.length?o:null,Cb.UDI))}function Nb(e,r){if(!r)r={};gw(r);o();if(r.codepage)s(r.codepage);var t,a;if(e.FullPaths){if(er.find(e,"/encryption"))throw new Error("File is password-protected");t=er.find(e,"!CompObj");a=er.find(e,"/Workbook")||er.find(e,"/Book")}else{switch(r.type){case"base64":e=C(E(e));break;case"binary":e=C(e);break;case"buffer":break;case"array":if(!Array.isArray(e))e=Array.prototype.slice.call(e);break;}ba(e,0);a={content:e}}var n;var i;if(t)Eb(t);if(r.bookProps&&!r.bookSheets)n={};else{var f=y?"buffer":"array";if(a&&a.content)n=xb(a.content,r);else if((i=er.find(e,"PerfectOffice_MAIN"))&&i.content)n=Dl.to_workbook(i.content,(r.type=f,r));else if((i=er.find(e,"NativeContent_MAIN"))&&i.content)n=Dl.to_workbook(i.content,(r.type=f,r));else if((i=er.find(e,"MN0"))&&i.content)throw new Error("Unsupported Works 4 for Mac file");else throw new Error("Cannot find Workbook stream");if(r.bookVBA&&e.FullPaths&&er.find(e,"/_VBA_PROJECT_CUR/VBA/dir"))n.vbaraw=Ou(e)}var l={};if(e.FullPaths)Ob(e,l,r);n.Props=n.Custprops=l;if(r.bookFiles)n.cfb=e;return n}function Ib(e,r){var t=r||{};var a=er.utils.cfb_new({root:"R"});var n="/Workbook";switch(t.bookType||"xls"){case"xls":t.bookType="biff8";case"xla":if(!t.bookType)t.bookType="xla";case"biff8":n="/Workbook";t.biff=8;break;case"biff5":n="/Book";t.biff=5;break;default:throw new Error("invalid type "+t.bookType+" for XLS CFB");}er.utils.cfb_add(a,n,Qb(e,t));if(t.biff==8&&(e.Props||e.Custprops))Rb(e,a);if(t.biff==8&&e.vbaraw)Ru(a,er.read(e.vbaraw,{type:typeof e.vbaraw=="string"?"binary":"buffer"}));return a}var Fb={0:{f:Uv},1:{f:jv},2:{f:hp},3:{f:ep},4:{f:Zv},5:{f:lp},6:{f:bp},7:{f:np},8:{f:Sp},9:{f:yp},10:{f:Tp},11:{f:Ep},12:{f:Yv},13:{f:vp},14:{f:tp},15:{f:qv},16:{f:cp},17:{f:wp},18:{f:sp},19:{f:en},20:{},21:{},22:{},23:{},24:{},25:{},26:{},27:{},28:{},29:{},30:{},31:{},32:{},33:{},34:{},35:{T:1},36:{T:-1},37:{T:1},38:{T:-1},39:{f:xm},40:{},42:{},43:{f:sc},44:{f:nc},45:{f:cc},46:{f:pc},47:{f:hc},48:{},49:{f:Ya},50:{},51:{f:qc},52:{T:1},53:{T:-1},54:{T:1},55:{T:-1},56:{T:1},57:{T:-1},58:{},59:{},60:{f:cl},62:{f:mp},63:{f:lu},64:{f:Hp},65:{},66:{},67:{},68:{},69:{},70:{},128:{},129:{T:1},130:{T:-1},131:{T:1,f:ga,p:0},132:{T:-1},133:{T:1},134:{T:-1},135:{T:1},136:{T:-1},137:{T:1,f:Mp},138:{T:-1},139:{T:1},140:{T:-1},141:{T:1},142:{T:-1},143:{T:1},144:{T:-1},145:{T:1},146:{T:-1},147:{f:Gv},148:{f:Hv,p:16},151:{f:Rp},152:{},153:{f:Sm},154:{},155:{},156:{f:Em},157:{},158:{},159:{T:1,f:Yl},160:{T:-1},161:{T:1,f:kn},162:{T:-1},163:{T:1},164:{T:-1},165:{T:1},166:{T:-1},167:{},168:{},169:{},170:{},171:{},172:{T:1},173:{T:-1},174:{},175:{},176:{f:_p},177:{T:1},178:{T:-1},179:{T:1},180:{T:-1},181:{T:1},182:{T:-1},183:{T:1},184:{T:-1},185:{T:1},186:{T:-1},187:{T:1},188:{T:-1},189:{T:1},190:{T:-1},191:{T:1},192:{T:-1},193:{T:1},194:{T:-1},195:{T:1},196:{T:-1},197:{T:1},198:{T:-1},199:{T:1},200:{T:-1},201:{T:1},202:{T:-1},203:{T:1},204:{T:-1},205:{T:1},206:{T:-1},207:{T:1},208:{T:-1},209:{T:1},210:{T:-1},211:{T:1},212:{T:-1},213:{T:1},214:{T:-1},215:{T:1},216:{T:-1},217:{T:1},218:{T:-1},219:{T:1},220:{T:-1},221:{T:1},222:{T:-1},223:{T:1},224:{T:-1},225:{T:1},226:{T:-1},227:{T:1},228:{T:-1},229:{T:1},230:{T:-1},231:{T:1},232:{T:-1},233:{T:1},234:{T:-1},235:{T:1},236:{T:-1},237:{T:1},238:{T:-1},239:{T:1},240:{T:-1},241:{T:1},242:{T:-1},243:{T:1},244:{T:-1},245:{T:1},246:{T:-1},247:{T:1},248:{T:-1},249:{T:1},250:{T:-1},251:{T:1},252:{T:-1},253:{T:1},254:{T:-1},255:{T:1},256:{T:-1},257:{T:1},258:{T:-1},259:{T:1},260:{T:-1},261:{T:1},262:{T:-1},263:{T:1},264:{T:-1},265:{T:1},266:{T:-1},267:{T:1},268:{T:-1},269:{T:1},270:{T:-1},271:{T:1},272:{T:-1},273:{T:1},274:{T:-1},275:{T:1},276:{T:-1},277:{},278:{T:1},279:{T:-1},280:{T:1},281:{T:-1},282:{T:1},283:{T:1},284:{T:-1},285:{T:1},286:{T:-1},287:{T:1},288:{T:-1},289:{T:1},290:{T:-1},291:{T:1},292:{T:-1},293:{T:1},294:{T:-1},295:{T:1},296:{T:-1},297:{T:1},298:{T:-1},299:{T:1},300:{T:-1},301:{T:1},302:{T:-1},303:{T:1},304:{T:-1},305:{T:1},306:{T:-1},307:{T:1},308:{T:-1},309:{T:1},310:{T:-1},311:{T:1},312:{T:-1},313:{T:-1},314:{T:1},315:{T:-1},316:{T:1},317:{T:-1},318:{T:1},319:{T:-1},320:{T:1},321:{T:-1},322:{T:1},323:{T:-1},324:{T:1},325:{T:-1},326:{T:1},327:{T:-1},328:{T:1},329:{T:-1},330:{T:1},331:{T:-1},332:{T:1},333:{T:-1},334:{T:1},335:{f:Zc},336:{T:-1},337:{f:ru,T:1},338:{T:-1},339:{T:1},340:{T:-1},341:{T:1},342:{T:-1},343:{T:1},344:{T:-1},345:{T:1},346:{T:-1},347:{T:1},348:{T:-1},349:{T:1},350:{T:-1},351:{},352:{},353:{T:1},354:{T:-1},355:{f:vn},357:{},358:{},359:{},360:{T:1},361:{},362:{f:Hf},363:{},364:{},366:{},367:{},368:{},369:{},370:{},371:{},372:{T:1},373:{T:-1},374:{T:1},375:{T:-1},376:{T:1},377:{T:-1},378:{T:1},379:{T:-1},380:{T:1},381:{T:-1},382:{T:1},383:{T:-1},384:{T:1},385:{T:-1},386:{T:1},387:{T:-1},388:{T:1},389:{T:-1},390:{T:1},391:{T:-1},392:{T:1},393:{T:-1},394:{T:1},395:{T:-1},396:{},397:{},398:{},399:{},400:{},401:{T:1},403:{},404:{},405:{},406:{},407:{},408:{},409:{},410:{},411:{},412:{},413:{},414:{},415:{},416:{},417:{},418:{},419:{},420:{},421:{},422:{T:1},423:{T:1},424:{T:-1},425:{T:-1},426:{f:Np},427:{f:Ip},428:{},429:{T:1},430:{T:-1},431:{T:1},432:{T:-1},433:{T:1},434:{T:-1},435:{T:1},436:{T:-1},437:{T:1},438:{T:-1},439:{T:1},440:{T:-1},441:{T:1},442:{T:-1},443:{T:1},444:{T:-1},445:{T:1},446:{T:-1},447:{T:1},448:{T:-1},449:{T:1},450:{T:-1},451:{T:1},452:{T:-1},453:{T:1},454:{T:-1},455:{T:1},456:{T:-1},457:{T:1},458:{T:-1},459:{T:1},460:{T:-1},461:{T:1},462:{T:-1},463:{T:1},464:{T:-1},465:{T:1},466:{T:-1},467:{T:1},468:{T:-1},469:{T:1},470:{T:-1},471:{},472:{},473:{T:1},474:{T:-1},475:{},476:{f:Pp},477:{},478:{},479:{T:1},480:{T:-1},481:{T:1},482:{T:-1},483:{T:1},484:{T:-1},485:{f:Vv},486:{T:1},487:{T:-1},488:{T:1},489:{T:-1},490:{T:1},491:{T:-1},492:{T:1},493:{T:-1},494:{f:Cp},495:{T:1},496:{T:-1},497:{T:1},498:{T:-1},499:{},500:{T:1},501:{T:-1},502:{T:1},503:{T:-1},504:{},505:{T:1},506:{T:-1},507:{},508:{T:1},509:{T:-1},510:{T:1},511:{T:-1},512:{},513:{},514:{T:1},515:{T:-1},516:{T:1},517:{T:-1},518:{T:1},519:{T:-1},520:{T:1},521:{T:-1},522:{},523:{},524:{},525:{},526:{},527:{},528:{T:1},529:{T:-1},530:{T:1},531:{T:-1},532:{T:1},533:{T:-1},534:{},535:{},536:{},537:{},538:{T:1},539:{T:-1},540:{T:1},541:{T:-1},542:{T:1},548:{},549:{},550:{f:vn},551:{},552:{},553:{},554:{T:1},555:{T:-1},556:{T:1},557:{T:-1},558:{T:1},559:{T:-1},560:{T:1},561:{T:-1},562:{},564:{},565:{T:1},566:{T:-1},569:{T:1},570:{T:-1},572:{},573:{T:1},574:{T:-1},577:{},578:{},579:{},580:{},581:{},582:{},583:{},584:{},585:{},586:{},587:{},588:{T:-1},589:{},590:{T:1},591:{T:-1},592:{T:1},593:{T:-1},594:{T:1},595:{T:-1},596:{},597:{T:1},598:{T:-1},599:{T:1},600:{T:-1},601:{T:1},602:{T:-1},603:{T:1},604:{T:-1},605:{T:1},606:{T:-1},607:{},608:{T:1},609:{T:-1},610:{},611:{T:1},612:{T:-1},613:{T:1},614:{T:-1},615:{T:1},616:{T:-1},617:{T:1},618:{T:-1},619:{T:1},620:{T:-1},625:{},626:{T:1},627:{T:-1},628:{T:1},629:{T:-1},630:{T:1},631:{T:-1},632:{f:Su},633:{T:1},634:{T:-1},635:{T:1,f:Eu},636:{T:-1},637:{f:tn},638:{T:1},639:{},640:{T:-1},641:{T:1},642:{T:-1},643:{T:1},644:{},645:{T:-1},646:{T:1},648:{T:1},649:{},650:{T:-1},651:{f:im},652:{},653:{T:1},654:{T:-1},655:{T:1},656:{T:-1},657:{T:1},658:{T:-1},659:{},660:{T:1},661:{},662:{T:-1},663:{},664:{T:1},665:{},666:{T:-1},667:{},668:{},669:{},671:{T:1},672:{T:-1},673:{T:1},674:{T:-1},675:{},676:{},677:{},678:{},679:{},680:{},681:{},1024:{},1025:{},1026:{T:1},1027:{T:-1},1028:{T:1},1029:{T:-1},1030:{},1031:{T:1},1032:{T:-1},1033:{T:1},1034:{T:-1},1035:{},1036:{},1037:{},1038:{T:1},1039:{T:-1},1040:{},1041:{T:1},1042:{T:-1},1043:{},1044:{},1045:{},1046:{T:1},1047:{T:-1},1048:{T:1},1049:{T:-1},1050:{},1051:{T:1},1052:{T:1},1053:{f:zp},1054:{T:1},1055:{},1056:{T:1},1057:{T:-1},1058:{T:1},1059:{T:-1},1061:{},1062:{T:1},1063:{T:-1},1064:{T:1},1065:{T:-1},1066:{T:1},1067:{T:-1},1068:{T:1},1069:{T:-1},1070:{T:1},1071:{T:-1},1072:{T:1},1073:{T:-1},1075:{T:1},1076:{T:-1},1077:{T:1},1078:{T:-1},1079:{T:1},1080:{T:-1},1081:{T:1},1082:{T:-1},1083:{T:1},1084:{T:-1},1085:{},1086:{T:1},1087:{T:-1},1088:{T:1},1089:{T:-1},1090:{T:1},1091:{T:-1},1092:{T:1},1093:{T:-1},1094:{T:1},1095:{T:-1},1096:{},1097:{T:1},1098:{},1099:{T:-1},1100:{T:1},1101:{T:-1},1102:{},1103:{},1104:{},1105:{},1111:{},1112:{},1113:{T:1},1114:{T:-1},1115:{T:1},1116:{T:-1},1117:{},1118:{T:1},1119:{T:-1},1120:{T:1},1121:{T:-1},1122:{T:1},1123:{T:-1},1124:{T:1},1125:{T:-1},1126:{},1128:{T:1},1129:{T:-1},1130:{},1131:{T:1},1132:{T:-1},1133:{T:1},1134:{T:-1},1135:{T:1},1136:{T:-1},1137:{T:1},1138:{T:-1},1139:{T:1},1140:{T:-1},1141:{},1142:{T:1},1143:{T:-1},1144:{T:1},1145:{T:-1},1146:{},1147:{T:1},1148:{T:-1},1149:{T:1},1150:{T:-1},1152:{T:1},1153:{T:-1},1154:{T:-1},1155:{T:-1},1156:{T:-1},1157:{T:1},1158:{T:-1},1159:{T:1},1160:{T:-1},1161:{T:1},1162:{T:-1},1163:{T:1},1164:{T:-1},1165:{T:1},1166:{T:-1},1167:{T:1},1168:{T:-1},1169:{T:1},1170:{T:-1},1171:{},1172:{T:1},1173:{T:-1},1177:{},1178:{T:1},1180:{},1181:{},1182:{},2048:{T:1},2049:{T:-1},2050:{},2051:{T:1},2052:{T:-1},2053:{},2054:{},2055:{T:1},2056:{T:-1},2057:{T:1},2058:{T:-1},2060:{},2067:{},2068:{T:1},2069:{T:-1},2070:{},2071:{},2072:{T:1},2073:{T:-1},2075:{},2076:{},2077:{T:1},2078:{T:-1},2079:{},2080:{T:1},2081:{T:-1},2082:{},2083:{T:1},2084:{T:-1},2085:{T:1},2086:{T:-1},2087:{T:1},2088:{T:-1},2089:{T:1},2090:{T:-1},2091:{},2092:{},2093:{T:1},2094:{T:-1},2095:{},2096:{T:1},2097:{T:-1},2098:{T:1},2099:{T:-1},2100:{T:1},2101:{T:-1},2102:{},2103:{T:1},2104:{T:-1},2105:{},2106:{T:1},2107:{T:-1},2108:{},2109:{T:1},2110:{T:-1},2111:{T:1},2112:{T:-1},2113:{T:1},2114:{T:-1},2115:{},2116:{},2117:{},2118:{T:1},2119:{T:-1},2120:{},2121:{T:1},2122:{T:-1},2123:{T:1},2124:{T:-1},2125:{},2126:{T:1},2127:{T:-1},2128:{},2129:{T:1},2130:{T:-1},2131:{T:1},2132:{T:-1},2133:{T:1},2134:{},2135:{},2136:{},2137:{T:1},2138:{T:-1},2139:{T:1},2140:{T:-1},2141:{},3072:{},3073:{},4096:{T:1},4097:{T:-1},5002:{T:1},5003:{T:-1},5081:{T:1},5082:{T:-1},5083:{},5084:{T:1},5085:{T:-1},5086:{T:1},5087:{T:-1},5088:{},5089:{},5090:{},5092:{T:1},5093:{T:-1},5094:{},5095:{T:1},5096:{T:-1},5097:{},5099:{},65535:{n:""}};var Db={6:{f:Sd},10:{f:as},12:{f:ls},13:{f:ls},14:{f:ss},15:{f:ss},16:{f:En},17:{f:ss},18:{f:ss},19:{f:ls},20:{f:Mf},21:{f:Mf},23:{f:Hf},24:{f:Wf},25:{f:ss},26:{},27:{},28:{f:Yf},29:{},34:{f:ss},35:{f:Bf},38:{f:En},39:{f:En},40:{f:En},41:{f:En},42:{f:ss},43:{f:ss},47:{f:Eo},49:{f:vf},51:{f:ls},60:{},61:{f:of},64:{f:ss},65:{f:df},66:{f:ls},77:{},80:{},81:{},82:{},85:{f:ls},89:{},90:{},91:{},92:{f:Zs},93:{f:Jf},94:{},95:{f:ss},96:{},97:{},99:{f:ss},125:{f:cl},128:{f:Nf},129:{f:qs},130:{f:ls},131:{f:ss},132:{f:ss},133:{f:Qs},134:{},140:{f:il},141:{f:ls},144:{},146:{f:ll},151:{},152:{},153:{},154:{},155:{},156:{f:ls},157:{},158:{},160:{f:ml},161:{f:hl},174:{},175:{},176:{},177:{},178:{},180:{},181:{},182:{},184:{},185:{},189:{f:Af},190:{f:xf},193:{f:as},197:{},198:{},199:{},200:{},201:{},202:{f:ss},203:{},204:{},205:{},206:{},207:{},208:{},209:{},210:{},211:{},213:{},215:{},216:{},217:{},218:{f:ls},220:{},221:{f:ss},222:{},224:{f:Of},225:{f:Ks},226:{f:as},227:{},229:{f:Kf},233:{},235:{},236:{},237:{},239:{},240:{},241:{},242:{},244:{},245:{},246:{},247:{},248:{},249:{},251:{},252:{f:rf},253:{f:mf},255:{f:af},256:{},259:{},290:{},311:{},312:{},315:{},317:{f:cs},318:{},319:{},320:{},330:{},331:{},333:{},334:{},335:{},336:{},337:{},338:{},339:{},340:{},351:{},352:{f:ss},353:{f:as},401:{},402:{},403:{},404:{},405:{},406:{},407:{},408:{},425:{},426:{},427:{},428:{},429:{},430:{f:Uf},431:{f:ss},432:{},433:{},434:{},437:{},438:{f:el},439:{f:ss},440:{f:rl},441:{},442:{f:bs},443:{},444:{f:ls},445:{},446:{},448:{f:as},449:{f:ff,r:2},450:{f:as},512:{f:yf},513:{f:pl},515:{f:Pf},516:{f:gf},517:{f:Ff},519:{f:bl},520:{f:nf},523:{},545:{f:$f},549:{f:lf},566:{},574:{f:uf},638:{f:_f},659:{},1048:{},1054:{f:kf},1084:{},1212:{f:Gf},2048:{f:al},2049:{},2050:{},2051:{},2052:{},2053:{},2054:{},2055:{},2056:{},2057:{f:Xs},2058:{},2059:{},2060:{},2061:{},2062:{},2063:{},2064:{},2066:{},2067:{},2128:{},2129:{},2130:{},2131:{},2132:{},2133:{},2134:{},2135:{},2136:{},2137:{},2138:{},2146:{},2147:{r:12},2148:{},2149:{},2150:{},2151:{f:as},2152:{},2154:{},2155:{},2156:{},2161:{},2162:{},2164:{},2165:{},2166:{},2167:{},2168:{},2169:{},2170:{},2171:{},2172:{f:ol,r:12},2173:{f:Yc,r:12},2174:{},2175:{},2180:{},2181:{},2182:{},2183:{},2184:{},2185:{},2186:{},2187:{},2188:{f:ss,r:12},2189:{},2190:{r:12},2191:{},2192:{},2194:{},2195:{},2196:{f:Vf,r:12},2197:{},2198:{f:zc,r:12},2199:{},2200:{},2201:{},2202:{f:jf,r:12},2203:{f:as},2204:{},2205:{},2206:{},2207:{},2211:{f:sf},2212:{},2213:{},2214:{},2215:{},4097:{},4098:{},4099:{},4102:{},4103:{},4105:{},4106:{},4107:{},4108:{},4109:{},4116:{},4117:{},4118:{},4119:{},4120:{},4121:{},4122:{},4123:{},4124:{},4125:{},4126:{},4127:{},4128:{},4129:{},4130:{},4132:{},4133:{},4134:{f:ls},4135:{},4146:{},4147:{},4148:{},4149:{},4154:{},4156:{},4157:{},4158:{},4159:{},4160:{},4161:{},4163:{},4164:{f:dl},4165:{},4166:{},4168:{},4170:{},4171:{},4174:{},4175:{},4176:{},4177:{},4187:{},4188:{f:fl},4189:{},4191:{},4192:{},4193:{},4194:{},4195:{},4196:{},4197:{},4198:{},4199:{},4200:{},0:{f:yf},1:{},2:{f:El},3:{f:kl},4:{f:wl},5:{f:Ff},7:{f:Sl},8:{},9:{f:Xs},11:{},22:{f:ls},30:{f:Ef},31:{},32:{},33:{f:$f},36:{},37:{f:lf},50:{f:_l},62:{},52:{},67:{},68:{f:ls},69:{},86:{},126:{},127:{f:gl},135:{},136:{},137:{},145:{},148:{},149:{},150:{},169:{},171:{},188:{},191:{},192:{},194:{},195:{},214:{f:Al},223:{},234:{},354:{},421:{},518:{f:Sd},521:{f:Xs},536:{f:Wf},547:{f:Bf},561:{},579:{},1030:{f:Sd},1033:{f:Xs},1091:{},2157:{},2163:{},2177:{},2240:{},2241:{},2242:{},2243:{},2244:{},2245:{},2246:{},2247:{},2248:{},2249:{},2250:{},2251:{},2262:{r:12},101:{},102:{},105:{},106:{},107:{},109:{},112:{},114:{},29282:{}};function Pb(e,r,t,a){var n=r;if(isNaN(n))return;var i=a||(t||[]).length||0;var s=e.next(4);s._W(2,n);s._W(2,i);if(i>0&&aa(t))e.push(t)}function Lb(e,r,t,a){var n=a||(t||[]).length||0;if(n<=8224)return Pb(e,r,t,n);var i=r;if(isNaN(i))return;var s=t.parts||[],f=0;var l=0,o=0;while(o+(s[f]||8224)<=8224){o+=s[f]||8224;f++}var c=e.next(4);c._W(2,i);c._W(2,o);e.push(t.slice(l,l+o));l+=o;while(l<n){c=e.next(4);c._W(2,60);o=0;while(o+(s[f]||8224)<=8224){o+=s[f]||8224;f++}c._W(2,o);e.push(t.slice(l,l+o));l+=o}}function Mb(e,r,t){if(!e)e=wa(7);e._W(2,r);e._W(2,t);e._W(2,0);e._W(1,0);return e}function Ub(e,r,t,a){var n=wa(9);Mb(n,e,r);hs(t,a||"b",n);return n}function Bb(e,r,t){var a=wa(8+2*t.length);Mb(a,e,r);a._W(1,t.length);a._W(t.length,t,"sbcs");return a.l<a.length?a.slice(0,a.l):a}function Wb(e,r,t,a){if(r.v!=null)switch(r.t){case"d":;case"n":var n=r.t=="d"?hr(Tr(r.v)):r.v;if(n==(n|0)&&n>=0&&n<65536)Pb(e,2,yl(t,a,n));else Pb(e,3,Tl(t,a,n));return;case"b":;case"e":Pb(e,5,Ub(t,a,r.v,r.t));return;case"s":;case"str":Pb(e,4,Bb(t,a,(r.v||"").slice(0,255)));return;}Pb(e,1,Mb(null,t,a))}function Hb(e,r,t,a){var n=Array.isArray(r);var i=za(r["!ref"]||"A1"),s,f="",l=[];if(i.e.c>255||i.e.r>16383){if(a.WTF)throw new Error("Range "+(r["!ref"]||"A1")+" exceeds format limit A1:IV16384");i.e.c=Math.min(i.e.c,255);i.e.r=Math.min(i.e.c,16383);s=Ba(i)}for(var o=i.s.r;o<=i.e.r;++o){f=Ca(o);for(var c=i.s.c;c<=i.e.c;++c){if(o===i.s.r)l[c]=Ia(c);s=l[c]+f;var u=n?(r[o]||[])[c]:r[s];if(!u)continue;Wb(e,u,o,c,a)}}}function zb(e,r){var t=r||{};if(b!=null&&t.dense==null)t.dense=b;var a=Ta();var n=0;for(var i=0;i<e.SheetNames.length;++i)if(e.SheetNames[i]==t.sheet)n=i;if(n==0&&!!t.sheet&&e.SheetNames[0]!=t.sheet)throw new Error("Sheet not found: "+t.sheet);Pb(a,t.biff==4?1033:t.biff==3?521:9,Ys(e,16,t));Hb(a,e.Sheets[e.SheetNames[n]],n,t,e);Pb(a,10);return a.end()}function Vb(e,r,t){Pb(e,49,pf({sz:12,color:{theme:1},name:"Arial",family:2,scheme:"minor"},t))}function Gb(e,r,t){if(!r)return;[[5,8],[23,26],[41,44],[50,392]].forEach(function(a){for(var n=a[0];n<=a[1];++n)if(r[n]!=null)Pb(e,1054,Tf(n,r[n],t))})}function $b(e,r){var t=wa(19);t._W(4,2151);t._W(4,0);t._W(4,0);t._W(2,3);t._W(1,1);t._W(4,0);Pb(e,2151,t);t=wa(39);t._W(4,2152);t._W(4,0);t._W(4,0);t._W(2,3);t._W(1,0);t._W(4,0);t._W(2,1);t._W(4,4);t._W(2,0);Us(za(r["!ref"]||"A1"),t);t._W(4,4);Pb(e,2152,t)}function jb(e,r){for(var t=0;t<16;++t)Pb(e,224,Rf({numFmtId:0,style:true},0,r));r.cellXfs.forEach(function(t){Pb(e,224,Rf(t,0,r))})}function Xb(e,r){for(var t=0;t<r["!links"].length;++t){var a=r["!links"][t];Pb(e,440,tl(a));if(a[1].Tooltip)Pb(e,2048,nl(a))}delete r["!links"]}function Yb(e,r){if(!r)return;var t=0;r.forEach(function(r,a){if(++t<=256&&r){Pb(e,125,ul(ev(a,r),a))}})}function Kb(e,r,t,a,n){var i=16+tv(n.cellXfs,r,n);if(r.v==null&&!r.bf){Pb(e,513,Ns(t,a,i));return}if(r.bf)Pb(e,6,_d(r,t,a,n,i));else switch(r.t){case"d":;case"n":var s=r.t=="d"?hr(Tr(r.v)):r.v;Pb(e,515,Lf(t,a,s,i,n));break;case"b":;case"e":Pb(e,517,Df(t,a,r.v,i,n,r.t));break;case"s":;case"str":if(n.bookSST){var f=Qd(n.Strings,r.v,n.revStrings);Pb(e,253,bf(t,a,f,i,n))}else Pb(e,516,wf(t,a,(r.v||"").slice(0,255),i,n));break;default:Pb(e,513,Ns(t,a,i));}}function Zb(e,r,t){var a=Ta();var n=t.SheetNames[e],i=t.Sheets[n]||{};var s=(t||{}).Workbook||{};var f=(s.Sheets||[])[e]||{};var l=Array.isArray(i);var o=r.biff==8;var c,u="",h=[];var d=za(i["!ref"]||"A1");var v=o?65536:16384;if(d.e.c>255||d.e.r>=v){if(r.WTF)throw new Error("Range "+(i["!ref"]||"A1")+" exceeds format limit A1:IV16384");d.e.c=Math.min(d.e.c,255);d.e.r=Math.min(d.e.c,v-1)}Pb(a,2057,Ys(t,16,r));Pb(a,13,os(1));Pb(a,12,os(100));Pb(a,15,fs(true));Pb(a,17,fs(false));Pb(a,16,yn(.001));Pb(a,95,fs(true));Pb(a,42,fs(false));Pb(a,43,fs(false));Pb(a,130,os(1));Pb(a,128,If([0,0]));Pb(a,131,fs(false));Pb(a,132,fs(false));if(o)Yb(a,i["!cols"]);Pb(a,512,Sf(d,r));if(o)i["!links"]=[];var p=[];for(var m=d.s.r;m<=d.e.r;++m){u=Ca(m);for(var b=d.s.c;b<=d.e.c;++b){if(m===d.s.r)h[b]=Ia(b);c=h[b]+u;var g=l?(i[m]||[])[b]:i[c];if(!g)continue;Kb(a,g,m,b,r);if(o&&g.l)i["!links"].push([c,g.l]);if(o&&g.c)p.push([c,g.c])}}var w=f.CodeName||f.name||n;if(o)Pb(a,574,hf((s.Views||[])[0]));if(o&&(i["!merges"]||[]).length)Pb(a,229,Zf(i["!merges"]));if(o)Xb(a,i);Pb(a,442,ws(w,r));if(o)$b(a,i);Pb(a,10);return a.end()}function Jb(e,r,t){var a=Ta();var n=(e||{}).Workbook||{};var i=n.Sheets||[];var s=n.WBProps||{};var f=t.biff==8,l=t.biff==5;Pb(a,2057,Ys(e,5,t));if(t.bookType=="xla")Pb(a,135);Pb(a,225,f?os(1200):null);Pb(a,193,ns(2));if(l)Pb(a,191);if(l)Pb(a,192);Pb(a,226);Pb(a,92,Js("SheetJS",t));Pb(a,66,os(f?1200:1252));if(f)Pb(a,353,os(0));if(f)Pb(a,448);Pb(a,317,vl(e.SheetNames.length));if(f&&e.vbaraw)Pb(a,211);
-if(f&&e.vbaraw){var o=s.CodeName||"ThisWorkbook";Pb(a,442,ws(o,t))}Pb(a,156,os(17));Pb(a,25,fs(false));Pb(a,18,fs(false));Pb(a,19,os(0));if(f)Pb(a,431,fs(false));if(f)Pb(a,444,os(0));Pb(a,61,cf(t));Pb(a,64,fs(false));Pb(a,141,os(0));Pb(a,34,fs(vm(e)=="true"));Pb(a,14,fs(true));if(f)Pb(a,439,fs(false));Pb(a,218,os(0));Vb(a,e,t);Gb(a,e.SSF,t);jb(a,t);if(f)Pb(a,352,fs(false));var c=a.end();var u=Ta();if(f)Pb(u,140,sl());if(f&&t.Strings)Lb(u,252,tf(t.Strings,t));Pb(u,10);var h=u.end();var d=Ta();var v=0,p=0;for(p=0;p<e.SheetNames.length;++p)v+=(f?12:11)+(f?2:1)*e.SheetNames[p].length;var m=c.length+v+h.length;for(p=0;p<e.SheetNames.length;++p){var b=i[p]||{};Pb(d,133,ef({pos:m,hs:b.Hidden||0,dt:0,name:e.SheetNames[p]},t));m+=r[p].length}var g=d.end();if(v!=g.length)throw new Error("BS8 "+v+" != "+g.length);var w=[];if(c.length)w.push(c);if(g.length)w.push(g);if(h.length)w.push(h);return F(w)}function qb(e,r){var t=r||{};var a=[];if(e&&!e.SSF){e.SSF=yr(Z)}if(e&&e.SSF){$e();Ge(e.SSF);t.revssf=or(e.SSF);t.revssf[e.SSF[65535]]=0;t.ssf=e.SSF}t.Strings=[];t.Strings.Count=0;t.Strings.Unique=0;ww(t);t.cellXfs=[];tv(t.cellXfs,{},{revssf:{General:0}});if(!e.Props)e.Props={};for(var n=0;n<e.SheetNames.length;++n)a[a.length]=Zb(n,t,e);a.unshift(Jb(e,a,t));return F(a)}function Qb(e,r){for(var t=0;t<=e.SheetNames.length;++t){var a=e.Sheets[e.SheetNames[t]];if(!a||!a["!ref"])continue;var n=Ua(a["!ref"]);if(n.e.c>255){if(typeof console!="undefined"&&console.error)console.error("Worksheet '"+e.SheetNames[t]+"' extends beyond column IV (255).  Data may be lost.")}}var i=r||{};switch(i.biff||2){case 8:;case 5:return qb(e,r);case 4:;case 3:;case 2:return zb(e,r);}throw new Error("invalid type "+i.bookType+" for BIFF")}function eg(e,r){var t=r||{};if(b!=null&&t.dense==null)t.dense=b;var a=t.dense?[]:{};e=e.replace(/<!--.*?-->/g,"");var n=e.match(/<table/i);if(!n)throw new Error("Invalid HTML: could not find <table>");var i=e.match(/<\/table/i);var s=n.index,f=i&&i.index||e.length;var l=Rr(e.slice(s,f),/(:?<tr[^>]*>)/i,"<tr>");var o=-1,c=0,u=0,h=0;var d={s:{r:1e7,c:1e7},e:{r:0,c:0}};var v=[];for(s=0;s<l.length;++s){var p=l[s].trim();var m=p.slice(0,3).toLowerCase();if(m=="<tr"){++o;if(t.sheetRows&&t.sheetRows<=o){--o;break}c=0;continue}if(m!="<td"&&m!="<th")continue;var g=p.split(/<\/t[dh]>/i);for(f=0;f<g.length;++f){var w=g[f].trim();if(!w.match(/<t[dh]/i))continue;var k=w,T=0;while(k.charAt(0)=="<"&&(T=k.indexOf(">"))>-1)k=k.slice(T+1);for(var E=0;E<v.length;++E){var y=v[E];if(y.s.c==c&&y.s.r<o&&o<=y.e.r){c=y.e.c+1;E=-1}}var S=Jr(w.slice(0,w.indexOf(">")));h=S.colspan?+S.colspan:1;if((u=+S.rowspan)>1||h>1)v.push({s:{r:o,c:c},e:{r:o+(u||1)-1,c:c+h-1}});var _=S.t||S["data-t"]||"";if(!k.length){c+=h;continue}k=wt(k);if(d.s.r>o)d.s.r=o;if(d.e.r<o)d.e.r=o;if(d.s.c>c)d.s.c=c;if(d.e.c<c)d.e.c=c;if(!k.length){c+=h;continue}var A={t:"s",v:k};if(t.raw||!k.trim().length||_=="s"){}else if(k==="TRUE")A={t:"b",v:true};else if(k==="FALSE")A={t:"b",v:false};else if(!isNaN(_r(k)))A={t:"n",v:_r(k)};else if(!isNaN(Or(k).getDate())){A={t:"d",v:Tr(k)};if(!t.cellDates)A={t:"n",v:hr(A.v)};A.z=t.dateNF||Z[14]}if(t.dense){if(!a[o])a[o]=[];a[o][c]=A}else a[Ma({r:o,c:c})]=A;c+=h}}a["!ref"]=Ba(d);if(v.length)a["!merges"]=v;return a}function rg(e,r,t,a){var n=e["!merges"]||[];var i=[];var s={};for(var f=r.s.c;f<=r.e.c;++f){var l=0,o=0;for(var c=0;c<n.length;++c){if(n[c].s.r>t||n[c].s.c>f)continue;if(n[c].e.r<t||n[c].e.c<f)continue;if(n[c].s.r<t||n[c].s.c<f){l=-1;break}l=n[c].e.r-n[c].s.r+1;o=n[c].e.c-n[c].s.c+1;break}if(l<0)continue;var u=Ma({r:t,c:f});var h=a.dense?(e[t]||[])[f]:e[u];var d=h&&h.v!=null&&(h.h||ft(h.w||(Ga(h),h.w)||""))||"";s={};if(l>1)s.rowspan=l;if(o>1)s.colspan=o;if(a.editable)d='<span contenteditable="true">'+d+"</span>";else if(h){s["data-t"]=h&&h.t||"z";if(h.v!=null)s["data-v"]=h.v;if(h.z!=null)s["data-z"]=h.z;if(h.l&&(h.l.Target||"#").charAt(0)!="#")d='<a href="'+h.l.Target+'">'+d+"</a>"}s.id=(a.id||"sjs")+"-"+u;i.push(xt("td",d,s))}var v="<tr>";return v+i.join("")+"</tr>"}var tg='<html><head><meta charset="utf-8"/><title>SheetJS Table Export</title></head><body>';var ag="</body></html>";function ng(e,r){var t=e.match(/<table[\s\S]*?>[\s\S]*?<\/table>/gi);if(!t||t.length==0)throw new Error("Invalid HTML: could not find <table>");if(t.length==1){var a=$a(eg(t[0],r),r);a.bookType="html";return a}var n=ck();t.forEach(function(e,t){uk(n,eg(e,r),"Sheet"+(t+1))});n.bookType="html";return n}function ig(e,r,t){var a=[];return a.join("")+"<table"+(t&&t.id?' id="'+t.id+'"':"")+">"}function sg(e,r){var t=r||{};var a=t.header!=null?t.header:tg;var n=t.footer!=null?t.footer:ag;var i=[a];var s=Ua(e["!ref"]);t.dense=Array.isArray(e);i.push(ig(e,s,t));for(var f=s.s.r;f<=s.e.r;++f)i.push(rg(e,s,f,t));i.push("</table>"+n);return i.join("")}function fg(e,r,t){var a=r.rows;if(!a){throw"Unsupported origin when "+r.tagName+" is not a TABLE"}var n=t||{};if(b!=null)n.dense=b;var i=0,s=0;if(n.origin!=null){if(typeof n.origin=="number")i=n.origin;else{var f=typeof n.origin=="string"?La(n.origin):n.origin;i=f.r;s=f.c}}var l=Math.min(n.sheetRows||1e7,a.length);var o={s:{r:0,c:0},e:{r:i,c:s}};if(e["!ref"]){var c=Ua(e["!ref"]);o.s.r=Math.min(o.s.r,c.s.r);o.s.c=Math.min(o.s.c,c.s.c);o.e.r=Math.max(o.e.r,c.e.r);o.e.c=Math.max(o.e.c,c.e.c);if(i==-1)o.e.r=i=c.e.r+1}var u=[],h=0;var d=e["!rows"]||(e["!rows"]=[]);var v=0,p=0,m=0,g=0,w=0,k=0;if(!e["!cols"])e["!cols"]=[];for(;v<a.length&&p<l;++v){var T=a[v];if(cg(T)){if(n.display)continue;d[p]={hidden:true}}var E=T.cells;for(m=g=0;m<E.length;++m){var y=E[m];if(n.display&&cg(y))continue;var S=y.hasAttribute("data-v")?y.getAttribute("data-v"):y.hasAttribute("v")?y.getAttribute("v"):wt(y.innerHTML);var _=y.getAttribute("data-z")||y.getAttribute("z");for(h=0;h<u.length;++h){var A=u[h];if(A.s.c==g+s&&A.s.r<p+i&&p+i<=A.e.r){g=A.e.c+1-s;h=-1}}k=+y.getAttribute("colspan")||1;if((w=+y.getAttribute("rowspan")||1)>1||k>1)u.push({s:{r:p+i,c:g+s},e:{r:p+i+(w||1)-1,c:g+s+(k||1)-1}});var x={t:"s",v:S};var C=y.getAttribute("data-t")||y.getAttribute("t")||"";if(S!=null){if(S.length==0)x.t=C||"z";else if(n.raw||S.trim().length==0||C=="s"){}else if(S==="TRUE")x={t:"b",v:true};else if(S==="FALSE")x={t:"b",v:false};else if(!isNaN(_r(S)))x={t:"n",v:_r(S)};else if(!isNaN(Or(S).getDate())){x={t:"d",v:Tr(S)};if(!n.cellDates)x={t:"n",v:hr(x.v)};x.z=n.dateNF||Z[14]}}if(x.z===undefined&&_!=null)x.z=_;var O="",R=y.getElementsByTagName("A");if(R&&R.length)for(var N=0;N<R.length;++N)if(R[N].hasAttribute("href")){O=R[N].getAttribute("href");if(O.charAt(0)!="#")break}if(O&&O.charAt(0)!="#"&&O.slice(0,11).toLowerCase()!="javascript:")x.l={Target:O};if(n.dense){if(!e[p+i])e[p+i]=[];e[p+i][g+s]=x}else e[Ma({c:g+s,r:p+i})]=x;if(o.e.c<g+s)o.e.c=g+s;g+=k}++p}if(u.length)e["!merges"]=(e["!merges"]||[]).concat(u);o.e.r=Math.max(o.e.r,p-1+i);e["!ref"]=Ba(o);if(p>=l)e["!fullref"]=Ba((o.e.r=a.length-v+p-1+i,o));return e}function lg(e,r){var t=r||{};var a=t.dense?[]:{};return fg(a,e,r)}function og(e,r){var t=$a(lg(e,r),r);return t}function cg(e){var r="";var t=ug(e);if(t)r=t(e).getPropertyValue("display");if(!r)r=e.style&&e.style.display;return r==="none"}function ug(e){if(e.ownerDocument.defaultView&&typeof e.ownerDocument.defaultView.getComputedStyle==="function")return e.ownerDocument.defaultView.getComputedStyle;if(typeof getComputedStyle==="function")return getComputedStyle;return null}function hg(e){var r=e.replace(/[\t\r\n]/g," ").trim().replace(/ +/g," ").replace(/<text:s\/>/g," ").replace(/<text:s text:c="(\d+)"\/>/g,function(e,r){return Array(parseInt(r,10)+1).join(" ")}).replace(/<text:tab[^>]*\/>/g,"\t").replace(/<text:line-break\/>/g,"\n");var t=rt(r.replace(/<[^>]*>/g,""));return[t]}function dg(e,r,t){var a=t||{};var n=Rt(e);Nt.lastIndex=0;n=n.replace(/<!--([\s\S]*?)-->/gm,"").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm,"");var i,s,f="",l="",o,c=0,u=-1,h=false,d="";while(i=Nt.exec(n)){switch(i[3]=i[3].replace(/_.*$/,"")){case"number-style":;case"currency-style":;case"percentage-style":;case"date-style":;case"time-style":;case"text-style":if(i[1]==="/"){h=false;if(s["truncate-on-overflow"]=="false"){if(f.match(/h/))f=f.replace(/h+/,"[$&]");else if(f.match(/m/))f=f.replace(/m+/,"[$&]");else if(f.match(/s/))f=f.replace(/s+/,"[$&]")}a[s.name]=f;f=""}else if(i[0].charAt(i[0].length-2)!=="/"){h=true;f="";s=Jr(i[0],false)}break;case"boolean-style":if(i[1]==="/"){h=false;a[s.name]="General";f=""}else if(i[0].charAt(i[0].length-2)!=="/"){h=true;f="";s=Jr(i[0],false)}break;case"boolean":f+="General";break;case"text":if(i[1]==="/"){d=n.slice(u,Nt.lastIndex-i[0].length);if(d=="%"&&s[0]=="<number:percentage-style")f+="%";else f+='"'+d.replace(/"/g,'""')+'"'}else if(i[0].charAt(i[0].length-2)!=="/"){u=Nt.lastIndex}break;case"day":{o=Jr(i[0],false);switch(o["style"]){case"short":f+="d";break;case"long":f+="dd";break;default:f+="dd";break;}}break;case"day-of-week":{o=Jr(i[0],false);switch(o["style"]){case"short":f+="ddd";break;case"long":f+="dddd";break;default:f+="ddd";break;}}break;case"era":{o=Jr(i[0],false);switch(o["style"]){case"short":f+="ee";break;case"long":f+="eeee";break;default:f+="eeee";break;}}break;case"hours":{o=Jr(i[0],false);switch(o["style"]){case"short":f+="h";break;case"long":f+="hh";break;default:f+="hh";break;}}break;case"minutes":{o=Jr(i[0],false);switch(o["style"]){case"short":f+="m";break;case"long":f+="mm";break;default:f+="mm";break;}}break;case"month":{o=Jr(i[0],false);if(o["textual"])f+="mm";switch(o["style"]){case"short":f+="m";break;case"long":f+="mm";break;default:f+="m";break;}}break;case"seconds":{o=Jr(i[0],false);switch(o["style"]){case"short":f+="s";break;case"long":f+="ss";break;default:f+="ss";break;}if(o["decimal-places"])f+="."+Sr("0",+o["decimal-places"])}break;case"year":{o=Jr(i[0],false);switch(o["style"]){case"short":f+="yy";break;case"long":f+="yyyy";break;default:f+="yy";break;}}break;case"am-pm":f+="AM/PM";break;case"week-of-year":;case"quarter":console.error("Excel does not support ODS format token "+i[3]);break;case"fill-character":if(i[1]==="/"){d=n.slice(u,Nt.lastIndex-i[0].length);f+='"'+d.replace(/"/g,'""')+'"*'}else if(i[0].charAt(i[0].length-2)!=="/"){u=Nt.lastIndex}break;case"scientific-number":o=Jr(i[0],false);f+="0."+Sr("0",+o["min-decimal-places"]||+o["decimal-places"]||2)+Sr("?",+o["decimal-places"]-+o["min-decimal-places"]||0)+"E"+(ut(o["forced-exponent-sign"])?"+":"")+Sr("0",+o["min-exponent-digits"]||2);break;case"fraction":o=Jr(i[0],false);if(!+o["min-integer-digits"])f+="#";else f+=Sr("0",+o["min-integer-digits"]);f+=" ";f+=Sr("?",+o["min-numerator-digits"]||1);f+="/";if(+o["denominator-value"])f+=o["denominator-value"];else f+=Sr("?",+o["min-denominator-digits"]||1);break;case"currency-symbol":if(i[1]==="/"){f+='"'+n.slice(u,Nt.lastIndex-i[0].length).replace(/"/g,'""')+'"'}else if(i[0].charAt(i[0].length-2)!=="/"){u=Nt.lastIndex}else f+="$";break;case"text-properties":o=Jr(i[0],false);switch((o["color"]||"").toLowerCase().replace("#","")){case"ff0000":;case"red":f="[Red]"+f;break;}break;case"text-content":f+="@";break;case"map":o=Jr(i[0],false);if(rt(o["condition"])=="value()>=0")f=a[o["apply-style-name"]]+";"+f;else console.error("ODS number format may be incorrect: "+o["condition"]);break;case"number":if(i[1]==="/")break;o=Jr(i[0],false);l="";l+=Sr("0",+o["min-integer-digits"]||1);if(ut(o["grouping"]))l=de(Sr("#",Math.max(0,4-l.length))+l);if(+o["min-decimal-places"]||+o["decimal-places"])l+=".";if(+o["min-decimal-places"])l+=Sr("0",+o["min-decimal-places"]||1);if(+o["decimal-places"]-(+o["min-decimal-places"]||0))l+=Sr("0",+o["decimal-places"]-(+o["min-decimal-places"]||0));f+=l;break;case"embedded-text":if(i[1]==="/"){if(c==0)f+='"'+n.slice(u,Nt.lastIndex-i[0].length).replace(/"/g,'""')+'"';else f=f.slice(0,c)+'"'+n.slice(u,Nt.lastIndex-i[0].length).replace(/"/g,'""')+'"'+f.slice(c)}else if(i[0].charAt(i[0].length-2)!=="/"){u=Nt.lastIndex;c=-+Jr(i[0],false)["position"]||0}break;}}return a}function vg(e,r,t){var a=r||{};if(b!=null&&a.dense==null)a.dense=b;var n=Rt(e);var i=[],s;var f;var l,o="",c=0;var u;var h;var d={},v=[];var p=a.dense?[]:{};var m,g;var w={value:""};var k="",T=0,E;var y=[];var S=-1,_=-1,A={s:{r:1e6,c:1e7},e:{r:0,c:0}};var x=0;var C=t||{},O={};var R=[],N={},I=0,F=0;var D=[],P=1,L=1;var M=[];var U={Names:[],WBProps:{}};var B={};var W=["",""];var H=[],z={};var V="",G=0;var $=false,j=false;var X=0;var Y=0;Nt.lastIndex=0;n=n.replace(/<!--([\s\S]*?)-->/gm,"").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm,"");while(m=Nt.exec(n))switch(m[3]=m[3].replace(/_.*$/,"")){case"table":;case"å·¥ä½è¡¨":if(m[1]==="/"){if(A.e.c>=A.s.c&&A.e.r>=A.s.r)p["!ref"]=Ba(A);else p["!ref"]="A1:A1";if(a.sheetRows>0&&a.sheetRows<=A.e.r){p["!fullref"]=p["!ref"];A.e.r=a.sheetRows-1;p["!ref"]=Ba(A)}if(R.length)p["!merges"]=R;if(D.length)p["!rows"]=D;u.name=u["åç§°"]||u.name;if(typeof JSON!=="undefined")JSON.stringify(u);v.push(u.name);d[u.name]=p;j=false}else if(m[0].charAt(m[0].length-2)!=="/"){u=Jr(m[0],false);S=_=-1;A.s.r=A.s.c=1e7;A.e.r=A.e.c=0;p=a.dense?[]:{};R=[];D=[];j=true}break;case"table-row-group":if(m[1]==="/")--x;else++x;break;case"table-row":;case"è¡":if(m[1]==="/"){S+=P;P=1;break}h=Jr(m[0],false);if(h["è¡å·"])S=h["è¡å·"]-1;else if(S==-1)S=0;P=+h["number-rows-repeated"]||1;if(P<10)for(X=0;X<P;++X)if(x>0)D[S+X]={level:x};_=-1;break;case"covered-table-cell":if(m[1]!=="/")++_;if(a.sheetStubs){if(a.dense){if(!p[S])p[S]=[];p[S][_]={t:"z"}}else p[Ma({r:S,c:_})]={t:"z"}}k="";y=[];break;case"table-cell":;case"æ°æ®":if(m[0].charAt(m[0].length-2)==="/"){++_;w=Jr(m[0],false);L=parseInt(w["number-columns-repeated"]||"1",10);g={t:"z",v:null};if(w.formula&&a.cellFormula!=false)g.f=jd(rt(w.formula));if(w["style-name"]&&O[w["style-name"]])g.z=O[w["style-name"]];if((w["æ°æ®ç±»å"]||w["value-type"])=="string"){g.t="s";g.v=rt(w["string-value"]||"");if(a.dense){if(!p[S])p[S]=[];p[S][_]=g}else{p[Ma({r:S,c:_})]=g}}_+=L-1}else if(m[1]!=="/"){++_;k="";T=0;y=[];L=1;var K=P?S+P-1:S;if(_>A.e.c)A.e.c=_;if(_<A.s.c)A.s.c=_;if(S<A.s.r)A.s.r=S;if(K>A.e.r)A.e.r=K;w=Jr(m[0],false);H=[];z={};g={t:w["æ°æ®ç±»å"]||w["value-type"],v:null};if(w["style-name"]&&O[w["style-name"]])g.z=O[w["style-name"]];if(a.cellFormula){if(w.formula)w.formula=rt(w.formula);if(w["number-matrix-columns-spanned"]&&w["number-matrix-rows-spanned"]){I=parseInt(w["number-matrix-rows-spanned"],10)||0;F=parseInt(w["number-matrix-columns-spanned"],10)||0;N={s:{r:S,c:_},e:{r:S+I-1,c:_+F-1}};g.F=Ba(N);M.push([N,g.F])}if(w.formula)g.f=jd(w.formula);else for(X=0;X<M.length;++X)if(S>=M[X][0].s.r&&S<=M[X][0].e.r)if(_>=M[X][0].s.c&&_<=M[X][0].e.c)g.F=M[X][1]}if(w["number-columns-spanned"]||w["number-rows-spanned"]){I=parseInt(w["number-rows-spanned"],10)||0;F=parseInt(w["number-columns-spanned"],10)||0;N={s:{r:S,c:_},e:{r:S+I-1,c:_+F-1}};R.push(N)}if(w["number-columns-repeated"])L=parseInt(w["number-columns-repeated"],10);switch(g.t){case"boolean":g.t="b";g.v=ut(w["boolean-value"])||+w["boolean-value"]>=1;break;case"float":g.t="n";g.v=parseFloat(w.value);break;case"percentage":g.t="n";g.v=parseFloat(w.value);break;case"currency":g.t="n";g.v=parseFloat(w.value);break;case"date":g.t="d";g.v=Tr(w["date-value"]);if(!a.cellDates){g.t="n";g.v=hr(g.v,U.WBProps.date1904)-Y}if(!g.z)g.z="m/d/yy";break;case"time":g.t="n";g.v=br(w["time-value"])/86400;if(a.cellDates){g.t="d";g.v=mr(g.v)}if(!g.z)g.z="HH:MM:SS";break;case"number":g.t="n";g.v=parseFloat(w["æ°æ®æ°å¼"]);break;default:if(g.t==="string"||g.t==="text"||!g.t){g.t="s";if(w["string-value"]!=null){k=rt(w["string-value"]);y=[]}}else throw new Error("Unsupported value type "+g.t);}}else{$=false;if(g.t==="s"){g.v=k||"";if(y.length)g.R=y;$=T==0}if(B.Target)g.l=B;if(H.length>0){g.c=H;H=[]}if(k&&a.cellText!==false)g.w=k;if($){g.t="z";delete g.v}if(!$||a.sheetStubs){if(!(a.sheetRows&&a.sheetRows<=S)){for(var Z=0;Z<P;++Z){L=parseInt(w["number-columns-repeated"]||"1",10);if(a.dense){if(!p[S+Z])p[S+Z]=[];p[S+Z][_]=Z==0?g:yr(g);while(--L>0)p[S+Z][_+L]=yr(g)}else{p[Ma({r:S+Z,c:_})]=g;while(--L>0)p[Ma({r:S+Z,c:_+L})]=yr(g)}if(A.e.c<=_)A.e.c=_}}}L=parseInt(w["number-columns-repeated"]||"1",10);_+=L-1;L=0;g={};k="";y=[]}B={};break;case"document":;case"document-content":;case"çµå­è¡¨æ ¼ææ¡£":;case"spreadsheet":;case"ä¸»ä½":;case"scripts":;case"styles":;case"font-face-decls":;case"master-styles":if(m[1]==="/"){if((s=i.pop())[0]!==m[3])throw"Bad state: "+s}else if(m[0].charAt(m[0].length-2)!=="/")i.push([m[3],true]);break;case"annotation":if(m[1]==="/"){if((s=i.pop())[0]!==m[3])throw"Bad state: "+s;z.t=k;if(y.length)z.R=y;z.a=V;H.push(z)}else if(m[0].charAt(m[0].length-2)!=="/"){i.push([m[3],false])}V="";G=0;k="";T=0;y=[];break;case"creator":if(m[1]==="/"){V=n.slice(G,m.index)}else G=m.index+m[0].length;break;case"meta":;case"åæ°æ®":;case"settings":;case"config-item-set":;case"config-item-map-indexed":;case"config-item-map-entry":;case"config-item-map-named":;case"shapes":;case"frame":;case"text-box":;case"image":;case"data-pilot-tables":;case"list-style":;case"form":;case"dde-links":;case"event-listeners":;case"chart":if(m[1]==="/"){if((s=i.pop())[0]!==m[3])throw"Bad state: "+s}else if(m[0].charAt(m[0].length-2)!=="/")i.push([m[3],false]);k="";T=0;y=[];break;case"scientific-number":;case"currency-symbol":;case"fill-character":break;case"text-style":;case"boolean-style":;case"number-style":;case"currency-style":;case"percentage-style":;case"date-style":;case"time-style":if(m[1]==="/"){var J=Nt.lastIndex;dg(n.slice(l,Nt.lastIndex),r,C);Nt.lastIndex=J}else if(m[0].charAt(m[0].length-2)!=="/"){l=Nt.lastIndex-m[0].length}break;case"script":break;case"libraries":break;case"automatic-styles":break;case"default-style":;case"page-layout":break;case"style":{var q=Jr(m[0],false);if(q["family"]=="table-cell"&&C[q["data-style-name"]])O[q["name"]]=C[q["data-style-name"]]}break;case"map":break;case"font-face":break;case"paragraph-properties":break;case"table-properties":break;case"table-column-properties":break;case"table-row-properties":break;case"table-cell-properties":break;case"number":break;case"fraction":break;case"day":;case"month":;case"year":;case"era":;case"day-of-week":;case"week-of-year":;case"quarter":;case"hours":;case"minutes":;case"seconds":;case"am-pm":break;case"boolean":break;case"text":if(m[0].slice(-2)==="/>")break;else if(m[1]==="/")switch(i[i.length-1][0]){case"number-style":;case"date-style":;case"time-style":o+=n.slice(c,m.index);break;}else c=m.index+m[0].length;break;case"named-range":f=Jr(m[0],false);W=Yd(f["cell-range-address"]);var Q={Name:f.name,Ref:W[0]+"!"+W[1]};if(j)Q.Sheet=v.length;U.Names.push(Q);break;case"text-content":break;case"text-properties":break;case"embedded-text":break;case"body":;case"çµå­è¡¨æ ¼":break;case"forms":break;case"table-column":break;case"table-header-rows":break;case"table-rows":break;case"table-column-group":break;case"table-header-columns":break;case"table-columns":break;case"null-date":f=Jr(m[0],false);switch(f["date-value"]){case"1904-01-01":U.WBProps.date1904=true;case"1900-01-01":Y=0;}break;case"graphic-properties":break;case"calculation-settings":break;case"named-expressions":break;case"label-range":break;case"label-ranges":break;case"named-expression":break;case"sort":break;case"sort-by":break;case"sort-groups":break;case"tab":break;case"line-break":break;case"span":break;case"p":;case"ææ¬ä¸²":if(["master-styles"].indexOf(i[i.length-1][0])>-1)break;if(m[1]==="/"&&(!w||!w["string-value"])){var ee=hg(n.slice(T,m.index),E);k=(k.length>0?k+"\n":"")+ee[0]}else{E=Jr(m[0],false);T=m.index+m[0].length}break;case"s":break;case"database-range":if(m[1]==="/")break;try{W=Yd(Jr(m[0])["target-range-address"]);d[W[0]]["!autofilter"]={ref:W[1]}}catch(re){}break;case"date":break;case"object":break;case"title":;case"æ é¢":break;case"desc":break;case"binary-data":break;case"table-source":break;case"scenario":break;case"iteration":break;case"content-validations":break;case"content-validation":break;case"help-message":break;case"error-message":break;case"database-ranges":break;case"filter":break;case"filter-and":break;case"filter-or":break;case"filter-condition":break;case"list-level-style-bullet":break;case"list-level-style-number":break;case"list-level-properties":break;case"sender-firstname":;case"sender-lastname":;case"sender-initials":;case"sender-title":;case"sender-position":;case"sender-email":;case"sender-phone-private":;case"sender-fax":;case"sender-company":;case"sender-phone-work":;case"sender-street":;case"sender-city":;case"sender-postal-code":;case"sender-country":;case"sender-state-or-province":;case"author-name":;case"author-initials":;case"chapter":;case"file-name":;case"template-name":;case"sheet-name":break;case"event-listener":break;case"initial-creator":;case"creation-date":;case"print-date":;case"generator":;case"document-statistic":;case"user-defined":;case"editing-duration":;case"editing-cycles":break;case"config-item":break;case"page-number":break;case"page-count":break;case"time":break;case"cell-range-source":break;case"detective":break;case"operation":break;case"highlighted-range":break;case"data-pilot-table":;case"source-cell-range":;case"source-service":;case"data-pilot-field":;case"data-pilot-level":;case"data-pilot-subtotals":;case"data-pilot-subtotal":;case"data-pilot-members":;case"data-pilot-member":;case"data-pilot-display-info":;case"data-pilot-sort-info":;case"data-pilot-layout-info":;case"data-pilot-field-reference":;case"data-pilot-groups":;case"data-pilot-group":;case"data-pilot-group-member":break;case"rect":break;case"dde-connection-decls":;case"dde-connection-decl":;case"dde-link":;case"dde-source":break;case"properties":break;case"property":break;case"a":if(m[1]!=="/"){B=Jr(m[0],false);if(!B.href)break;B.Target=rt(B.href);delete B.href;if(B.Target.charAt(0)=="#"&&B.Target.indexOf(".")>-1){W=Yd(B.Target.slice(1));B.Target="#"+W[0]+"!"+W[1]}else if(B.Target.match(/^\.\.[\\\/]/))B.Target=B.Target.slice(3)}break;case"table-protection":break;case"data-pilot-grand-total":break;case"office-document-common-attrs":break;default:switch(m[2]){case"dc:":;case"calcext:":;case"loext:":;case"ooo:":;case"chartooo:":;case"draw:":;case"style:":;case"chart:":;case"form:":;case"uof:":;case"è¡¨:":;case"å­:":break;default:if(a.WTF)throw new Error(m);};}var te={Sheets:d,SheetNames:v,Workbook:U};if(a.bookSheets)delete te.Sheets;return te}function pg(e,r){r=r||{};if(Dr(e,"META-INF/manifest.xml"))ui(Lr(e,"META-INF/manifest.xml"),r);var t=Mr(e,"styles.xml");var a=t&&dg(mt(t),r);var n=Mr(e,"content.xml");if(!n)throw new Error("Missing content.xml in ODS / UOF file");var i=vg(mt(n),r,a);if(Dr(e,"meta.xml"))i.Props=wi(Lr(e,"meta.xml"));i.bookType="ods";return i}function mg(e,r){var t=vg(e,r);t.bookType="fods";return t}var bg=function(){var e=["<office:master-styles>",'<style:master-page style:name="mp1" style:page-layout-name="mp1">',"<style:header/>",'<style:header-left style:display="false"/>',"<style:footer/>",'<style:footer-left style:display="false"/>',"</style:master-page>","</office:master-styles>"].join("");var r="<office:document-styles "+At({"xmlns:office":"urn:oasis:names:tc:opendocument:xmlns:office:1.0","xmlns:table":"urn:oasis:names:tc:opendocument:xmlns:table:1.0","xmlns:style":"urn:oasis:names:tc:opendocument:xmlns:style:1.0","xmlns:text":"urn:oasis:names:tc:opendocument:xmlns:text:1.0","xmlns:draw":"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0","xmlns:fo":"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:dc":"http://purl.org/dc/elements/1.1/","xmlns:number":"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0","xmlns:svg":"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0","xmlns:of":"urn:oasis:names:tc:opendocument:xmlns:of:1.2","office:version":"1.2"})+">"+e+"</office:document-styles>";return function t(){return Gr+r}}();function gg(e,r){var t="number",a="",n={"style:name":r},i="",s=0;e=e.replace(/"[$]"/g,"$");e:{if(e.indexOf(";")>-1){console.error("Unsupported ODS Style Map exported.  Using first branch of "+e);e=e.slice(0,e.indexOf(";"))}if(e=="@"){t="text";a="<number:text-content/>";break e}if(e.indexOf(/\$/)>-1){t="currency"}if(e[s]=='"'){i="";while(e[++s]!='"'||e[++s]=='"')i+=e[s];--s;if(e[s+1]=="*"){s++;a+="<number:fill-character>"+nt(i.replace(/""/g,'"'))+"</number:fill-character>"}else{a+="<number:text>"+nt(i.replace(/""/g,'"'))+"</number:text>"}e=e.slice(s+1);s=0}var f=e.match(/# (\?+)\/(\?+)/);if(f){a+=xt("number:fraction",null,{"number:min-integer-digits":0,"number:min-numerator-digits":f[1].length,"number:max-denominator-value":Math.max(+f[1].replace(/./g,"9"),+f[2].replace(/./g,"9"))});break e}if(f=e.match(/# (\?+)\/(\d+)/)){a+=xt("number:fraction",null,{"number:min-integer-digits":0,"number:min-numerator-digits":f[1].length,"number:denominator-value":+f[2]});break e}if(f=e.match(/(\d+)(|\.\d+)%/)){t="percentage";a+=xt("number:number",null,{"number:decimal-places":f[2]&&f.length-1||0,"number:min-decimal-places":f[2]&&f.length-1||0,"number:min-integer-digits":f[1].length})+"<number:text>%</number:text>";break e}var l=false;if(["y","m","d"].indexOf(e[0])>-1){t="date";r:for(;s<e.length;++s)switch(i=e[s].toLowerCase()){case"h":;case"s":l=true;--s;break r;case"m":t:for(var o=s+1;o<e.length;++o)switch(e[o]){case"y":;case"d":break t;case"h":;case"s":l=true;--s;break r;};case"y":;case"d":while((e[++s]||"").toLowerCase()==i[0])i+=i[0];--s;switch(i){case"y":;case"yy":a+="<number:year/>";break;case"yyy":;case"yyyy":a+='<number:year number:style="long"/>';break;case"mmmmm":console.error("ODS has no equivalent of format |mmmmm|");case"m":;case"mm":;case"mmm":;case"mmmm":a+='<number:month number:style="'+(i.length%2?"short":"long")+'" number:textual="'+(i.length>=3?"true":"false")+'"/>';break;case"d":;case"dd":a+='<number:day number:style="'+(i.length%2?"short":"long")+'"/>';break;case"ddd":;case"dddd":a+='<number:day-of-week number:style="'+(i.length%2?"short":"long")+'"/>';break;}break;case'"':while(e[++s]!='"'||e[++s]=='"')i+=e[s];--s;a+="<number:text>"+nt(i.slice(1).replace(/""/g,'"'))+"</number:text>";break;case"/":a+="<number:text>"+nt(i)+"</number:text>";break;default:console.error("unrecognized character "+i+" in ODF format "+e);}if(!l)break e;e=e.slice(s+1);s=0}if(e.match(/^\[?[hms]/)){if(t=="number")t="time";if(e.match(/\[/)){e=e.replace(/[\[\]]/g,"");n["number:truncate-on-overflow"]="false"}for(;s<e.length;++s)switch(i=e[s].toLowerCase()){case"h":;case"m":;case"s":while((e[++s]||"").toLowerCase()==i[0])i+=i[0];--s;switch(i){case"h":;case"hh":a+='<number:hours number:style="'+(i.length%2?"short":"long")+'"/>';break;case"m":;case"mm":a+='<number:minutes number:style="'+(i.length%2?"short":"long")+'"/>';break;case"s":;case"ss":if(e[s+1]==".")do{i+=e[s+1];++s}while(e[s+1]=="0");a+='<number:seconds number:style="'+(i.match("ss")?"long":"short")+'"'+(i.match(/\./)?' number:decimal-places="'+(i.match(/0+/)||[""])[0].length+'"':"")+"/>";break;}break;case'"':while(e[++s]!='"'||e[++s]=='"')i+=e[s];--s;a+="<number:text>"+nt(i.slice(1).replace(/""/g,'"'))+"</number:text>";break;case"/":a+="<number:text>"+nt(i)+"</number:text>";break;case"a":if(e.slice(s,s+3).toLowerCase()=="a/p"){a+="<number:am-pm/>";s+=2;break}if(e.slice(s,s+5).toLowerCase()=="am/pm"){a+="<number:am-pm/>";s+=4;break};default:console.error("unrecognized character "+i+" in ODF format "+e);}break e}if(e.indexOf(/\$/)>-1){t="currency"}if(e[0]=="$"){a+='<number:currency-symbol number:language="en" number:country="US">$</number:currency-symbol>';e=e.slice(1);s=0}s=0;if(e[s]=='"'){while(e[++s]!='"'||e[++s]=='"')i+=e[s];--s;if(e[s+1]=="*"){s++;a+="<number:fill-character>"+nt(i.replace(/""/g,'"'))+"</number:fill-character>"}else{a+="<number:text>"+nt(i.replace(/""/g,'"'))+"</number:text>"}e=e.slice(s+1);s=0}var c=e.match(/([#0][0#,]*)(\.[0#]*|)(E[+]?0*|)/i);if(!c||!c[0])console.error("Could not find numeric part of "+e);else{var u=c[1].replace(/,/g,"");a+="<number:"+(c[3]?"scientific-":"")+"number"+' number:min-integer-digits="'+(u.indexOf("0")==-1?"0":u.length-u.indexOf("0"))+'"'+(c[0].indexOf(",")>-1?' number:grouping="true"':"")+(c[2]&&' number:decimal-places="'+(c[2].length-1)+'"'||' number:decimal-places="0"')+(c[3]&&c[3].indexOf("+")>-1?' number:forced-exponent-sign="true"':"")+(c[3]?' number:min-exponent-digits="'+c[3].match(/0+/)[0].length+'"':"")+">"+"</number:"+(c[3]?"scientific-":"")+"number>";s=c.index+c[0].length}if(e[s]=='"'){i="";while(e[++s]!='"'||e[++s]=='"')i+=e[s];--s;a+="<number:text>"+nt(i.replace(/""/g,'"'))+"</number:text>"}}if(!a){console.error("Could not generate ODS number format for |"+e+"|");return""}return xt("number:"+t+"-style",a,n)}function wg(e,r,t){var a=e.filter(function(e){return e.Sheet==(t==-1?null:t)});if(!a.length)return"";return"      <table:named-expressions>\n"+a.map(function(e){var r=Kd(e.Ref);return"        "+xt("table:named-range",null,{"table:name":e.Name,"table:cell-range-address":r,"table:base-cell-address":r.replace(/[\.]?[^\.]*$/,".$A$1")})}).join("\n")+"\n      </table:named-expressions>\n"}var kg=function(){var e=function(e){return nt(e).replace(/  +/g,function(e){return'<text:s text:c="'+e.length+'"/>'}).replace(/\t/g,"<text:tab/>").replace(/\n/g,"</text:p><text:p>").replace(/^ /,"<text:s/>").replace(/ $/,"<text:s/>")};var r="          <table:table-cell />\n";var t="          <table:covered-table-cell/>\n";var a=function(a,n,i,s,f){var l=[];l.push('      <table:table table:name="'+nt(n.SheetNames[i])+'" table:style-name="ta1">\n');var o=0,c=0,u=Ua(a["!ref"]||"A1");var h=a["!merges"]||[],d=0;var v=Array.isArray(a);if(a["!cols"]){for(c=0;c<=u.e.c;++c)l.push("        <table:table-column"+(a["!cols"][c]?' table:style-name="co'+a["!cols"][c].ods+'"':"")+"></table:table-column>\n")}var p="",m=a["!rows"]||[];for(o=0;o<u.s.r;++o){p=m[o]?' table:style-name="ro'+m[o].ods+'"':"";l.push("        <table:table-row"+p+"></table:table-row>\n")}for(;o<=u.e.r;++o){p=m[o]?' table:style-name="ro'+m[o].ods+'"':"";l.push("        <table:table-row"+p+">\n");for(c=0;c<u.s.c;++c)l.push(r);for(;c<=u.e.c;++c){var b=false,g={},w="";for(d=0;d!=h.length;++d){if(h[d].s.c>c)continue;if(h[d].s.r>o)continue;if(h[d].e.c<c)continue;if(h[d].e.r<o)continue;if(h[d].s.c!=c||h[d].s.r!=o)b=true;g["table:number-columns-spanned"]=h[d].e.c-h[d].s.c+1;g["table:number-rows-spanned"]=h[d].e.r-h[d].s.r+1;break}if(b){l.push(t);continue}var k=Ma({r:o,c:c}),T=v?(a[o]||[])[c]:a[k];if(T&&T.f){g["table:formula"]=nt(Xd(T.f));if(T.F){if(T.F.slice(0,k.length)==k){var E=Ua(T.F);g["table:number-matrix-columns-spanned"]=E.e.c-E.s.c+1;g["table:number-matrix-rows-spanned"]=E.e.r-E.s.r+1}}}if(!T){l.push(r);continue}switch(T.t){case"b":w=T.v?"TRUE":"FALSE";g["office:value-type"]="boolean";g["office:boolean-value"]=T.v?"true":"false";break;case"n":w=T.w||String(T.v||0);g["office:value-type"]="float";g["office:value"]=T.v||0;break;case"s":;case"str":w=T.v==null?"":T.v;g["office:value-type"]="string";break;case"d":w=T.w||Tr(T.v).toISOString();g["office:value-type"]="date";g["office:date-value"]=Tr(T.v).toISOString();g["table:style-name"]="ce1";break;default:l.push(r);continue;}var y=e(w);if(T.l&&T.l.Target){var S=T.l.Target;S=S.charAt(0)=="#"?"#"+Kd(S.slice(1)):S;if(S.charAt(0)!="#"&&!S.match(/^\w+:/))S="../"+S;y=xt("text:a",y,{"xlink:href":S.replace(/&/g,"&amp;")})}if(f[T.z])g["table:style-name"]="ce"+f[T.z].slice(1);l.push("          "+xt("table:table-cell",xt("text:p",y,{}),g)+"\n")}l.push("        </table:table-row>\n")}if((n.Workbook||{}).Names)l.push(wg(n.Workbook.Names,n.SheetNames,i));l.push("      </table:table>\n");return l.join("")};var n=function(e,r){e.push(" <office:automatic-styles>\n");var t=0;r.SheetNames.map(function(e){return r.Sheets[e]}).forEach(function(r){if(!r)return;if(r["!cols"]){for(var a=0;a<r["!cols"].length;++a)if(r["!cols"][a]){var n=r["!cols"][a];if(n.width==null&&n.wpx==null&&n.wch==null)continue;Ho(n);n.ods=t;var i=r["!cols"][a].wpx+"px";e.push('  <style:style style:name="co'+t+'" style:family="table-column">\n');e.push('   <style:table-column-properties fo:break-before="auto" style:column-width="'+i+'"/>\n');e.push("  </style:style>\n");++t}}});var a=0;r.SheetNames.map(function(e){
-return r.Sheets[e]}).forEach(function(r){if(!r)return;if(r["!rows"]){for(var t=0;t<r["!rows"].length;++t)if(r["!rows"][t]){r["!rows"][t].ods=a;var n=r["!rows"][t].hpx+"px";e.push('  <style:style style:name="ro'+a+'" style:family="table-row">\n');e.push('   <style:table-row-properties fo:break-before="auto" style:row-height="'+n+'"/>\n');e.push("  </style:style>\n");++a}}});e.push('  <style:style style:name="ta1" style:family="table" style:master-page-name="mp1">\n');e.push('   <style:table-properties table:display="true" style:writing-mode="lr-tb"/>\n');e.push("  </style:style>\n");e.push('  <number:date-style style:name="N37" number:automatic-order="true">\n');e.push('   <number:month number:style="long"/>\n');e.push("   <number:text>/</number:text>\n");e.push('   <number:day number:style="long"/>\n');e.push("   <number:text>/</number:text>\n");e.push("   <number:year/>\n");e.push("  </number:date-style>\n");var n={};var i=69;r.SheetNames.map(function(e){return r.Sheets[e]}).forEach(function(r){if(!r)return;var t=Ua(r["!ref"]);for(var a=0;a<=t.e.r;++a)for(var s=0;s<=t.e.c;++s){var f=Array.isArray(r)?(r[a]||[])[s]:r[Ma({r:a,c:s})];if(!f||!f.z||f.z.toLowerCase()=="general")continue;if(!n[f.z]){var l=gg(f.z,"N"+i);if(l){n[f.z]="N"+i;++i;e.push(l+"\n")}}}});e.push('  <style:style style:name="ce1" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N37"/>\n');sr(n).forEach(function(r){e.push('<style:style style:name="ce'+n[r].slice(1)+'" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="'+n[r]+'"/>\n')});e.push(" </office:automatic-styles>\n");return n};return function i(e,r){var t=[Gr];var i=At({"xmlns:office":"urn:oasis:names:tc:opendocument:xmlns:office:1.0","xmlns:table":"urn:oasis:names:tc:opendocument:xmlns:table:1.0","xmlns:style":"urn:oasis:names:tc:opendocument:xmlns:style:1.0","xmlns:text":"urn:oasis:names:tc:opendocument:xmlns:text:1.0","xmlns:draw":"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0","xmlns:fo":"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:dc":"http://purl.org/dc/elements/1.1/","xmlns:meta":"urn:oasis:names:tc:opendocument:xmlns:meta:1.0","xmlns:number":"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0","xmlns:presentation":"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0","xmlns:svg":"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0","xmlns:chart":"urn:oasis:names:tc:opendocument:xmlns:chart:1.0","xmlns:dr3d":"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0","xmlns:math":"http://www.w3.org/1998/Math/MathML","xmlns:form":"urn:oasis:names:tc:opendocument:xmlns:form:1.0","xmlns:script":"urn:oasis:names:tc:opendocument:xmlns:script:1.0","xmlns:ooo":"http://openoffice.org/2004/office","xmlns:ooow":"http://openoffice.org/2004/writer","xmlns:oooc":"http://openoffice.org/2004/calc","xmlns:dom":"http://www.w3.org/2001/xml-events","xmlns:xforms":"http://www.w3.org/2002/xforms","xmlns:xsd":"http://www.w3.org/2001/XMLSchema","xmlns:xsi":"http://www.w3.org/2001/XMLSchema-instance","xmlns:sheet":"urn:oasis:names:tc:opendocument:sh33tjs:1.0","xmlns:rpt":"http://openoffice.org/2005/report","xmlns:of":"urn:oasis:names:tc:opendocument:xmlns:of:1.2","xmlns:xhtml":"http://www.w3.org/1999/xhtml","xmlns:grddl":"http://www.w3.org/2003/g/data-view#","xmlns:tableooo":"http://openoffice.org/2009/table","xmlns:drawooo":"http://openoffice.org/2010/draw","xmlns:calcext":"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0","xmlns:loext":"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0","xmlns:field":"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0","xmlns:formx":"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0","xmlns:css3t":"http://www.w3.org/TR/css3-text/","office:version":"1.2"});var s=At({"xmlns:config":"urn:oasis:names:tc:opendocument:xmlns:config:1.0","office:mimetype":"application/vnd.oasis.opendocument.spreadsheet"});if(r.bookType=="fods"){t.push("<office:document"+i+s+">\n");t.push(mi().replace(/<office:document-meta.*?>/,"").replace(/<\/office:document-meta>/,"")+"\n")}else t.push("<office:document-content"+i+">\n");var f=n(t,e);t.push("  <office:body>\n");t.push("    <office:spreadsheet>\n");if(((e.Workbook||{}).WBProps||{}).date1904)t.push('      <table:calculation-settings table:case-sensitive="false" table:search-criteria-must-apply-to-whole-cell="true" table:use-wildcards="true" table:use-regular-expressions="false" table:automatic-find-labels="false">\n        <table:null-date table:date-value="1904-01-01"/>\n      </table:calculation-settings>\n');for(var l=0;l!=e.SheetNames.length;++l)t.push(a(e.Sheets[e.SheetNames[l]],e,l,r,f));if((e.Workbook||{}).Names)t.push(wg(e.Workbook.Names,e.SheetNames,-1));t.push("    </office:spreadsheet>\n");t.push("  </office:body>\n");if(r.bookType=="fods")t.push("</office:document>");else t.push("</office:document-content>");return t.join("")}}();function Tg(e,r){if(r.bookType=="fods")return kg(e,r);var t=Hr();var a="";var n=[];var i=[];a="mimetype";Wr(t,a,"application/vnd.oasis.opendocument.spreadsheet");a="content.xml";Wr(t,a,kg(e,r));n.push([a,"text/xml"]);i.push([a,"ContentFile"]);a="styles.xml";Wr(t,a,bg(e,r));n.push([a,"text/xml"]);i.push([a,"StylesFile"]);a="meta.xml";Wr(t,a,Gr+mi());n.push([a,"text/xml"]);i.push([a,"MetadataFile"]);a="manifest.rdf";Wr(t,a,pi(i));n.push([a,"application/rdf+xml"]);a="META-INF/manifest.xml";Wr(t,a,hi(n));return t}var Eg=function(){try{if(typeof Uint8Array=="undefined")return"slice";if(typeof Uint8Array.prototype.subarray=="undefined")return"slice";if(typeof Buffer!=="undefined"){if(typeof Buffer.prototype.subarray=="undefined")return"slice";if((typeof Buffer.from=="function"?Buffer.from([72,62]):new Buffer([72,62]))instanceof Uint8Array)return"subarray";return"slice"}return"subarray"}catch(e){return"slice"}}();function yg(e){return new DataView(e.buffer,e.byteOffset,e.byteLength)}function Sg(e){return typeof TextDecoder!="undefined"?(new TextDecoder).decode(e):mt(R(e))}function _g(e){return typeof TextEncoder!="undefined"?(new TextEncoder).encode(e):C(bt(e))}function Ag(e,r){var t=e.indexOf(r[0]);if(t==-1)return false;e:for(;t<=e.length-r.length;++t){for(var a=0;a<r.length;++a)if(e[t+a]!=r[a])continue e;return true}return false}function xg(e){var r=e.reduce(function(e,r){return e+r.length},0);var t=new Uint8Array(r);var a=0;e.forEach(function(e){t.set(e,a);a+=e.length});return t}function Cg(e){e-=e>>1&1431655765;e=(e&858993459)+(e>>2&858993459);return(e+(e>>4)&252645135)*16843009>>>24}function Og(e,r){var t=(e[r+15]&127)<<7|e[r+14]>>1;var a=e[r+14]&1;for(var n=r+13;n>=r;--n)a=a*256+e[n];return(e[r+15]&128?-a:a)*Math.pow(10,t-6176)}function Rg(e,r,t){var a=Math.floor(t==0?0:Math.LOG10E*Math.log(Math.abs(t)))+6176-16;var n=t/Math.pow(10,a-6176);e[r+15]|=a>>7;e[r+14]|=(a&127)<<1;for(var i=0;n>=1;++i,n/=256)e[r+i]=n&255;e[r+15]|=t>=0?0:128}function Ng(e,r){var t=r?r[0]:0;var a=e[t]&127;e:if(e[t++]>=128){a|=(e[t]&127)<<7;if(e[t++]<128)break e;a|=(e[t]&127)<<14;if(e[t++]<128)break e;a|=(e[t]&127)<<21;if(e[t++]<128)break e;a+=(e[t]&127)*Math.pow(2,28);++t;if(e[t++]<128)break e;a+=(e[t]&127)*Math.pow(2,35);++t;if(e[t++]<128)break e;a+=(e[t]&127)*Math.pow(2,42);++t;if(e[t++]<128)break e}if(r)r[0]=t;return a}function Ig(e){var r=new Uint8Array(7);r[0]=e&127;var t=1;e:if(e>127){r[t-1]|=128;r[t]=e>>7&127;++t;if(e<=16383)break e;r[t-1]|=128;r[t]=e>>14&127;++t;if(e<=2097151)break e;r[t-1]|=128;r[t]=e>>21&127;++t;if(e<=268435455)break e;r[t-1]|=128;r[t]=e/256>>>21&127;++t;if(e<=34359738367)break e;r[t-1]|=128;r[t]=e/65536>>>21&127;++t;if(e<=4398046511103)break e;r[t-1]|=128;r[t]=e/16777216>>>21&127;++t}return r[Eg](0,t)}function Fg(e){var r=[0];var t=[];while(r[0]<e.length)t.push(Ng(e,r));return t}function Dg(e){return xg(e.map(function(e){return Ig(e)}))}function Pg(e){var r=0,t=e[r]&127;e:if(e[r++]>=128){t|=(e[r]&127)<<7;if(e[r++]<128)break e;t|=(e[r]&127)<<14;if(e[r++]<128)break e;t|=(e[r]&127)<<21;if(e[r++]<128)break e;t|=(e[r]&127)<<28}return t}function Lg(e){var r=[],t=[0];while(t[0]<e.length){var a=t[0];var n=Ng(e,t);var i=n&7;n=Math.floor(n/8);var s=0;var f;if(n==0)break;switch(i){case 0:{var l=t[0];while(e[t[0]++]>=128);f=e[Eg](l,t[0])}break;case 5:s=4;f=e[Eg](t[0],t[0]+s);t[0]+=s;break;case 1:s=8;f=e[Eg](t[0],t[0]+s);t[0]+=s;break;case 2:s=Ng(e,t);f=e[Eg](t[0],t[0]+s);t[0]+=s;break;case 3:;case 4:;default:throw new Error("PB Type ".concat(i," for Field ").concat(n," at offset ").concat(a));}var o={data:f,type:i};if(r[n]==null)r[n]=[o];else r[n].push(o)}return r}function Mg(e){var r=[];e.forEach(function(e,t){if(t==0)return;e.forEach(function(e){if(!e.data)return;r.push(Ig(t*8+e.type));if(e.type==2)r.push(Ig(e.data.length));r.push(e.data)})});return xg(r)}function Ug(e,r){return(e==null?void 0:e.map(function(e){return r(e.data)}))||[]}function Bg(e){var r;var t=[],a=[0];while(a[0]<e.length){var n=Ng(e,a);var i=Lg(e[Eg](a[0],a[0]+n));a[0]+=n;var s={id:Pg(i[1][0].data),messages:[]};i[2].forEach(function(r){var t=Lg(r.data);var n=Pg(t[3][0].data);s.messages.push({meta:t,data:e[Eg](a[0],a[0]+n)});a[0]+=n});if((r=i[3])==null?void 0:r[0])s.merge=Pg(i[3][0].data)>>>0>0;t.push(s)}return t}function Wg(e){var r=[];e.forEach(function(e){var t=[[],[{data:Ig(e.id),type:0}],[]];if(e.merge!=null)t[3]=[{data:Ig(+!!e.merge),type:0}];var a=[];e.messages.forEach(function(e){a.push(e.data);e.meta[3]=[{type:0,data:Ig(e.data.length)}];t[2].push({data:Mg(e.meta),type:2})});var n=Mg(t);r.push(Ig(n.length));r.push(n);a.forEach(function(e){return r.push(e)})});return xg(r)}function Hg(e,r){if(e!=0)throw new Error("Unexpected Snappy chunk type ".concat(e));var t=[0];var a=Ng(r,t);var n=[];while(t[0]<r.length){var i=r[t[0]]&3;if(i==0){var s=r[t[0]++]>>2;if(s<60)++s;else{var f=s-59;s=r[t[0]];if(f>1)s|=r[t[0]+1]<<8;if(f>2)s|=r[t[0]+2]<<16;if(f>3)s|=r[t[0]+3]<<24;s>>>=0;s++;t[0]+=f}n.push(r[Eg](t[0],t[0]+s));t[0]+=s;continue}else{var l=0,o=0;if(i==1){o=(r[t[0]]>>2&7)+4;l=(r[t[0]++]&224)<<3;l|=r[t[0]++]}else{o=(r[t[0]++]>>2)+1;if(i==2){l=r[t[0]]|r[t[0]+1]<<8;t[0]+=2}else{l=(r[t[0]]|r[t[0]+1]<<8|r[t[0]+2]<<16|r[t[0]+3]<<24)>>>0;t[0]+=4}}if(l==0)throw new Error("Invalid offset 0");var c=n.length-1,u=l;while(c>=0&&u>=n[c].length){u-=n[c].length;--c}if(c<0){if(u==0)u=n[c=0].length;else throw new Error("Invalid offset beyond length")}if(o<u)n.push(n[c][Eg](n[c].length-u,n[c].length-u+o));else{if(u>0){n.push(n[c][Eg](n[c].length-u));o-=u}++c;while(o>=n[c].length){n.push(n[c]);o-=n[c].length;++c}if(o)n.push(n[c][Eg](0,o))}if(n.length>100)n=[xg(n)]}}if(n.reduce(function(e,r){return e+r.length},0)!=a)throw new Error("Unexpected length: ".concat(n.reduce(function(e,r){return e+r.length},0)," != ").concat(a));return n}function zg(e){if(Array.isArray(e))e=new Uint8Array(e);var r=[];var t=0;while(t<e.length){var a=e[t++];var n=e[t]|e[t+1]<<8|e[t+2]<<16;t+=3;r.push.apply(r,Hg(a,e[Eg](t,t+n)));t+=n}if(t!==e.length)throw new Error("data is not a valid framed stream!");return xg(r)}function Vg(e){var r=[];var t=0;while(t<e.length){var a=Math.min(e.length-t,268435455);var n=new Uint8Array(4);r.push(n);var i=Ig(a);var s=i.length;r.push(i);if(a<=60){s++;r.push(new Uint8Array([a-1<<2]))}else if(a<=256){s+=2;r.push(new Uint8Array([240,a-1&255]))}else if(a<=65536){s+=3;r.push(new Uint8Array([244,a-1&255,a-1>>8&255]))}else if(a<=16777216){s+=4;r.push(new Uint8Array([248,a-1&255,a-1>>8&255,a-1>>16&255]))}else if(a<=4294967296){s+=5;r.push(new Uint8Array([252,a-1&255,a-1>>8&255,a-1>>16&255,a-1>>>24&255]))}r.push(e[Eg](t,t+a));s+=a;n[0]=0;n[1]=s&255;n[2]=s>>8&255;n[3]=s>>16&255;t+=a}return xg(r)}var Gg=function(){return{sst:[],rsst:[],ofmt:[],nfmt:[]}};function $g(e,r,t,a,n){var i,s,f,l;var o=r&255,c=r>>8;var u=c>=5?n:a;e:if(t&(c>4?8:4)&&e.t=="n"&&o==7){var h=((i=u[7])==null?void 0:i[0])?Ng(u[7][0].data):-1;if(h==-1)break e;var d=((s=u[15])==null?void 0:s[0])?Ng(u[15][0].data):-1;var v=((f=u[16])==null?void 0:f[0])?Ng(u[16][0].data):-1;var p=((l=u[40])==null?void 0:l[0])?Ng(u[40][0].data):-1;var m=e.v,b=m;r:if(p){if(m==0){d=v=2;break r}if(m>=604800)d=1;else if(m>=86400)d=2;else if(m>=3600)d=4;else if(m>=60)d=8;else if(m>=1)d=16;else d=32;if(Math.floor(m)!=m)v=32;else if(m%60)v=16;else if(m%3600)v=8;else if(m%86400)v=4;else if(m%604800)v=2;if(v<d)v=d}if(d==-1||v==-1)break e;var g=[],w=[];if(d==1){b=m/604800;if(v==1){w.push('d"d"')}else{b|=0;m-=604800*b}g.push(b+(h==2?" week"+(b==1?"":"s"):h==1?"w":""))}if(d<=2&&v>=2){b=m/86400;if(v>2){b|=0;m-=86400*b}w.push('d"d"');g.push(b+(h==2?" day"+(b==1?"":"s"):h==1?"d":""))}if(d<=4&&v>=4){b=m/3600;if(v>4){b|=0;m-=3600*b}w.push((d>=4?"[h]":"h")+'"h"');g.push(b+(h==2?" hour"+(b==1?"":"s"):h==1?"h":""))}if(d<=8&&v>=8){b=m/60;if(v>8){b|=0;m-=60*b}w.push((d>=8?"[m]":"m")+'"m"');if(h==0)g.push((d==8&&v==8||b>=10?"":"0")+b);else g.push(b+(h==2?" minute"+(b==1?"":"s"):h==1?"m":""))}if(d<=16&&v>=16){b=m;if(v>16){b|=0;m-=b}w.push((d>=16?"[s]":"s")+'"s"');if(h==0)g.push((v==16&&d==16||b>=10?"":"0")+b);else g.push(b+(h==2?" second"+(b==1?"":"s"):h==1?"s":""))}if(v>=32){b=Math.round(1e3*m);if(d<32)w.push('.000"ms"');if(h==0)g.push((b>=100?"":b>=10?"0":"00")+b);else g.push(b+(h==2?" millisecond"+(b==1?"":"s"):h==1?"ms":""))}e.w=g.join(h==0?":":" ");e.z=w.join(h==0?'":"':" ");if(h==0)e.w=e.w.replace(/:(\d\d\d)$/,".$1")}}function jg(e,r,t){var a=yg(e);var n=a.getUint32(4,true);var i=-1,s=-1,f=-1,l=NaN,o=new Date(2001,0,1);var c=t>1?12:8;if(n&2){f=a.getUint32(c,true);c+=4}c+=Cg(n&(t>1?3468:396))*4;if(n&512){i=a.getUint32(c,true);c+=4}c+=Cg(n&(t>1?12288:4096))*4;if(n&16){s=a.getUint32(c,true);c+=4}if(n&32){l=a.getFloat64(c,true);c+=8}if(n&64){o.setTime(o.getTime()+a.getFloat64(c,true)*1e3);c+=8}if(t>1){n=a.getUint32(8,true)>>>16;if(n&255){if(f==-1)f=a.getUint32(c,true);c+=4}}var u;var h=e[t>=4?1:2];switch(h){case 0:return void 0;case 2:u={t:"n",v:l};break;case 3:u={t:"s",v:r.sst[s]};break;case 5:u={t:"d",v:o};break;case 6:u={t:"b",v:l>0};break;case 7:u={t:"n",v:l};break;case 8:u={t:"e",v:0};break;case 9:{if(i>-1)u={t:"s",v:r.rsst[i]};else throw new Error("Unsupported cell type ".concat(e[Eg](0,4)))}break;default:throw new Error("Unsupported cell type ".concat(e[Eg](0,4)));}if(f>-1)$g(u,h|t<<8,n,r.ofmt[f],r.nfmt[f]);if(h==7)u.v/=86400;return u}function Xg(e,r){var t=yg(e);var a=t.getUint32(4,true);var n=t.getUint32(8,true);var i=12;var s=-1,f=-1,l=-1,o=NaN,c=NaN,u=new Date(2001,0,1);if(n&1){o=Og(e,i);i+=16}if(n&2){c=t.getFloat64(i,true);i+=8}if(n&4){u.setTime(u.getTime()+t.getFloat64(i,true)*1e3);i+=8}if(n&8){f=t.getUint32(i,true);i+=4}if(n&16){s=t.getUint32(i,true);i+=4}var h;var d=e[1];switch(d){case 0:return void 0;case 2:h={t:"n",v:o};break;case 3:h={t:"s",v:r.sst[f]};break;case 5:h={t:"d",v:u};break;case 6:h={t:"b",v:c>0};break;case 7:h={t:"n",v:c};break;case 8:h={t:"e",v:0};break;case 9:h={t:"s",v:r.rsst[s]};break;case 10:h={t:"n",v:o};break;default:throw new Error("Unsupported cell type ".concat(e[1]," : ").concat(n&31," : ").concat(e[Eg](0,4)));}i+=Cg(n&8160)*4;if(n&516096){if(l==-1)l=t.getUint32(i,true);i+=4}if(l>-1)$g(h,d|5<<8,n>>13,r.ofmt[l],r.nfmt[l]);if(d==7)h.v/=86400;return h}function Yg(e,r){var t=new Uint8Array(32),a=yg(t),n=12,i=0;t[0]=5;switch(e.t){case"n":t[1]=2;Rg(t,n,e.v);i|=1;n+=16;break;case"b":t[1]=6;a.setFloat64(n,e.v?1:0,true);i|=2;n+=8;break;case"s":if(r.indexOf(e.v)==-1)throw new Error("Value ".concat(e.v," missing from SST!"));t[1]=3;a.setUint32(n,r.indexOf(e.v),true);i|=8;n+=4;break;default:throw"unsupported cell type "+e.t;}a.setUint32(8,i,true);return t[Eg](0,n)}function Kg(e,r){var t=new Uint8Array(32),a=yg(t),n=12,i=0;t[0]=4;switch(e.t){case"n":t[2]=2;a.setFloat64(n,e.v,true);i|=32;n+=8;break;case"b":t[2]=6;a.setFloat64(n,e.v?1:0,true);i|=32;n+=8;break;case"s":if(r.indexOf(e.v)==-1)throw new Error("Value ".concat(e.v," missing from SST!"));t[2]=3;a.setUint32(n,r.indexOf(e.v),true);i|=16;n+=4;break;default:throw"unsupported cell type "+e.t;}a.setUint32(8,i,true);return t[Eg](0,n)}function Zg(e,r){switch(e[0]){case 0:;case 1:;case 2:;case 3:;case 4:return jg(e,r,e[0]);case 5:return Xg(e,r);default:throw new Error("Unsupported payload version ".concat(e[0]));}}function Jg(e){var r=Lg(e);return Ng(r[1][0].data)}function qg(e){return Mg([[],[{type:0,data:Ig(e)}]])}function Qg(e,r){var t=Lg(r.data);var a=Pg(t[1][0].data);var n=t[3];var i=[];(n||[]).forEach(function(r){var t=Lg(r.data);var n=Pg(t[1][0].data)>>>0;switch(a){case 1:i[n]=Sg(t[3][0].data);break;case 8:{var s=e[Jg(t[9][0].data)][0];var f=Lg(s.data);var l=e[Jg(f[1][0].data)][0];var o=Pg(l.meta[1][0].data);if(o!=2001)throw new Error("2000 unexpected reference to ".concat(o));var c=Lg(l.data);i[n]=c[3].map(function(e){return Sg(e.data)}).join("")}break;case 2:i[n]=Lg(t[6][0].data);break;default:throw a;}});return i}function ew(e,r){var t,a,n,i,s,f,l,o,c,u,h,d,v,p;var m=Lg(e);var b=Pg(m[1][0].data)>>>0;var g=Pg(m[2][0].data)>>>0;var w=((a=(t=m[8])==null?void 0:t[0])==null?void 0:a.data)&&Pg(m[8][0].data)>0||false;var k,T;if(((i=(n=m[7])==null?void 0:n[0])==null?void 0:i.data)&&r!=0){k=(f=(s=m[7])==null?void 0:s[0])==null?void 0:f.data;T=(o=(l=m[6])==null?void 0:l[0])==null?void 0:o.data}else if(((u=(c=m[4])==null?void 0:c[0])==null?void 0:u.data)&&r!=1){k=(d=(h=m[4])==null?void 0:h[0])==null?void 0:d.data;T=(p=(v=m[3])==null?void 0:v[0])==null?void 0:p.data}else throw"NUMBERS Tile missing ".concat(r," cell storage");var E=w?4:1;var y=yg(k);var S=[];for(var _=0;_<k.length/2;++_){var A=y.getUint16(_*2,true);if(A<65535)S.push([_,A])}if(S.length!=g)throw"Expected ".concat(g," cells, found ").concat(S.length);var x=[];for(_=0;_<S.length-1;++_)x[S[_][0]]=T[Eg](S[_][1]*E,S[_+1][1]*E);if(S.length>=1)x[S[S.length-1][0]]=T[Eg](S[S.length-1][1]*E);return{R:b,cells:x}}function rw(e,r){var t;var a=Lg(r.data);var n=-1;if((t=a==null?void 0:a[7])==null?void 0:t[0]){if(Pg(a[7][0].data)>>>0)n=1;else n=0}var i=Ug(a[5],function(e){return ew(e,n)});return{nrows:Pg(a[4][0].data)>>>0,data:i.reduce(function(e,r){if(!e[r.R])e[r.R]=[];r.cells.forEach(function(t,a){if(e[r.R][a])throw new Error("Duplicate cell r=".concat(r.R," c=").concat(a));e[r.R][a]=t});return e},[])}}function tw(e,r,t){var a,n,i,s,f,l;var o=Lg(r.data);var c={s:{r:0,c:0},e:{r:0,c:0}};c.e.r=(Pg(o[6][0].data)>>>0)-1;if(c.e.r<0)throw new Error("Invalid row varint ".concat(o[6][0].data));c.e.c=(Pg(o[7][0].data)>>>0)-1;if(c.e.c<0)throw new Error("Invalid col varint ".concat(o[7][0].data));t["!ref"]=Ba(c);var u=Array.isArray(t);var h=Lg(o[4][0].data);var d=Gg();if((a=h[4])==null?void 0:a[0])d.sst=Qg(e,e[Jg(h[4][0].data)][0]);if((n=h[11])==null?void 0:n[0])d.ofmt=Qg(e,e[Jg(h[11][0].data)][0]);if((i=h[17])==null?void 0:i[0])d.rsst=Qg(e,e[Jg(h[17][0].data)][0]);if((s=h[22])==null?void 0:s[0])d.nfmt=Qg(e,e[Jg(h[22][0].data)][0]);var v=Lg(h[3][0].data);var p=0;v[1].forEach(function(r){var a=Lg(r.data);var n=e[Jg(a[2][0].data)][0];var i=Pg(n.meta[1][0].data);if(i!=6002)throw new Error("6001 unexpected reference to ".concat(i));var s=rw(e,n);s.data.forEach(function(e,r){e.forEach(function(e,a){var n=Zg(e,d);if(n){if(u){if(!t[p+r])t[p+r]=[];t[p+r][a]=n}else{var i=Ma({r:p+r,c:a});t[i]=n}}})});p+=s.nrows});if((f=h[13])==null?void 0:f[0]){var m=e[Jg(h[13][0].data)][0];var b=Pg(m.meta[1][0].data);if(b!=6144)throw new Error("Expected merge type 6144, found ".concat(b));t["!merges"]=(l=Lg(m.data))==null?void 0:l[1].map(function(e){var r=Lg(e.data);var t=yg(Lg(r[1][0].data)[1][0].data),a=yg(Lg(r[2][0].data)[1][0].data);return{s:{r:t.getUint16(0,true),c:t.getUint16(2,true)},e:{r:t.getUint16(0,true)+a.getUint16(0,true)-1,c:t.getUint16(2,true)+a.getUint16(2,true)-1}}})}}function aw(e,r,t){var a=Lg(r.data);var n;if(!(t==null?void 0:t.dense))n={"!ref":"A1"};else n=[];n["!ref"]="A1";var i=e[Jg(a[2][0].data)];var s=Pg(i[0].meta[1][0].data);if(s!=6001)throw new Error("6000 unexpected reference to ".concat(s));tw(e,i[0],n);return n}function nw(e,r,t){var a;var n=Lg(r.data);var i={name:((a=n[1])==null?void 0:a[0])?Sg(n[1][0].data):"",sheets:[]};var s=Ug(n[2],Jg);s.forEach(function(r){e[r].forEach(function(r){var a=Pg(r.meta[1][0].data);if(a==6e3)i.sheets.push(aw(e,r,t))})});return i}function iw(e,r,t){var a;var n=ck();var i=Lg(r.data);if((a=i[2])==null?void 0:a[0])throw new Error("Keynote presentations are not supported");var s=Ug(i[1],Jg);s.forEach(function(r){e[r].forEach(function(r){var a=Pg(r.meta[1][0].data);if(a==2){var i=nw(e,r,t);i.sheets.forEach(function(e,r){uk(n,e,r==0?i.name:i.name+"_"+r,true)})}})});if(n.SheetNames.length==0)throw new Error("Empty NUMBERS file");n.bookType="numbers";return n}function sw(e,r){var t,a,n,i,s,f,l,o;var c={},u=[];e.FullPaths.forEach(function(e){if(e.match(/\.iwpv2/))throw new Error("Unsupported password protection")});e.FileIndex.forEach(function(e){if(!e.name.match(/\.iwa$/))return;if(e.content[0]==98)return;var r;try{r=zg(e.content)}catch(t){return console.log("?? "+e.content.length+" "+(t.message||t))}var a;try{a=Bg(r)}catch(t){return console.log("## "+(t.message||t))}a.forEach(function(e){c[e.id]=e.messages;u.push(e.id)})});if(!u.length)throw new Error("File has no messages");if(((i=(n=(a=(t=c==null?void 0:c[1])==null?void 0:t[0])==null?void 0:a.meta)==null?void 0:n[1])==null?void 0:i[0].data)&&Pg(c[1][0].meta[1][0].data)==1e4)throw new Error("Pages documents are not supported");var h=((o=(l=(f=(s=c==null?void 0:c[1])==null?void 0:s[0])==null?void 0:f.meta)==null?void 0:l[1])==null?void 0:o[0].data)&&Pg(c[1][0].meta[1][0].data)==1&&c[1][0];if(!h)u.forEach(function(e){c[e].forEach(function(e){var r=Pg(e.meta[1][0].data)>>>0;if(r==1){if(!h)h=e;else throw new Error("Document has multiple roots")}})});if(!h)throw new Error("Cannot find Document root");return iw(c,h,r)}function fw(e,r,t,a){var n,i;if(!((n=e[6])==null?void 0:n[0])||!((i=e[7])==null?void 0:i[0]))throw"Mutation only works on post-BNC storages!";var s=0;if(e[7][0].data.length<2*r.length){var f=new Uint8Array(2*r.length);f.set(e[7][0].data);e[7][0].data=f}if(e[4][0].data.length<2*r.length){var l=new Uint8Array(2*r.length);l.set(e[4][0].data);e[4][0].data=l}var o=yg(e[7][0].data),c=0,u=[];var h=yg(e[4][0].data),d=0,v=[];var p=a?4:1;for(var m=0;m<r.length;++m){if(r[m]==null){o.setUint16(m*2,65535,true);h.setUint16(m*2,65535);continue}o.setUint16(m*2,c/p,true);h.setUint16(m*2,d/p,true);var b,g;switch(typeof r[m]){case"string":b=Yg({t:"s",v:r[m]},t);g=Kg({t:"s",v:r[m]},t);break;case"number":b=Yg({t:"n",v:r[m]},t);g=Kg({t:"n",v:r[m]},t);break;case"boolean":b=Yg({t:"b",v:r[m]},t);g=Kg({t:"b",v:r[m]},t);break;default:throw new Error("Unsupported value "+r[m]);}u.push(b);c+=b.length;{v.push(g);d+=g.length}++s}e[2][0].data=Ig(s);e[5][0].data=Ig(5);for(;m<e[7][0].data.length/2;++m){o.setUint16(m*2,65535,true);h.setUint16(m*2,65535,true)}e[6][0].data=xg(u);e[3][0].data=xg(v);e[8]=[{type:0,data:Ig(a?1:0)}];return s}function lw(e,r){return{meta:[[],[{type:0,data:Ig(e)}]],data:r}}function ow(e,r){if(!r.last)r.last=927262;for(var t=r.last;t<2e6;++t)if(!r[t]){r[r.last=t]=e;return t}throw new Error("Too many messages")}function cw(e){var r={};var t=[];e.FileIndex.map(function(r,t){return[r,e.FullPaths[t]]}).forEach(function(e){var a=e[0],n=e[1];if(a.type!=2)return;if(!a.name.match(/\.iwa/))return;if(a.name.match(/OperationStorage/))return;Bg(zg(a.content)).forEach(function(e){t.push(e.id);r[e.id]={deps:[],location:n,type:Pg(e.messages[0].meta[1][0].data)}})});t.sort(function(e,r){return e-r});var a=t.filter(function(e){return e>1}).map(function(e){return[e,Ig(e)]});e.FileIndex.forEach(function(e){if(!e.name.match(/\.iwa/))return;if(e.name.match(/OperationStorage/))return;Bg(zg(e.content)).forEach(function(e){a.forEach(function(t){if(e.messages.some(function(e){return Pg(e.meta[1][0].data)!=11006&&Ag(e.data,t[1])})){r[t[0]].deps.push(e.id)}})})});return r}function uw(e,r){if(!r||!r.numbers)throw new Error("Must pass a `numbers` option -- check the README");var t=er.read(r.numbers,{type:"base64"});var a=cw(t);var n=er.find(t,a[1].location);if(!n)throw"Could not find ".concat(a[1].location," in Numbers template");var i=Bg(zg(n.content));var s=i.find(function(e){return e.id==1});if(s==null)throw"Could not find message ".concat(1," in Numbers template");var f=Ug(Lg(s.messages[0].data)[1],Jg);e.SheetNames.forEach(function(r,n){return vw(t,a,e.Sheets[r],r,n,f[n])});return t}function hw(e,r,t,a){var n=er.find(e,r[t].location);if(!n)throw"Could not find ".concat(r[t].location," in Numbers template");var i=Bg(zg(n.content));var s=i.find(function(e){return e.id==t});a(s,i);n.content=Vg(Wg(i));n.size=n.content.length}function dw(e,r,t){var a=er.find(e,r[t].location);if(!a)throw"Could not find ".concat(r[t].location," in Numbers template");var n=Bg(zg(a.content));var i=n.find(function(e){return e.id==t});return i}function vw(e,r,t,a,n,i){if(n>=1)return console.error("The Numbers writer currently writes only the first table");var s=[];hw(e,r,i,function(e){var r=Lg(e.messages[0].data);{r[1]=[{type:2,data:_g(a)}];s=Ug(r[2],Jg)}e.messages[0].data=Mg(r)});var f=dw(e,r,s[0]);var l=Jg(Lg(f.messages[0].data)[2][0].data);hw(e,r,l,function(a,n){return mw(e,r,t,a,n,l)})}var pw=true;function mw(e,r,t,a,n,i){var s,f;var l=Ua(t["!ref"]);l.s.r=l.s.c=0;var o=false;if(l.e.c>999){o=true;l.e.c=999}if(l.e.r>999999){o=true;l.e.r=999999}if(o)console.error("Truncating to ".concat(Ba(l)));var c=ek(t,{range:l,header:1});var u=["~Sh33tJ5~"],h=new Set(u);c.forEach(function(e){return e.forEach(function(e){if(typeof e=="string"&&!h.has(e)){u.push(e);h.add(e)}})});var d=r[i].location;d=d.replace(/^Root Entry\//,"");d=d.replace(/^Index\//,"").replace(/\.iwa$/,"");var v=Lg(a.messages[0].data);{v[6][0].data=Ig(l.e.r+1);v[7][0].data=Ig(l.e.c+1);delete v[46];var p=Lg(v[4][0].data);{var m=Jg(Lg(p[1][0].data)[2][0].data);hw(e,r,m,function(e,r){var t;var a=Lg(e.messages[0].data);if((t=a==null?void 0:a[2])==null?void 0:t[0])for(var n=0;n<c.length;++n){var i=Lg(a[2][0].data);i[1][0].data=Ig(n);i[4][0].data=Ig(c[n].length);a[2][n]={type:a[2][0].type,data:Mg(i)}}e.messages[0].data=Mg(a)});var b=Jg(p[2][0].data);hw(e,r,b,function(e,r){var t=Lg(e.messages[0].data);for(var a=0;a<=l.e.c;++a){var n=Lg(t[2][0].data);n[1][0].data=Ig(a);n[4][0].data=Ig(l.e.r+1);t[2][a]={type:t[2][0].type,data:Mg(n)}}e.messages[0].data=Mg(t)});var g=Jg(p[4][0].data);hw(e,r,g,function(e){var r=Lg(e.messages[0].data);{r[3]=[];u.forEach(function(e,t){r[3].push({type:2,data:Mg([[],[{type:0,data:Ig(t)}],[{type:0,data:Ig(1)}],[{type:2,data:_g(e)}]])})})}e.messages[0].data=Mg(r)});var w=Lg(p[9][0].data);w[1]=[];var k=Lg(p[3][0].data);{var T=256;k[2]=[{type:0,data:Ig(T)}];var E=Jg(Lg(k[1][0].data)[2][0].data);var y=0;{er.utils.cfb_del(e,r[E].location);hw(e,r,2,function(e){var r=Lg(e.messages[0].data);var t=r[3].filter(function(e){return Ng(Lg(e.data)[1][0].data)==E});if(t&&t.length>0)y=Ng(Lg(t[0].data)[12][0].data);r[3]=r[3].filter(function(e){return Ng(Lg(e.data)[1][0].data)!=E});var a=r[3].findIndex(function(e){var r,t;var a=Lg(e.data);if((r=a[3])==null?void 0:r[0])return Sg(a[3][0].data)==d;if(((t=a[2])==null?void 0:t[0])&&Sg(a[2][0].data)==d)return true;return false});var n=Lg(r[3][a].data);if(!n[6])n[6]=[];n[6]=n[6].filter(function(e){return Ng(Lg(e.data)[1][0].data)!=E});r[3][a].data=Mg(n);e.messages[0].data=Mg(r)})}k[1]=[];var S=Math.ceil((l.e.r+1)/T);for(var _=0;_<S;++_){var A=ow({deps:[],location:"",type:6002},r);r[A].location="Root Entry/Index/Tables/Tile-".concat(A,".iwa");var x=[[],[{type:0,data:Ig(0)}],[{type:0,data:Ig(Math.min(l.e.r+1,(_+1)*T))}],[{type:0,data:Ig(0)}],[{type:0,data:Ig(Math.min((_+1)*T,l.e.r+1)-_*T)}],[],[{type:0,data:Ig(5)}],[{type:0,data:Ig(1)}],[{type:0,data:Ig(pw?1:0)}]];for(var C=_*T;C<=Math.min(l.e.r,(_+1)*T-1);++C){var O=[[],[{type:0,data:Ig(0)}],[{type:0,data:Ig(0)}],[{type:2,data:new Uint8Array([])}],[{type:2,data:new Uint8Array(Array.from({length:510},function(){return 255}))}],[{type:0,data:Ig(5)}],[{type:2,data:new Uint8Array([])}],[{type:2,data:new Uint8Array(Array.from({length:510},function(){return 255}))}],[{type:0,data:Ig(1)}]];fw(O,c[C],u,pw);O[1][0].data=Ig(C-_*T);x[5].push({data:Mg(O),type:2})}k[1].push({type:2,data:Mg([[],[{type:0,data:Ig(_)}],[{type:2,data:qg(A)}]])});var R={id:A,messages:[lw(6002,Mg(x))]};var N=Vg(Wg([R]));er.utils.cfb_add(e,"/Index/Tables/Tile-".concat(A,".iwa"),N);hw(e,r,2,function(e){var r=Lg(e.messages[0].data);r[3].push({type:2,data:Mg([[],[{type:0,data:Ig(A)}],[{type:2,data:_g("Tables/Tile")}],[{type:2,data:_g("Tables/Tile-".concat(A))}],[{type:2,data:new Uint8Array([2,0,0])}],[{type:2,data:new Uint8Array([2,0,0])}],[],[],[],[],[{type:0,data:Ig(0)}],[],[{type:0,data:Ig(y)}]])});r[1]=[{type:0,data:Ig(Math.max(A+1,Ng(r[1][0].data)))}];var t=r[3].findIndex(function(e){var r,t;var a=Lg(e.data);if((r=a[3])==null?void 0:r[0])return Sg(a[3][0].data)==d;if(((t=a[2])==null?void 0:t[0])&&Sg(a[2][0].data)==d)return true;return false});var a=Lg(r[3][t].data);if(!a[6])a[6]=[];a[6].push({type:2,data:Mg([[],[{type:0,data:Ig(A)}]])});r[3][t].data=Mg(a);e.messages[0].data=Mg(r)});var I=((s=a.messages[0].meta[5])==null?void 0:s[0])?Fg(a.messages[0].meta[5][0].data):[];var F=I.indexOf(A);if(F==-1){I[F=I.length]=A;a.messages[0].meta[5]=[{type:2,data:Dg(I)}]}w[1].push({type:2,data:Mg([[],[{type:0,data:Ig(_*T)}],[{type:0,data:Ig(_)}]])})}}p[3][0].data=Mg(k);p[9][0].data=Mg(w);p[10]=[{type:2,data:new Uint8Array([])}];if(t["!merges"]){var D=ow({type:6144,deps:[i],location:r[i].location},r);n.push({id:D,messages:[lw(6144,Mg([[],t["!merges"].map(function(e){return{type:2,data:Mg([[],[{type:2,data:Mg([[],[{type:5,data:new Uint8Array(new Uint16Array([e.s.r,e.s.c]).buffer)}]])}],[{type:2,data:Mg([[],[{type:5,data:new Uint8Array(new Uint16Array([e.e.r-e.s.r+1,e.e.c-e.s.c+1]).buffer)}]])}]])}})]))]});p[13]=[{type:2,data:qg(D)}];hw(e,r,2,function(e){var r=Lg(e.messages[0].data);var t=r[3].findIndex(function(e){var r,t;var a=Lg(e.data);if((r=a[3])==null?void 0:r[0])return Sg(a[3][0].data)==d;if(((t=a[2])==null?void 0:t[0])&&Sg(a[2][0].data)==d)return true;return false});var a=Lg(r[3][t].data);if(!a[6])a[6]=[];a[6].push({type:2,data:Mg([[],[{type:0,data:Ig(D)}]])});r[3][t].data=Mg(a);e.messages[0].data=Mg(r)});I=((f=a.messages[0].meta[5])==null?void 0:f[0])?Fg(a.messages[0].meta[5][0].data):[];F=I.indexOf(D);if(F==-1){I[F=I.length]=D;a.messages[0].meta[5]=[{type:2,data:Dg(I)}]}}else delete p[13]}v[4][0].data=Mg(p)}a.messages[0].data=Mg(v)}function bw(e){return function r(t){for(var a=0;a!=e.length;++a){var n=e[a];if(t[n[0]]===undefined)t[n[0]]=n[1];if(n[2]==="n")t[n[0]]=Number(t[n[0]])}}}function gw(e){bw([["cellNF",false],["cellHTML",true],["cellFormula",true],["cellStyles",false],["cellText",true],["cellDates",false],["sheetStubs",false],["sheetRows",0,"n"],["bookDeps",false],["bookSheets",false],["bookProps",false],["bookFiles",false],["bookVBA",false],["password",""],["WTF",false]])(e)}function ww(e){bw([["cellDates",false],["bookSST",false],["bookType","xlsx"],["compression",false],["WTF",false]])(e)}function kw(e){if(ii.WS.indexOf(e)>-1)return"sheet";if(ii.CS&&e==ii.CS)return"chart";if(ii.DS&&e==ii.DS)return"dialog";if(ii.MS&&e==ii.MS)return"macro";return e&&e.length?e:"sheet"}function Tw(e,r){if(!e)return 0;try{e=r.map(function a(r){if(!r.id)r.id=r.strRelID;return[r.name,e["!id"][r.id].Target,kw(e["!id"][r.id].Type)]})}catch(t){return null}return!e||e.length===0?null:e}function Ew(e,r,t,a,n,i,s,f,l,o,c,u){try{i[a]=fi(Mr(e,t,true),r);var h=Lr(e,r);var d;switch(f){case"sheet":d=Bm(h,r,n,l,i[a],o,c,u);break;case"chart":d=Wm(h,r,n,l,i[a],o,c,u);if(!d||!d["!drawel"])break;var v=Vr(d["!drawel"].Target,r);var p=si(v);var m=hu(Mr(e,v,true),fi(Mr(e,p,true),v));var b=Vr(m,v);var g=si(b);d=am(Mr(e,b,true),b,l,fi(Mr(e,g,true),b),o,d);break;case"macro":d=Hm(h,r,n,l,i[a],o,c,u);break;case"dialog":d=zm(h,r,n,l,i[a],o,c,u);break;default:throw new Error("Unrecognized sheet type "+f);}s[a]=d;var w=[],k=[];if(i&&i[a])sr(i[a]).forEach(function(t){var n="";if(i[a][t].Type==ii.CMNT){n=Vr(i[a][t].Target,r);w=$m(Lr(e,n,true),n,l);if(!w||!w.length)return;pu(d,w,false)}if(i[a][t].Type==ii.TCMNT){n=Vr(i[a][t].Target,r);
-k=k.concat(gu(Lr(e,n,true),l))}});if(k&&k.length)pu(d,k,true,l.people||[])}catch(T){if(l.WTF)throw T}}function yw(e){return e.charAt(0)=="/"?e.slice(1):e}function Sw(e,r){$e();r=r||{};gw(r);if(Dr(e,"META-INF/manifest.xml"))return pg(e,r);if(Dr(e,"objectdata.xml"))return pg(e,r);if(Dr(e,"Index/Document.iwa")){if(typeof Uint8Array=="undefined")throw new Error("NUMBERS file parsing requires Uint8Array support");if(typeof sw!="undefined"){if(e.FileIndex)return sw(e,r);var t=er.utils.cfb_new();Br(e).forEach(function(r){Wr(t,r,Ur(e,r))});return sw(t,r)}throw new Error("Unsupported NUMBERS file")}if(!Dr(e,"[Content_Types].xml")){if(Dr(e,"index.xml.gz"))throw new Error("Unsupported NUMBERS 08 file");if(Dr(e,"index.xml"))throw new Error("Unsupported NUMBERS 09 file");var a=er.find(e,"Index.zip");if(a){r=yr(r);delete r.type;if(typeof a.content=="string")r.type="binary";if(typeof Bun!=="undefined"&&Buffer.isBuffer(a.content))return Lw(new Uint8Array(a.content),r);return Lw(a.content,r)}throw new Error("Unsupported ZIP file")}var n=Br(e);var i=ai(Mr(e,"[Content_Types].xml"));var s=false;var f,l;if(i.workbooks.length===0){l="xl/workbook.xml";if(Lr(e,l,true))i.workbooks.push(l)}if(i.workbooks.length===0){l="xl/workbook.bin";if(!Lr(e,l,true))throw new Error("Could not find workbook");i.workbooks.push(l);s=true}if(i.workbooks[0].slice(-3)=="bin")s=true;var o={};var c={};if(!r.bookSheets&&!r.bookProps){Zd=[];if(i.sst)try{Zd=Gm(Lr(e,yw(i.sst)),i.sst,r)}catch(u){if(r.WTF)throw u}if(r.cellStyles&&i.themes.length)o=Wc(Mr(e,i.themes[0].replace(/^\//,""),true)||"",r);if(i.style)c=Vm(Lr(e,yw(i.style)),i.style,o,r)}i.links.map(function(t){try{var a=fi(Mr(e,si(yw(t))),t);return Xm(Lr(e,yw(t)),a,t,r)}catch(n){}});var h=Um(Lr(e,yw(i.workbooks[0])),i.workbooks[0],r);var d={},v="";if(i.coreprops.length){v=Lr(e,yw(i.coreprops[0]),true);if(v)d=wi(v);if(i.extprops.length!==0){v=Lr(e,yw(i.extprops[0]),true);if(v)_i(v,d,r)}}var p={};if(!r.bookSheets||r.bookProps){if(i.custprops.length!==0){v=Mr(e,yw(i.custprops[0]),true);if(v)p=Ci(v,r)}}var m={};if(r.bookSheets||r.bookProps){if(h.Sheets)f=h.Sheets.map(function I(e){return e.name});else if(d.Worksheets&&d.SheetNames.length>0)f=d.SheetNames;if(r.bookProps){m.Props=d;m.Custprops=p}if(r.bookSheets&&typeof f!=="undefined")m.SheetNames=f;if(r.bookSheets?m.SheetNames:r.bookProps)return m}f={};var b={};if(r.bookDeps&&i.calcchain)b=jm(Lr(e,yw(i.calcchain)),i.calcchain,r);var g=0;var w={};var k,T;{var E=h.Sheets;d.Worksheets=E.length;d.SheetNames=[];for(var y=0;y!=E.length;++y){d.SheetNames[y]=E[y].name}}var S=s?"bin":"xml";var _=i.workbooks[0].lastIndexOf("/");var A=(i.workbooks[0].slice(0,_+1)+"_rels/"+i.workbooks[0].slice(_+1)+".rels").replace(/^\//,"");if(!Dr(e,A))A="xl/_rels/workbook."+S+".rels";var x=fi(Mr(e,A,true),A.replace(/_rels.*/,"s5s"));if((i.metadata||[]).length>=1){r.xlmeta=Ym(Lr(e,yw(i.metadata[0])),i.metadata[0],r)}if((i.people||[]).length>=1){r.people=ku(Lr(e,yw(i.people[0])),r)}if(x)x=Tw(x,h.Sheets);var C=Lr(e,"xl/worksheets/sheet.xml",true)?1:0;e:for(g=0;g!=d.Worksheets;++g){var O="sheet";if(x&&x[g]){k="xl/"+x[g][1].replace(/[\/]?xl\//,"");if(!Dr(e,k))k=x[g][1];if(!Dr(e,k))k=A.replace(/_rels\/.*$/,"")+x[g][1];O=x[g][2]}else{k="xl/worksheets/sheet"+(g+1-C)+"."+S;k=k.replace(/sheet0\./,"sheet.")}T=k.replace(/^(.*)(\/)([^\/]*)$/,"$1/_rels/$3.rels");if(r&&r.sheets!=null)switch(typeof r.sheets){case"number":if(g!=r.sheets)continue e;break;case"string":if(d.SheetNames[g].toLowerCase()!=r.sheets.toLowerCase())continue e;break;default:if(Array.isArray&&Array.isArray(r.sheets)){var R=false;for(var N=0;N!=r.sheets.length;++N){if(typeof r.sheets[N]=="number"&&r.sheets[N]==g)R=1;if(typeof r.sheets[N]=="string"&&r.sheets[N].toLowerCase()==d.SheetNames[g].toLowerCase())R=1}if(!R)continue e};}Ew(e,k,T,d.SheetNames[g],g,w,f,O,r,h,o,c)}m={Directory:i,Workbook:h,Props:d,Custprops:p,Deps:b,Sheets:f,SheetNames:d.SheetNames,Strings:Zd,Styles:c,Themes:o,SSF:yr(Z)};if(r&&r.bookFiles){if(e.files){m.keys=n;m.files=e.files}else{m.keys=[];m.files={};e.FullPaths.forEach(function(r,t){r=r.replace(/^Root Entry[\/]/,"");m.keys.push(r);m.files[r]=e.FileIndex[t]})}}if(r&&r.bookVBA){if(i.vba.length>0)m.vbaraw=Lr(e,yw(i.vba[0]),true);else if(i.defaults&&i.defaults.bin===Cu)m.vbaraw=Lr(e,"xl/vbaProject.bin",true)}m.bookType=s?"xlsb":"xlsx";return m}function _w(e,r){var t=r||{};var a="Workbook",n=er.find(e,a);try{a="/!DataSpaces/Version";n=er.find(e,a);if(!n||!n.content)throw new Error("ECMA-376 Encrypted file missing "+a);ro(n.content);a="/!DataSpaces/DataSpaceMap";n=er.find(e,a);if(!n||!n.content)throw new Error("ECMA-376 Encrypted file missing "+a);var i=ao(n.content);if(i.length!==1||i[0].comps.length!==1||i[0].comps[0].t!==0||i[0].name!=="StrongEncryptionDataSpace"||i[0].comps[0].v!=="EncryptedPackage")throw new Error("ECMA-376 Encrypted file bad "+a);a="/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace";n=er.find(e,a);if(!n||!n.content)throw new Error("ECMA-376 Encrypted file missing "+a);var s=no(n.content);if(s.length!=1||s[0]!="StrongEncryptionTransform")throw new Error("ECMA-376 Encrypted file bad "+a);a="/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary";n=er.find(e,a);if(!n||!n.content)throw new Error("ECMA-376 Encrypted file missing "+a);so(n.content)}catch(f){}a="/EncryptionInfo";n=er.find(e,a);if(!n||!n.content)throw new Error("ECMA-376 Encrypted file missing "+a);var l=oo(n.content);a="/EncryptedPackage";n=er.find(e,a);if(!n||!n.content)throw new Error("ECMA-376 Encrypted file missing "+a);if(l[0]==4&&typeof decrypt_agile!=="undefined")return decrypt_agile(l[1],n.content,t.password||"",t);if(l[0]==2&&typeof decrypt_std76!=="undefined")return decrypt_std76(l[1],n.content,t.password||"",t);throw new Error("File is password-protected")}function Aw(e,r){if(e&&!e.SSF){e.SSF=yr(Z)}if(e&&e.SSF){$e();Ge(e.SSF);r.revssf=or(e.SSF);r.revssf[e.SSF[65535]]=0;r.ssf=e.SSF}r.rels={};r.wbrels={};r.Strings=[];r.Strings.Count=0;r.Strings.Unique=0;if(qd)r.revStrings=new Map;else{r.revStrings={};r.revStrings.foo=[];delete r.revStrings.foo}var t="bin";var a=true;var n=ti();ww(r=r||{});var i=Hr();var s="",f=0;r.cellXfs=[];tv(r.cellXfs,{},{revssf:{General:0}});if(!e.Props)e.Props={};s="docProps/core.xml";Wr(i,s,Ti(e.Props,r));n.coreprops.push(s);oi(r.rels,2,s,ii.CORE_PROPS);s="docProps/app.xml";if(e.Props&&e.Props.SheetNames){}else if(!e.Workbook||!e.Workbook.Sheets)e.Props.SheetNames=e.SheetNames;else{var l=[];for(var o=0;o<e.SheetNames.length;++o)if((e.Workbook.Sheets[o]||{}).Hidden!=2)l.push(e.SheetNames[o]);e.Props.SheetNames=l}e.Props.Worksheets=e.Props.SheetNames.length;Wr(i,s,Ai(e.Props,r));n.extprops.push(s);oi(r.rels,3,s,ii.EXT_PROPS);if(e.Custprops!==e.Props&&sr(e.Custprops||{}).length>0){s="docProps/custom.xml";Wr(i,s,Oi(e.Custprops,r));n.custprops.push(s);oi(r.rels,4,s,ii.CUST_PROPS)}for(f=1;f<=e.SheetNames.length;++f){var c={"!id":{}};var u=e.Sheets[e.SheetNames[f-1]];var h=(u||{})["!type"]||"sheet";switch(h){case"chart":;default:s="xl/worksheets/sheet"+f+"."+t;Wr(i,s,rm(f-1,r,e,c));n.sheets.push(s);oi(r.wbrels,-1,"worksheets/sheet"+f+"."+t,ii.WS[0]);}if(u){var d=u["!comments"];var v=false;var p="";if(d&&d.length>0){p="xl/comments"+f+"."+t;Wr(i,p,xu(d,r));n.comments.push(p);oi(c,-1,"../comments"+f+"."+t,ii.CMNT);v=true}if(u["!legacy"]){if(v)Wr(i,"xl/drawings/vmlDrawing"+f+".vml",du(f,u["!comments"]))}delete u["!comments"];delete u["!legacy"]}if(c["!id"].rId1)Wr(i,si(s),li(c))}if(r.Strings!=null&&r.Strings.length>0){s="xl/sharedStrings."+t;Wr(i,s,ql(r.Strings,r));n.strs.push(s);oi(r.wbrels,-1,"sharedStrings."+t,ii.SST)}s="xl/workbook."+t;Wr(i,s,Mm(e,r));n.workbooks.push(s);oi(r.rels,1,s,ii.WB);s="xl/theme/theme1.xml";var m=Hc(e.Themes,r);Wr(i,s,m);n.themes.push(s);oi(r.wbrels,-1,"theme/theme1.xml",ii.THEME);s="xl/styles."+t;Wr(i,s,Rc(e,r));n.styles.push(s);oi(r.wbrels,-1,"styles."+t,ii.STY);if(e.vbaraw&&a){s="xl/vbaProject.bin";Wr(i,s,e.vbaraw);n.vba.push(s);oi(r.wbrels,-1,"vbaProject.bin",ii.VBA)}s="xl/metadata."+t;Wr(i,s,nu());n.metadata.push(s);oi(r.wbrels,-1,"metadata."+t,ii.XLMETA);Wr(i,"[Content_Types].xml",ni(n,r));Wr(i,"_rels/.rels",li(r.rels));Wr(i,"xl/_rels/workbook."+t+".rels",li(r.wbrels));delete r.revssf;delete r.ssf;return i}function xw(e,r){if(e&&!e.SSF){e.SSF=yr(Z)}if(e&&e.SSF){$e();Ge(e.SSF);r.revssf=or(e.SSF);r.revssf[e.SSF[65535]]=0;r.ssf=e.SSF}r.rels={};r.wbrels={};r.Strings=[];r.Strings.Count=0;r.Strings.Unique=0;if(qd)r.revStrings=new Map;else{r.revStrings={};r.revStrings.foo=[];delete r.revStrings.foo}var t="xml";var a=Nu.indexOf(r.bookType)>-1;var n=ti();ww(r=r||{});var i=Hr();var s="",f=0;r.cellXfs=[];tv(r.cellXfs,{},{revssf:{General:0}});if(!e.Props)e.Props={};s="docProps/core.xml";Wr(i,s,Ti(e.Props,r));n.coreprops.push(s);oi(r.rels,2,s,ii.CORE_PROPS);s="docProps/app.xml";if(e.Props&&e.Props.SheetNames){}else if(!e.Workbook||!e.Workbook.Sheets)e.Props.SheetNames=e.SheetNames;else{var l=[];for(var o=0;o<e.SheetNames.length;++o)if((e.Workbook.Sheets[o]||{}).Hidden!=2)l.push(e.SheetNames[o]);e.Props.SheetNames=l}e.Props.Worksheets=e.Props.SheetNames.length;Wr(i,s,Ai(e.Props,r));n.extprops.push(s);oi(r.rels,3,s,ii.EXT_PROPS);if(e.Custprops!==e.Props&&sr(e.Custprops||{}).length>0){s="docProps/custom.xml";Wr(i,s,Oi(e.Custprops,r));n.custprops.push(s);oi(r.rels,4,s,ii.CUST_PROPS)}var c=["SheetJ5"];r.tcid=0;for(f=1;f<=e.SheetNames.length;++f){var u={"!id":{}};var h=e.Sheets[e.SheetNames[f-1]];var d=(h||{})["!type"]||"sheet";switch(d){case"chart":;default:s="xl/worksheets/sheet"+f+"."+t;Wr(i,s,Mv(f-1,r,e,u));n.sheets.push(s);oi(r.wbrels,-1,"worksheets/sheet"+f+"."+t,ii.WS[0]);}if(h){var v=h["!comments"];var p=false;var m="";if(v&&v.length>0){var b=false;v.forEach(function(e){e[1].forEach(function(e){if(e.T==true)b=true})});if(b){m="xl/threadedComments/threadedComment"+f+".xml";Wr(i,m,wu(v,c,r));n.threadedcomments.push(m);oi(u,-1,"../threadedComments/threadedComment"+f+".xml",ii.TCMNT)}m="xl/comments"+f+"."+t;Wr(i,m,bu(v,r));n.comments.push(m);oi(u,-1,"../comments"+f+"."+t,ii.CMNT);p=true}if(h["!legacy"]){if(p)Wr(i,"xl/drawings/vmlDrawing"+f+".vml",du(f,h["!comments"]))}delete h["!comments"];delete h["!legacy"]}if(u["!id"].rId1)Wr(i,si(s),li(u))}if(r.Strings!=null&&r.Strings.length>0){s="xl/sharedStrings."+t;Wr(i,s,Xl(r.Strings,r));n.strs.push(s);oi(r.wbrels,-1,"sharedStrings."+t,ii.SST)}s="xl/workbook."+t;Wr(i,s,Tm(e,r));n.workbooks.push(s);oi(r.rels,1,s,ii.WB);s="xl/theme/theme1.xml";Wr(i,s,Hc(e.Themes,r));n.themes.push(s);oi(r.wbrels,-1,"theme/theme1.xml",ii.THEME);s="xl/styles."+t;Wr(i,s,ac(e,r));n.styles.push(s);oi(r.wbrels,-1,"styles."+t,ii.STY);if(e.vbaraw&&a){s="xl/vbaProject.bin";Wr(i,s,e.vbaraw);n.vba.push(s);oi(r.wbrels,-1,"vbaProject.bin",ii.VBA)}s="xl/metadata."+t;Wr(i,s,su());n.metadata.push(s);oi(r.wbrels,-1,"metadata."+t,ii.XLMETA);if(c.length>1){s="xl/persons/person.xml";Wr(i,s,Tu(c,r));n.people.push(s);oi(r.wbrels,-1,"persons/person.xml",ii.PEOPLE)}Wr(i,"[Content_Types].xml",ni(n,r));Wr(i,"_rels/.rels",li(r.rels));Wr(i,"xl/_rels/workbook."+t+".rels",li(r.wbrels));delete r.revssf;delete r.ssf;return i}function Cw(e,r){var t="";switch((r||{}).type||"base64"){case"buffer":return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7]];case"base64":t=E(e.slice(0,12));break;case"binary":t=e;break;case"array":return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7]];default:throw new Error("Unrecognized type "+(r&&r.type||"undefined"));}return[t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2),t.charCodeAt(3),t.charCodeAt(4),t.charCodeAt(5),t.charCodeAt(6),t.charCodeAt(7)]}function Ow(e,r){if(er.find(e,"EncryptedPackage"))return _w(e,r);return Nb(e,r)}function Rw(e,r){var t,a=e;var n=r||{};if(!n.type)n.type=y&&Buffer.isBuffer(e)?"buffer":"base64";t=zr(a,n);return Sw(t,n)}function Nw(e,r){var t=0;e:while(t<e.length)switch(e.charCodeAt(t)){case 10:;case 13:;case 32:++t;break;case 60:return lb(e.slice(t),r);default:break e;}return Il.to_workbook(e,r)}function Iw(e,r){var t="",a=Cw(e,r);switch(r.type){case"base64":t=E(e);break;case"binary":t=e;break;case"buffer":t=e.toString("binary");break;case"array":t=Er(e);break;default:throw new Error("Unrecognized type "+r.type);}if(a[0]==239&&a[1]==187&&a[2]==191)t=mt(t);r.type="binary";return Nw(t,r)}function Fw(e,r){var t=e;if(r.type=="base64")t=E(t);t=typeof a!=="undefined"?a.utils.decode(1200,t.slice(2),"str"):u(t.slice(2));r.type="binary";return Nw(t,r)}function Dw(e){return!e.match(/[^\x00-\x7F]/)?e:bt(e)}function Pw(e,r,t,a){if(a){t.type="string";return Il.to_workbook(e,t)}return Il.to_workbook(r,t)}function Lw(e,r){o();var t=r||{};if(t.codepage&&typeof a==="undefined")console.error("Codepage tables are not loaded.  Non-ASCII characters may not give expected results");if(typeof ArrayBuffer!=="undefined"&&e instanceof ArrayBuffer)return Lw(new Uint8Array(e),(t=yr(t),t.type="array",t));if(typeof Uint8Array!=="undefined"&&e instanceof Uint8Array&&!t.type)t.type=typeof Deno!=="undefined"?"buffer":"array";var n=e,i=[0,0,0,0],s=false;if(t.cellStyles){t.cellNF=true;t.sheetStubs=true}Jd={};if(t.dateNF)Jd.dateNF=t.dateNF;if(!t.type)t.type=y&&Buffer.isBuffer(e)?"buffer":"base64";if(t.type=="file"){t.type=y?"buffer":"binary";n=ir(e);if(typeof Uint8Array!=="undefined"&&!y)t.type="array"}if(t.type=="string"){s=true;t.type="binary";t.codepage=65001;n=Dw(e)}if(t.type=="array"&&typeof Uint8Array!=="undefined"&&e instanceof Uint8Array&&typeof ArrayBuffer!=="undefined"){var f=new ArrayBuffer(3),l=new Uint8Array(f);l.foo="bar";if(!l.foo){t=yr(t);t.type="array";return Lw(I(n),t)}}switch((i=Cw(n,t))[0]){case 208:if(i[1]===207&&i[2]===17&&i[3]===224&&i[4]===161&&i[5]===177&&i[6]===26&&i[7]===225)return Ow(er.read(n,t),t);break;case 9:if(i[1]<=8)return Nb(n,t);break;case 60:return lb(n,t);case 73:if(i[1]===73&&i[2]===42&&i[3]===0)throw new Error("TIFF Image File is not a spreadsheet");if(i[1]===68)return Fl(n,t);break;case 84:if(i[1]===65&&i[2]===66&&i[3]===76)return Rl.to_workbook(n,t);break;case 80:return i[1]===75&&i[2]<9&&i[3]<9?Rw(n,t):Pw(e,n,t,s);case 239:return i[3]===60?lb(n,t):Pw(e,n,t,s);case 255:if(i[1]===254){return Fw(n,t)}else if(i[1]===0&&i[2]===2&&i[3]===0)return Dl.to_workbook(n,t);break;case 0:if(i[1]===0){if(i[2]>=2&&i[3]===0)return Dl.to_workbook(n,t);if(i[2]===0&&(i[3]===8||i[3]===9))return Dl.to_workbook(n,t)}break;case 3:;case 131:;case 139:;case 140:return Cl.to_workbook(n,t);case 123:if(i[1]===92&&i[2]===114&&i[3]===116)return _o(n,t);break;case 10:;case 13:;case 32:return Iw(n,t);case 137:if(i[1]===80&&i[2]===78&&i[3]===71)throw new Error("PNG Image File is not a spreadsheet");break;case 8:if(i[1]===231)throw new Error("Unsupported Multiplan 1.x file!");break;case 12:if(i[1]===236)throw new Error("Unsupported Multiplan 2.x file!");if(i[1]===237)throw new Error("Unsupported Multiplan 3.x file!");break;}if(xl.indexOf(i[0])>-1&&i[2]<=12&&i[3]<=31)return Cl.to_workbook(n,t);return Pw(e,n,t,s)}function Mw(e,r){var t=r||{};t.type="file";return Lw(e,t)}function Uw(e,r){switch(r.type){case"base64":;case"binary":break;case"buffer":;case"array":r.type="";break;case"file":return nr(r.file,er.write(e,{type:y?"buffer":""}));case"string":throw new Error("'string' output type invalid for '"+r.bookType+"' files");default:throw new Error("Unrecognized type "+r.type);}return er.write(e,r)}function Bw(e,r){switch(r.bookType){case"ods":return Tg(e,r);case"numbers":return uw(e,r);case"xlsb":return Aw(e,r);default:return xw(e,r);}}function Ww(e,r){var t=yr(r||{});var a=Bw(e,t);return zw(a,t)}function Hw(e,r){var t=yr(r||{});var a=xw(e,t);return zw(a,t)}function zw(e,r){var t={};var a=y?"nodebuffer":typeof Uint8Array!=="undefined"?"array":"string";if(r.compression)t.compression="DEFLATE";if(r.password)t.type=a;else switch(r.type){case"base64":t.type="base64";break;case"binary":t.type="string";break;case"string":throw new Error("'string' output type invalid for '"+r.bookType+"' files");case"buffer":;case"file":t.type=a;break;default:throw new Error("Unrecognized type "+r.type);}var n=e.FullPaths?er.write(e,{fileType:"zip",type:{nodebuffer:"buffer",string:"binary"}[t.type]||t.type,compression:!!r.compression}):e.generate(t);if(typeof Deno!=="undefined"){if(typeof n=="string"){if(r.type=="binary"||r.type=="base64")return n;n=new Uint8Array(O(n))}}if(r.password&&typeof encrypt_agile!=="undefined")return Uw(encrypt_agile(n,r.password),r);if(r.type==="file")return nr(r.file,n);return r.type=="string"?mt(n):n}function Vw(e,r){var t=r||{};var a=Ib(e,t);return Uw(a,t)}function Gw(e,r,t){if(!t)t="";var a=t+e;switch(r.type){case"base64":return k(bt(a));case"binary":return bt(a);case"string":return e;case"file":return nr(r.file,a,"utf8");case"buffer":{if(y)return S(a,"utf8");else if(typeof TextEncoder!=="undefined")return(new TextEncoder).encode(a);else return Gw(a,{type:"binary"}).split("").map(function(e){return e.charCodeAt(0)})};}throw new Error("Unrecognized type "+r.type)}function $w(e,r){switch(r.type){case"base64":return T(e);case"binary":return e;case"string":return e;case"file":return nr(r.file,e,"binary");case"buffer":{if(y)return S(e,"binary");else return e.split("").map(function(e){return e.charCodeAt(0)})};}throw new Error("Unrecognized type "+r.type)}function jw(e,r){switch(r.type){case"string":;case"base64":;case"binary":var t="";for(var a=0;a<e.length;++a)t+=String.fromCharCode(e[a]);return r.type=="base64"?k(t):r.type=="string"?mt(t):t;case"file":return nr(r.file,e);case"buffer":return e;default:throw new Error("Unrecognized type "+r.type);}}function Xw(e,r){o();gm(e);var t=yr(r||{});if(t.cellStyles){t.cellNF=true;t.sheetStubs=true}if(t.type=="array"){t.type="binary";var a=Xw(e,t);t.type="array";return O(a)}return Hw(e,t)}function Yw(e,r){o();gm(e);var t=yr(r||{});if(t.cellStyles){t.cellNF=true;t.sheetStubs=true}if(t.type=="array"){t.type="binary";var a=Yw(e,t);t.type="array";return O(a)}var n=0;if(t.sheet){if(typeof t.sheet=="number")n=t.sheet;else n=e.SheetNames.indexOf(t.sheet);if(!e.SheetNames[n])throw new Error("Sheet not found: "+t.sheet+" : "+typeof t.sheet)}switch(t.bookType||"xlsb"){case"xml":;case"xlml":return Gw(Tb(e,t),t);case"slk":;case"sylk":return Gw(Ol.from_sheet(e.Sheets[e.SheetNames[n]],t,e),t);case"htm":;case"html":return Gw(sg(e.Sheets[e.SheetNames[n]],t),t);case"txt":return $w(nk(e.Sheets[e.SheetNames[n]],t),t);case"csv":return Gw(ak(e.Sheets[e.SheetNames[n]],t),t,"\ufeff");case"dif":return Gw(Rl.from_sheet(e.Sheets[e.SheetNames[n]],t),t);case"dbf":return jw(Cl.from_sheet(e.Sheets[e.SheetNames[n]],t),t);case"prn":return Gw(Il.from_sheet(e.Sheets[e.SheetNames[n]],t),t);case"rtf":return Gw(Ao(e.Sheets[e.SheetNames[n]],t),t);case"eth":return Gw(Nl.from_sheet(e.Sheets[e.SheetNames[n]],t),t);case"fods":return Gw(Tg(e,t),t);case"wk1":return jw(Dl.sheet_to_wk1(e.Sheets[e.SheetNames[n]],t),t);case"wk3":return jw(Dl.book_to_wk3(e,t),t);case"biff2":if(!t.biff)t.biff=2;case"biff3":if(!t.biff)t.biff=3;case"biff4":if(!t.biff)t.biff=4;return jw(Qb(e,t),t);case"biff5":if(!t.biff)t.biff=5;case"biff8":;case"xla":;case"xls":if(!t.biff)t.biff=8;return Vw(e,t);case"xlsx":;case"xlsm":;case"xlam":;case"xlsb":;case"numbers":;case"ods":return Ww(e,t);default:throw new Error("Unrecognized bookType |"+t.bookType+"|");}}function Kw(e){if(e.bookType)return;var r={xls:"biff8",htm:"html",slk:"sylk",socialcalc:"eth",Sh33tJS:"WTF"};var t=e.file.slice(e.file.lastIndexOf(".")).toLowerCase();if(t.match(/^\.[a-z]+$/))e.bookType=t.slice(1);e.bookType=r[e.bookType]||e.bookType}function Zw(e,r,t){var a=t||{};a.type="file";a.file=r;Kw(a);return Yw(e,a)}function Jw(e,r,t){var a=t||{};a.type="file";a.file=r;Kw(a);return Xw(e,a)}function qw(e,r,t,a){var n=t||{};n.type="file";n.file=e;Kw(n);n.type="buffer";var i=a;if(!(i instanceof Function))i=t;return rr.writeFile(e,Yw(r,n),i)}function Qw(e,r,t,a,n,i,s,f){var l=Ca(t);var o=f.defval,c=f.raw||!Object.prototype.hasOwnProperty.call(f,"raw");var u=true;var h=n===1?[]:{};if(n!==1){if(Object.defineProperty)try{Object.defineProperty(h,"__rowNum__",{value:t,enumerable:false})}catch(d){h.__rowNum__=t}else h.__rowNum__=t}if(!s||e[t])for(var v=r.s.c;v<=r.e.c;++v){var p=s?e[t][v]:e[a[v]+l];if(p===undefined||p.t===undefined){if(o===undefined)continue;if(i[v]!=null){h[i[v]]=o}continue}var m=p.v;switch(p.t){case"z":if(m==null)break;continue;case"e":m=m==0?null:void 0;break;case"s":;case"d":;case"b":;case"n":break;default:throw new Error("unrecognized type "+p.t);}if(i[v]!=null){if(m==null){if(p.t=="e"&&m===null)h[i[v]]=null;else if(o!==undefined)h[i[v]]=o;else if(c&&m===null)h[i[v]]=null;else continue}else{h[i[v]]=c&&(p.t!=="n"||p.t==="n"&&f.rawNumbers!==false)?m:Ga(p,m,f)}if(m!=null)u=false}}return{row:h,isempty:u}}function ek(e,r){if(e==null||e["!ref"]==null)return[];var t={t:"n",v:0},a=0,n=1,i=[],s=0,f="";var l={s:{r:0,c:0},e:{r:0,c:0}};var o=r||{};var c=o.range!=null?o.range:e["!ref"];if(o.header===1)a=1;else if(o.header==="A")a=2;else if(Array.isArray(o.header))a=3;else if(o.header==null)a=0;switch(typeof c){case"string":l=za(c);break;case"number":l=za(e["!ref"]);l.s.r=c;break;default:l=c;}if(a>0)n=0;var u=Ca(l.s.r);var h=[];var d=[];var v=0,p=0;var m=Array.isArray(e);var b=l.s.r,g=0;var w={};if(m&&!e[b])e[b]=[];var k=o.skipHidden&&e["!cols"]||[];var T=o.skipHidden&&e["!rows"]||[];for(g=l.s.c;g<=l.e.c;++g){if((k[g]||{}).hidden)continue;h[g]=Ia(g);t=m?e[b][g]:e[h[g]+u];switch(a){case 1:i[g]=g-l.s.c;break;case 2:i[g]=h[g];break;case 3:i[g]=o.header[g-l.s.c];break;default:if(t==null)t={w:"__EMPTY",t:"s"};f=s=Ga(t,null,o);p=w[s]||0;if(!p)w[s]=1;else{do{f=s+"_"+p++}while(w[f]);w[s]=p;w[f]=1}i[g]=f;}}for(b=l.s.r+n;b<=l.e.r;++b){if((T[b]||{}).hidden)continue;var E=Qw(e,l,b,h,a,i,m,o);if(E.isempty===false||(a===1?o.blankrows!==false:!!o.blankrows))d[v++]=E.row}d.length=v;return d}var rk=/"/g;function tk(e,r,t,a,n,i,s,f){var l=true;var o=[],c="",u=Ca(t);for(var h=r.s.c;h<=r.e.c;++h){if(!a[h])continue;var d=f.dense?(e[t]||[])[h]:e[a[h]+u];if(d==null)c="";else if(d.v!=null){l=false;c=""+(f.rawNumbers&&d.t=="n"?d.v:Ga(d,null,f));for(var v=0,p=0;v!==c.length;++v)if((p=c.charCodeAt(v))===n||p===i||p===34||f.forceQuotes){c='"'+c.replace(rk,'""')+'"';break}if(c=="ID")c='"ID"'}else if(d.f!=null&&!d.F){l=false;c="="+d.f;if(c.indexOf(",")>=0)c='"'+c.replace(rk,'""')+'"'}else c="";o.push(c)}if(f.blankrows===false&&l)return null;return o.join(s)}function ak(e,r){var t=[];var a=r==null?{}:r;if(e==null||e["!ref"]==null)return"";var n=za(e["!ref"]);var i=a.FS!==undefined?a.FS:",",s=i.charCodeAt(0);var f=a.RS!==undefined?a.RS:"\n",l=f.charCodeAt(0);var o=new RegExp((i=="|"?"\\|":i)+"+$");var c="",u=[];a.dense=Array.isArray(e);var h=a.skipHidden&&e["!cols"]||[];var d=a.skipHidden&&e["!rows"]||[];for(var v=n.s.c;v<=n.e.c;++v)if(!(h[v]||{}).hidden)u[v]=Ia(v);var p=0;for(var m=n.s.r;m<=n.e.r;++m){if((d[m]||{}).hidden)continue;c=tk(e,n,m,u,s,l,i,a);if(c==null){continue}if(a.strip)c=c.replace(o,"");if(c||a.blankrows!==false)t.push((p++?f:"")+c)}delete a.dense;return t.join("")}function nk(e,r){if(!r)r={};r.FS="\t";r.RS="\n";var t=ak(e,r);if(typeof a=="undefined"||r.type=="string")return t;var n=a.utils.encode(1200,t,"str");return String.fromCharCode(255)+String.fromCharCode(254)+n}function ik(e){var r="",t,a="";if(e==null||e["!ref"]==null)return[];var n=za(e["!ref"]),i="",s=[],f;var l=[];var o=Array.isArray(e);for(f=n.s.c;f<=n.e.c;++f)s[f]=Ia(f);for(var c=n.s.r;c<=n.e.r;++c){i=Ca(c);for(f=n.s.c;f<=n.e.c;++f){r=s[f]+i;t=o?(e[c]||[])[f]:e[r];a="";if(t===undefined)continue;else if(t.F!=null){r=t.F;if(!t.f)continue;a=t.f;if(r.indexOf(":")==-1)r=r+":"+r}if(t.f!=null)a=t.f;else if(t.t=="z")continue;else if(t.t=="n"&&t.v!=null)a=""+t.v;else if(t.t=="b")a=t.v?"TRUE":"FALSE";else if(t.w!==undefined)a="'"+t.w;else if(t.v===undefined)continue;else if(t.t=="s")a="'"+t.v;else a=""+t.v;l[l.length]=r+"="+a}}return l}function sk(e,r,t){var a=t||{};var n=e?Array.isArray(e):a.dense;if(b!=null&&n==null)n=b;var i=+!a.skipHeader;var s=e||(n?[]:{});var f=0,l=0;if(s&&a.origin!=null){if(typeof a.origin=="number")f=a.origin;else{var o=typeof a.origin=="string"?La(a.origin):a.origin;f=o.r;l=o.c}}var c={s:{c:0,r:0},e:{c:l,r:f+r.length-1+i}};if(s["!ref"]){var u=za(s["!ref"]);c.e.c=Math.max(c.e.c,u.e.c);c.e.r=Math.max(c.e.r,u.e.r);if(f==-1){f=u.e.r+1;c.e.r=f+r.length-1+i}}else{if(f==-1){f=0;c.e.r=r.length-1+i}}var h=a.header||[],d=0;var v=[];r.forEach(function(e,r){if(n&&!s[f+r+i])s[f+r+i]=[];if(n)v=s[f+r+i];sr(e).forEach(function(t){if((d=h.indexOf(t))==-1)h[d=h.length]=t;var o=e[t];var c="z";var u="";var p=n?"":Ma({c:l+d,r:f+r+i});var m=n?v[l+d]:s[p];if(o&&typeof o==="object"&&!(o instanceof Date)){s[p]=o}else{if(typeof o=="number")c="n";else if(typeof o=="boolean")c="b";else if(typeof o=="string")c="s";else if(o instanceof Date){c="d";if(!a.cellDates){c="n";o=hr(o)}u=m!=null&&m.z&&Me(m.z)?m.z:a.dateNF||Z[14]}else if(o===null&&a.nullError){c="e";o=0}if(!m){if(!n)s[p]=m={t:c,v:o};else v[l+d]=m={t:c,v:o}}else{m.t=c;m.v=o;delete m.w;delete m.R;if(u)m.z=u}if(u)m.z=u}})});c.e.c=Math.max(c.e.c,l+h.length-1);var p=Ca(f);if(n&&!s[f])s[f]=[];if(i)for(d=0;d<h.length;++d){if(n)s[f][d+l]={t:"s",v:h[d]};else s[Ia(d+l)+p]={t:"s",v:h[d]}}s["!ref"]=Ba(c);return s}function fk(e,r){return sk(null,e,r)}function lk(e,r,t){if(typeof r=="string"){if(Array.isArray(e)){var a=La(r);if(!e[a.r])e[a.r]=[];return e[a.r][a.c]||(e[a.r][a.c]={t:"z"})}return e[r]||(e[r]={t:"z"})}if(typeof r!="number")return lk(e,Ma(r));return lk(e,Ma({r:r,c:t||0}))}function ok(e,r){if(typeof r=="number"){if(r>=0&&e.SheetNames.length>r)return r;throw new Error("Cannot find sheet # "+r)}else if(typeof r=="string"){var t=e.SheetNames.indexOf(r);if(t>-1)return t;throw new Error("Cannot find sheet name |"+r+"|")}else throw new Error("Cannot find sheet |"+r+"|")}function ck(){return{SheetNames:[],Sheets:{}}}function uk(e,r,t,a){var n=1;if(!t)for(;n<=65535;++n,t=undefined)if(e.SheetNames.indexOf(t="Sheet"+n)==-1)break;if(!t||e.SheetNames.length>=65535)throw new Error("Too many worksheets");if(a&&e.SheetNames.indexOf(t)>=0){var i=t.match(/(^.*?)(\d+)$/);n=i&&+i[2]||0;var s=i&&i[1]||t;for(++n;n<=65535;++n)if(e.SheetNames.indexOf(t=s+n)==-1)break}mm(t);if(e.SheetNames.indexOf(t)>=0)throw new Error("Worksheet with name |"+t+"| already exists!");e.SheetNames.push(t);e.Sheets[t]=r;return t}function hk(e,r,t){if(!e.Workbook)e.Workbook={};if(!e.Workbook.Sheets)e.Workbook.Sheets=[];var a=ok(e,r);if(!e.Workbook.Sheets[a])e.Workbook.Sheets[a]={};switch(t){case 0:;case 1:;case 2:break;default:throw new Error("Bad sheet visibility setting "+t);}e.Workbook.Sheets[a].Hidden=t}function dk(e,r){e.z=r;return e}function vk(e,r,t){if(!r){delete e.l}else{e.l={Target:r};if(t)e.l.Tooltip=t}return e}function pk(e,r,t){return vk(e,"#"+r,t)}function mk(e,r,t){if(!e.c)e.c=[];e.c.push({t:r,a:t||"SheetJS"})}function bk(e,r,t,a){var n=typeof r!="string"?r:za(r);var i=typeof r=="string"?r:Ba(r);for(var s=n.s.r;s<=n.e.r;++s)for(var f=n.s.c;f<=n.e.c;++f){var l=lk(e,s,f);l.t="n";l.F=i;delete l.v;if(s==n.s.r&&f==n.s.c){l.f=t;if(a)l.D=true}}var o=Ua(e["!ref"]);if(o.s.r>n.s.r)o.s.r=n.s.r;if(o.s.c>n.s.c)o.s.c=n.s.c;if(o.e.r<n.e.r)o.e.r=n.e.r;if(o.e.c<n.e.c)o.e.c=n.e.c;e["!ref"]=Ba(o);return e}var gk={encode_col:Ia,encode_row:Ca,encode_cell:Ma,encode_range:Ba,decode_col:Na,decode_row:xa,split_cell:Pa,decode_cell:La,decode_range:Ua,format_cell:Ga,sheet_add_aoa:ja,sheet_add_json:sk,sheet_add_dom:fg,aoa_to_sheet:Xa,json_to_sheet:fk,table_to_sheet:lg,table_to_book:og,sheet_to_csv:ak,sheet_to_txt:nk,sheet_to_json:ek,sheet_to_html:sg,sheet_to_formulae:ik,sheet_to_row_object_array:ek,sheet_get_cell:lk,book_new:ck,book_append_sheet:uk,book_set_sheet_visibility:hk,cell_set_number_format:dk,cell_set_hyperlink:vk,cell_set_internal_link:pk,cell_add_comment:mk,sheet_set_array_formula:bk,consts:{SHEET_VISIBLE:0,SHEET_HIDDEN:1,SHEET_VERY_HIDDEN:2}};var wk;function kk(e){wk=e}function Tk(e,r){var t=wk();var a=r==null?{}:r;if(e==null||e["!ref"]==null){t.push(null);return t}var n=za(e["!ref"]);var i=a.FS!==undefined?a.FS:",",s=i.charCodeAt(0);var f=a.RS!==undefined?a.RS:"\n",l=f.charCodeAt(0);var o=new RegExp((i=="|"?"\\|":i)+"+$");var c="",u=[];a.dense=Array.isArray(e);var h=a.skipHidden&&e["!cols"]||[];var d=a.skipHidden&&e["!rows"]||[];for(var v=n.s.c;v<=n.e.c;++v)if(!(h[v]||{}).hidden)u[v]=Ia(v);var p=n.s.r;var m=false,b=0;t._read=function(){if(!m){m=true;return t.push("\ufeff")}while(p<=n.e.r){++p;if((d[p-1]||{}).hidden)continue;c=tk(e,n,p-1,u,s,l,i,a);if(c!=null){if(a.strip)c=c.replace(o,"");if(c||a.blankrows!==false)return t.push((b++?f:"")+c)}}return t.push(null)};return t}function Ek(e,r){var t=wk();var a=r||{};var n=a.header!=null?a.header:tg;var i=a.footer!=null?a.footer:ag;t.push(n);var s=Ua(e["!ref"]);a.dense=Array.isArray(e);t.push(ig(e,s,a));var f=s.s.r;var l=false;t._read=function(){if(f>s.e.r){if(!l){l=true;t.push("</table>"+i)}return t.push(null)}while(f<=s.e.r){t.push(rg(e,s,f,a));++f;break}};return t}function yk(e,r){var t=wk({objectMode:true});if(e==null||e["!ref"]==null){t.push(null);return t}var a={t:"n",v:0},n=0,i=1,s=[],f=0,l="";var o={s:{r:0,c:0},e:{r:0,c:0}};var c=r||{};var u=c.range!=null?c.range:e["!ref"];if(c.header===1)n=1;else if(c.header==="A")n=2;else if(Array.isArray(c.header))n=3;switch(typeof u){case"string":o=za(u);break;case"number":o=za(e["!ref"]);o.s.r=u;break;default:o=u;}if(n>0)i=0;var h=Ca(o.s.r);var d=[];var v=0;var p=Array.isArray(e);var m=o.s.r,b=0;var g={};if(p&&!e[m])e[m]=[];var w=c.skipHidden&&e["!cols"]||[];var k=c.skipHidden&&e["!rows"]||[];for(b=o.s.c;b<=o.e.c;++b){if((w[b]||{}).hidden)continue;d[b]=Ia(b);a=p?e[m][b]:e[d[b]+h];switch(n){case 1:s[b]=b-o.s.c;break;case 2:s[b]=d[b];break;case 3:s[b]=c.header[b-o.s.c];break;default:if(a==null)a={w:"__EMPTY",t:"s"};l=f=Ga(a,null,c);v=g[f]||0;if(!v)g[f]=1;else{do{l=f+"_"+v++}while(g[l]);g[f]=v;g[l]=1}s[b]=l;}}m=o.s.r+i;t._read=function(){while(m<=o.e.r){if((k[m-1]||{}).hidden)continue;var r=Qw(e,o,m,d,n,s,p,c);++m;if(r.isempty===false||(n===1?c.blankrows!==false:!!c.blankrows)){t.push(r.row);return}}return t.push(null)};return t}var Sk={to_json:yk,to_html:Ek,to_csv:Tk,set_readable:kk};if(typeof Nb!=="undefined")e.parse_xlscfb=Nb;e.parse_zip=Sw;e.read=Lw;e.readFile=Mw;e.readFileSync=Mw;e.write=Yw;e.writeFile=Zw;e.writeFileSync=Zw;e.writeFileAsync=qw;e.utils=gk;e.writeXLSX=Xw;e.writeFileXLSX=Jw;e.SSF=je;if(typeof Sk!=="undefined")e.stream=Sk;if(typeof er!=="undefined")e.CFB=er;if(typeof require!=="undefined"){var _k=undefined;if((_k||{}).Readable)kk(_k.Readable);try{rr=undefined}catch(Ak){}}}if(typeof exports!=="undefined")make_xlsx_lib(exports);else if(typeof module!=="undefined"&&module.exports)make_xlsx_lib(module.exports);else if(typeof define==="function"&&define.amd)define("xlsx",function(){if(!XLSX.version)make_xlsx_lib(XLSX);return XLSX});else make_xlsx_lib(XLSX);if(typeof window!=="undefined"&&!window.XLSX)try{window.XLSX=XLSX}catch(e){}
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/pruebasCristian/xlsx.mini.js b/src/main/webapp/resources/js/pruebasCristian/xlsx.mini.js
deleted file mode 100644
index 0d178a6c..00000000
--- a/src/main/webapp/resources/js/pruebasCristian/xlsx.mini.js
+++ /dev/null
@@ -1,12348 +0,0 @@
-/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */
-/* vim: set ts=2: */
-/*exported XLSX */
-/*global global, exports, module, require:false, process:false, Buffer:false, ArrayBuffer:false, DataView:false, Deno:false, Set:false */
-var XLSX = {};
-function make_xlsx_lib(XLSX){
-XLSX.version = '0.18.12';
-var current_codepage = 1200, current_ansi = 1252;
-/*global cptable:true, window */
-var $cptable;
-
-var VALID_ANSI = [ 874, 932, 936, 949, 950, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 10000 ];
-/* ECMA-376 Part I 18.4.1 charset to codepage mapping */
-var CS2CP = ({
-0:    1252, /* ANSI */
-1:   65001, /* DEFAULT */
-2:   65001, /* SYMBOL */
-77:  10000, /* MAC */
-128:   932, /* SHIFTJIS */
-129:   949, /* HANGUL */
-130:  1361, /* JOHAB */
-134:   936, /* GB2312 */
-136:   950, /* CHINESEBIG5 */
-161:  1253, /* GREEK */
-162:  1254, /* TURKISH */
-163:  1258, /* VIETNAMESE */
-177:  1255, /* HEBREW */
-178:  1256, /* ARABIC */
-186:  1257, /* BALTIC */
-204:  1251, /* RUSSIAN */
-222:   874, /* THAI */
-238:  1250, /* EASTEUROPE */
-255:  1252, /* OEM */
-69:   6969  /* MISC */
-});
-
-var set_ansi = function(cp) { if(VALID_ANSI.indexOf(cp) == -1) return; current_ansi = CS2CP[0] = cp; };
-function reset_ansi() { set_ansi(1252); }
-
-var set_cp = function(cp) { current_codepage = cp; set_ansi(cp); };
-function reset_cp() { set_cp(1200); reset_ansi(); }
-
-function char_codes(data) { var o = []; for(var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i); return o; }
-
-function utf16leread(data) {
-	var o = [];
-	for(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i) + (data.charCodeAt(2*i+1)<<8));
-	return o.join("");
-}
-function utf16beread(data) {
-	var o = [];
-	for(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i+1) + (data.charCodeAt(2*i)<<8));
-	return o.join("");
-}
-
-var debom = function(data) {
-	var c1 = data.charCodeAt(0), c2 = data.charCodeAt(1);
-	if(c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));
-	if(c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));
-	if(c1 == 0xFEFF) return data.slice(1);
-	return data;
-};
-
-var _getchar = function _gc1(x) { return String.fromCharCode(x); };
-var _getansi = function _ga1(x) { return String.fromCharCode(x); };
-
-function set_cptable(cptable) {
-	$cptable = cptable;
-	set_cp = function(cp) { current_codepage = cp; set_ansi(cp); };
-	debom = function(data) {
-		if(data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) { return $cptable.utils.decode(1200, char_codes(data.slice(2))); }
-		return data;
-	};
-	_getchar = function _gc2(x) {
-		if(current_codepage === 1200) return String.fromCharCode(x);
-		return $cptable.utils.decode(current_codepage, [x&255,x>>8])[0];
-	};
-	_getansi = function _ga2(x) {
-		return $cptable.utils.decode(current_ansi, [x])[0];
-	};
-	cpdoit();
-}
-var DENSE = null;
-var DIF_XL = true;
-var Base64_map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
-function Base64_encode(input) {
-  var o = "";
-  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;
-  for (var i = 0; i < input.length; ) {
-    c1 = input.charCodeAt(i++);
-    e1 = c1 >> 2;
-    c2 = input.charCodeAt(i++);
-    e2 = (c1 & 3) << 4 | c2 >> 4;
-    c3 = input.charCodeAt(i++);
-    e3 = (c2 & 15) << 2 | c3 >> 6;
-    e4 = c3 & 63;
-    if (isNaN(c2)) {
-      e3 = e4 = 64;
-    } else if (isNaN(c3)) {
-      e4 = 64;
-    }
-    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);
-  }
-  return o;
-}
-function Base64_encode_pass(input) {
-  var o = "";
-  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;
-  for (var i = 0; i < input.length; ) {
-    c1 = input.charCodeAt(i++);
-    if (c1 > 255)
-      c1 = 95;
-    e1 = c1 >> 2;
-    c2 = input.charCodeAt(i++);
-    if (c2 > 255)
-      c2 = 95;
-    e2 = (c1 & 3) << 4 | c2 >> 4;
-    c3 = input.charCodeAt(i++);
-    if (c3 > 255)
-      c3 = 95;
-    e3 = (c2 & 15) << 2 | c3 >> 6;
-    e4 = c3 & 63;
-    if (isNaN(c2)) {
-      e3 = e4 = 64;
-    } else if (isNaN(c3)) {
-      e4 = 64;
-    }
-    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);
-  }
-  return o;
-}
-function Base64_decode(input) {
-  var o = "";
-  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;
-  input = input.replace(/^data:([^\/]+\/[^\/]+)?;base64\,/, "").replace(/[^\w\+\/\=]/g, "");
-  for (var i = 0; i < input.length; ) {
-    e1 = Base64_map.indexOf(input.charAt(i++));
-    e2 = Base64_map.indexOf(input.charAt(i++));
-    c1 = e1 << 2 | e2 >> 4;
-    o += String.fromCharCode(c1);
-    e3 = Base64_map.indexOf(input.charAt(i++));
-    c2 = (e2 & 15) << 4 | e3 >> 2;
-    if (e3 !== 64) {
-      o += String.fromCharCode(c2);
-    }
-    e4 = Base64_map.indexOf(input.charAt(i++));
-    c3 = (e3 & 3) << 6 | e4;
-    if (e4 !== 64) {
-      o += String.fromCharCode(c3);
-    }
-  }
-  return o;
-}
-var has_buf = (function() { return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node; })();
-
-var Buffer_from = (function() {
-	if(typeof Buffer !== 'undefined') {
-		var nbfs = !Buffer.from;
-		if(!nbfs) try { Buffer.from("foo", "utf8"); } catch(e) { nbfs = true; }
-		return nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);
-	}
-	return function() {};
-})();
-var buf_utf16le = (function() {
-	if(typeof Buffer === 'undefined') return false;
-	var x = Buffer_from([65,0]);
-	if(!x) return false;
-	var o = x.toString("utf16le");
-	return o.length == 1;
-})();
-
-
-function new_raw_buf(len) {
-	/* jshint -W056 */
-	if(has_buf) return Buffer.alloc ? Buffer.alloc(len) : new Buffer(len);
-	return typeof Uint8Array != "undefined" ? new Uint8Array(len) : new Array(len);
-	/* jshint +W056 */
-}
-
-function new_unsafe_buf(len) {
-	/* jshint -W056 */
-	if(has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);
-	return typeof Uint8Array != "undefined" ? new Uint8Array(len) : new Array(len);
-	/* jshint +W056 */
-}
-
-var s2a = function s2a(s) {
-	if(has_buf) return Buffer_from(s, "binary");
-	return s.split("").map(function(x){ return x.charCodeAt(0) & 0xff; });
-};
-
-function s2ab(s) {
-	if(typeof ArrayBuffer === 'undefined') return s2a(s);
-	var buf = new ArrayBuffer(s.length), view = new Uint8Array(buf);
-	for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
-	return buf;
-}
-
-function a2s(data) {
-	if(Array.isArray(data)) return data.map(function(c) { return String.fromCharCode(c); }).join("");
-	var o = []; for(var i = 0; i < data.length; ++i) o[i] = String.fromCharCode(data[i]); return o.join("");
-}
-
-function a2u(data) {
-	if(typeof Uint8Array === 'undefined') throw new Error("Unsupported");
-	return new Uint8Array(data);
-}
-
-function ab2a(data) {
-	if(typeof ArrayBuffer == 'undefined') throw new Error("Unsupported");
-	if(data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));
-var o = new Array(data.length);
-	for(var i = 0; i < data.length; ++i) o[i] = data[i];
-	return o;
-}
-
-var bconcat = has_buf ? function(bufs) { return Buffer.concat(bufs.map(function(buf) { return Buffer.isBuffer(buf) ? buf : Buffer_from(buf); })); } : function(bufs) {
-	if(typeof Uint8Array !== "undefined") {
-		var i = 0, maxlen = 0;
-		for(i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;
-		var o = new Uint8Array(maxlen);
-		var len = 0;
-		for(i = 0, maxlen = 0; i < bufs.length; maxlen += len, ++i) {
-			len = bufs[i].length;
-			if(bufs[i] instanceof Uint8Array) o.set(bufs[i], maxlen);
-			else if(typeof bufs[i] == "string") o.set(new Uint8Array(s2a(bufs[i])), maxlen);
-			else o.set(new Uint8Array(bufs[i]), maxlen);
-		}
-		return o;
-	}
-	return [].concat.apply([], bufs.map(function(buf) { return Array.isArray(buf) ? buf : [].slice.call(buf); }));
-};
-
-function utf8decode(content) {
-	var out = [], widx = 0, L = content.length + 250;
-	var o = new_raw_buf(content.length + 255);
-	for(var ridx = 0; ridx < content.length; ++ridx) {
-		var c = content.charCodeAt(ridx);
-		if(c < 0x80) o[widx++] = c;
-		else if(c < 0x800) {
-			o[widx++] = (192|((c>>6)&31));
-			o[widx++] = (128|(c&63));
-		} else if(c >= 0xD800 && c < 0xE000) {
-			c = (c&1023)+64;
-			var d = content.charCodeAt(++ridx)&1023;
-			o[widx++] = (240|((c>>8)&7));
-			o[widx++] = (128|((c>>2)&63));
-			o[widx++] = (128|((d>>6)&15)|((c&3)<<4));
-			o[widx++] = (128|(d&63));
-		} else {
-			o[widx++] = (224|((c>>12)&15));
-			o[widx++] = (128|((c>>6)&63));
-			o[widx++] = (128|(c&63));
-		}
-		if(widx > L) {
-			out.push(o.slice(0, widx));
-			widx = 0;
-			o = new_raw_buf(65535);
-			L = 65530;
-		}
-	}
-	out.push(o.slice(0, widx));
-	return bconcat(out);
-}
-
-var chr0 = /\u0000/g, chr1 = /[\u0001-\u0006]/g;
-/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */
-/*jshint -W041 */
-function _strrev(x) { var o = "", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }
-function pad0(v,d){var t=""+v; return t.length>=d?t:fill('0',d-t.length)+t;}
-function pad_(v,d){var t=""+v;return t.length>=d?t:fill(' ',d-t.length)+t;}
-function rpad_(v,d){var t=""+v; return t.length>=d?t:t+fill(' ',d-t.length);}
-function pad0r1(v,d){var t=""+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}
-function pad0r2(v,d){var t=""+v; return t.length>=d?t:fill('0',d-t.length)+t;}
-var p2_32 = Math.pow(2,32);
-function pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }
-/* yes, in 2022 this is still faster than string compare */
-function SSF_isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }
-var days = [
-	['Sun', 'Sunday'],
-	['Mon', 'Monday'],
-	['Tue', 'Tuesday'],
-	['Wed', 'Wednesday'],
-	['Thu', 'Thursday'],
-	['Fri', 'Friday'],
-	['Sat', 'Saturday']
-];
-var months = [
-	['J', 'Jan', 'January'],
-	['F', 'Feb', 'February'],
-	['M', 'Mar', 'March'],
-	['A', 'Apr', 'April'],
-	['M', 'May', 'May'],
-	['J', 'Jun', 'June'],
-	['J', 'Jul', 'July'],
-	['A', 'Aug', 'August'],
-	['S', 'Sep', 'September'],
-	['O', 'Oct', 'October'],
-	['N', 'Nov', 'November'],
-	['D', 'Dec', 'December']
-];
-function SSF_init_table(t) {
-	if(!t) t = {};
-	t[0]=  'General';
-	t[1]=  '0';
-	t[2]=  '0.00';
-	t[3]=  '#,##0';
-	t[4]=  '#,##0.00';
-	t[9]=  '0%';
-	t[10]= '0.00%';
-	t[11]= '0.00E+00';
-	t[12]= '# ?/?';
-	t[13]= '# ??/??';
-	t[14]= 'm/d/yy';
-	t[15]= 'd-mmm-yy';
-	t[16]= 'd-mmm';
-	t[17]= 'mmm-yy';
-	t[18]= 'h:mm AM/PM';
-	t[19]= 'h:mm:ss AM/PM';
-	t[20]= 'h:mm';
-	t[21]= 'h:mm:ss';
-	t[22]= 'm/d/yy h:mm';
-	t[37]= '#,##0 ;(#,##0)';
-	t[38]= '#,##0 ;[Red](#,##0)';
-	t[39]= '#,##0.00;(#,##0.00)';
-	t[40]= '#,##0.00;[Red](#,##0.00)';
-	t[45]= 'mm:ss';
-	t[46]= '[h]:mm:ss';
-	t[47]= 'mmss.0';
-	t[48]= '##0.0E+0';
-	t[49]= '@';
-	t[56]= '"ä¸å/ä¸å "hh"æ"mm"å"ss"ç§ "';
-	return t;
-}
-/* repeated to satiate webpack */
-var table_fmt = {
-	0:  'General',
-	1:  '0',
-	2:  '0.00',
-	3:  '#,##0',
-	4:  '#,##0.00',
-	9:  '0%',
-	10: '0.00%',
-	11: '0.00E+00',
-	12: '# ?/?',
-	13: '# ??/??',
-	14: 'm/d/yy',
-	15: 'd-mmm-yy',
-	16: 'd-mmm',
-	17: 'mmm-yy',
-	18: 'h:mm AM/PM',
-	19: 'h:mm:ss AM/PM',
-	20: 'h:mm',
-	21: 'h:mm:ss',
-	22: 'm/d/yy h:mm',
-	37: '#,##0 ;(#,##0)',
-	38: '#,##0 ;[Red](#,##0)',
-	39: '#,##0.00;(#,##0.00)',
-	40: '#,##0.00;[Red](#,##0.00)',
-	45: 'mm:ss',
-	46: '[h]:mm:ss',
-	47: 'mmss.0',
-	48: '##0.0E+0',
-	49: '@',
-	56: '"ä¸å/ä¸å "hh"æ"mm"å"ss"ç§ "'
-};
-
-/* Defaults determined by systematically testing in Excel 2019 */
-
-/* These formats appear to default to other formats in the table */
-var SSF_default_map = {
-	5:  37, 6:  38, 7:  39, 8:  40,         //  5 -> 37 ...  8 -> 40
-
-	23:  0, 24:  0, 25:  0, 26:  0,         // 23 ->  0 ... 26 ->  0
-
-	27: 14, 28: 14, 29: 14, 30: 14, 31: 14, // 27 -> 14 ... 31 -> 14
-
-	50: 14, 51: 14, 52: 14, 53: 14, 54: 14, // 50 -> 14 ... 58 -> 14
-	55: 14, 56: 14, 57: 14, 58: 14,
-	59:  1, 60:  2, 61:  3, 62:  4,         // 59 ->  1 ... 62 ->  4
-
-	67:  9, 68: 10,                         // 67 ->  9 ... 68 -> 10
-	69: 12, 70: 13, 71: 14,                 // 69 -> 12 ... 71 -> 14
-	72: 14, 73: 15, 74: 16, 75: 17,         // 72 -> 14 ... 75 -> 17
-	76: 20, 77: 21, 78: 22,                 // 76 -> 20 ... 78 -> 22
-	79: 45, 80: 46, 81: 47,                 // 79 -> 45 ... 81 -> 47
-	82: 0                                   // 82 ->  0 ... 65536 -> 0 (omitted)
-};
-
-
-/* These formats technically refer to Accounting formats with no equivalent */
-var SSF_default_str = {
-	//  5 -- Currency,   0 decimal, black negative
-	5:  '"$"#,##0_);\\("$"#,##0\\)',
-	63: '"$"#,##0_);\\("$"#,##0\\)',
-
-	//  6 -- Currency,   0 decimal, red   negative
-	6:  '"$"#,##0_);[Red]\\("$"#,##0\\)',
-	64: '"$"#,##0_);[Red]\\("$"#,##0\\)',
-
-	//  7 -- Currency,   2 decimal, black negative
-	7:  '"$"#,##0.00_);\\("$"#,##0.00\\)',
-	65: '"$"#,##0.00_);\\("$"#,##0.00\\)',
-
-	//  8 -- Currency,   2 decimal, red   negative
-	8:  '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',
-	66: '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',
-
-	// 41 -- Accounting, 0 decimal, No Symbol
-	41: '_(* #,##0_);_(* \\(#,##0\\);_(* "-"_);_(@_)',
-
-	// 42 -- Accounting, 0 decimal, $  Symbol
-	42: '_("$"* #,##0_);_("$"* \\(#,##0\\);_("$"* "-"_);_(@_)',
-
-	// 43 -- Accounting, 2 decimal, No Symbol
-	43: '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* "-"??_);_(@_)',
-
-	// 44 -- Accounting, 2 decimal, $  Symbol
-	44: '_("$"* #,##0.00_);_("$"* \\(#,##0.00\\);_("$"* "-"??_);_(@_)'
-};
-
-function SSF_frac(x, D, mixed) {
-	var sgn = x < 0 ? -1 : 1;
-	var B = x * sgn;
-	var P_2 = 0, P_1 = 1, P = 0;
-	var Q_2 = 1, Q_1 = 0, Q = 0;
-	var A = Math.floor(B);
-	while(Q_1 < D) {
-		A = Math.floor(B);
-		P = A * P_1 + P_2;
-		Q = A * Q_1 + Q_2;
-		if((B - A) < 0.00000005) break;
-		B = 1 / (B - A);
-		P_2 = P_1; P_1 = P;
-		Q_2 = Q_1; Q_1 = Q;
-	}
-	if(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }
-	if(!mixed) return [0, sgn * P, Q];
-	var q = Math.floor(sgn * P/Q);
-	return [q, sgn*P - q*Q, Q];
-}
-function SSF_parse_date_code(v,opts,b2) {
-	if(v > 2958465 || v < 0) return null;
-	var date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;
-	var dout=[];
-	var out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};
-	if(Math.abs(out.u) < 1e-6) out.u = 0;
-	if(opts && opts.date1904) date += 1462;
-	if(out.u > 0.9999) {
-		out.u = 0;
-		if(++time == 86400) { out.T = time = 0; ++date; ++out.D; }
-	}
-	if(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}
-	else if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}
-	else {
-		if(date > 60) --date;
-		/* 1 = Jan 1 1900 in Gregorian */
-		var d = new Date(1900, 0, 1);
-		d.setDate(d.getDate() + date - 1);
-		dout = [d.getFullYear(), d.getMonth()+1,d.getDate()];
-		dow = d.getDay();
-		if(date < 60) dow = (dow + 6) % 7;
-		if(b2) dow = SSF_fix_hijri(d, dout);
-	}
-	out.y = dout[0]; out.m = dout[1]; out.d = dout[2];
-	out.S = time % 60; time = Math.floor(time / 60);
-	out.M = time % 60; time = Math.floor(time / 60);
-	out.H = time;
-	out.q = dow;
-	return out;
-}
-var SSFbasedate = new Date(1899, 11, 31, 0, 0, 0);
-var SSFdnthresh = SSFbasedate.getTime();
-var SSFbase1904 = new Date(1900, 2, 1, 0, 0, 0);
-function datenum_local(v, date1904) {
-	var epoch = v.getTime();
-	if(date1904) epoch -= 1461*24*60*60*1000;
-	else if(v >= SSFbase1904) epoch += 24*60*60*1000;
-	return (epoch - (SSFdnthresh + (v.getTimezoneOffset() - SSFbasedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);
-}
-/* ECMA-376 18.8.30 numFmt*/
-/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */
-/* exponent >= -9 and <= 9 */
-function SSF_strip_decimal(o) {
-	return (o.indexOf(".") == -1) ? o : o.replace(/(?:\.0*|(\.\d*[1-9])0+)$/, "$1");
-}
-
-/* General Exponential always shows 2 digits exp and trims the mantissa */
-function SSF_normalize_exp(o) {
-	if(o.indexOf("E") == -1) return o;
-	return o.replace(/(?:\.0*|(\.\d*[1-9])0+)[Ee]/,"$1E").replace(/(E[+-])(\d)$/,"$10$2");
-}
-
-/* exponent >= -9 and <= 9 */
-function SSF_small_exp(v) {
-	var w = (v<0?12:11);
-	var o = SSF_strip_decimal(v.toFixed(12)); if(o.length <= w) return o;
-	o = v.toPrecision(10); if(o.length <= w) return o;
-	return v.toExponential(5);
-}
-
-/* exponent >= 11 or <= -10 likely exponential */
-function SSF_large_exp(v) {
-	var o = SSF_strip_decimal(v.toFixed(11));
-	return (o.length > (v<0?12:11) || o === "0" || o === "-0") ? v.toPrecision(6) : o;
-}
-
-function SSF_general_num(v) {
-	var V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;
-
-	if(V >= -4 && V <= -1) o = v.toPrecision(10+V);
-	else if(Math.abs(V) <= 9) o = SSF_small_exp(v);
-	else if(V === 10) o = v.toFixed(10).substr(0,12);
-	else o = SSF_large_exp(v);
-
-	return SSF_strip_decimal(SSF_normalize_exp(o.toUpperCase()));
-}
-
-
-/*
-	"General" rules:
-	- text is passed through ("@")
-	- booleans are rendered as TRUE/FALSE
-	- "up to 11 characters" displayed for numbers
-	- Default date format (code 14) used for Dates
-
-	The longest 32-bit integer text is "-2147483648", exactly 11 chars
-	TODO: technically the display depends on the width of the cell
-*/
-function SSF_general(v, opts) {
-	switch(typeof v) {
-		case 'string': return v;
-		case 'boolean': return v ? "TRUE" : "FALSE";
-		case 'number': return (v|0) === v ? v.toString(10) : SSF_general_num(v);
-		case 'undefined': return "";
-		case 'object':
-			if(v == null) return "";
-			if(v instanceof Date) return SSF_format(14, datenum_local(v, opts && opts.date1904), opts);
-	}
-	throw new Error("unsupported value in General format: " + v);
-}
-
-function SSF_fix_hijri(date, o) {
-  /* TODO: properly adjust y/m/d and  */
-  o[0] -= 581;
-  var dow = date.getDay();
-  if(date < 60) dow = (dow + 6) % 7;
-  return dow;
-}
-//var THAI_DIGITS = "\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59".split("");
-function SSF_write_date(type, fmt, val, ss0) {
-	var o="", ss=0, tt=0, y = val.y, out, outl = 0;
-	switch(type) {
-		case 98: /* 'b' buddhist year */
-			y = val.y + 543;
-			/* falls through */
-		case 121: /* 'y' year */
-		switch(fmt.length) {
-			case 1: case 2: out = y % 100; outl = 2; break;
-			default: out = y % 10000; outl = 4; break;
-		} break;
-		case 109: /* 'm' month */
-		switch(fmt.length) {
-			case 1: case 2: out = val.m; outl = fmt.length; break;
-			case 3: return months[val.m-1][1];
-			case 5: return months[val.m-1][0];
-			default: return months[val.m-1][2];
-		} break;
-		case 100: /* 'd' day */
-		switch(fmt.length) {
-			case 1: case 2: out = val.d; outl = fmt.length; break;
-			case 3: return days[val.q][0];
-			default: return days[val.q][1];
-		} break;
-		case 104: /* 'h' 12-hour */
-		switch(fmt.length) {
-			case 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;
-			default: throw 'bad hour format: ' + fmt;
-		} break;
-		case 72: /* 'H' 24-hour */
-		switch(fmt.length) {
-			case 1: case 2: out = val.H; outl = fmt.length; break;
-			default: throw 'bad hour format: ' + fmt;
-		} break;
-		case 77: /* 'M' minutes */
-		switch(fmt.length) {
-			case 1: case 2: out = val.M; outl = fmt.length; break;
-			default: throw 'bad minute format: ' + fmt;
-		} break;
-		case 115: /* 's' seconds */
-			if(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;
-			if(val.u === 0 && (fmt == "s" || fmt == "ss")) return pad0(val.S, fmt.length);
-if(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;
-			else tt = ss0 === 1 ? 10 : 1;
-			ss = Math.round((tt)*(val.S + val.u));
-			if(ss >= 60*tt) ss = 0;
-			if(fmt === 's') return ss === 0 ? "0" : ""+ss/tt;
-			o = pad0(ss,2 + ss0);
-			if(fmt === 'ss') return o.substr(0,2);
-			return "." + o.substr(2,fmt.length-1);
-		case 90: /* 'Z' absolute time */
-		switch(fmt) {
-			case '[h]': case '[hh]': out = val.D*24+val.H; break;
-			case '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;
-			case '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;
-			default: throw 'bad abstime format: ' + fmt;
-		} outl = fmt.length === 3 ? 1 : 2; break;
-		case 101: /* 'e' era */
-			out = y; outl = 1; break;
-	}
-	var outstr = outl > 0 ? pad0(out, outl) : "";
-	return outstr;
-}
-
-
-/*jshint -W086 */
-/*jshint +W086 */
-function commaify(s) {
-	var w = 3;
-	if(s.length <= w) return s;
-	var j = (s.length % w), o = s.substr(0,j);
-	for(; j!=s.length; j+=w) o+=(o.length > 0 ? "," : "") + s.substr(j,w);
-	return o;
-}
-var pct1 = /%/g;
-function write_num_pct(type, fmt, val){
-	var sfmt = fmt.replace(pct1,""), mul = fmt.length - sfmt.length;
-	return write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill("%",mul);
-}
-
-function write_num_cm(type, fmt, val){
-	var idx = fmt.length - 1;
-	while(fmt.charCodeAt(idx-1) === 44) --idx;
-	return write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));
-}
-
-function write_num_exp(fmt, val){
-	var o;
-	var idx = fmt.indexOf("E") - fmt.indexOf(".") - 1;
-	if(fmt.match(/^#+0.0E\+0$/)) {
-		if(val == 0) return "0.0E+0";
-		else if(val < 0) return "-" + write_num_exp(fmt, -val);
-		var period = fmt.indexOf("."); if(period === -1) period=fmt.indexOf('E');
-		var ee = Math.floor(Math.log(val)*Math.LOG10E)%period;
-		if(ee < 0) ee += period;
-		o = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);
-		if(o.indexOf("e") === -1) {
-			var fakee = Math.floor(Math.log(val)*Math.LOG10E);
-			if(o.indexOf(".") === -1) o = o.charAt(0) + "." + o.substr(1) + "E+" + (fakee - o.length+ee);
-			else o += "E+" + (fakee - ee);
-			while(o.substr(0,2) === "0.") {
-				o = o.charAt(0) + o.substr(2,period) + "." + o.substr(2+period);
-				o = o.replace(/^0+([1-9])/,"$1").replace(/^0+\./,"0.");
-			}
-			o = o.replace(/\+-/,"-");
-		}
-		o = o.replace(/^([+-]?)(\d*)\.(\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + "." + $3.substr(ee) + "E"; });
-	} else o = val.toExponential(idx);
-	if(fmt.match(/E\+00$/) && o.match(/e[+-]\d$/)) o = o.substr(0,o.length-1) + "0" + o.charAt(o.length-1);
-	if(fmt.match(/E\-/) && o.match(/e\+/)) o = o.replace(/e\+/,"e");
-	return o.replace("e","E");
-}
-var frac1 = /# (\?+)( ?)\/( ?)(\d+)/;
-function write_num_f1(r, aval, sign) {
-	var den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);
-	var myn = (rr - base*den), myd = den;
-	return sign + (base === 0 ? "" : ""+base) + " " + (myn === 0 ? fill(" ", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + "/" + r[3] + pad0(myd,r[4].length));
-}
-function write_num_f2(r, aval, sign) {
-	return sign + (aval === 0 ? "" : ""+aval) + fill(" ", r[1].length + 2 + r[4].length);
-}
-var dec1 = /^#*0*\.([0#]+)/;
-var closeparen = /\).*[0#]/;
-var phone = /\(###\) ###\\?-####/;
-function hashq(str) {
-	var o = "", cc;
-	for(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {
-		case 35: break;
-		case 63: o+= " "; break;
-		case 48: o+= "0"; break;
-		default: o+= String.fromCharCode(cc);
-	}
-	return o;
-}
-function rnd(val, d) { var dd = Math.pow(10,d); return ""+(Math.round(val * dd)/dd); }
-function dec(val, d) {
-	var _frac = val - Math.floor(val), dd = Math.pow(10,d);
-	if (d < ('' + Math.round(_frac * dd)).length) return 0;
-	return Math.round(_frac * dd);
-}
-function carry(val, d) {
-	if (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {
-		return 1;
-	}
-	return 0;
-}
-function flr(val) {
-	if(val < 2147483647 && val > -2147483648) return ""+(val >= 0 ? (val|0) : (val-1|0));
-	return ""+Math.floor(val);
-}
-function write_num_flt(type, fmt, val) {
-	if(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {
-		var ffmt = fmt.replace(/\( */,"").replace(/ \)/,"").replace(/\)/,"");
-		if(val >= 0) return write_num_flt('n', ffmt, val);
-		return '(' + write_num_flt('n', ffmt, -val) + ')';
-	}
-	if(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);
-	if(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);
-	if(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);
-	if(fmt.charCodeAt(0) === 36) return "$"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);
-	var o;
-	var r, ri, ff, aval = Math.abs(val), sign = val < 0 ? "-" : "";
-	if(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);
-	if(fmt.match(/^[#?]+$/)) {
-		o = pad0r(val,0); if(o === "0") o = "";
-		return o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;
-	}
-	if((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);
-	if(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf("0"));
-	if((r = fmt.match(dec1))) {
-		o = rnd(val, r[1].length).replace(/^([^\.]+)$/,"$1."+hashq(r[1])).replace(/\.$/,"."+hashq(r[1])).replace(/\.(\d*)$/,function($$, $1) { return "." + $1 + fill("0", hashq(r[1]).length-$1.length); });
-		return fmt.indexOf("0.") !== -1 ? o : o.replace(/^0\./,".");
-	}
-	fmt = fmt.replace(/^#+([0.])/, "$1");
-	if((r = fmt.match(/^(0*)\.(#*)$/))) {
-		return sign + rnd(aval, r[2].length).replace(/\.(\d*[1-9])0*$/,".$1").replace(/^(-?\d*)$/,"$1.").replace(/^0\./,r[1].length?"0.":".");
-	}
-	if((r = fmt.match(/^#{1,3},##0(\.?)$/))) return sign + commaify(pad0r(aval,0));
-	if((r = fmt.match(/^#,##0\.([#0]*0)$/))) {
-		return val < 0 ? "-" + write_num_flt(type, fmt, -val) : commaify(""+(Math.floor(val) + carry(val, r[1].length))) + "." + pad0(dec(val, r[1].length),r[1].length);
-	}
-	if((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,""),val);
-	if((r = fmt.match(/^([0#]+)(\\?-([0#]+))+$/))) {
-		o = _strrev(write_num_flt(type, fmt.replace(/[\\-]/g,""), val));
-		ri = 0;
-		return _strrev(_strrev(fmt.replace(/\\/g,"")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':"";}));
-	}
-	if(fmt.match(phone)) {
-		o = write_num_flt(type, "##########", val);
-		return "(" + o.substr(0,3) + ") " + o.substr(3, 3) + "-" + o.substr(6);
-	}
-	var oa = "";
-	if((r = fmt.match(/^([#0?]+)( ?)\/( ?)([#0?]+)/))) {
-		ri = Math.min(r[4].length,7);
-		ff = SSF_frac(aval, Math.pow(10,ri)-1, false);
-		o = "" + sign;
-		oa = write_num("n", r[1], ff[1]);
-		if(oa.charAt(oa.length-1) == " ") oa = oa.substr(0,oa.length-1) + "0";
-		o += oa + r[2] + "/" + r[3];
-		oa = rpad_(ff[2],ri);
-		if(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;
-		o += oa;
-		return o;
-	}
-	if((r = fmt.match(/^# ([#0?]+)( ?)\/( ?)([#0?]+)/))) {
-		ri = Math.min(Math.max(r[1].length, r[4].length),7);
-		ff = SSF_frac(aval, Math.pow(10,ri)-1, true);
-		return sign + (ff[0]||(ff[1] ? "" : "0")) + " " + (ff[1] ? pad_(ff[1],ri) + r[2] + "/" + r[3] + rpad_(ff[2],ri): fill(" ", 2*ri+1 + r[2].length + r[3].length));
-	}
-	if((r = fmt.match(/^[#0?]+$/))) {
-		o = pad0r(val, 0);
-		if(fmt.length <= o.length) return o;
-		return hashq(fmt.substr(0,fmt.length-o.length)) + o;
-	}
-	if((r = fmt.match(/^([#0?]+)\.([#0]+)$/))) {
-		o = "" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,"$1");
-		ri = o.indexOf(".");
-		var lres = fmt.indexOf(".") - ri, rres = fmt.length - o.length - lres;
-		return hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));
-	}
-	if((r = fmt.match(/^00,000\.([#0]*0)$/))) {
-		ri = dec(val, r[1].length);
-		return val < 0 ? "-" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\d,\d{3}$/,"0$&").replace(/^\d*$/,function($$) { return "00," + ($$.length < 3 ? pad0(0,3-$$.length) : "") + $$; }) + "." + pad0(ri,r[1].length);
-	}
-	switch(fmt) {
-		case "###,##0.00": return write_num_flt(type, "#,##0.00", val);
-		case "###,###":
-		case "##,###":
-		case "#,###": var x = commaify(pad0r(aval,0)); return x !== "0" ? sign + x : "";
-		case "###,###.00": return write_num_flt(type, "###,##0.00",val).replace(/^0\./,".");
-		case "#,###.00": return write_num_flt(type, "#,##0.00",val).replace(/^0\./,".");
-		default:
-	}
-	throw new Error("unsupported format |" + fmt + "|");
-}
-function write_num_cm2(type, fmt, val){
-	var idx = fmt.length - 1;
-	while(fmt.charCodeAt(idx-1) === 44) --idx;
-	return write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));
-}
-function write_num_pct2(type, fmt, val){
-	var sfmt = fmt.replace(pct1,""), mul = fmt.length - sfmt.length;
-	return write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill("%",mul);
-}
-function write_num_exp2(fmt, val){
-	var o;
-	var idx = fmt.indexOf("E") - fmt.indexOf(".") - 1;
-	if(fmt.match(/^#+0.0E\+0$/)) {
-		if(val == 0) return "0.0E+0";
-		else if(val < 0) return "-" + write_num_exp2(fmt, -val);
-		var period = fmt.indexOf("."); if(period === -1) period=fmt.indexOf('E');
-		var ee = Math.floor(Math.log(val)*Math.LOG10E)%period;
-		if(ee < 0) ee += period;
-		o = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);
-		if(!o.match(/[Ee]/)) {
-			var fakee = Math.floor(Math.log(val)*Math.LOG10E);
-			if(o.indexOf(".") === -1) o = o.charAt(0) + "." + o.substr(1) + "E+" + (fakee - o.length+ee);
-			else o += "E+" + (fakee - ee);
-			o = o.replace(/\+-/,"-");
-		}
-		o = o.replace(/^([+-]?)(\d*)\.(\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + "." + $3.substr(ee) + "E"; });
-	} else o = val.toExponential(idx);
-	if(fmt.match(/E\+00$/) && o.match(/e[+-]\d$/)) o = o.substr(0,o.length-1) + "0" + o.charAt(o.length-1);
-	if(fmt.match(/E\-/) && o.match(/e\+/)) o = o.replace(/e\+/,"e");
-	return o.replace("e","E");
-}
-function write_num_int(type, fmt, val) {
-	if(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {
-		var ffmt = fmt.replace(/\( */,"").replace(/ \)/,"").replace(/\)/,"");
-		if(val >= 0) return write_num_int('n', ffmt, val);
-		return '(' + write_num_int('n', ffmt, -val) + ')';
-	}
-	if(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);
-	if(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);
-	if(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);
-	if(fmt.charCodeAt(0) === 36) return "$"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);
-	var o;
-	var r, ri, ff, aval = Math.abs(val), sign = val < 0 ? "-" : "";
-	if(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);
-	if(fmt.match(/^[#?]+$/)) {
-		o = (""+val); if(val === 0) o = "";
-		return o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;
-	}
-	if((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);
-	if(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf("0"));
-	if((r = fmt.match(dec1))) {
-o = (""+val).replace(/^([^\.]+)$/,"$1."+hashq(r[1])).replace(/\.$/,"."+hashq(r[1]));
-		o = o.replace(/\.(\d*)$/,function($$, $1) {
-return "." + $1 + fill("0", hashq(r[1]).length-$1.length); });
-		return fmt.indexOf("0.") !== -1 ? o : o.replace(/^0\./,".");
-	}
-	fmt = fmt.replace(/^#+([0.])/, "$1");
-	if((r = fmt.match(/^(0*)\.(#*)$/))) {
-		return sign + (""+aval).replace(/\.(\d*[1-9])0*$/,".$1").replace(/^(-?\d*)$/,"$1.").replace(/^0\./,r[1].length?"0.":".");
-	}
-	if((r = fmt.match(/^#{1,3},##0(\.?)$/))) return sign + commaify((""+aval));
-	if((r = fmt.match(/^#,##0\.([#0]*0)$/))) {
-		return val < 0 ? "-" + write_num_int(type, fmt, -val) : commaify((""+val)) + "." + fill('0',r[1].length);
-	}
-	if((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,""),val);
-	if((r = fmt.match(/^([0#]+)(\\?-([0#]+))+$/))) {
-		o = _strrev(write_num_int(type, fmt.replace(/[\\-]/g,""), val));
-		ri = 0;
-		return _strrev(_strrev(fmt.replace(/\\/g,"")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':"";}));
-	}
-	if(fmt.match(phone)) {
-		o = write_num_int(type, "##########", val);
-		return "(" + o.substr(0,3) + ") " + o.substr(3, 3) + "-" + o.substr(6);
-	}
-	var oa = "";
-	if((r = fmt.match(/^([#0?]+)( ?)\/( ?)([#0?]+)/))) {
-		ri = Math.min(r[4].length,7);
-		ff = SSF_frac(aval, Math.pow(10,ri)-1, false);
-		o = "" + sign;
-		oa = write_num("n", r[1], ff[1]);
-		if(oa.charAt(oa.length-1) == " ") oa = oa.substr(0,oa.length-1) + "0";
-		o += oa + r[2] + "/" + r[3];
-		oa = rpad_(ff[2],ri);
-		if(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;
-		o += oa;
-		return o;
-	}
-	if((r = fmt.match(/^# ([#0?]+)( ?)\/( ?)([#0?]+)/))) {
-		ri = Math.min(Math.max(r[1].length, r[4].length),7);
-		ff = SSF_frac(aval, Math.pow(10,ri)-1, true);
-		return sign + (ff[0]||(ff[1] ? "" : "0")) + " " + (ff[1] ? pad_(ff[1],ri) + r[2] + "/" + r[3] + rpad_(ff[2],ri): fill(" ", 2*ri+1 + r[2].length + r[3].length));
-	}
-	if((r = fmt.match(/^[#0?]+$/))) {
-		o = "" + val;
-		if(fmt.length <= o.length) return o;
-		return hashq(fmt.substr(0,fmt.length-o.length)) + o;
-	}
-	if((r = fmt.match(/^([#0]+)\.([#0]+)$/))) {
-		o = "" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,"$1");
-		ri = o.indexOf(".");
-		var lres = fmt.indexOf(".") - ri, rres = fmt.length - o.length - lres;
-		return hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));
-	}
-	if((r = fmt.match(/^00,000\.([#0]*0)$/))) {
-		return val < 0 ? "-" + write_num_int(type, fmt, -val) : commaify(""+val).replace(/^\d,\d{3}$/,"0$&").replace(/^\d*$/,function($$) { return "00," + ($$.length < 3 ? pad0(0,3-$$.length) : "") + $$; }) + "." + pad0(0,r[1].length);
-	}
-	switch(fmt) {
-		case "###,###":
-		case "##,###":
-		case "#,###": var x = commaify(""+aval); return x !== "0" ? sign + x : "";
-		default:
-			if(fmt.match(/\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(".")), val) + hashq(fmt.slice(fmt.lastIndexOf(".")));
-	}
-	throw new Error("unsupported format |" + fmt + "|");
-}
-function write_num(type, fmt, val) {
-	return (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);
-}
-function SSF_split_fmt(fmt) {
-	var out = [];
-	var in_str = false/*, cc*/;
-	for(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {
-		case 34: /* '"' */
-			in_str = !in_str; break;
-		case 95: case 42: case 92: /* '_' '*' '\\' */
-			++i; break;
-		case 59: /* ';' */
-			out[out.length] = fmt.substr(j,i-j);
-			j = i+1;
-	}
-	out[out.length] = fmt.substr(j);
-	if(in_str === true) throw new Error("Format |" + fmt + "| unterminated string ");
-	return out;
-}
-
-var SSF_abstime = /\[[HhMmSs\u0E0A\u0E19\u0E17]*\]/;
-function fmt_is_date(fmt) {
-	var i = 0, /*cc = 0,*/ c = "", o = "";
-	while(i < fmt.length) {
-		switch((c = fmt.charAt(i))) {
-			case 'G': if(SSF_isgeneral(fmt, i)) i+= 6; i++; break;
-			case '"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;
-			case '\\': i+=2; break;
-			case '_': i+=2; break;
-			case '@': ++i; break;
-			case 'B': case 'b':
-				if(fmt.charAt(i+1) === "1" || fmt.charAt(i+1) === "2") return true;
-				/* falls through */
-			case 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':
-				/* falls through */
-			case 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;
-			case 'A': case 'a': case 'ä¸':
-				if(fmt.substr(i, 3).toUpperCase() === "A/P") return true;
-				if(fmt.substr(i, 5).toUpperCase() === "AM/PM") return true;
-				if(fmt.substr(i, 5).toUpperCase() === "ä¸å/ä¸å") return true;
-				++i; break;
-			case '[':
-				o = c;
-				while(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);
-				if(o.match(SSF_abstime)) return true;
-				break;
-			case '.':
-				/* falls through */
-			case '0': case '#':
-				while(i < fmt.length && ("0#?.,E+-%".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\' && fmt.charAt(i+1) == "-" && "0#".indexOf(fmt.charAt(i+2))>-1))){/* empty */}
-				break;
-			case '?': while(fmt.charAt(++i) === c){/* empty */} break;
-			case '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;
-			case '(': case ')': ++i; break;
-			case '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':
-				while(i < fmt.length && "0123456789".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;
-			case ' ': ++i; break;
-			default: ++i; break;
-		}
-	}
-	return false;
-}
-
-function eval_fmt(fmt, v, opts, flen) {
-	var out = [], o = "", i = 0, c = "", lst='t', dt, j, cc;
-	var hr='H';
-	/* Tokenize */
-	while(i < fmt.length) {
-		switch((c = fmt.charAt(i))) {
-			case 'G': /* General */
-				if(!SSF_isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);
-				out[out.length] = {t:'G', v:'General'}; i+=7; break;
-			case '"': /* Literal text */
-				for(o="";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);
-				out[out.length] = {t:'t', v:o}; ++i; break;
-			case '\\': var w = fmt.charAt(++i), t = (w === "(" || w === ")") ? w : 't';
-				out[out.length] = {t:t, v:w}; ++i; break;
-			case '_': out[out.length] = {t:'t', v:" "}; i+=2; break;
-			case '@': /* Text Placeholder */
-				out[out.length] = {t:'T', v:v}; ++i; break;
-			case 'B': case 'b':
-				if(fmt.charAt(i+1) === "1" || fmt.charAt(i+1) === "2") {
-					if(dt==null) { dt=SSF_parse_date_code(v, opts, fmt.charAt(i+1) === "2"); if(dt==null) return ""; }
-					out[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;
-				}
-				/* falls through */
-			case 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':
-				c = c.toLowerCase();
-				/* falls through */
-			case 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':
-				if(v < 0) return "";
-				if(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return ""; }
-				o = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;
-				if(c === 'm' && lst.toLowerCase() === 'h') c = 'M';
-				if(c === 'h') c = hr;
-				out[out.length] = {t:c, v:o}; lst = c; break;
-			case 'A': case 'a': case 'ä¸':
-				var q={t:c, v:c};
-				if(dt==null) dt=SSF_parse_date_code(v, opts);
-				if(fmt.substr(i, 3).toUpperCase() === "A/P") { if(dt!=null) q.v = dt.H >= 12 ? fmt.charAt(i+2) : c; q.t = 'T'; hr='h';i+=3;}
-				else if(fmt.substr(i,5).toUpperCase() === "AM/PM") { if(dt!=null) q.v = dt.H >= 12 ? "PM" : "AM"; q.t = 'T'; i+=5; hr='h'; }
-				else if(fmt.substr(i,5).toUpperCase() === "ä¸å/ä¸å") { if(dt!=null) q.v = dt.H >= 12 ? "ä¸å" : "ä¸å"; q.t = 'T'; i+=5; hr='h'; }
-				else { q.t = "t"; ++i; }
-				if(dt==null && q.t === 'T') return "";
-				out[out.length] = q; lst = c; break;
-			case '[':
-				o = c;
-				while(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);
-				if(o.slice(-1) !== ']') throw 'unterminated "[" block: |' + o + '|';
-				if(o.match(SSF_abstime)) {
-					if(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return ""; }
-					out[out.length] = {t:'Z', v:o.toLowerCase()};
-					lst = o.charAt(1);
-				} else if(o.indexOf("$") > -1) {
-					o = (o.match(/\$([^-\[\]]*)/)||[])[1]||"$";
-					if(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};
-				}
-				break;
-			/* Numbers */
-			case '.':
-				if(dt != null) {
-					o = c; while(++i < fmt.length && (c=fmt.charAt(i)) === "0") o += c;
-					out[out.length] = {t:'s', v:o}; break;
-				}
-				/* falls through */
-			case '0': case '#':
-				o = c; while(++i < fmt.length && "0#?.,E+-%".indexOf(c=fmt.charAt(i)) > -1) o += c;
-				out[out.length] = {t:'n', v:o}; break;
-			case '?':
-				o = c; while(fmt.charAt(++i) === c) o+=c;
-				out[out.length] = {t:c, v:o}; lst = c; break;
-			case '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **
-			case '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;
-			case '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':
-				o = c; while(i < fmt.length && "0123456789".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);
-				out[out.length] = {t:'D', v:o}; break;
-			case ' ': out[out.length] = {t:c, v:c}; ++i; break;
-			case '$': out[out.length] = {t:'t', v:'$'}; ++i; break;
-			default:
-				if(",$-+/():!^&'~{}<>=â¬acfijklopqrtuvwxzP".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);
-				out[out.length] = {t:'t', v:c}; ++i; break;
-		}
-	}
-
-	/* Scan for date/time parts */
-	var bt = 0, ss0 = 0, ssm;
-	for(i=out.length-1, lst='t'; i >= 0; --i) {
-		switch(out[i].t) {
-			case 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;
-			case 's':
-				if((ssm=out[i].v.match(/\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);
-				if(bt < 3) bt = 3;
-			/* falls through */
-			case 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;
-			case 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;
-			case 'X': /*if(out[i].v === "B2");*/
-				break;
-			case 'Z':
-				if(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;
-				if(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;
-				if(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;
-		}
-	}
-	/* time rounding depends on presence of minute / second / usec fields */
-	switch(bt) {
-		case 0: break;
-		case 1:
-if(dt.u >= 0.5) { dt.u = 0; ++dt.S; }
-			if(dt.S >=  60) { dt.S = 0; ++dt.M; }
-			if(dt.M >=  60) { dt.M = 0; ++dt.H; }
-			break;
-		case 2:
-if(dt.u >= 0.5) { dt.u = 0; ++dt.S; }
-			if(dt.S >=  60) { dt.S = 0; ++dt.M; }
-			break;
-	}
-
-	/* replace fields */
-	var nstr = "", jj;
-	for(i=0; i < out.length; ++i) {
-		switch(out[i].t) {
-			case 't': case 'T': case ' ': case 'D': break;
-			case 'X': out[i].v = ""; out[i].t = ";"; break;
-			case 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':
-out[i].v = SSF_write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);
-				out[i].t = 't'; break;
-			case 'n': case '?':
-				jj = i+1;
-				while(out[jj] != null && (
-					(c=out[jj].t) === "?" || c === "D" ||
-					((c === " " || c === "t") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === "t" && out[jj+1].v === '/')) ||
-					(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||
-					(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))
-				)) {
-					out[i].v += out[jj].v;
-					out[jj] = {v:"", t:";"}; ++jj;
-				}
-				nstr += out[i].v;
-				i = jj-1; break;
-			case 'G': out[i].t = 't'; out[i].v = SSF_general(v,opts); break;
-		}
-	}
-	var vv = "", myv, ostr;
-	if(nstr.length > 0) {
-		if(nstr.charCodeAt(0) == 40) /* '(' */ {
-			myv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);
-			ostr = write_num('n', nstr, myv);
-		} else {
-			myv = (v<0 && flen > 1 ? -v : v);
-			ostr = write_num('n', nstr, myv);
-			if(myv < 0 && out[0] && out[0].t == 't') {
-				ostr = ostr.substr(1);
-				out[0].v = "-" + out[0].v;
-			}
-		}
-		jj=ostr.length-1;
-		var decpt = out.length;
-		for(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(".") > -1) { decpt = i; break; }
-		var lasti=out.length;
-		if(decpt === out.length && ostr.indexOf("E") === -1) {
-			for(i=out.length-1; i>= 0;--i) {
-				if(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;
-				if(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }
-				else if(jj < 0) out[i].v = "";
-				else { out[i].v = ostr.substr(0, jj+1); jj = -1; }
-				out[i].t = 't';
-				lasti = i;
-			}
-			if(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;
-		}
-		else if(decpt !== out.length && ostr.indexOf("E") === -1) {
-			jj = ostr.indexOf(".")-1;
-			for(i=decpt; i>= 0; --i) {
-				if(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;
-				j=out[i].v.indexOf(".")>-1&&i===decpt?out[i].v.indexOf(".")-1:out[i].v.length-1;
-				vv = out[i].v.substr(j+1);
-				for(; j>=0; --j) {
-					if(jj>=0 && (out[i].v.charAt(j) === "0" || out[i].v.charAt(j) === "#")) vv = ostr.charAt(jj--) + vv;
-				}
-				out[i].v = vv;
-				out[i].t = 't';
-				lasti = i;
-			}
-			if(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;
-			jj = ostr.indexOf(".")+1;
-			for(i=decpt; i<out.length; ++i) {
-				if(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;
-				j=out[i].v.indexOf(".")>-1&&i===decpt?out[i].v.indexOf(".")+1:0;
-				vv = out[i].v.substr(0,j);
-				for(; j<out[i].v.length; ++j) {
-					if(jj<ostr.length) vv += ostr.charAt(jj++);
-				}
-				out[i].v = vv;
-				out[i].t = 't';
-				lasti = i;
-			}
-		}
-	}
-	for(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {
-		myv = (flen >1 && v < 0 && i>0 && out[i-1].v === "-" ? -v:v);
-		out[i].v = write_num(out[i].t, out[i].v, myv);
-		out[i].t = 't';
-	}
-	var retval = "";
-	for(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;
-	return retval;
-}
-
-var cfregex2 = /\[(=|>[=]?|<[>=]?)(-?\d+(?:\.\d*)?)\]/;
-function chkcond(v, rr) {
-	if(rr == null) return false;
-	var thresh = parseFloat(rr[2]);
-	switch(rr[1]) {
-		case "=":  if(v == thresh) return true; break;
-		case ">":  if(v >  thresh) return true; break;
-		case "<":  if(v <  thresh) return true; break;
-		case "<>": if(v != thresh) return true; break;
-		case ">=": if(v >= thresh) return true; break;
-		case "<=": if(v <= thresh) return true; break;
-	}
-	return false;
-}
-function choose_fmt(f, v) {
-	var fmt = SSF_split_fmt(f);
-	var l = fmt.length, lat = fmt[l-1].indexOf("@");
-	if(l<4 && lat>-1) --l;
-	if(fmt.length > 4) throw new Error("cannot find right format for |" + fmt.join("|") + "|");
-	if(typeof v !== "number") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:"@"];
-	switch(fmt.length) {
-		case 1: fmt = lat>-1 ? ["General", "General", "General", fmt[0]] : [fmt[0], fmt[0], fmt[0], "@"]; break;
-		case 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], "@"]; break;
-		case 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], "@"]; break;
-		case 4: break;
-	}
-	var ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];
-	if(fmt[0].indexOf("[") === -1 && fmt[1].indexOf("[") === -1) return [l, ff];
-	if(fmt[0].match(/\[[=<>]/) != null || fmt[1].match(/\[[=<>]/) != null) {
-		var m1 = fmt[0].match(cfregex2);
-		var m2 = fmt[1].match(cfregex2);
-		return chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];
-	}
-	return [l, ff];
-}
-function SSF_format(fmt,v,o) {
-	if(o == null) o = {};
-	var sfmt = "";
-	switch(typeof fmt) {
-		case "string":
-			if(fmt == "m/d/yy" && o.dateNF) sfmt = o.dateNF;
-			else sfmt = fmt;
-			break;
-		case "number":
-			if(fmt == 14 && o.dateNF) sfmt = o.dateNF;
-			else sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];
-			if(sfmt == null) sfmt = (o.table && o.table[SSF_default_map[fmt]]) || table_fmt[SSF_default_map[fmt]];
-			if(sfmt == null) sfmt = SSF_default_str[fmt] || "General";
-			break;
-	}
-	if(SSF_isgeneral(sfmt,0)) return SSF_general(v, o);
-	if(v instanceof Date) v = datenum_local(v, o.date1904);
-	var f = choose_fmt(sfmt, v);
-	if(SSF_isgeneral(f[1])) return SSF_general(v, o);
-	if(v === true) v = "TRUE"; else if(v === false) v = "FALSE";
-	else if(v === "" || v == null) return "";
-	return eval_fmt(f[1], v, o, f[0]);
-}
-function SSF_load(fmt, idx) {
-	if(typeof idx != 'number') {
-		idx = +idx || -1;
-for(var i = 0; i < 0x0188; ++i) {
-if(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }
-			if(table_fmt[i] == fmt) { idx = i; break; }
-		}
-if(idx < 0) idx = 0x187;
-	}
-table_fmt[idx] = fmt;
-	return idx;
-}
-function SSF_load_table(tbl) {
-	for(var i=0; i!=0x0188; ++i)
-		if(tbl[i] !== undefined) SSF_load(tbl[i], i);
-}
-
-function make_ssf() {
-	table_fmt = SSF_init_table();
-}
-
-var SSF = {
-	format: SSF_format,
-	load: SSF_load,
-	_table: table_fmt,
-	load_table: SSF_load_table,
-	parse_date_code: SSF_parse_date_code,
-	is_date: fmt_is_date,
-	get_table: function get_table() { return SSF._table = table_fmt; }
-};
-
-var SSFImplicit/*{[number]:string}*/ = ({
-	"5": '"$"#,##0_);\\("$"#,##0\\)',
-	"6": '"$"#,##0_);[Red]\\("$"#,##0\\)',
-	"7": '"$"#,##0.00_);\\("$"#,##0.00\\)',
-	"8": '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',
-	"23": 'General', "24": 'General', "25": 'General', "26": 'General',
-	"27": 'm/d/yy', "28": 'm/d/yy', "29": 'm/d/yy', "30": 'm/d/yy', "31": 'm/d/yy',
-	"32": 'h:mm:ss', "33": 'h:mm:ss', "34": 'h:mm:ss', "35": 'h:mm:ss',
-	"36": 'm/d/yy',
-	"41": '_(* #,##0_);_(* \(#,##0\);_(* "-"_);_(@_)',
-	"42": '_("$"* #,##0_);_("$"* \(#,##0\);_("$"* "-"_);_(@_)',
-	"43": '_(* #,##0.00_);_(* \(#,##0.00\);_(* "-"??_);_(@_)',
-	"44": '_("$"* #,##0.00_);_("$"* \(#,##0.00\);_("$"* "-"??_);_(@_)',
-	"50": 'm/d/yy', "51": 'm/d/yy', "52": 'm/d/yy', "53": 'm/d/yy', "54": 'm/d/yy',
-	"55": 'm/d/yy', "56": 'm/d/yy', "57": 'm/d/yy', "58": 'm/d/yy',
-	"59": '0',
-	"60": '0.00',
-	"61": '#,##0',
-	"62": '#,##0.00',
-	"63": '"$"#,##0_);\\("$"#,##0\\)',
-	"64": '"$"#,##0_);[Red]\\("$"#,##0\\)',
-	"65": '"$"#,##0.00_);\\("$"#,##0.00\\)',
-	"66": '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)',
-	"67": '0%',
-	"68": '0.00%',
-	"69": '# ?/?',
-	"70": '# ??/??',
-	"71": 'm/d/yy',
-	"72": 'm/d/yy',
-	"73": 'd-mmm-yy',
-	"74": 'd-mmm',
-	"75": 'mmm-yy',
-	"76": 'h:mm',
-	"77": 'h:mm:ss',
-	"78": 'm/d/yy h:mm',
-	"79": 'mm:ss',
-	"80": '[h]:mm:ss',
-	"81": 'mmss.0'
-});
-
-/* dateNF parse TODO: move to SSF */
-var dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;
-function dateNF_regex(dateNF) {
-	var fmt = typeof dateNF == "number" ? table_fmt[dateNF] : dateNF;
-	fmt = fmt.replace(dateNFregex, "(\\d+)");
-	return new RegExp("^" + fmt + "$");
-}
-function dateNF_fix(str, dateNF, match) {
-	var Y = -1, m = -1, d = -1, H = -1, M = -1, S = -1;
-	(dateNF.match(dateNFregex)||[]).forEach(function(n, i) {
-		var v = parseInt(match[i+1], 10);
-		switch(n.toLowerCase().charAt(0)) {
-			case 'y': Y = v; break; case 'd': d = v; break;
-			case 'h': H = v; break; case 's': S = v; break;
-			case 'm': if(H >= 0) M = v; else m = v; break;
-		}
-	});
-	if(S >= 0 && M == -1 && m >= 0) { M = m; m = -1; }
-	var datestr = (("" + (Y>=0?Y: new Date().getFullYear())).slice(-4) + "-" + ("00" + (m>=1?m:1)).slice(-2) + "-" + ("00" + (d>=1?d:1)).slice(-2));
-	if(datestr.length == 7) datestr = "0" + datestr;
-	if(datestr.length == 8) datestr = "20" + datestr;
-	var timestr = (("00" + (H>=0?H:0)).slice(-2) + ":" + ("00" + (M>=0?M:0)).slice(-2) + ":" + ("00" + (S>=0?S:0)).slice(-2));
-	if(H == -1 && M == -1 && S == -1) return datestr;
-	if(Y == -1 && m == -1 && d == -1) return timestr;
-	return datestr + "T" + timestr;
-}
-
-/* table of bad formats written by third-party tools */
-var bad_formats = {
-	"d.m": "d\\.m" // Issue #2571 Google Sheets writes invalid format 'd.m', correct format is 'd"."m' or 'd\\.m'
-};
-
-function SSF__load(fmt, idx) {
-	return SSF_load(bad_formats[fmt] || fmt, idx);
-}
-
-/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */
-/* vim: set ts=2: */
-/*jshint eqnull:true */
-/*exported CFB */
-/*global Uint8Array:false, Uint16Array:false */
-
-/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */
-/* vim: set ts=2: */
-/*exported CRC32 */
-var CRC32 = (function() {
-var CRC32 = {};
-CRC32.version = '1.2.0';
-/* see perf/crc32table.js */
-/*global Int32Array */
-function signed_crc_table() {
-	var c = 0, table = new Array(256);
-
-	for(var n =0; n != 256; ++n){
-		c = n;
-		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
-		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
-		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
-		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
-		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
-		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
-		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
-		c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
-		table[n] = c;
-	}
-
-	return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;
-}
-
-var T0 = signed_crc_table();
-function slice_by_16_tables(T) {
-	var c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;
-
-	for(n = 0; n != 256; ++n) table[n] = T[n];
-	for(n = 0; n != 256; ++n) {
-		v = T[n];
-		for(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];
-	}
-	var out = [];
-	for(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);
-	return out;
-}
-var TT = slice_by_16_tables(T0);
-var T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];
-var T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];
-var Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];
-function crc32_bstr(bstr, seed) {
-	var C = seed ^ -1;
-	for(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];
-	return ~C;
-}
-
-function crc32_buf(B, seed) {
-	var C = seed ^ -1, L = B.length - 15, i = 0;
-	for(; i < L;) C =
-		Tf[B[i++] ^ (C & 255)] ^
-		Te[B[i++] ^ ((C >> 8) & 255)] ^
-		Td[B[i++] ^ ((C >> 16) & 255)] ^
-		Tc[B[i++] ^ (C >>> 24)] ^
-		Tb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^
-		T7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^
-		T3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];
-	L += 15;
-	while(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];
-	return ~C;
-}
-
-function crc32_str(str, seed) {
-	var C = seed ^ -1;
-	for(var i = 0, L = str.length, c = 0, d = 0; i < L;) {
-		c = str.charCodeAt(i++);
-		if(c < 0x80) {
-			C = (C>>>8) ^ T0[(C^c)&0xFF];
-		} else if(c < 0x800) {
-			C = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];
-			C = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];
-		} else if(c >= 0xD800 && c < 0xE000) {
-			c = (c&1023)+64; d = str.charCodeAt(i++)&1023;
-			C = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];
-			C = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];
-			C = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];
-			C = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];
-		} else {
-			C = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];
-			C = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];
-			C = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];
-		}
-	}
-	return ~C;
-}
-CRC32.table = T0;
-CRC32.bstr = crc32_bstr;
-CRC32.buf = crc32_buf;
-CRC32.str = crc32_str;
-return CRC32;
-})();
-/* [MS-CFB] v20171201 */
-var CFB = (function _CFB(){
-var exports = {};
-exports.version = '1.2.2';
-/* [MS-CFB] 2.6.4 */
-function namecmp(l, r) {
-	var L = l.split("/"), R = r.split("/");
-	for(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {
-		if((c = L[i].length - R[i].length)) return c;
-		if(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;
-	}
-	return L.length - R.length;
-}
-function dirname(p) {
-	if(p.charAt(p.length - 1) == "/") return (p.slice(0,-1).indexOf("/") === -1) ? p : dirname(p.slice(0, -1));
-	var c = p.lastIndexOf("/");
-	return (c === -1) ? p : p.slice(0, c+1);
-}
-
-function filename(p) {
-	if(p.charAt(p.length - 1) == "/") return filename(p.slice(0, -1));
-	var c = p.lastIndexOf("/");
-	return (c === -1) ? p : p.slice(c+1);
-}
-/* -------------------------------------------------------------------------- */
-/* DOS Date format:
-   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low
-   add 1980 to stored year
-   stored second should be doubled
-*/
-
-/* write JS date to buf as a DOS date */
-function write_dos_date(buf, date) {
-	if(typeof date === "string") date = new Date(date);
-	var hms = date.getHours();
-	hms = hms << 6 | date.getMinutes();
-	hms = hms << 5 | (date.getSeconds()>>>1);
-	buf.write_shift(2, hms);
-	var ymd = (date.getFullYear() - 1980);
-	ymd = ymd << 4 | (date.getMonth()+1);
-	ymd = ymd << 5 | date.getDate();
-	buf.write_shift(2, ymd);
-}
-
-/* read four bytes from buf and interpret as a DOS date */
-function parse_dos_date(buf) {
-	var hms = buf.read_shift(2) & 0xFFFF;
-	var ymd = buf.read_shift(2) & 0xFFFF;
-	var val = new Date();
-	var d = ymd & 0x1F; ymd >>>= 5;
-	var m = ymd & 0x0F; ymd >>>= 4;
-	val.setMilliseconds(0);
-	val.setFullYear(ymd + 1980);
-	val.setMonth(m-1);
-	val.setDate(d);
-	var S = hms & 0x1F; hms >>>= 5;
-	var M = hms & 0x3F; hms >>>= 6;
-	val.setHours(hms);
-	val.setMinutes(M);
-	val.setSeconds(S<<1);
-	return val;
-}
-function parse_extra_field(blob) {
-	prep_blob(blob, 0);
-	var o = {};
-	var flags = 0;
-	while(blob.l <= blob.length - 4) {
-		var type = blob.read_shift(2);
-		var sz = blob.read_shift(2), tgt = blob.l + sz;
-		var p = {};
-		switch(type) {
-			/* UNIX-style Timestamps */
-			case 0x5455: {
-				flags = blob.read_shift(1);
-				if(flags & 1) p.mtime = blob.read_shift(4);
-				/* for some reason, CD flag corresponds to LFH */
-				if(sz > 5) {
-					if(flags & 2) p.atime = blob.read_shift(4);
-					if(flags & 4) p.ctime = blob.read_shift(4);
-				}
-				if(p.mtime) p.mt = new Date(p.mtime*1000);
-			} break;
-			/* ZIP64 Extended Information Field */
-			case 0x0001: {
-				var sz1 = blob.read_shift(4), sz2 = blob.read_shift(4);
-				p.usz = (sz2 * Math.pow(2,32) + sz1);
-				sz1 = blob.read_shift(4); sz2 = blob.read_shift(4);
-				p.csz = (sz2 * Math.pow(2,32) + sz1);
-				// NOTE: volume fields are skipped
-			} break;
-		}
-		blob.l = tgt;
-		o[type] = p;
-	}
-	return o;
-}
-var fs;
-function get_fs() { return fs || (fs = _fs); }
-function parse(file, options) {
-if(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);
-if((file[0] | 0x20) == 0x6d && (file[1]|0x20) == 0x69) return parse_mad(file, options);
-if(file.length < 512) throw new Error("CFB file size " + file.length + " < 512");
-var mver = 3;
-var ssz = 512;
-var nmfs = 0; // number of mini FAT sectors
-var difat_sec_cnt = 0;
-var dir_start = 0;
-var minifat_start = 0;
-var difat_start = 0;
-
-var fat_addrs = []; // locations of FAT sectors
-
-/* [MS-CFB] 2.2 Compound File Header */
-var blob = file.slice(0,512);
-prep_blob(blob, 0);
-
-/* major version */
-var mv = check_get_mver(blob);
-mver = mv[0];
-switch(mver) {
-	case 3: ssz = 512; break; case 4: ssz = 4096; break;
-	case 0: if(mv[1] == 0) return parse_zip(file, options);
-	/* falls through */
-	default: throw new Error("Major Version: Expected 3 or 4 saw " + mver);
-}
-
-/* reprocess header */
-if(ssz !== 512) { blob = file.slice(0,ssz); prep_blob(blob, 28 /* blob.l */); }
-/* Save header for final object */
-var header = file.slice(0,ssz);
-
-check_shifts(blob, mver);
-
-// Number of Directory Sectors
-var dir_cnt = blob.read_shift(4, 'i');
-if(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);
-
-// Number of FAT Sectors
-blob.l += 4;
-
-// First Directory Sector Location
-dir_start = blob.read_shift(4, 'i');
-
-// Transaction Signature
-blob.l += 4;
-
-// Mini Stream Cutoff Size
-blob.chk('00100000', 'Mini Stream Cutoff Size: ');
-
-// First Mini FAT Sector Location
-minifat_start = blob.read_shift(4, 'i');
-
-// Number of Mini FAT Sectors
-nmfs = blob.read_shift(4, 'i');
-
-// First DIFAT sector location
-difat_start = blob.read_shift(4, 'i');
-
-// Number of DIFAT Sectors
-difat_sec_cnt = blob.read_shift(4, 'i');
-
-// Grab FAT Sector Locations
-for(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */
-	q = blob.read_shift(4, 'i');
-	if(q<0) break;
-	fat_addrs[j] = q;
-}
-
-/** Break the file up into sectors */
-var sectors = sectorify(file, ssz);
-
-sleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);
-
-/** Chains */
-var sector_list = make_sector_list(sectors, dir_start, fat_addrs, ssz);
-
-sector_list[dir_start].name = "!Directory";
-if(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = "!MiniFAT";
-sector_list[fat_addrs[0]].name = "!FAT";
-sector_list.fat_addrs = fat_addrs;
-sector_list.ssz = ssz;
-
-/* [MS-CFB] 2.6.1 Compound File Directory Entry */
-var files = {}, Paths = [], FileIndex = [], FullPaths = [];
-read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);
-
-build_full_paths(FileIndex, FullPaths, Paths);
-Paths.shift();
-
-var o = {
-	FileIndex: FileIndex,
-	FullPaths: FullPaths
-};
-
-// $FlowIgnore
-if(options && options.raw) o.raw = {header: header, sectors: sectors};
-return o;
-} // parse
-
-/* [MS-CFB] 2.2 Compound File Header -- read up to major version */
-function check_get_mver(blob) {
-	if(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];
-	// header signature 8
-	blob.chk(HEADER_SIGNATURE, 'Header Signature: ');
-
-	// clsid 16
-	//blob.chk(HEADER_CLSID, 'CLSID: ');
-	blob.l += 16;
-
-	// minor version 2
-	var mver = blob.read_shift(2, 'u');
-
-	return [blob.read_shift(2,'u'), mver];
-}
-function check_shifts(blob, mver) {
-	var shift = 0x09;
-
-	// Byte Order
-	//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff
-	blob.l += 2;
-
-	// Sector Shift
-	switch((shift = blob.read_shift(2))) {
-		case 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;
-		case 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;
-		default: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);
-	}
-
-	// Mini Sector Shift
-	blob.chk('0600', 'Mini Sector Shift: ');
-
-	// Reserved
-	blob.chk('000000000000', 'Reserved: ');
-}
-
-/** Break the file up into sectors */
-function sectorify(file, ssz) {
-	var nsectors = Math.ceil(file.length/ssz)-1;
-	var sectors = [];
-	for(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);
-	sectors[nsectors-1] = file.slice(nsectors*ssz);
-	return sectors;
-}
-
-/* [MS-CFB] 2.6.4 Red-Black Tree */
-function build_full_paths(FI, FP, Paths) {
-	var i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;
-	var dad = [], q = [];
-
-	for(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }
-
-	for(; j < q.length; ++j) {
-		i = q[j];
-		L = FI[i].L; R = FI[i].R; C = FI[i].C;
-		if(dad[i] === i) {
-			if(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];
-			if(R !== -1 && dad[R] !== R) dad[i] = dad[R];
-		}
-		if(C !== -1 /*NOSTREAM*/) dad[C] = i;
-		if(L !== -1 && i != dad[i]) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }
-		if(R !== -1 && i != dad[i]) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }
-	}
-	for(i=1; i < pl; ++i) if(dad[i] === i) {
-		if(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];
-		else if(L !== -1 && dad[L] !== L) dad[i] = dad[L];
-	}
-
-	for(i=1; i < pl; ++i) {
-		if(FI[i].type === 0 /* unknown */) continue;
-		j = i;
-		if(j != dad[j]) do {
-			j = dad[j];
-			FP[i] = FP[j] + "/" + FP[i];
-		} while (j !== 0 && -1 !== dad[j] && j != dad[j]);
-		dad[i] = -1;
-	}
-
-	FP[0] += "/";
-	for(i=1; i < pl; ++i) {
-		if(FI[i].type !== 2 /* stream */) FP[i] += "/";
-	}
-}
-
-function get_mfat_entry(entry, payload, mini) {
-	var start = entry.start, size = entry.size;
-	//return (payload.slice(start*MSSZ, start*MSSZ + size));
-	var o = [];
-	var idx = start;
-	while(mini && size > 0 && idx >= 0) {
-		o.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));
-		size -= MSSZ;
-		idx = __readInt32LE(mini, idx * 4);
-	}
-	if(o.length === 0) return (new_buf(0));
-	return (bconcat(o).slice(0, entry.size));
-}
-
-/** Chase down the rest of the DIFAT chain to build a comprehensive list
-    DIFAT chains by storing the next sector number as the last 32 bits */
-function sleuth_fat(idx, cnt, sectors, ssz, fat_addrs) {
-	var q = ENDOFCHAIN;
-	if(idx === ENDOFCHAIN) {
-		if(cnt !== 0) throw new Error("DIFAT chain shorter than expected");
-	} else if(idx !== -1 /*FREESECT*/) {
-		var sector = sectors[idx], m = (ssz>>>2)-1;
-		if(!sector) return;
-		for(var i = 0; i < m; ++i) {
-			if((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;
-			fat_addrs.push(q);
-		}
-		if(cnt >= 1) sleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);
-	}
-}
-
-/** Follow the linked list of sectors for a given starting point */
-function get_sector_list(sectors, start, fat_addrs, ssz, chkd) {
-	var buf = [], buf_chain = [];
-	if(!chkd) chkd = [];
-	var modulus = ssz - 1, j = 0, jj = 0;
-	for(j=start; j>=0;) {
-		chkd[j] = true;
-		buf[buf.length] = j;
-		buf_chain.push(sectors[j]);
-		var addr = fat_addrs[Math.floor(j*4/ssz)];
-		jj = ((j*4) & modulus);
-		if(ssz < 4 + jj) throw new Error("FAT boundary crossed: " + j + " 4 "+ssz);
-		if(!sectors[addr]) break;
-		j = __readInt32LE(sectors[addr], jj);
-	}
-	return {nodes: buf, data:__toBuffer([buf_chain])};
-}
-
-/** Chase down the sector linked lists */
-function make_sector_list(sectors, dir_start, fat_addrs, ssz) {
-	var sl = sectors.length, sector_list = ([]);
-	var chkd = [], buf = [], buf_chain = [];
-	var modulus = ssz - 1, i=0, j=0, k=0, jj=0;
-	for(i=0; i < sl; ++i) {
-		buf = ([]);
-		k = (i + dir_start); if(k >= sl) k-=sl;
-		if(chkd[k]) continue;
-		buf_chain = [];
-		var seen = [];
-		for(j=k; j>=0;) {
-			seen[j] = true;
-			chkd[j] = true;
-			buf[buf.length] = j;
-			buf_chain.push(sectors[j]);
-			var addr = fat_addrs[Math.floor(j*4/ssz)];
-			jj = ((j*4) & modulus);
-			if(ssz < 4 + jj) throw new Error("FAT boundary crossed: " + j + " 4 "+ssz);
-			if(!sectors[addr]) break;
-			j = __readInt32LE(sectors[addr], jj);
-			if(seen[j]) break;
-		}
-		sector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])});
-	}
-	return sector_list;
-}
-
-/* [MS-CFB] 2.6.1 Compound File Directory Entry */
-function read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, mini) {
-	var minifat_store = 0, pl = (Paths.length?2:0);
-	var sector = sector_list[dir_start].data;
-	var i = 0, namelen = 0, name;
-	for(; i < sector.length; i+= 128) {
-		var blob = sector.slice(i, i+128);
-		prep_blob(blob, 64);
-		namelen = blob.read_shift(2);
-		name = __utf16le(blob,0,namelen-pl);
-		Paths.push(name);
-		var o = ({
-			name:  name,
-			type:  blob.read_shift(1),
-			color: blob.read_shift(1),
-			L:     blob.read_shift(4, 'i'),
-			R:     blob.read_shift(4, 'i'),
-			C:     blob.read_shift(4, 'i'),
-			clsid: blob.read_shift(16),
-			state: blob.read_shift(4, 'i'),
-			start: 0,
-			size: 0
-		});
-		var ctime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);
-		if(ctime !== 0) o.ct = read_date(blob, blob.l-8);
-		var mtime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);
-		if(mtime !== 0) o.mt = read_date(blob, blob.l-8);
-		o.start = blob.read_shift(4, 'i');
-		o.size = blob.read_shift(4, 'i');
-		if(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = ""; }
-		if(o.type === 5) { /* root */
-			minifat_store = o.start;
-			if(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = "!StreamData";
-			/*minifat_size = o.size;*/
-		} else if(o.size >= 4096 /* MSCSZ */) {
-			o.storage = 'fat';
-			if(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);
-			sector_list[o.start].name = o.name;
-			o.content = (sector_list[o.start].data.slice(0,o.size));
-		} else {
-			o.storage = 'minifat';
-			if(o.size < 0) o.size = 0;
-			else if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {
-				o.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);
-			}
-		}
-		if(o.content) prep_blob(o.content, 0);
-		files[name] = o;
-		FileIndex.push(o);
-	}
-}
-
-function read_date(blob, offset) {
-	return new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);
-}
-
-function read_file(filename, options) {
-	get_fs();
-	return parse(fs.readFileSync(filename), options);
-}
-
-function read(blob, options) {
-	var type = options && options.type;
-	if(!type) {
-		if(has_buf && Buffer.isBuffer(blob)) type = "buffer";
-	}
-	switch(type || "base64") {
-		case "file": return read_file(blob, options);
-		case "base64": return parse(s2a(Base64_decode(blob)), options);
-		case "binary": return parse(s2a(blob), options);
-	}
-	return parse(blob, options);
-}
-
-function init_cfb(cfb, opts) {
-	var o = opts || {}, root = o.root || "Root Entry";
-	if(!cfb.FullPaths) cfb.FullPaths = [];
-	if(!cfb.FileIndex) cfb.FileIndex = [];
-	if(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error("inconsistent CFB structure");
-	if(cfb.FullPaths.length === 0) {
-		cfb.FullPaths[0] = root + "/";
-		cfb.FileIndex[0] = ({ name: root, type: 5 });
-	}
-	if(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;
-	seed_cfb(cfb);
-}
-function seed_cfb(cfb) {
-	var nm = "\u0001Sh33tJ5";
-	if(CFB.find(cfb, "/" + nm)) return;
-	var p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;
-	cfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }));
-	cfb.FullPaths.push(cfb.FullPaths[0] + nm);
-	rebuild_cfb(cfb);
-}
-function rebuild_cfb(cfb, f) {
-	init_cfb(cfb);
-	var gc = false, s = false;
-	for(var i = cfb.FullPaths.length - 1; i >= 0; --i) {
-		var _file = cfb.FileIndex[i];
-		switch(_file.type) {
-			case 0:
-				if(s) gc = true;
-				else { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }
-				break;
-			case 1: case 2: case 5:
-				s = true;
-				if(isNaN(_file.R * _file.L * _file.C)) gc = true;
-				if(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;
-				break;
-			default: gc = true; break;
-		}
-	}
-	if(!gc && !f) return;
-
-	var now = new Date(1987, 1, 19), j = 0;
-	// Track which names exist
-	var fullPaths = Object.create ? Object.create(null) : {};
-	var data = [];
-	for(i = 0; i < cfb.FullPaths.length; ++i) {
-		fullPaths[cfb.FullPaths[i]] = true;
-		if(cfb.FileIndex[i].type === 0) continue;
-		data.push([cfb.FullPaths[i], cfb.FileIndex[i]]);
-	}
-	for(i = 0; i < data.length; ++i) {
-		var dad = dirname(data[i][0]);
-		s = fullPaths[dad];
-		while(!s) {
-			while(dirname(dad) && !fullPaths[dirname(dad)]) dad = dirname(dad);
-
-			data.push([dad, ({
-				name: filename(dad).replace("/",""),
-				type: 1,
-				clsid: HEADER_CLSID,
-				ct: now, mt: now,
-				content: null
-			})]);
-
-			// Add name to set
-			fullPaths[dad] = true;
-
-			dad = dirname(data[i][0]);
-			s = fullPaths[dad];
-		}
-	}
-
-	data.sort(function(x,y) { return namecmp(x[0], y[0]); });
-	cfb.FullPaths = []; cfb.FileIndex = [];
-	for(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }
-	for(i = 0; i < data.length; ++i) {
-		var elt = cfb.FileIndex[i];
-		var nm = cfb.FullPaths[i];
-
-		elt.name =  filename(nm).replace("/","");
-		elt.L = elt.R = elt.C = -(elt.color = 1);
-		elt.size = elt.content ? elt.content.length : 0;
-		elt.start = 0;
-		elt.clsid = (elt.clsid || HEADER_CLSID);
-		if(i === 0) {
-			elt.C = data.length > 1 ? 1 : -1;
-			elt.size = 0;
-			elt.type = 5;
-		} else if(nm.slice(-1) == "/") {
-			for(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;
-			elt.C = j >= data.length ? -1 : j;
-			for(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;
-			elt.R = j >= data.length ? -1 : j;
-			elt.type = 1;
-		} else {
-			if(dirname(cfb.FullPaths[i+1]||"") == dirname(nm)) elt.R = i + 1;
-			elt.type = 2;
-		}
-	}
-
-}
-
-function _write(cfb, options) {
-	var _opts = options || {};
-	/* MAD is order-sensitive, skip rebuild and sort */
-	if(_opts.fileType == 'mad') return write_mad(cfb, _opts);
-	rebuild_cfb(cfb);
-	switch(_opts.fileType) {
-		case 'zip': return write_zip(cfb, _opts);
-		//case 'mad': return write_mad(cfb, _opts);
-	}
-	var L = (function(cfb){
-		var mini_size = 0, fat_size = 0;
-		for(var i = 0; i < cfb.FileIndex.length; ++i) {
-			var file = cfb.FileIndex[i];
-			if(!file.content) continue;
-			var flen = file.content.length;
-			if(flen > 0){
-				if(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;
-				else fat_size += (flen + 0x01FF) >> 9;
-			}
-		}
-		var dir_cnt = (cfb.FullPaths.length +3) >> 2;
-		var mini_cnt = (mini_size + 7) >> 3;
-		var mfat_cnt = (mini_size + 0x7F) >> 7;
-		var fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;
-		var fat_cnt = (fat_base + 0x7F) >> 7;
-		var difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);
-		while(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);
-		var L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];
-		cfb.FileIndex[0].size = mini_size << 6;
-		L[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);
-		return L;
-	})(cfb);
-	var o = new_buf(L[7] << 9);
-	var i = 0, T = 0;
-	{
-		for(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);
-		for(i = 0; i < 8; ++i) o.write_shift(2, 0);
-		o.write_shift(2, 0x003E);
-		o.write_shift(2, 0x0003);
-		o.write_shift(2, 0xFFFE);
-		o.write_shift(2, 0x0009);
-		o.write_shift(2, 0x0006);
-		for(i = 0; i < 3; ++i) o.write_shift(2, 0);
-		o.write_shift(4, 0);
-		o.write_shift(4, L[2]);
-		o.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);
-		o.write_shift(4, 0);
-		o.write_shift(4, 1<<12);
-		o.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);
-		o.write_shift(4, L[3]);
-		o.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);
-		o.write_shift(4, L[1]);
-		for(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);
-	}
-	if(L[1]) {
-		for(T = 0; T < L[1]; ++T) {
-			for(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);
-			o.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);
-		}
-	}
-	var chainit = function(w) {
-		for(T += w; i<T-1; ++i) o.write_shift(-4, i+1);
-		if(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }
-	};
-	T = i = 0;
-	for(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);
-	for(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);
-	chainit(L[3]);
-	chainit(L[4]);
-	var j = 0, flen = 0;
-	var file = cfb.FileIndex[0];
-	for(; j < cfb.FileIndex.length; ++j) {
-		file = cfb.FileIndex[j];
-		if(!file.content) continue;
-flen = file.content.length;
-		if(flen < 0x1000) continue;
-		file.start = T;
-		chainit((flen + 0x01FF) >> 9);
-	}
-	chainit((L[6] + 7) >> 3);
-	while(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);
-	T = i = 0;
-	for(j = 0; j < cfb.FileIndex.length; ++j) {
-		file = cfb.FileIndex[j];
-		if(!file.content) continue;
-flen = file.content.length;
-		if(!flen || flen >= 0x1000) continue;
-		file.start = T;
-		chainit((flen + 0x3F) >> 6);
-	}
-	while(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);
-	for(i = 0; i < L[4]<<2; ++i) {
-		var nm = cfb.FullPaths[i];
-		if(!nm || nm.length === 0) {
-			for(j = 0; j < 17; ++j) o.write_shift(4, 0);
-			for(j = 0; j < 3; ++j) o.write_shift(4, -1);
-			for(j = 0; j < 12; ++j) o.write_shift(4, 0);
-			continue;
-		}
-		file = cfb.FileIndex[i];
-		if(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;
-		var _nm = (i === 0 && _opts.root) || file.name;
-		if(_nm.length > 32) {
-			console.error("Name " + _nm + " will be truncated to " + _nm.slice(0,32));
-			_nm = _nm.slice(0, 32);
-		}
-		flen = 2*(_nm.length+1);
-		o.write_shift(64, _nm, "utf16le");
-		o.write_shift(2, flen);
-		o.write_shift(1, file.type);
-		o.write_shift(1, file.color);
-		o.write_shift(-4, file.L);
-		o.write_shift(-4, file.R);
-		o.write_shift(-4, file.C);
-		if(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);
-		else o.write_shift(16, file.clsid, "hex");
-		o.write_shift(4, file.state || 0);
-		o.write_shift(4, 0); o.write_shift(4, 0);
-		o.write_shift(4, 0); o.write_shift(4, 0);
-		o.write_shift(4, file.start);
-		o.write_shift(4, file.size); o.write_shift(4, 0);
-	}
-	for(i = 1; i < cfb.FileIndex.length; ++i) {
-		file = cfb.FileIndex[i];
-if(file.size >= 0x1000) {
-			o.l = (file.start+1) << 9;
-			if (has_buf && Buffer.isBuffer(file.content)) {
-				file.content.copy(o, o.l, 0, file.size);
-				// o is a 0-filled Buffer so just set next offset
-				o.l += (file.size + 511) & -512;
-			} else {
-				for(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);
-				for(; j & 0x1FF; ++j) o.write_shift(1, 0);
-			}
-		}
-	}
-	for(i = 1; i < cfb.FileIndex.length; ++i) {
-		file = cfb.FileIndex[i];
-if(file.size > 0 && file.size < 0x1000) {
-			if (has_buf && Buffer.isBuffer(file.content)) {
-				file.content.copy(o, o.l, 0, file.size);
-				// o is a 0-filled Buffer so just set next offset
-				o.l += (file.size + 63) & -64;
-			} else {
-				for(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);
-				for(; j & 0x3F; ++j) o.write_shift(1, 0);
-			}
-		}
-	}
-	if (has_buf) {
-		o.l = o.length;
-	} else {
-		// When using Buffer, already 0-filled
-		while(o.l < o.length) o.write_shift(1, 0);
-	}
-	return o;
-}
-/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */
-function find(cfb, path) {
-	var UCFullPaths = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });
-	var UCPaths = UCFullPaths.map(function(x) { var y = x.split("/"); return y[y.length - (x.slice(-1) == "/" ? 2 : 1)]; });
-	var k = false;
-	if(path.charCodeAt(0) === 47 /* "/" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }
-	else k = path.indexOf("/") !== -1;
-	var UCPath = path.toUpperCase();
-	var w = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);
-	if(w !== -1) return cfb.FileIndex[w];
-
-	var m = !UCPath.match(chr1);
-	UCPath = UCPath.replace(chr0,'');
-	if(m) UCPath = UCPath.replace(chr1,'!');
-	for(w = 0; w < UCFullPaths.length; ++w) {
-		if((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];
-		if((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];
-	}
-	return null;
-}
-/** CFB Constants */
-var MSSZ = 64; /* Mini Sector Size = 1<<6 */
-//var MSCSZ = 4096; /* Mini Stream Cutoff Size */
-/* 2.1 Compound File Sector Numbers and Types */
-var ENDOFCHAIN = -2;
-/* 2.2 Compound File Header */
-var HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';
-var HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];
-var HEADER_CLSID = '00000000000000000000000000000000';
-var consts = {
-	/* 2.1 Compund File Sector Numbers and Types */
-	MAXREGSECT: -6,
-	DIFSECT: -4,
-	FATSECT: -3,
-	ENDOFCHAIN: ENDOFCHAIN,
-	FREESECT: -1,
-	/* 2.2 Compound File Header */
-	HEADER_SIGNATURE: HEADER_SIGNATURE,
-	HEADER_MINOR_VERSION: '3e00',
-	MAXREGSID: -6,
-	NOSTREAM: -1,
-	HEADER_CLSID: HEADER_CLSID,
-	/* 2.6.1 Compound File Directory Entry */
-	EntryTypes: ['unknown','storage','stream','lockbytes','property','root']
-};
-
-function write_file(cfb, filename, options) {
-	get_fs();
-	var o = _write(cfb, options);
-fs.writeFileSync(filename, o);
-}
-
-function a2s(o) {
-	var out = new Array(o.length);
-	for(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);
-	return out.join("");
-}
-
-function write(cfb, options) {
-	var o = _write(cfb, options);
-	switch(options && options.type || "buffer") {
-		case "file": get_fs(); fs.writeFileSync(options.filename, (o)); return o;
-		case "binary": return typeof o == "string" ? o : a2s(o);
-		case "base64": return Base64_encode(typeof o == "string" ? o : a2s(o));
-		case "buffer": if(has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);
-			/* falls through */
-		case "array": return typeof o == "string" ? s2a(o) : o;
-	}
-	return o;
-}
-/* node < 8.1 zlib does not expose bytesRead, so default to pure JS */
-var _zlib;
-function use_zlib(zlib) { try {
-	var InflateRaw = zlib.InflateRaw;
-	var InflRaw = new InflateRaw();
-	InflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);
-	if(InflRaw.bytesRead) _zlib = zlib;
-	else throw new Error("zlib does not expose bytesRead");
-} catch(e) {console.error("cannot use native zlib: " + (e.message || e)); } }
-
-function _inflateRawSync(payload, usz) {
-	if(!_zlib) return _inflate(payload, usz);
-	var InflateRaw = _zlib.InflateRaw;
-	var InflRaw = new InflateRaw();
-	var out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);
-	payload.l += InflRaw.bytesRead;
-	return out;
-}
-
-function _deflateRawSync(payload) {
-	return _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);
-}
-var CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];
-
-/*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */
-var LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];
-
-/*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */
-var DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];
-
-function bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }
-
-var use_typed_arrays = typeof Uint8Array !== 'undefined';
-
-var bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];
-for(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);
-
-function bit_swap_n(n, b) {
-	var rev = bitswap8[n & 0xFF];
-	if(b <= 8) return rev >>> (8-b);
-	rev = (rev << 8) | bitswap8[(n>>8)&0xFF];
-	if(b <= 16) return rev >>> (16-b);
-	rev = (rev << 8) | bitswap8[(n>>16)&0xFF];
-	return rev >>> (24-b);
-}
-
-/* helpers for unaligned bit reads */
-function read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }
-function read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }
-function read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }
-function read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }
-function read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }
-
-/* works up to n = 3 * 8 + 1 = 25 */
-function read_bits_n(buf, bl, n) {
-	var w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);
-	var v = buf[h] >>> w;
-	if(n < 8 - w) return v & f;
-	v |= buf[h+1]<<(8-w);
-	if(n < 16 - w) return v & f;
-	v |= buf[h+2]<<(16-w);
-	if(n < 24 - w) return v & f;
-	v |= buf[h+3]<<(24-w);
-	return v & f;
-}
-
-/* helpers for unaligned bit writes */
-function write_bits_3(buf, bl, v) { var w = bl & 7, h = bl >>> 3;
-	if(w <= 5) buf[h] |= (v & 7) << w;
-	else {
-		buf[h] |= (v << w) & 0xFF;
-		buf[h+1] = (v&7) >> (8-w);
-	}
-	return bl + 3;
-}
-
-function write_bits_1(buf, bl, v) {
-	var w = bl & 7, h = bl >>> 3;
-	v = (v&1) << w;
-	buf[h] |= v;
-	return bl + 1;
-}
-function write_bits_8(buf, bl, v) {
-	var w = bl & 7, h = bl >>> 3;
-	v <<= w;
-	buf[h] |=  v & 0xFF; v >>>= 8;
-	buf[h+1] = v;
-	return bl + 8;
-}
-function write_bits_16(buf, bl, v) {
-	var w = bl & 7, h = bl >>> 3;
-	v <<= w;
-	buf[h] |=  v & 0xFF; v >>>= 8;
-	buf[h+1] = v & 0xFF;
-	buf[h+2] = v >>> 8;
-	return bl + 16;
-}
-
-/* until ArrayBuffer#realloc is a thing, fake a realloc */
-function realloc(b, sz) {
-	var L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;
-	if(L >= sz) return b;
-	if(has_buf) {
-		var o = new_unsafe_buf(M);
-		// $FlowIgnore
-		if(b.copy) b.copy(o);
-		else for(; i < b.length; ++i) o[i] = b[i];
-		return o;
-	} else if(use_typed_arrays) {
-		var a = new Uint8Array(M);
-		if(a.set) a.set(b);
-		else for(; i < L; ++i) a[i] = b[i];
-		return a;
-	}
-	b.length = M;
-	return b;
-}
-
-/* zero-filled arrays for older browsers */
-function zero_fill_array(n) {
-	var o = new Array(n);
-	for(var i = 0; i < n; ++i) o[i] = 0;
-	return o;
-}
-
-/* build tree (used for literals and lengths) */
-function build_tree(clens, cmap, MAX) {
-	var maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;
-
-	var bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);
-	for(i = 0; i < 32; ++i) bl_count[i] = 0;
-
-	for(i = L; i < MAX; ++i) clens[i] = 0;
-	L = clens.length;
-
-	var ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []
-
-	/* build code tree */
-	for(i = 0; i < L; ++i) {
-		bl_count[(w = clens[i])]++;
-		if(maxlen < w) maxlen = w;
-		ctree[i] = 0;
-	}
-	bl_count[0] = 0;
-	for(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);
-	for(i = 0; i < L; ++i) {
-		ccode = clens[i];
-		if(ccode != 0) ctree[i] = bl_count[ccode+16]++;
-	}
-
-	/* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */
-	var cleni = 0;
-	for(i = 0; i < L; ++i) {
-		cleni = clens[i];
-		if(cleni != 0) {
-			ccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);
-			for(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)
-				cmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);
-		}
-	}
-	return maxlen;
-}
-
-/* Fixed Huffman */
-var fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);
-var fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);
-if(!use_typed_arrays) {
-	for(var i = 0; i < 512; ++i) fix_lmap[i] = 0;
-	for(i = 0; i < 32; ++i) fix_dmap[i] = 0;
-}
-(function() {
-	var dlens = [];
-	var i = 0;
-	for(;i<32; i++) dlens.push(5);
-	build_tree(dlens, fix_dmap, 32);
-
-	var clens = [];
-	i = 0;
-	for(; i<=143; i++) clens.push(8);
-	for(; i<=255; i++) clens.push(9);
-	for(; i<=279; i++) clens.push(7);
-	for(; i<=287; i++) clens.push(8);
-	build_tree(clens, fix_lmap, 288);
-})();var _deflateRaw = (function _deflateRawIIFE() {
-	var DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];
-	var j = 0, k = 0;
-	for(; j < DST_LN.length - 1; ++j) {
-		for(; k < DST_LN[j+1]; ++k) DST_LN_RE[k] = j;
-	}
-	for(;k < 32768; ++k) DST_LN_RE[k] = 29;
-
-	var LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];
-	for(j = 0, k = 0; j < LEN_LN.length - 1; ++j) {
-		for(; k < LEN_LN[j+1]; ++k) LEN_LN_RE[k] = j;
-	}
-
-	function write_stored(data, out) {
-		var boff = 0;
-		while(boff < data.length) {
-			var L = Math.min(0xFFFF, data.length - boff);
-			var h = boff + L == data.length;
-			out.write_shift(1, +h);
-			out.write_shift(2, L);
-			out.write_shift(2, (~L) & 0xFFFF);
-			while(L-- > 0) out[out.l++] = data[boff++];
-		}
-		return out.l;
-	}
-
-	/* Fixed Huffman */
-	function write_huff_fixed(data, out) {
-		var bl = 0;
-		var boff = 0;
-		var addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];
-		while(boff < data.length) {
-			var L = /* data.length - boff; */ Math.min(0xFFFF, data.length - boff);
-
-			/* write a stored block for short data */
-			if(L < 10) {
-				bl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line
-				if(bl & 7) bl += 8 - (bl & 7);
-				out.l = (bl / 8) | 0;
-				out.write_shift(2, L);
-				out.write_shift(2, (~L) & 0xFFFF);
-				while(L-- > 0) out[out.l++] = data[boff++];
-				bl = out.l * 8;
-				continue;
-			}
-
-			bl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line
-			var hash = 0;
-			while(L-- > 0) {
-				var d = data[boff];
-				hash = ((hash << 5) ^ d) & 0x7FFF;
-
-				var match = -1, mlen = 0;
-
-				if((match = addrs[hash])) {
-					match |= boff & ~0x7FFF;
-					if(match > boff) match -= 0x8000;
-					if(match < boff) while(data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;
-				}
-
-				if(mlen > 2) {
-					/* Copy Token  */
-					d = LEN_LN_RE[mlen];
-					if(d <= 22) bl = write_bits_8(out, bl, bitswap8[d+1]>>1) - 1;
-					else {
-						write_bits_8(out, bl, 3);
-						bl += 5;
-						write_bits_8(out, bl, bitswap8[d-23]>>5);
-						bl += 3;
-					}
-					var len_eb = (d < 8) ? 0 : ((d - 4)>>2);
-					if(len_eb > 0) {
-						write_bits_16(out, bl, mlen - LEN_LN[d]);
-						bl += len_eb;
-					}
-
-					d = DST_LN_RE[boff - match];
-					bl = write_bits_8(out, bl, bitswap8[d]>>3);
-					bl -= 3;
-
-					var dst_eb = d < 4 ? 0 : (d-2)>>1;
-					if(dst_eb > 0) {
-						write_bits_16(out, bl, boff - match - DST_LN[d]);
-						bl += dst_eb;
-					}
-					for(var q = 0; q < mlen; ++q) {
-						addrs[hash] = boff & 0x7FFF;
-						hash = ((hash << 5) ^ data[boff]) & 0x7FFF;
-						++boff;
-					}
-					L-= mlen - 1;
-				} else {
-					/* Literal Token */
-					if(d <= 143) d = d + 48;
-					else bl = write_bits_1(out, bl, 1);
-					bl = write_bits_8(out, bl, bitswap8[d]);
-					addrs[hash] = boff & 0x7FFF;
-					++boff;
-				}
-			}
-
-			bl = write_bits_8(out, bl, 0) - 1;
-		}
-		out.l = ((bl + 7)/8)|0;
-		return out.l;
-	}
-	return function _deflateRaw(data, out) {
-		if(data.length < 8) return write_stored(data, out);
-		return write_huff_fixed(data, out);
-	};
-})();
-
-function _deflate(data) {
-	var buf = new_buf(50+Math.floor(data.length*1.1));
-	var off = _deflateRaw(data, buf);
-	return buf.slice(0, off);
-}
-/* modified inflate function also moves original read head */
-
-var dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);
-var dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);
-var dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);
-var dyn_len_1 = 1, dyn_len_2 = 1;
-
-/* 5.5.3 Expanding Huffman Codes */
-function dyn(data, boff) {
-	/* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */
-	var _HLIT = read_bits_5(data, boff) + 257; boff += 5;
-	var _HDIST = read_bits_5(data, boff) + 1; boff += 5;
-	var _HCLEN = read_bits_4(data, boff) + 4; boff += 4;
-	var w = 0;
-
-	/* grab and store code lengths */
-	var clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);
-	var ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];
-	var maxlen = 1;
-	var bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);
-	var next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);
-	var L = clens.length; /* 19 */
-	for(var i = 0; i < _HCLEN; ++i) {
-		clens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);
-		if(maxlen < w) maxlen = w;
-		bl_count[w]++;
-		boff += 3;
-	}
-
-	/* build code tree */
-	var ccode = 0;
-	bl_count[0] = 0;
-	for(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;
-	for(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;
-	/* cmap[7 bits from stream] = (off&7) + (lit<<3) */
-	var cleni = 0;
-	for(i = 0; i < L; ++i) {
-		cleni = clens[i];
-		if(cleni != 0) {
-			ccode = bitswap8[ctree[i]]>>(8-cleni);
-			for(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);
-		}
-	}
-
-	/* read literal and dist codes at once */
-	var hcodes = [];
-	maxlen = 1;
-	for(; hcodes.length < _HLIT + _HDIST;) {
-		ccode = dyn_cmap[read_bits_7(data, boff)];
-		boff += ccode & 7;
-		switch((ccode >>>= 3)) {
-			case 16:
-				w = 3 + read_bits_2(data, boff); boff += 2;
-				ccode = hcodes[hcodes.length - 1];
-				while(w-- > 0) hcodes.push(ccode);
-				break;
-			case 17:
-				w = 3 + read_bits_3(data, boff); boff += 3;
-				while(w-- > 0) hcodes.push(0);
-				break;
-			case 18:
-				w = 11 + read_bits_7(data, boff); boff += 7;
-				while(w -- > 0) hcodes.push(0);
-				break;
-			default:
-				hcodes.push(ccode);
-				if(maxlen < ccode) maxlen = ccode;
-				break;
-		}
-	}
-
-	/* build literal / length trees */
-	var h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);
-	for(i = _HLIT; i < 286; ++i) h1[i] = 0;
-	for(i = _HDIST; i < 30; ++i) h2[i] = 0;
-	dyn_len_1 = build_tree(h1, dyn_lmap, 286);
-	dyn_len_2 = build_tree(h2, dyn_dmap, 30);
-	return boff;
-}
-
-/* return [ data, bytesRead ] */
-function inflate(data, usz) {
-	/* shortcircuit for empty buffer [0x03, 0x00] */
-	if(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }
-
-	/* bit offset */
-	var boff = 0;
-
-	/* header includes final bit and type bits */
-	var header = 0;
-
-	var outbuf = new_unsafe_buf(usz ? usz : (1<<18));
-	var woff = 0;
-	var OL = outbuf.length>>>0;
-	var max_len_1 = 0, max_len_2 = 0;
-
-	while((header&1) == 0) {
-		header = read_bits_3(data, boff); boff += 3;
-		if((header >>> 1) == 0) {
-			/* Stored block */
-			if(boff & 7) boff += 8 - (boff&7);
-			/* 2 bytes sz, 2 bytes bit inverse */
-			var sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;
-			boff += 32;
-			/* push sz bytes */
-			if(sz > 0) {
-				if(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }
-				while(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }
-			}
-			continue;
-		} else if((header >> 1) == 1) {
-			/* Fixed Huffman */
-			max_len_1 = 9; max_len_2 = 5;
-		} else {
-			/* Dynamic Huffman */
-			boff = dyn(data, boff);
-			max_len_1 = dyn_len_1; max_len_2 = dyn_len_2;
-		}
-		for(;;) { // while(true) is apparently out of vogue in modern JS circles
-			if(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }
-			/* ingest code and move read head */
-			var bits = read_bits_n(data, boff, max_len_1);
-			var code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];
-			boff += code & 15; code >>>= 4;
-			/* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */
-			if(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;
-			else if(code == 256) break;
-			else {
-				code -= 257;
-				var len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;
-				var tgt = woff + LEN_LN[code];
-				/* length extra bits */
-				if(len_eb > 0) {
-					tgt += read_bits_n(data, boff, len_eb);
-					boff += len_eb;
-				}
-
-				/* dist code */
-				bits = read_bits_n(data, boff, max_len_2);
-				code = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];
-				boff += code & 15; code >>>= 4;
-				var dst_eb = (code < 4 ? 0 : (code-2)>>1);
-				var dst = DST_LN[code];
-				/* dist extra bits */
-				if(dst_eb > 0) {
-					dst += read_bits_n(data, boff, dst_eb);
-					boff += dst_eb;
-				}
-
-				/* in the common case, manual byte copy is faster than TA set / Buffer copy */
-				if(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt + 100); OL = outbuf.length; }
-				while(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }
-			}
-		}
-	}
-	if(usz) return [outbuf, (boff+7)>>>3];
-	return [outbuf.slice(0, woff), (boff+7)>>>3];
-}
-
-function _inflate(payload, usz) {
-	var data = payload.slice(payload.l||0);
-	var out = inflate(data, usz);
-	payload.l += out[1];
-	return out[0];
-}
-
-function warn_or_throw(wrn, msg) {
-	if(wrn) { if(typeof console !== 'undefined') console.error(msg); }
-	else throw new Error(msg);
-}
-
-function parse_zip(file, options) {
-	var blob = file;
-	prep_blob(blob, 0);
-
-	var FileIndex = [], FullPaths = [];
-	var o = {
-		FileIndex: FileIndex,
-		FullPaths: FullPaths
-	};
-	init_cfb(o, { root: options.root });
-
-	/* find end of central directory, start just after signature */
-	var i = blob.length - 4;
-	while((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;
-	blob.l = i + 4;
-
-	/* parse end of central directory */
-	blob.l += 4;
-	var fcnt = blob.read_shift(2);
-	blob.l += 6;
-	var start_cd = blob.read_shift(4);
-
-	/* parse central directory */
-	blob.l = start_cd;
-
-	for(i = 0; i < fcnt; ++i) {
-		/* trust local file header instead of CD entry */
-		blob.l += 20;
-		var csz = blob.read_shift(4);
-		var usz = blob.read_shift(4);
-		var namelen = blob.read_shift(2);
-		var efsz = blob.read_shift(2);
-		var fcsz = blob.read_shift(2);
-		blob.l += 8;
-		var offset = blob.read_shift(4);
-		var EF = parse_extra_field(blob.slice(blob.l+namelen, blob.l+namelen+efsz));
-		blob.l += namelen + efsz + fcsz;
-
-		var L = blob.l;
-		blob.l = offset + 4;
-		/* ZIP64 lengths */
-		if(EF && EF[0x0001]) {
-			if((EF[0x0001]||{}).usz) usz = EF[0x0001].usz;
-			if((EF[0x0001]||{}).csz) csz = EF[0x0001].csz;
-		}
-		parse_local_file(blob, csz, usz, o, EF);
-		blob.l = L;
-	}
-
-	return o;
-}
-
-
-/* head starts just after local file header signature */
-function parse_local_file(blob, csz, usz, o, EF) {
-	/* [local file header] */
-	blob.l += 2;
-	var flags = blob.read_shift(2);
-	var meth = blob.read_shift(2);
-	var date = parse_dos_date(blob);
-
-	if(flags & 0x2041) throw new Error("Unsupported ZIP encryption");
-	var crc32 = blob.read_shift(4);
-	var _csz = blob.read_shift(4);
-	var _usz = blob.read_shift(4);
-
-	var namelen = blob.read_shift(2);
-	var efsz = blob.read_shift(2);
-
-	// TODO: flags & (1<<11) // UTF8
-	var name = ""; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);
-	if(efsz) {
-		var ef = parse_extra_field(blob.slice(blob.l, blob.l + efsz));
-		if((ef[0x5455]||{}).mt) date = ef[0x5455].mt;
-		if((ef[0x0001]||{}).usz) _usz = ef[0x0001].usz;
-		if((ef[0x0001]||{}).csz) _csz = ef[0x0001].csz;
-		if(EF) {
-			if((EF[0x5455]||{}).mt) date = EF[0x5455].mt;
-			if((EF[0x0001]||{}).usz) _usz = ef[0x0001].usz;
-			if((EF[0x0001]||{}).csz) _csz = ef[0x0001].csz;
-		}
-	}
-	blob.l += efsz;
-
-	/* [encryption header] */
-
-	/* [file data] */
-	var data = blob.slice(blob.l, blob.l + _csz);
-	switch(meth) {
-		case 8: data = _inflateRawSync(blob, _usz); break;
-		case 0: break; // TODO: scan for magic number
-		default: throw new Error("Unsupported ZIP Compression method " + meth);
-	}
-
-	/* [data descriptor] */
-	var wrn = false;
-	if(flags & 8) {
-		crc32 = blob.read_shift(4);
-		if(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }
-		_csz = blob.read_shift(4);
-		_usz = blob.read_shift(4);
-	}
-
-	if(_csz != csz) warn_or_throw(wrn, "Bad compressed size: " + csz + " != " + _csz);
-	if(_usz != usz) warn_or_throw(wrn, "Bad uncompressed size: " + usz + " != " + _usz);
-	//var _crc32 = CRC32.buf(data, 0);
-	//if((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, "Bad CRC32 checksum: " + crc32 + " != " + _crc32);
-	cfb_add(o, name, data, {unsafe: true, mt: date});
-}
-function write_zip(cfb, options) {
-	var _opts = options || {};
-	var out = [], cdirs = [];
-	var o = new_buf(1);
-	var method = (_opts.compression ? 8 : 0), flags = 0;
-	var desc = false;
-	if(desc) flags |= 8;
-	var i = 0, j = 0;
-
-	var start_cd = 0, fcnt = 0;
-	var root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];
-	var crcs = [];
-	var sz_cd = 0;
-
-	for(i = 1; i < cfb.FullPaths.length; ++i) {
-		fp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];
-		if(!fi.size || !fi.content || fp == "\u0001Sh33tJ5") continue;
-		var start = start_cd;
-
-		/* TODO: CP437 filename */
-		var namebuf = new_buf(fp.length);
-		for(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);
-		namebuf = namebuf.slice(0, namebuf.l);
-		crcs[fcnt] = typeof fi.content == "string" ? CRC32.bstr(fi.content, 0) : CRC32.buf(fi.content, 0);
-
-		var outbuf = typeof fi.content == "string" ? s2a(fi.content) : fi.content;
-		if(method == 8) outbuf = _deflateRawSync(outbuf);
-
-		/* local file header */
-		o = new_buf(30);
-		o.write_shift(4, 0x04034b50);
-		o.write_shift(2, 20);
-		o.write_shift(2, flags);
-		o.write_shift(2, method);
-		/* TODO: last mod file time/date */
-		if(fi.mt) write_dos_date(o, fi.mt);
-		else o.write_shift(4, 0);
-		o.write_shift(-4, (flags & 8) ? 0 : crcs[fcnt]);
-		o.write_shift(4,  (flags & 8) ? 0 : outbuf.length);
-		o.write_shift(4,  (flags & 8) ? 0 : fi.content.length);
-		o.write_shift(2, namebuf.length);
-		o.write_shift(2, 0);
-
-		start_cd += o.length;
-		out.push(o);
-		start_cd += namebuf.length;
-		out.push(namebuf);
-
-		/* TODO: extra fields? */
-
-		/* TODO: encryption header ? */
-
-		start_cd += outbuf.length;
-		out.push(outbuf);
-
-		/* data descriptor */
-		if(flags & 8) {
-			o = new_buf(12);
-			o.write_shift(-4, crcs[fcnt]);
-			o.write_shift(4, outbuf.length);
-			o.write_shift(4, fi.content.length);
-			start_cd += o.l;
-			out.push(o);
-		}
-
-		/* central directory */
-		o = new_buf(46);
-		o.write_shift(4, 0x02014b50);
-		o.write_shift(2, 0);
-		o.write_shift(2, 20);
-		o.write_shift(2, flags);
-		o.write_shift(2, method);
-		o.write_shift(4, 0); /* TODO: last mod file time/date */
-		o.write_shift(-4, crcs[fcnt]);
-
-		o.write_shift(4, outbuf.length);
-		o.write_shift(4, fi.content.length);
-		o.write_shift(2, namebuf.length);
-		o.write_shift(2, 0);
-		o.write_shift(2, 0);
-		o.write_shift(2, 0);
-		o.write_shift(2, 0);
-		o.write_shift(4, 0);
-		o.write_shift(4, start);
-
-		sz_cd += o.l;
-		cdirs.push(o);
-		sz_cd += namebuf.length;
-		cdirs.push(namebuf);
-		++fcnt;
-	}
-
-	/* end of central directory */
-	o = new_buf(22);
-	o.write_shift(4, 0x06054b50);
-	o.write_shift(2, 0);
-	o.write_shift(2, 0);
-	o.write_shift(2, fcnt);
-	o.write_shift(2, fcnt);
-	o.write_shift(4, sz_cd);
-	o.write_shift(4, start_cd);
-	o.write_shift(2, 0);
-
-	return bconcat(([bconcat((out)), bconcat(cdirs), o]));
-}
-var ContentTypeMap = ({
-	"htm": "text/html",
-	"xml": "text/xml",
-
-	"gif": "image/gif",
-	"jpg": "image/jpeg",
-	"png": "image/png",
-
-	"mso": "application/x-mso",
-	"thmx": "application/vnd.ms-officetheme",
-	"sh33tj5": "application/octet-stream"
-});
-
-function get_content_type(fi, fp) {
-	if(fi.ctype) return fi.ctype;
-
-	var ext = fi.name || "", m = ext.match(/\.([^\.]+)$/);
-	if(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];
-
-	if(fp) {
-		m = (ext = fp).match(/[\.\\]([^\.\\])+$/);
-		if(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];
-	}
-
-	return "application/octet-stream";
-}
-
-/* 76 character chunks TODO: intertwine encoding */
-function write_base64_76(bstr) {
-	var data = Base64_encode(bstr);
-	var o = [];
-	for(var i = 0; i < data.length; i+= 76) o.push(data.slice(i, i+76));
-	return o.join("\r\n") + "\r\n";
-}
-
-/*
-Rules for QP:
-	- escape =## applies for all non-display characters and literal "="
-	- space or tab at end of line must be encoded
-	- \r\n newlines can be preserved, but bare \r and \n must be escaped
-	- lines must not exceed 76 characters, use soft breaks =\r\n
-
-TODO: Some files from word appear to write line extensions with bare equals:
-
-```
-<table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=
-="70%"
-```
-*/
-function write_quoted_printable(text) {
-	var encoded = text.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7E-\xFF=]/g, function(c) {
-		var w = c.charCodeAt(0).toString(16).toUpperCase();
-		return "=" + (w.length == 1 ? "0" + w : w);
-	});
-
-	encoded = encoded.replace(/ $/mg, "=20").replace(/\t$/mg, "=09");
-
-	if(encoded.charAt(0) == "\n") encoded = "=0D" + encoded.slice(1);
-	encoded = encoded.replace(/\r(?!\n)/mg, "=0D").replace(/\n\n/mg, "\n=0A").replace(/([^\r\n])\n/mg, "$1=0A");
-
-	var o = [], split = encoded.split("\r\n");
-	for(var si = 0; si < split.length; ++si) {
-		var str = split[si];
-		if(str.length == 0) { o.push(""); continue; }
-		for(var i = 0; i < str.length;) {
-			var end = 76;
-			var tmp = str.slice(i, i + end);
-			if(tmp.charAt(end - 1) == "=") end --;
-			else if(tmp.charAt(end - 2) == "=") end -= 2;
-			else if(tmp.charAt(end - 3) == "=") end -= 3;
-			tmp = str.slice(i, i + end);
-			i += end;
-			if(i < str.length) tmp += "=";
-			o.push(tmp);
-		}
-	}
-
-	return o.join("\r\n");
-}
-function parse_quoted_printable(data) {
-	var o = [];
-
-	/* unify long lines */
-	for(var di = 0; di < data.length; ++di) {
-		var line = data[di];
-		while(di <= data.length && line.charAt(line.length - 1) == "=") line = line.slice(0, line.length - 1) + data[++di];
-		o.push(line);
-	}
-
-	/* decode */
-	for(var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function($$) { return String.fromCharCode(parseInt($$.slice(1), 16)); });
-	return s2a(o.join("\r\n"));
-}
-
-
-function parse_mime(cfb, data, root) {
-	var fname = "", cte = "", ctype = "", fdata;
-	var di = 0;
-	for(;di < 10; ++di) {
-		var line = data[di];
-		if(!line || line.match(/^\s*$/)) break;
-		var m = line.match(/^(.*?):\s*([^\s].*)$/);
-		if(m) switch(m[1].toLowerCase()) {
-			case "content-location": fname = m[2].trim(); break;
-			case "content-type": ctype = m[2].trim(); break;
-			case "content-transfer-encoding": cte = m[2].trim(); break;
-		}
-	}
-	++di;
-	switch(cte.toLowerCase()) {
-		case 'base64': fdata = s2a(Base64_decode(data.slice(di).join(""))); break;
-		case 'quoted-printable': fdata = parse_quoted_printable(data.slice(di)); break;
-		default: throw new Error("Unsupported Content-Transfer-Encoding " + cte);
-	}
-	var file = cfb_add(cfb, fname.slice(root.length), fdata, {unsafe: true});
-	if(ctype) file.ctype = ctype;
-}
-
-function parse_mad(file, options) {
-	if(a2s(file.slice(0,13)).toLowerCase() != "mime-version:") throw new Error("Unsupported MAD header");
-	var root = (options && options.root || "");
-	// $FlowIgnore
-	var data = (has_buf && Buffer.isBuffer(file) ? file.toString("binary") : a2s(file)).split("\r\n");
-	var di = 0, row = "";
-
-	/* if root is not specified, scan for the common prefix */
-	for(di = 0; di < data.length; ++di) {
-		row = data[di];
-		if(!/^Content-Location:/i.test(row)) continue;
-		row = row.slice(row.indexOf("file"));
-		if(!root) root = row.slice(0, row.lastIndexOf("/") + 1);
-		if(row.slice(0, root.length) == root) continue;
-		while(root.length > 0) {
-			root = root.slice(0, root.length - 1);
-			root = root.slice(0, root.lastIndexOf("/") + 1);
-			if(row.slice(0,root.length) == root) break;
-		}
-	}
-
-	var mboundary = (data[1] || "").match(/boundary="(.*?)"/);
-	if(!mboundary) throw new Error("MAD cannot find boundary");
-	var boundary = "--" + (mboundary[1] || "");
-
-	var FileIndex = [], FullPaths = [];
-	var o = {
-		FileIndex: FileIndex,
-		FullPaths: FullPaths
-	};
-	init_cfb(o);
-	var start_di, fcnt = 0;
-	for(di = 0; di < data.length; ++di) {
-		var line = data[di];
-		if(line !== boundary && line !== boundary + "--") continue;
-		if(fcnt++) parse_mime(o, data.slice(start_di, di), root);
-		start_di = di;
-	}
-	return o;
-}
-
-function write_mad(cfb, options) {
-	var opts = options || {};
-	var boundary = opts.boundary || "SheetJS";
-	boundary = '------=' + boundary;
-
-	var out = [
-		'MIME-Version: 1.0',
-		'Content-Type: multipart/related; boundary="' + boundary.slice(2) + '"',
-		'',
-		'',
-		''
-	];
-
-	var root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];
-	for(var i = 1; i < cfb.FullPaths.length; ++i) {
-		fp = cfb.FullPaths[i].slice(root.length);
-		fi = cfb.FileIndex[i];
-		if(!fi.size || !fi.content || fp == "\u0001Sh33tJ5") continue;
-
-		/* Normalize filename */
-		fp = fp.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7E-\xFF]/g, function(c) {
-			return "_x" + c.charCodeAt(0).toString(16) + "_";
-		}).replace(/[\u0080-\uFFFF]/g, function(u) {
-			return "_u" + u.charCodeAt(0).toString(16) + "_";
-		});
-
-		/* Extract content as binary string */
-		var ca = fi.content;
-		// $FlowIgnore
-		var cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString("binary") : a2s(ca);
-
-		/* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */
-		var dispcnt = 0, L = Math.min(1024, cstr.length), cc = 0;
-		for(var csl = 0; csl <= L; ++csl) if((cc=cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;
-		var qp = dispcnt >= L * 4 / 5;
-
-		out.push(boundary);
-		out.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);
-		out.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));
-		out.push('Content-Type: ' + get_content_type(fi, fp));
-		out.push('');
-
-		out.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));
-	}
-	out.push(boundary + '--\r\n');
-	return out.join("\r\n");
-}
-function cfb_new(opts) {
-	var o = ({});
-	init_cfb(o, opts);
-	return o;
-}
-
-function cfb_add(cfb, name, content, opts) {
-	var unsafe = opts && opts.unsafe;
-	if(!unsafe) init_cfb(cfb);
-	var file = !unsafe && CFB.find(cfb, name);
-	if(!file) {
-		var fpath = cfb.FullPaths[0];
-		if(name.slice(0, fpath.length) == fpath) fpath = name;
-		else {
-			if(fpath.slice(-1) != "/") fpath += "/";
-			fpath = (fpath + name).replace("//","/");
-		}
-		file = ({name: filename(name), type: 2});
-		cfb.FileIndex.push(file);
-		cfb.FullPaths.push(fpath);
-		if(!unsafe) CFB.utils.cfb_gc(cfb);
-	}
-file.content = (content);
-	file.size = content ? content.length : 0;
-	if(opts) {
-		if(opts.CLSID) file.clsid = opts.CLSID;
-		if(opts.mt) file.mt = opts.mt;
-		if(opts.ct) file.ct = opts.ct;
-	}
-	return file;
-}
-
-function cfb_del(cfb, name) {
-	init_cfb(cfb);
-	var file = CFB.find(cfb, name);
-	if(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {
-		cfb.FileIndex.splice(j, 1);
-		cfb.FullPaths.splice(j, 1);
-		return true;
-	}
-	return false;
-}
-
-function cfb_mov(cfb, old_name, new_name) {
-	init_cfb(cfb);
-	var file = CFB.find(cfb, old_name);
-	if(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {
-		cfb.FileIndex[j].name = filename(new_name);
-		cfb.FullPaths[j] = new_name;
-		return true;
-	}
-	return false;
-}
-
-function cfb_gc(cfb) { rebuild_cfb(cfb, true); }
-
-exports.find = find;
-exports.read = read;
-exports.parse = parse;
-exports.write = write;
-exports.writeFile = write_file;
-exports.utils = {
-	cfb_new: cfb_new,
-	cfb_add: cfb_add,
-	cfb_del: cfb_del,
-	cfb_mov: cfb_mov,
-	cfb_gc: cfb_gc,
-	ReadShift: ReadShift,
-	CheckField: CheckField,
-	prep_blob: prep_blob,
-	bconcat: bconcat,
-	use_zlib: use_zlib,
-	_deflateRaw: _deflate,
-	_inflateRaw: _inflate,
-	consts: consts
-};
-
-return exports;
-})();
-
-var _fs;
-function set_fs(fs) { _fs = fs; }
-
-/* normalize data for blob ctor */
-function blobify(data) {
-	if(typeof data === "string") return s2ab(data);
-	if(Array.isArray(data)) return a2u(data);
-	return data;
-}
-/* write or download file */
-function write_dl(fname, payload, enc) {
-	/*global IE_SaveFile, Blob, navigator, saveAs, document, File, chrome */
-	if(typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);
-	if(typeof Deno !== 'undefined') {
-		/* in this spot, it's safe to assume typed arrays and TextEncoder/TextDecoder exist */
-		if(enc && typeof payload == "string") switch(enc) {
-			case "utf8": payload = new TextEncoder(enc).encode(payload); break;
-			case "binary": payload = s2ab(payload); break;
-			/* TODO: binary equivalent */
-			default: throw new Error("Unsupported encoding " + enc);
-		}
-		return Deno.writeFileSync(fname, payload);
-	}
-	var data = (enc == "utf8") ? utf8write(payload) : payload;
-if(typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);
-	if(typeof Blob !== 'undefined') {
-		var blob = new Blob([blobify(data)], {type:"application/octet-stream"});
-if(typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);
-if(typeof saveAs !== 'undefined') return saveAs(blob, fname);
-		if(typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {
-			var url = URL.createObjectURL(blob);
-if(typeof chrome === 'object' && typeof (chrome.downloads||{}).download == "function") {
-				if(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);
-				return chrome.downloads.download({ url: url, filename: fname, saveAs: true});
-			}
-			var a = document.createElement("a");
-			if(a.download != null) {
-a.download = fname; a.href = url; document.body.appendChild(a); a.click();
-document.body.removeChild(a);
-				if(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);
-				return url;
-			}
-		}
-	}
-	// $FlowIgnore
-	if(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript
-		// $FlowIgnore
-		var out = File(fname); out.open("w"); out.encoding = "binary";
-		if(Array.isArray(payload)) payload = a2s(payload);
-		out.write(payload); out.close(); return payload;
-	} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }
-	throw new Error("cannot save file " + fname);
-}
-
-/* read binary data from file */
-function read_binary(path) {
-	if(typeof _fs !== 'undefined') return _fs.readFileSync(path);
-	if(typeof Deno !== 'undefined') return Deno.readFileSync(path);
-	// $FlowIgnore
-	if(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript
-		// $FlowIgnore
-		var infile = File(path); infile.open("r"); infile.encoding = "binary";
-		var data = infile.read(); infile.close();
-		return data;
-	} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }
-	throw new Error("Cannot access file " + path);
-}
-function keys(o) {
-	var ks = Object.keys(o), o2 = [];
-	for(var i = 0; i < ks.length; ++i) if(Object.prototype.hasOwnProperty.call(o, ks[i])) o2.push(ks[i]);
-	return o2;
-}
-
-function evert_key(obj, key) {
-	var o = ([]), K = keys(obj);
-	for(var i = 0; i !== K.length; ++i) if(o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];
-	return o;
-}
-
-function evert(obj) {
-	var o = ([]), K = keys(obj);
-	for(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];
-	return o;
-}
-
-function evert_num(obj) {
-	var o = ([]), K = keys(obj);
-	for(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i],10);
-	return o;
-}
-
-function evert_arr(obj) {
-	var o = ([]), K = keys(obj);
-	for(var i = 0; i !== K.length; ++i) {
-		if(o[obj[K[i]]] == null) o[obj[K[i]]] = [];
-		o[obj[K[i]]].push(K[i]);
-	}
-	return o;
-}
-
-var basedate = new Date(1899, 11, 30, 0, 0, 0); // 2209161600000
-function datenum(v, date1904) {
-	var epoch = v.getTime();
-	if(date1904) epoch -= 1462*24*60*60*1000;
-	var dnthresh = basedate.getTime() + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000;
-	return (epoch - dnthresh) / (24 * 60 * 60 * 1000);
-}
-var refdate = new Date();
-var dnthresh = basedate.getTime() + (refdate.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000;
-var refoffset = refdate.getTimezoneOffset();
-function numdate(v) {
-	var out = new Date();
-	out.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);
-	if (out.getTimezoneOffset() !== refoffset) {
-		out.setTime(out.getTime() + (out.getTimezoneOffset() - refoffset) * 60000);
-	}
-	return out;
-}
-
-/* ISO 8601 Duration */
-function parse_isodur(s) {
-	var sec = 0, mt = 0, time = false;
-	var m = s.match(/P([0-9\.]+Y)?([0-9\.]+M)?([0-9\.]+D)?T([0-9\.]+H)?([0-9\.]+M)?([0-9\.]+S)?/);
-	if(!m) throw new Error("|" + s + "| is not an ISO8601 Duration");
-	for(var i = 1; i != m.length; ++i) {
-		if(!m[i]) continue;
-		mt = 1;
-		if(i > 3) time = true;
-		switch(m[i].slice(m[i].length-1)) {
-			case 'Y':
-				throw new Error("Unsupported ISO Duration Field: " + m[i].slice(m[i].length-1));
-			case 'D': mt *= 24;
-				/* falls through */
-			case 'H': mt *= 60;
-				/* falls through */
-			case 'M':
-				if(!time) throw new Error("Unsupported ISO Duration Field: M");
-				else mt *= 60;
-				/* falls through */
-			case 'S': break;
-		}
-		sec += mt * parseInt(m[i], 10);
-	}
-	return sec;
-}
-
-var good_pd_date_1 = new Date('2017-02-19T19:06:09.000Z');
-var good_pd_date = isNaN(good_pd_date_1.getFullYear()) ? new Date('2/19/17') : good_pd_date_1;
-var good_pd = good_pd_date.getFullYear() == 2017;
-/* parses a date as a local date */
-function parseDate(str, fixdate) {
-	var d = new Date(str);
-	if(good_pd) {
-if(fixdate > 0) d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);
-		else if(fixdate < 0) d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);
-		return d;
-	}
-	if(str instanceof Date) return str;
-	if(good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {
-		var s = d.getFullYear();
-		if(str.indexOf("" + s) > -1) return d;
-		d.setFullYear(d.getFullYear() + 100); return d;
-	}
-	var n = str.match(/\d+/g)||["2017","2","19","0","0","0"];
-	var out = new Date(+n[0], +n[1] - 1, +n[2], (+n[3]||0), (+n[4]||0), (+n[5]||0));
-	if(str.indexOf("Z") > -1) out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);
-	return out;
-}
-
-function cc2str(arr, debomit) {
-	if(has_buf && Buffer.isBuffer(arr)) {
-		if(debomit && buf_utf16le) {
-			// TODO: temporary patch
-			if(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(arr.slice(2).toString("utf16le"));
-			if(arr[1] == 0xFE && arr[2] == 0xFF) return utf8write(utf16beread(arr.slice(2).toString("binary")));
-		}
-		return arr.toString("binary");
-	}
-
-	if(typeof TextDecoder !== "undefined") try {
-		if(debomit) {
-			if(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(new TextDecoder("utf-16le").decode(arr.slice(2)));
-			if(arr[0] == 0xFE && arr[1] == 0xFF) return utf8write(new TextDecoder("utf-16be").decode(arr.slice(2)));
-		}
-		var rev = {
-			"\u20ac": "\x80", "\u201a": "\x82", "\u0192": "\x83", "\u201e": "\x84",
-			"\u2026": "\x85", "\u2020": "\x86", "\u2021": "\x87", "\u02c6": "\x88",
-			"\u2030": "\x89", "\u0160": "\x8a", "\u2039": "\x8b", "\u0152": "\x8c",
-			"\u017d": "\x8e", "\u2018": "\x91", "\u2019": "\x92", "\u201c": "\x93",
-			"\u201d": "\x94", "\u2022": "\x95", "\u2013": "\x96", "\u2014": "\x97",
-			"\u02dc": "\x98", "\u2122": "\x99", "\u0161": "\x9a", "\u203a": "\x9b",
-			"\u0153": "\x9c", "\u017e": "\x9e", "\u0178": "\x9f"
-		};
-		if(Array.isArray(arr)) arr = new Uint8Array(arr);
-		return new TextDecoder("latin1").decode(arr).replace(/[â¬âÆââ¦â â¡Ëâ°Å â¹ÅÅ½âââââ¢ââËâ¢Å¡âºÅÅ¾Å¸]/g, function(c) { return rev[c] || c; });
-	} catch(e) {}
-
-	var o = [];
-	for(var i = 0; i != arr.length; ++i) o.push(String.fromCharCode(arr[i]));
-	return o.join("");
-}
-
-function dup(o) {
-	if(typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));
-	if(typeof o != 'object' || o == null) return o;
-	if(o instanceof Date) return new Date(o.getTime());
-	var out = {};
-	for(var k in o) if(Object.prototype.hasOwnProperty.call(o, k)) out[k] = dup(o[k]);
-	return out;
-}
-
-function fill(c,l) { var o = ""; while(o.length < l) o+=c; return o; }
-
-/* TODO: stress test */
-function fuzzynum(s) {
-	var v = Number(s);
-	if(!isNaN(v)) return isFinite(v) ? v : NaN;
-	if(!/\d/.test(s)) return v;
-	var wt = 1;
-	var ss = s.replace(/([\d]),([\d])/g,"$1$2").replace(/[$]/g,"").replace(/[%]/g, function() { wt *= 100; return "";});
-	if(!isNaN(v = Number(ss))) return v / wt;
-	ss = ss.replace(/[(](.*)[)]/,function($$, $1) { wt = -wt; return $1;});
-	if(!isNaN(v = Number(ss))) return v / wt;
-	return v;
-}
-
-/* NOTE: Chrome rejects bare times like 1:23 PM */
-var FDRE1 = /^(0?\d|1[0-2])(?:|:([0-5]?\d)(?:|(\.\d+)(?:|:([0-5]?\d))|:([0-5]?\d)(|\.\d+)))\s+([ap])m?$/;
-
-function fuzzytime1(M)  {
-    /* TODO: 1904 adjustment, keep in sync with base date */
-    if(!M[2]) return new Date(1899,11,30,(+M[1]%12) + (M[7] == "p" ? 12 : 0), 0, 0, 0);
-    if(M[3]) {
-        if(M[4]) return new Date(1899,11,30,(+M[1]%12) + (M[7] == "p" ? 12 : 0), +M[2], +M[4], parseFloat(M[3])*1000);
-        else return new Date(1899,11,30,(M[7] == "p" ? 12 : 0), +M[1], +M[2], parseFloat(M[3])*1000);
-    }
-    else if(M[5]) return new Date(1899,11,30, (+M[1]%12) + (M[7] == "p" ? 12 : 0), +M[2], +M[5], M[6] ? parseFloat(M[6]) * 1000 : 0);
-    else return new Date(1899,11,30,(+M[1]%12) + (M[7] == "p" ? 12 : 0), +M[2], 0, 0);
-}
-var lower_months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];
-function fuzzydate(s) {
-	var lower = s.toLowerCase();
-	var lnos = lower.replace(/\s+/g, " ").trim();
-	var M = lnos.match(FDRE1);
-	if(M) return fuzzytime1(M);
-
-	var o = new Date(s), n = new Date(NaN);
-	var y = o.getYear(), m = o.getMonth(), d = o.getDate();
-	if(isNaN(d)) return n;
-	if(lower.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) {
-		lower = lower.replace(/[^a-z]/g,"").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/,"");
-		if(lower.length > 3 && lower_months.indexOf(lower) == -1) return n;
-	} else if(lower.replace(/[ap]m?/, "").match(/[a-z]/)) return n;
-	if(y < 0 || y > 8099 || s.match(/[^-0-9:,\/\\]/)) return n;
-	return o;
-}
-
-var split_regex = (function() {
-	var safe_split_regex = "abacaba".split(/(:?b)/i).length == 5;
-	return function split_regex(str, re, def) {
-		if(safe_split_regex || typeof re == "string") return str.split(re);
-		var p = str.split(re), o = [p[0]];
-		for(var i = 1; i < p.length; ++i) { o.push(def); o.push(p[i]); }
-		return o;
-	};
-})();
-function getdatastr(data) {
-	if(!data) return null;
-	if(data.content && data.type) return cc2str(data.content, true);
-	if(data.data) return debom(data.data);
-	if(data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));
-	if(data.asBinary) return debom(data.asBinary());
-	if(data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(),0)));
-	return null;
-}
-
-function getdatabin(data) {
-	if(!data) return null;
-	if(data.data) return char_codes(data.data);
-	if(data.asNodeBuffer && has_buf) return data.asNodeBuffer();
-	if(data._data && data._data.getContent) {
-		var o = data._data.getContent();
-		if(typeof o == "string") return char_codes(o);
-		return Array.prototype.slice.call(o);
-	}
-	if(data.content && data.type) return data.content;
-	return null;
-}
-
-function getdata(data) { return (data && data.name.slice(-4) === ".bin") ? getdatabin(data) : getdatastr(data); }
-
-/* Part 2 Section 10.1.2 "Mapping Content Types" Names are case-insensitive */
-/* OASIS does not comment on filename case sensitivity */
-function safegetzipfile(zip, file) {
-	var k = zip.FullPaths || keys(zip.files);
-	var f = file.toLowerCase().replace(/[\/]/g, '\\'), g = f.replace(/\\/g,'\/');
-	for(var i=0; i<k.length; ++i) {
-		var n = k[i].replace(/^Root Entry[\/]/,"").toLowerCase();
-		if(f == n || g == n) return zip.files ? zip.files[k[i]] : zip.FileIndex[i];
-	}
-	return null;
-}
-
-function getzipfile(zip, file) {
-	var o = safegetzipfile(zip, file);
-	if(o == null) throw new Error("Cannot find file " + file + " in zip");
-	return o;
-}
-
-function getzipdata(zip, file, safe) {
-	if(!safe) return getdata(getzipfile(zip, file));
-	if(!file) return null;
-	try { return getzipdata(zip, file); } catch(e) { return null; }
-}
-
-function getzipstr(zip, file, safe) {
-	if(!safe) return getdatastr(getzipfile(zip, file));
-	if(!file) return null;
-	try { return getzipstr(zip, file); } catch(e) { return null; }
-}
-
-function getzipbin(zip, file, safe) {
-	if(!safe) return getdatabin(getzipfile(zip, file));
-	if(!file) return null;
-	try { return getzipbin(zip, file); } catch(e) { return null; }
-}
-
-function zipentries(zip) {
-	var k = zip.FullPaths || keys(zip.files), o = [];
-	for(var i = 0; i < k.length; ++i) if(k[i].slice(-1) != '/') o.push(k[i].replace(/^Root Entry[\/]/, ""));
-	return o.sort();
-}
-
-function zip_add_file(zip, path, content) {
-	if(zip.FullPaths) {
-		if(typeof content == "string") {
-			var res;
-			if(has_buf) res = Buffer_from(content);
-			/* TODO: investigate performance in Edge 13 */
-			//else if(typeof TextEncoder !== "undefined") res = new TextEncoder().encode(content);
-			else res = utf8decode(content);
-			return CFB.utils.cfb_add(zip, path, res);
-		}
-		CFB.utils.cfb_add(zip, path, content);
-	}
-	else zip.file(path, content);
-}
-
-function zip_new() { return CFB.utils.cfb_new(); }
-
-function zip_read(d, o) {
-	switch(o.type) {
-		case "base64": return CFB.read(d, { type: "base64" });
-		case "binary": return CFB.read(d, { type: "binary" });
-		case "buffer": case "array": return CFB.read(d, { type: "buffer" });
-	}
-	throw new Error("Unrecognized type " + o.type);
-}
-
-function resolve_path(path, base) {
-	if(path.charAt(0) == "/") return path.slice(1);
-	var result = base.split('/');
-	if(base.slice(-1) != "/") result.pop(); // folder path
-	var target = path.split('/');
-	while (target.length !== 0) {
-		var step = target.shift();
-		if (step === '..') result.pop();
-		else if (step !== '.') result.push(step);
-	}
-	return result.join('/');
-}
-var XML_HEADER = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n';
-var attregexg=/([^"\s?>\/]+)\s*=\s*((?:")([^"]*)(?:")|(?:')([^']*)(?:')|([^'">\s]+))/g;
-var tagregex1=/<[\/\?]?[a-zA-Z0-9:_-]+(?:\s+[^"\s?>\/]+\s*=\s*(?:"[^"]*"|'[^']*'|[^'">\s=]+))*\s*[\/\?]?>/mg, tagregex2 = /<[^>]*>/g;
-var tagregex = XML_HEADER.match(tagregex1) ? tagregex1 : tagregex2;
-var nsregex=/<\w*:/, nsregex2 = /<(\/?)\w+:/;
-function parsexmltag(tag, skip_root, skip_LC) {
-	var z = ({});
-	var eq = 0, c = 0;
-	for(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;
-	if(!skip_root) z[0] = tag.slice(0, eq);
-	if(eq === tag.length) return z;
-	var m = tag.match(attregexg), j=0, v="", i=0, q="", cc="", quot = 1;
-	if(m) for(i = 0; i != m.length; ++i) {
-		cc = m[i];
-		for(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;
-		q = cc.slice(0,c).trim();
-		while(cc.charCodeAt(c+1) == 32) ++c;
-		quot = ((eq=cc.charCodeAt(c+1)) == 34 || eq == 39) ? 1 : 0;
-		v = cc.slice(c+1+quot, cc.length-quot);
-		for(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;
-		if(j===q.length) {
-			if(q.indexOf("_") > 0) q = q.slice(0, q.indexOf("_")); // from ods
-			z[q] = v;
-			if(!skip_LC) z[q.toLowerCase()] = v;
-		}
-		else {
-			var k = (j===5 && q.slice(0,5)==="xmlns"?"xmlns":"")+q.slice(j+1);
-			if(z[k] && q.slice(j-3,j) == "ext") continue; // from ods
-			z[k] = v;
-			if(!skip_LC) z[k.toLowerCase()] = v;
-		}
-	}
-	return z;
-}
-function strip_ns(x) { return x.replace(nsregex2, "<$1"); }
-
-var encodings = {
-	'&quot;': '"',
-	'&apos;': "'",
-	'&gt;': '>',
-	'&lt;': '<',
-	'&amp;': '&'
-};
-var rencoding = evert(encodings);
-//var rencstr = "&<>'\"".split("");
-
-// TODO: CP remap (need to read file version to determine OS)
-var unescapexml = (function() {
-	/* 22.4.2.4 bstr (Basic String) */
-	var encregex = /&(?:quot|apos|gt|lt|amp|#x?([\da-fA-F]+));/ig, coderegex = /_x([\da-fA-F]{4})_/ig;
-	function raw_unescapexml(text) {
-		var s = text + '', i = s.indexOf("<![CDATA[");
-		if(i == -1) return s.replace(encregex, function($$, $1) { return encodings[$$]||String.fromCharCode(parseInt($1,$$.indexOf("x")>-1?16:10))||$$; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});
-		var j = s.indexOf("]]>");
-		return raw_unescapexml(s.slice(0, i)) + s.slice(i+9,j) + raw_unescapexml(s.slice(j+3));
-	}
-	return function unescapexml(text, xlsx) {
-		var out = raw_unescapexml(text);
-		return xlsx ? out.replace(/\r\n/g, "\n") : out;
-	};
-})();
-
-var decregex=/[&<>'"]/g, charegex = /[\u0000-\u0008\u000b-\u001f\uFFFE-\uFFFF]/g;
-function escapexml(text){
-	var s = text + '';
-	return s.replace(decregex, function(y) { return rencoding[y]; }).replace(charegex,function(s) { return "_x" + ("000"+s.charCodeAt(0).toString(16)).slice(-4) + "_";});
-}
-function escapexmltag(text){ return escapexml(text).replace(/ /g,"_x0020_"); }
-
-var htmlcharegex = /[\u0000-\u001f]/g;
-function escapehtml(text){
-	var s = text + '';
-	return s.replace(decregex, function(y) { return rencoding[y]; }).replace(/\n/g, "<br/>").replace(htmlcharegex,function(s) { return "&#x" + ("000"+s.charCodeAt(0).toString(16)).slice(-4) + ";"; });
-}
-
-function escapexlml(text){
-	var s = text + '';
-	return s.replace(decregex, function(y) { return rencoding[y]; }).replace(htmlcharegex,function(s) { return "&#x" + (s.charCodeAt(0).toString(16)).toUpperCase() + ";"; });
-}
-
-/* TODO: handle codepages */
-var xlml_fixstr = (function() {
-	var entregex = /&#(\d+);/g;
-	function entrepl($$,$1) { return String.fromCharCode(parseInt($1,10)); }
-	return function xlml_fixstr(str) { return str.replace(entregex,entrepl); };
-})();
-function xlml_unfixstr(str) { return str.replace(/(\r\n|[\r\n])/g,"\&#10;"); }
-
-/* note: xsd:boolean valid values: true / 1 / false / 0 */
-function parsexmlbool(value) {
-	switch(value) {
-		case 1: case true:  case '1': case 'true':  return true;
-		case 0: case false: case '0': case 'false': return false;
-		//default: throw new Error("Invalid xsd:boolean " + value);
-	}
-	return false;
-}
-
-function utf8reada(orig) {
-	var out = "", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;
-	while (i < orig.length) {
-		c = orig.charCodeAt(i++);
-		if (c < 128) { out += String.fromCharCode(c); continue; }
-		d = orig.charCodeAt(i++);
-		if (c>191 && c<224) { f = ((c & 31) << 6); f |= (d & 63); out += String.fromCharCode(f); continue; }
-		e = orig.charCodeAt(i++);
-		if (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }
-		f = orig.charCodeAt(i++);
-		w = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;
-		out += String.fromCharCode(0xD800 + ((w>>>10)&1023));
-		out += String.fromCharCode(0xDC00 + (w&1023));
-	}
-	return out;
-}
-
-function utf8readb(data) {
-	var out = new_raw_buf(2*data.length), w, i, j = 1, k = 0, ww=0, c;
-	for(i = 0; i < data.length; i+=j) {
-		j = 1;
-		if((c=data.charCodeAt(i)) < 128) w = c;
-		else if(c < 224) { w = (c&31)*64+(data.charCodeAt(i+1)&63); j=2; }
-		else if(c < 240) { w=(c&15)*4096+(data.charCodeAt(i+1)&63)*64+(data.charCodeAt(i+2)&63); j=3; }
-		else { j = 4;
-			w = (c & 7)*262144+(data.charCodeAt(i+1)&63)*4096+(data.charCodeAt(i+2)&63)*64+(data.charCodeAt(i+3)&63);
-			w -= 65536; ww = 0xD800 + ((w>>>10)&1023); w = 0xDC00 + (w&1023);
-		}
-		if(ww !== 0) { out[k++] = ww&255; out[k++] = ww>>>8; ww = 0; }
-		out[k++] = w%256; out[k++] = w>>>8;
-	}
-	return out.slice(0,k).toString('ucs2');
-}
-
-function utf8readc(data) { return Buffer_from(data, 'binary').toString('utf8'); }
-
-var utf8corpus = "foo bar baz\u00e2\u0098\u0083\u00f0\u009f\u008d\u00a3";
-var utf8read = has_buf && (utf8readc(utf8corpus) == utf8reada(utf8corpus) && utf8readc || utf8readb(utf8corpus) == utf8reada(utf8corpus) && utf8readb) || utf8reada;
-
-var utf8write = has_buf ? function(data) { return Buffer_from(data, 'utf8').toString("binary"); } : function(orig) {
-	var out = [], i = 0, c = 0, d = 0;
-	while(i < orig.length) {
-		c = orig.charCodeAt(i++);
-		switch(true) {
-			case c < 128: out.push(String.fromCharCode(c)); break;
-			case c < 2048:
-				out.push(String.fromCharCode(192 + (c >> 6)));
-				out.push(String.fromCharCode(128 + (c & 63)));
-				break;
-			case c >= 55296 && c < 57344:
-				c -= 55296; d = orig.charCodeAt(i++) - 56320 + (c<<10);
-				out.push(String.fromCharCode(240 + ((d >>18) & 7)));
-				out.push(String.fromCharCode(144 + ((d >>12) & 63)));
-				out.push(String.fromCharCode(128 + ((d >> 6) & 63)));
-				out.push(String.fromCharCode(128 + (d & 63)));
-				break;
-			default:
-				out.push(String.fromCharCode(224 + (c >> 12)));
-				out.push(String.fromCharCode(128 + ((c >> 6) & 63)));
-				out.push(String.fromCharCode(128 + (c & 63)));
-		}
-	}
-	return out.join("");
-};
-
-// matches <foo>...</foo> extracts content
-var matchtag = (function() {
-	var mtcache = ({});
-	return function matchtag(f,g) {
-		var t = f+"|"+(g||"");
-		if(mtcache[t]) return mtcache[t];
-		return (mtcache[t] = new RegExp('<(?:\\w+:)?'+f+'(?: xml:space="preserve")?(?:[^>]*)>([\\s\\S]*?)</(?:\\w+:)?'+f+'>',((g||""))));
-	};
-})();
-
-var htmldecode = (function() {
-	var entities = [
-		['nbsp', ' '], ['middot', 'Â·'],
-		['quot', '"'], ['apos', "'"], ['gt',   '>'], ['lt',   '<'], ['amp',  '&']
-	].map(function(x) { return [new RegExp('&' + x[0] + ';', "ig"), x[1]]; });
-	return function htmldecode(str) {
-		var o = str
-				// Remove new lines and spaces from start of content
-				.replace(/^[\t\n\r ]+/, "")
-				// Remove new lines and spaces from end of content
-				.replace(/[\t\n\r ]+$/,"")
-				// Added line which removes any white space characters after and before html tags
-				.replace(/>\s+/g,">").replace(/\s+</g,"<")
-				// Replace remaining new lines and spaces with space
-				.replace(/[\t\n\r ]+/g, " ")
-				// Replace <br> tags with new lines
-				.replace(/<\s*[bB][rR]\s*\/?>/g,"\n")
-				// Strip HTML elements
-				.replace(/<[^>]*>/g,"");
-		for(var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);
-		return o;
-	};
-})();
-
-var vtregex = (function(){ var vt_cache = {};
-	return function vt_regex(bt) {
-		if(vt_cache[bt] !== undefined) return vt_cache[bt];
-		return (vt_cache[bt] = new RegExp("<(?:vt:)?" + bt + ">([\\s\\S]*?)</(?:vt:)?" + bt + ">", 'g') );
-};})();
-var vtvregex = /<\/?(?:vt:)?variant>/g, vtmregex = /<(?:vt:)([^>]*)>([\s\S]*)</;
-function parseVector(data, opts) {
-	var h = parsexmltag(data);
-
-	var matches = data.match(vtregex(h.baseType))||[];
-	var res = [];
-	if(matches.length != h.size) {
-		if(opts.WTF) throw new Error("unexpected vector length " + matches.length + " != " + h.size);
-		return res;
-	}
-	matches.forEach(function(x) {
-		var v = x.replace(vtvregex,"").match(vtmregex);
-		if(v) res.push({v:utf8read(v[2]), t:v[1]});
-	});
-	return res;
-}
-
-var wtregex = /(^\s|\s$|\n)/;
-function writetag(f,g) { return '<' + f + (g.match(wtregex)?' xml:space="preserve"' : "") + '>' + g + '</' + f + '>'; }
-
-function wxt_helper(h) { return keys(h).map(function(k) { return " " + k + '="' + h[k] + '"';}).join(""); }
-function writextag(f,g,h) { return '<' + f + ((h != null) ? wxt_helper(h) : "") + ((g != null) ? (g.match(wtregex)?' xml:space="preserve"' : "") + '>' + g + '</' + f : "/") + '>';}
-
-function write_w3cdtf(d, t) { try { return d.toISOString().replace(/\.\d*/,""); } catch(e) { if(t) throw e; } return ""; }
-
-function write_vt(s, xlsx) {
-	switch(typeof s) {
-		case 'string':
-			var o = writextag('vt:lpwstr', escapexml(s));
-			if(xlsx) o = o.replace(/&quot;/g, "_x0022_");
-			return o;
-		case 'number': return writextag((s|0)==s?'vt:i4':'vt:r8', escapexml(String(s)));
-		case 'boolean': return writextag('vt:bool',s?'true':'false');
-	}
-	if(s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));
-	throw new Error("Unable to serialize " + s);
-}
-
-function xlml_normalize(d) {
-	if(has_buf && Buffer.isBuffer(d)) return d.toString('utf8');
-	if(typeof d === 'string') return d;
-	/* duktape */
-	if(typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));
-	throw new Error("Bad input format: expected Buffer or string");
-}
-/* UOS uses CJK in tags */
-var xlmlregex = /<(\/?)([^\s?><!\/:]*:|)([^\s?<>:\/]+)(?:[\s?:\/](?:[^>=]|="[^"]*?")*)?>/mg;
-//var xlmlregex = /<(\/?)([a-z0-9]*:|)(\w+)[^>]*>/mg;
-
-var XMLNS = ({
-	CORE_PROPS: 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',
-	CUST_PROPS: "http://schemas.openxmlformats.org/officeDocument/2006/custom-properties",
-	EXT_PROPS: "http://schemas.openxmlformats.org/officeDocument/2006/extended-properties",
-	CT: 'http://schemas.openxmlformats.org/package/2006/content-types',
-	RELS: 'http://schemas.openxmlformats.org/package/2006/relationships',
-	TCMNT: 'http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments',
-	'dc': 'http://purl.org/dc/elements/1.1/',
-	'dcterms': 'http://purl.org/dc/terms/',
-	'dcmitype': 'http://purl.org/dc/dcmitype/',
-	'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',
-	'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',
-	'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',
-	'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',
-	'xsi': 'http://www.w3.org/2001/XMLSchema-instance',
-	'xsd': 'http://www.w3.org/2001/XMLSchema'
-});
-
-var XMLNS_main = [
-	'http://schemas.openxmlformats.org/spreadsheetml/2006/main',
-	'http://purl.oclc.org/ooxml/spreadsheetml/main',
-	'http://schemas.microsoft.com/office/excel/2006/main',
-	'http://schemas.microsoft.com/office/excel/2006/2'
-];
-
-var XLMLNS = ({
-	'o':    'urn:schemas-microsoft-com:office:office',
-	'x':    'urn:schemas-microsoft-com:office:excel',
-	'ss':   'urn:schemas-microsoft-com:office:spreadsheet',
-	'dt':   'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',
-	'mv':   'http://macVmlSchemaUri',
-	'v':    'urn:schemas-microsoft-com:vml',
-	'html': 'http://www.w3.org/TR/REC-html40'
-});
-function read_double_le(b, idx) {
-	var s = 1 - 2 * (b[idx + 7] >>> 7);
-	var e = ((b[idx + 7] & 0x7f) << 4) + ((b[idx + 6] >>> 4) & 0x0f);
-	var m = (b[idx+6]&0x0f);
-	for(var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];
-	if(e == 0x7ff) return m == 0 ? (s * Infinity) : NaN;
-	if(e == 0) e = -1022;
-	else { e -= 1023; m += Math.pow(2,52); }
-	return s * Math.pow(2, e - 52) * m;
-}
-
-function write_double_le(b, v, idx) {
-	var bs = ((((v < 0) || (1/v == -Infinity)) ? 1 : 0) << 7), e = 0, m = 0;
-	var av = bs ? (-v) : v;
-	if(!isFinite(av)) { e = 0x7ff; m = isNaN(v) ? 0x6969 : 0; }
-	else if(av == 0) e = m = 0;
-	else {
-		e = Math.floor(Math.log(av) / Math.LN2);
-		m = av * Math.pow(2, 52 - e);
-		if((e <= -1023) && (!isFinite(m) || (m < Math.pow(2,52)))) { e = -1022; }
-		else { m -= Math.pow(2,52); e+=1023; }
-	}
-	for(var i = 0; i <= 5; ++i, m/=256) b[idx + i] = m & 0xff;
-	b[idx + 6] = ((e & 0x0f) << 4) | (m & 0xf);
-	b[idx + 7] = (e >> 4) | bs;
-}
-
-var ___toBuffer = function(bufs) { var x=[],w=10240; for(var i=0;i<bufs[0].length;++i) if(bufs[0][i]) for(var j=0,L=bufs[0][i].length;j<L;j+=w) x.push.apply(x, bufs[0][i].slice(j,j+w)); return x; };
-var __toBuffer = has_buf ? function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat(bufs[0].map(function(x) { return Buffer.isBuffer(x) ? x : Buffer_from(x); })) : ___toBuffer(bufs);} : ___toBuffer;
-
-var ___utf16le = function(b,s,e) { var ss=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join("").replace(chr0,''); };
-var __utf16le = has_buf ? function(b,s,e) { if(!Buffer.isBuffer(b) || !buf_utf16le) return ___utf16le(b,s,e); return b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/; } : ___utf16le;
-
-var ___hexlify = function(b,s,l) { var ss=[]; for(var i=s; i<s+l; ++i) ss.push(("0" + b[i].toString(16)).slice(-2)); return ss.join(""); };
-var __hexlify = has_buf ? function(b,s,l) { return Buffer.isBuffer(b) ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); } : ___hexlify;
-
-var ___utf8 = function(b,s,e) { var ss=[]; for(var i=s; i<e; i++) ss.push(String.fromCharCode(__readUInt8(b,i))); return ss.join(""); };
-var __utf8 = has_buf ? function utf8_b(b, s, e) { return (Buffer.isBuffer(b)) ? b.toString('utf8',s,e) : ___utf8(b,s,e); } : ___utf8;
-
-var ___lpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : "";};
-var __lpstr = ___lpstr;
-
-var ___cpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : "";};
-var __cpstr = ___cpstr;
-
-var ___lpwstr = function(b,i) { var len = 2*__readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : "";};
-var __lpwstr = ___lpwstr;
-
-var ___lpp4 = function lpp4_(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf16le(b, i+4,i+4+len) : "";};
-var __lpp4 = ___lpp4;
-
-var ___8lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len) : "";};
-var __8lpp4 = ___8lpp4;
-
-var ___double = function(b, idx) { return read_double_le(b, idx);};
-var __double = ___double;
-
-var is_buf = function is_buf_a(a) { return Array.isArray(a) || (typeof Uint8Array !== "undefined" && a instanceof Uint8Array); };
-
-if(has_buf) {
-	__lpstr = function lpstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___lpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : "";};
-	__cpstr = function cpstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___cpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : "";};
-	__lpwstr = function lpwstr_b(b, i) { if(!Buffer.isBuffer(b) || !buf_utf16le) return ___lpwstr(b, i); var len = 2*b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len-1);};
-	__lpp4 = function lpp4_b(b, i) { if(!Buffer.isBuffer(b) || !buf_utf16le) return ___lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len);};
-	__8lpp4 = function lpp4_8b(b, i) { if(!Buffer.isBuffer(b)) return ___8lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf8',i+4,i+4+len);};
-	__double = function double_(b, i) { if(Buffer.isBuffer(b)) return b.readDoubleLE(i); return ___double(b,i); };
-	is_buf = function is_buf_b(a) { return Buffer.isBuffer(a) || Array.isArray(a) || (typeof Uint8Array !== "undefined" && a instanceof Uint8Array); };
-}
-
-/* from js-xls */
-function cpdoit() {
-	__utf16le = function(b,s,e) { return $cptable.utils.decode(1200, b.slice(s,e)).replace(chr0, ''); };
-	__utf8 = function(b,s,e) { return $cptable.utils.decode(65001, b.slice(s,e)); };
-	__lpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(current_ansi, b.slice(i+4, i+4+len-1)) : "";};
-	__cpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(current_codepage, b.slice(i+4, i+4+len-1)) : "";};
-	__lpwstr = function(b,i) { var len = 2*__readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(1200, b.slice(i+4,i+4+len-1)) : "";};
-	__lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(1200, b.slice(i+4,i+4+len)) : "";};
-	__8lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(65001, b.slice(i+4,i+4+len)) : "";};
-}
-if(typeof $cptable !== 'undefined') cpdoit();
-
-var __readUInt8 = function(b, idx) { return b[idx]; };
-var __readUInt16LE = function(b, idx) { return (b[idx+1]*(1<<8))+b[idx]; };
-var __readInt16LE = function(b, idx) { var u = (b[idx+1]*(1<<8))+b[idx]; return (u < 0x8000) ? u : ((0xffff - u + 1) * -1); };
-var __readUInt32LE = function(b, idx) { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };
-var __readInt32LE = function(b, idx) { return (b[idx+3]<<24)|(b[idx+2]<<16)|(b[idx+1]<<8)|b[idx]; };
-var __readInt32BE = function(b, idx) { return (b[idx]<<24)|(b[idx+1]<<16)|(b[idx+2]<<8)|b[idx+3]; };
-
-function ReadShift(size, t) {
-	var o="", oI, oR, oo=[], w, vv, i, loc;
-	switch(t) {
-		case 'dbcs':
-			loc = this.l;
-			if(has_buf && Buffer.isBuffer(this)  && buf_utf16le) o = this.slice(this.l, this.l+2*size).toString("utf16le");
-			else for(i = 0; i < size; ++i) { o+=String.fromCharCode(__readUInt16LE(this, loc)); loc+=2; }
-			size *= 2;
-			break;
-
-		case 'utf8': o = __utf8(this, this.l, this.l + size); break;
-		case 'utf16le': size *= 2; o = __utf16le(this, this.l, this.l + size); break;
-
-		case 'wstr':
-			if(typeof $cptable !== 'undefined') o = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l+2*size));
-			else return ReadShift.call(this, size, 'dbcs');
-			size = 2 * size; break;
-
-		/* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */
-		case 'lpstr-ansi': o = __lpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;
-		case 'lpstr-cp': o = __cpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;
-		/* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */
-		case 'lpwstr': o = __lpwstr(this, this.l); size = 4 + 2 * __readUInt32LE(this, this.l); break;
-		/* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */
-		case 'lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __lpp4(this, this.l); if(size & 0x02) size += 2; break;
-		/* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */
-		case '8lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __8lpp4(this, this.l); if(size & 0x03) size += 4 - (size & 0x03); break;
-
-		case 'cstr': size = 0; o = "";
-			while((w=__readUInt8(this, this.l + size++))!==0) oo.push(_getchar(w));
-			o = oo.join(""); break;
-		case '_wstr': size = 0; o = "";
-			while((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}
-			size+=2; o = oo.join(""); break;
-
-		/* sbcs and dbcs support continue records in the SST way TODO codepages */
-		case 'dbcs-cont': o = ""; loc = this.l;
-			for(i = 0; i < size; ++i) {
-				if(this.lens && this.lens.indexOf(loc) !== -1) {
-					w = __readUInt8(this, loc);
-					this.l = loc + 1;
-					vv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');
-					return oo.join("") + vv;
-				}
-				oo.push(_getchar(__readUInt16LE(this, loc)));
-				loc+=2;
-			} o = oo.join(""); size *= 2; break;
-
-		case 'cpstr':
-			if(typeof $cptable !== 'undefined') {
-				o = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));
-				break;
-			}
-		/* falls through */
-		case 'sbcs-cont': o = ""; loc = this.l;
-			for(i = 0; i != size; ++i) {
-				if(this.lens && this.lens.indexOf(loc) !== -1) {
-					w = __readUInt8(this, loc);
-					this.l = loc + 1;
-					vv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');
-					return oo.join("") + vv;
-				}
-				oo.push(_getchar(__readUInt8(this, loc)));
-				loc+=1;
-			} o = oo.join(""); break;
-
-		default:
-	switch(size) {
-		case 1: oI = __readUInt8(this, this.l); this.l++; return oI;
-		case 2: oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l); this.l += 2; return oI;
-		case 4: case -4:
-			if(t === 'i' || ((this[this.l+3] & 0x80)===0)) { oI = ((size > 0) ? __readInt32LE : __readInt32BE)(this, this.l); this.l += 4; return oI; }
-			else { oR = __readUInt32LE(this, this.l); this.l += 4; } return oR;
-		case 8: case -8:
-			if(t === 'f') {
-				if(size == 8) oR = __double(this, this.l);
-				else oR = __double([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]], 0);
-				this.l += 8; return oR;
-			} else size = 8;
-		/* falls through */
-		case 16: o = __hexlify(this, this.l, size); break;
-	}}
-	this.l+=size; return o;
-}
-
-var __writeUInt32LE = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };
-var __writeInt32LE  = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };
-var __writeUInt16LE = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); };
-
-function WriteShift(t, val, f) {
-	var size = 0, i = 0;
-	if(f === 'dbcs') {
-for(i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);
-		size = 2 * val.length;
-	} else if(f === 'sbcs' || f == 'cpstr') {
-		if(typeof $cptable !== 'undefined' && current_ansi == 874) {
-			/* TODO: use tables directly, don't encode */
-for(i = 0; i != val.length; ++i) {
-				var cpp = $cptable.utils.encode(current_ansi, val.charAt(i));
-				this[this.l + i] = cpp[0];
-			}
-			size = val.length;
-		} else if(typeof $cptable !== 'undefined' && f == 'cpstr') {
-			cpp = $cptable.utils.encode(current_codepage, val);
-			/* replace null bytes with _ when relevant */
-      if(cpp.length == val.length) for(i = 0; i < val.length; ++i) if(cpp[i] == 0 && val.charCodeAt(i) != 0) cpp[i] = 0x5F;
-      if(cpp.length == 2 * val.length) for(i = 0; i < val.length; ++i) if(cpp[2*i] == 0 && cpp[2*i+1] == 0 && val.charCodeAt(i) != 0) cpp[2*i] = 0x5F;
-			for(i = 0; i < cpp.length; ++i) this[this.l + i] = cpp[i];
-			size = cpp.length;
-		} else {
-val = val.replace(/[^\x00-\x7F]/g, "_");
-for(i = 0; i != val.length; ++i) this[this.l + i] = (val.charCodeAt(i) & 0xFF);
-			size = val.length;
-		}
-	} else if(f === 'hex') {
-		for(; i < t; ++i) {
-this[this.l++] = (parseInt(val.slice(2*i, 2*i+2), 16)||0);
-		} return this;
-	} else if(f === 'utf16le') {
-var end = Math.min(this.l + t, this.length);
-			for(i = 0; i < Math.min(val.length, t); ++i) {
-				var cc = val.charCodeAt(i);
-				this[this.l++] = (cc & 0xff);
-				this[this.l++] = (cc >> 8);
-			}
-			while(this.l < end) this[this.l++] = 0;
-			return this;
-	} else  switch(t) {
-		case  1: size = 1; this[this.l] = val&0xFF; break;
-		case  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;
-		case  3: size = 3; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; val >>>= 8; this[this.l+2] = val&0xFF; break;
-		case  4: size = 4; __writeUInt32LE(this, val, this.l); break;
-		case  8: size = 8; if(f === 'f') { write_double_le(this, val, this.l); break; }
-		/* falls through */
-		case 16: break;
-		case -4: size = 4; __writeInt32LE(this, val, this.l); break;
-	}
-	this.l += size; return this;
-}
-
-function CheckField(hexstr, fld) {
-	var m = __hexlify(this,this.l,hexstr.length>>1);
-	if(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);
-	this.l += hexstr.length>>1;
-}
-
-function prep_blob(blob, pos) {
-	blob.l = pos;
-	blob.read_shift = ReadShift;
-	blob.chk = CheckField;
-	blob.write_shift = WriteShift;
-}
-
-function parsenoop(blob, length) { blob.l += length; }
-
-function new_buf(sz) {
-	var o = new_raw_buf(sz);
-	prep_blob(o, 0);
-	return o;
-}
-
-/* [MS-XLSB] 2.1.4 Record */
-function recordhopper(data, cb, opts) {
-	if(!data) return;
-	var tmpbyte, cntbyte, length;
-	prep_blob(data, data.l || 0);
-	var L = data.length, RT = 0, tgt = 0;
-	while(data.l < L) {
-		RT = data.read_shift(1);
-		if(RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F)<<7);
-		var R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];
-		tmpbyte = data.read_shift(1);
-		length = tmpbyte & 0x7F;
-		for(cntbyte = 1; cntbyte <4 && (tmpbyte & 0x80); ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F)<<(7*cntbyte);
-		tgt = data.l + length;
-		var d = R.f && R.f(data, length, opts);
-		data.l = tgt;
-		if(cb(d, R, RT)) return;
-	}
-}
-
-/* control buffer usage for fixed-length buffers */
-function buf_array() {
-	var bufs = [], blksz = has_buf ? 256 : 2048;
-	var newblk = function ba_newblk(sz) {
-		var o = (new_buf(sz));
-		prep_blob(o, 0);
-		return o;
-	};
-
-	var curbuf = newblk(blksz);
-
-	var endbuf = function ba_endbuf() {
-		if(!curbuf) return;
-		// workaround for new Buffer(3).slice(0,0) bug in bun 0.1.3
-		if(curbuf.l) {
-			if(curbuf.length > curbuf.l) { curbuf = curbuf.slice(0, curbuf.l); curbuf.l = curbuf.length; }
-			if(curbuf.length > 0) bufs.push(curbuf);
-		}
-		curbuf = null;
-	};
-
-	var next = function ba_next(sz) {
-		if(curbuf && (sz < (curbuf.length - curbuf.l))) return curbuf;
-		endbuf();
-		return (curbuf = newblk(Math.max(sz+1, blksz)));
-	};
-
-	var end = function ba_end() {
-		endbuf();
-		return bconcat(bufs);
-	};
-
-	var push = function ba_push(buf) { endbuf(); curbuf = buf; if(curbuf.l == null) curbuf.l = curbuf.length; next(blksz); };
-
-	return ({ next:next, push:push, end:end, _bufs:bufs });
-}
-
-function write_record(ba, type, payload, length) {
-	var t = +type, l;
-	if(isNaN(t)) return; // TODO: throw something here?
-	if(!length) length = XLSBRecordEnum[t].p || (payload||[]).length || 0;
-	l = 1 + (t >= 0x80 ? 1 : 0) + 1/* + length*/;
-	if(length >= 0x80) ++l; if(length >= 0x4000) ++l; if(length >= 0x200000) ++l;
-	var o = ba.next(l);
-	if(t <= 0x7F) o.write_shift(1, t);
-	else {
-		o.write_shift(1, (t & 0x7F) + 0x80);
-		o.write_shift(1, (t >> 7));
-	}
-	for(var i = 0; i != 4; ++i) {
-		if(length >= 0x80) { o.write_shift(1, (length & 0x7F)+0x80); length >>= 7; }
-		else { o.write_shift(1, length); break; }
-	}
-	if(length > 0 && is_buf(payload)) ba.push(payload);
-}
-/* XLS ranges enforced */
-function shift_cell_xls(cell, tgt, opts) {
-	var out = dup(cell);
-	if(tgt.s) {
-		if(out.cRel) out.c += tgt.s.c;
-		if(out.rRel) out.r += tgt.s.r;
-	} else {
-		if(out.cRel) out.c += tgt.c;
-		if(out.rRel) out.r += tgt.r;
-	}
-	if(!opts || opts.biff < 12) {
-		while(out.c >= 0x100) out.c -= 0x100;
-		while(out.r >= 0x10000) out.r -= 0x10000;
-	}
-	return out;
-}
-
-function shift_range_xls(cell, range, opts) {
-	var out = dup(cell);
-	out.s = shift_cell_xls(out.s, range.s, opts);
-	out.e = shift_cell_xls(out.e, range.s, opts);
-	return out;
-}
-
-function encode_cell_xls(c, biff) {
-	if(c.cRel && c.c < 0) { c = dup(c); while(c.c < 0) c.c += (biff > 8) ? 0x4000 : 0x100; }
-	if(c.rRel && c.r < 0) { c = dup(c); while(c.r < 0) c.r += (biff > 8) ? 0x100000 : ((biff > 5) ? 0x10000 : 0x4000); }
-	var s = encode_cell(c);
-	if(!c.cRel && c.cRel != null) s = fix_col(s);
-	if(!c.rRel && c.rRel != null) s = fix_row(s);
-	return s;
-}
-
-function encode_range_xls(r, opts) {
-	if(r.s.r == 0 && !r.s.rRel) {
-		if(r.e.r == (opts.biff >= 12 ? 0xFFFFF : (opts.biff >= 8 ? 0x10000 : 0x4000)) && !r.e.rRel) {
-			return (r.s.cRel ? "" : "$") + encode_col(r.s.c) + ":" + (r.e.cRel ? "" : "$") + encode_col(r.e.c);
-		}
-	}
-	if(r.s.c == 0 && !r.s.cRel) {
-		if(r.e.c == (opts.biff >= 12 ? 0x3FFF : 0xFF) && !r.e.cRel) {
-			return (r.s.rRel ? "" : "$") + encode_row(r.s.r) + ":" + (r.e.rRel ? "" : "$") + encode_row(r.e.r);
-		}
-	}
-	return encode_cell_xls(r.s, opts.biff) + ":" + encode_cell_xls(r.e, opts.biff);
-}
-function decode_row(rowstr) { return parseInt(unfix_row(rowstr),10) - 1; }
-function encode_row(row) { return "" + (row + 1); }
-function fix_row(cstr) { return cstr.replace(/([A-Z]|^)(\d+)$/,"$1$$$2"); }
-function unfix_row(cstr) { return cstr.replace(/\$(\d+)$/,"$1"); }
-
-function decode_col(colstr) { var c = unfix_col(colstr), d = 0, i = 0; for(; i !== c.length; ++i) d = 26*d + c.charCodeAt(i) - 64; return d - 1; }
-function encode_col(col) { if(col < 0) throw new Error("invalid column " + col); var s=""; for(++col; col; col=Math.floor((col-1)/26)) s = String.fromCharCode(((col-1)%26) + 65) + s; return s; }
-function fix_col(cstr) { return cstr.replace(/^([A-Z])/,"$$$1"); }
-function unfix_col(cstr) { return cstr.replace(/^\$([A-Z])/,"$1"); }
-
-function split_cell(cstr) { return cstr.replace(/(\$?[A-Z]*)(\$?\d*)/,"$1,$2").split(","); }
-//function decode_cell(cstr) { var splt = split_cell(cstr); return { c:decode_col(splt[0]), r:decode_row(splt[1]) }; }
-function decode_cell(cstr) {
-	var R = 0, C = 0;
-	for(var i = 0; i < cstr.length; ++i) {
-		var cc = cstr.charCodeAt(i);
-		if(cc >= 48 && cc <= 57) R = 10 * R + (cc - 48);
-		else if(cc >= 65 && cc <= 90) C = 26 * C + (cc - 64);
-	}
-	return { c: C - 1, r:R - 1 };
-}
-//function encode_cell(cell) { return encode_col(cell.c) + encode_row(cell.r); }
-function encode_cell(cell) {
-	var col = cell.c + 1;
-	var s="";
-	for(; col; col=((col-1)/26)|0) s = String.fromCharCode(((col-1)%26) + 65) + s;
-	return s + (cell.r + 1);
-}
-function decode_range(range) {
-	var idx = range.indexOf(":");
-	if(idx == -1) return { s: decode_cell(range), e: decode_cell(range) };
-	return { s: decode_cell(range.slice(0, idx)), e: decode_cell(range.slice(idx + 1)) };
-}
-function encode_range(cs,ce) {
-	if(typeof ce === 'undefined' || typeof ce === 'number') {
-return encode_range(cs.s, cs.e);
-	}
-if(typeof cs !== 'string') cs = encode_cell((cs));
-	if(typeof ce !== 'string') ce = encode_cell((ce));
-return cs == ce ? cs : cs + ":" + ce;
-}
-function fix_range(a1) {
-	var s = decode_range(a1);
-	return "$" + encode_col(s.s.c) + "$" + encode_row(s.s.r) + ":$" + encode_col(s.e.c) + "$" + encode_row(s.e.r);
-}
-
-// List of invalid characters needs to be tested further
-function formula_quote_sheet_name(sname, opts) {
-	if(!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error("empty sheet name");
-	if (/[^\w\u4E00-\u9FFF\u3040-\u30FF]/.test(sname)) return "'" + sname.replace(/'/g, "''") + "'";
-	return sname;
-}
-
-function safe_decode_range(range) {
-	var o = {s:{c:0,r:0},e:{c:0,r:0}};
-	var idx = 0, i = 0, cc = 0;
-	var len = range.length;
-	for(idx = 0; i < len; ++i) {
-		if((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;
-		idx = 26*idx + cc;
-	}
-	o.s.c = --idx;
-
-	for(idx = 0; i < len; ++i) {
-		if((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;
-		idx = 10*idx + cc;
-	}
-	o.s.r = --idx;
-
-	if(i === len || cc != 10) { o.e.c=o.s.c; o.e.r=o.s.r; return o; }
-	++i;
-
-	for(idx = 0; i != len; ++i) {
-		if((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;
-		idx = 26*idx + cc;
-	}
-	o.e.c = --idx;
-
-	for(idx = 0; i != len; ++i) {
-		if((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;
-		idx = 10*idx + cc;
-	}
-	o.e.r = --idx;
-	return o;
-}
-
-function safe_format_cell(cell, v) {
-	var q = (cell.t == 'd' && v instanceof Date);
-	if(cell.z != null) try { return (cell.w = SSF_format(cell.z, q ? datenum(v) : v)); } catch(e) { }
-	try { return (cell.w = SSF_format((cell.XF||{}).numFmtId||(q ? 14 : 0),  q ? datenum(v) : v)); } catch(e) { return ''+v; }
-}
-
-function format_cell(cell, v, o) {
-	if(cell == null || cell.t == null || cell.t == 'z') return "";
-	if(cell.w !== undefined) return cell.w;
-	if(cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;
-	if(cell.t == "e") return BErr[cell.v] || cell.v;
-	if(v == undefined) return safe_format_cell(cell, cell.v);
-	return safe_format_cell(cell, v);
-}
-
-function sheet_to_workbook(sheet, opts) {
-	var n = opts && opts.sheet ? opts.sheet : "Sheet1";
-	var sheets = {}; sheets[n] = sheet;
-	return { SheetNames: [n], Sheets: sheets };
-}
-
-function sheet_add_aoa(_ws, data, opts) {
-	var o = opts || {};
-	var dense = _ws ? Array.isArray(_ws) : o.dense;
-	if(DENSE != null && dense == null) dense = DENSE;
-	var ws = _ws || (dense ? ([]) : ({}));
-	var _R = 0, _C = 0;
-	if(ws && o.origin != null) {
-		if(typeof o.origin == 'number') _R = o.origin;
-		else {
-			var _origin = typeof o.origin == "string" ? decode_cell(o.origin) : o.origin;
-			_R = _origin.r; _C = _origin.c;
-		}
-		if(!ws["!ref"]) ws["!ref"] = "A1:A1";
-	}
-	var range = ({s: {c:10000000, r:10000000}, e: {c:0, r:0}});
-	if(ws['!ref']) {
-		var _range = safe_decode_range(ws['!ref']);
-		range.s.c = _range.s.c;
-		range.s.r = _range.s.r;
-		range.e.c = Math.max(range.e.c, _range.e.c);
-		range.e.r = Math.max(range.e.r, _range.e.r);
-		if(_R == -1) range.e.r = _R = _range.e.r + 1;
-	}
-	for(var R = 0; R != data.length; ++R) {
-		if(!data[R]) continue;
-		if(!Array.isArray(data[R])) throw new Error("aoa_to_sheet expects an array of arrays");
-		for(var C = 0; C != data[R].length; ++C) {
-			if(typeof data[R][C] === 'undefined') continue;
-			var cell = ({v: data[R][C] });
-			var __R = _R + R, __C = _C + C;
-			if(range.s.r > __R) range.s.r = __R;
-			if(range.s.c > __C) range.s.c = __C;
-			if(range.e.r < __R) range.e.r = __R;
-			if(range.e.c < __C) range.e.c = __C;
-			if(data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];
-			else {
-				if(Array.isArray(cell.v)) { cell.f = data[R][C][1]; cell.v = cell.v[0]; }
-				if(cell.v === null) {
-					if(cell.f) cell.t = 'n';
-					else if(o.nullError) { cell.t = 'e'; cell.v = 0; }
-					else if(!o.sheetStubs) continue;
-					else cell.t = 'z';
-				}
-				else if(typeof cell.v === 'number') cell.t = 'n';
-				else if(typeof cell.v === 'boolean') cell.t = 'b';
-				else if(cell.v instanceof Date) {
-					cell.z = o.dateNF || table_fmt[14];
-					if(o.cellDates) { cell.t = 'd'; cell.w = SSF_format(cell.z, datenum(cell.v, o.date1904)); }
-					else { cell.t = 'n'; cell.v = datenum(cell.v, o.date1904); cell.w = SSF_format(cell.z, cell.v); }
-				}
-				else cell.t = 's';
-			}
-			if(dense) {
-				if(!ws[__R]) ws[__R] = [];
-				if(ws[__R][__C] && ws[__R][__C].z) cell.z = ws[__R][__C].z;
-				ws[__R][__C] = cell;
-			} else {
-				var cell_ref = encode_cell(({c:__C,r:__R}));
-				if(ws[cell_ref] && ws[cell_ref].z) cell.z = ws[cell_ref].z;
-				ws[cell_ref] = cell;
-			}
-		}
-	}
-	if(range.s.c < 10000000) ws['!ref'] = encode_range(range);
-	return ws;
-}
-function aoa_to_sheet(data, opts) { return sheet_add_aoa(null, data, opts); }
-
-/* [MS-OLEPS] 2.2 PropertyType */
-// Note: some tree shakers cannot handle VT_VECTOR | $CONST, hence extra vars
-//var VT_EMPTY    = 0x0000;
-//var VT_NULL     = 0x0001;
-var VT_I2       = 0x0002;
-var VT_I4       = 0x0003;
-//var VT_R4       = 0x0004;
-//var VT_R8       = 0x0005;
-//var VT_CY       = 0x0006;
-//var VT_DATE     = 0x0007;
-//var VT_BSTR     = 0x0008;
-//var VT_ERROR    = 0x000A;
-var VT_BOOL     = 0x000B;
-var VT_VARIANT  = 0x000C;
-//var VT_DECIMAL  = 0x000E;
-//var VT_I1       = 0x0010;
-//var VT_UI1      = 0x0011;
-//var VT_UI2      = 0x0012;
-var VT_UI4      = 0x0013;
-//var VT_I8       = 0x0014;
-//var VT_UI8      = 0x0015;
-//var VT_INT      = 0x0016;
-//var VT_UINT     = 0x0017;
-//var VT_LPSTR    = 0x001E;
-//var VT_LPWSTR   = 0x001F;
-var VT_FILETIME = 0x0040;
-var VT_BLOB     = 0x0041;
-//var VT_STREAM   = 0x0042;
-//var VT_STORAGE  = 0x0043;
-//var VT_STREAMED_Object  = 0x0044;
-//var VT_STORED_Object    = 0x0045;
-//var VT_BLOB_Object      = 0x0046;
-var VT_CF       = 0x0047;
-//var VT_CLSID    = 0x0048;
-//var VT_VERSIONED_STREAM = 0x0049;
-//var VT_VECTOR   = 0x1000;
-var VT_VECTOR_VARIANT = 0x100C;
-var VT_VECTOR_LPSTR   = 0x101E;
-//var VT_ARRAY    = 0x2000;
-
-var VT_STRING   = 0x0050; // 2.3.3.1.11 VtString
-var VT_USTR     = 0x0051; // 2.3.3.1.12 VtUnalignedString
-var VT_CUSTOM   = [VT_STRING, VT_USTR];
-
-/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */
-var DocSummaryPIDDSI = {
-0x01: { n: 'CodePage', t: VT_I2 },
-0x02: { n: 'Category', t: VT_STRING },
-0x03: { n: 'PresentationFormat', t: VT_STRING },
-0x04: { n: 'ByteCount', t: VT_I4 },
-0x05: { n: 'LineCount', t: VT_I4 },
-0x06: { n: 'ParagraphCount', t: VT_I4 },
-0x07: { n: 'SlideCount', t: VT_I4 },
-0x08: { n: 'NoteCount', t: VT_I4 },
-0x09: { n: 'HiddenCount', t: VT_I4 },
-0x0a: { n: 'MultimediaClipCount', t: VT_I4 },
-0x0b: { n: 'ScaleCrop', t: VT_BOOL },
-0x0c: { n: 'HeadingPairs', t: VT_VECTOR_VARIANT /* VT_VECTOR | VT_VARIANT */ },
-0x0d: { n: 'TitlesOfParts', t: VT_VECTOR_LPSTR /* VT_VECTOR | VT_LPSTR */ },
-0x0e: { n: 'Manager', t: VT_STRING },
-0x0f: { n: 'Company', t: VT_STRING },
-0x10: { n: 'LinksUpToDate', t: VT_BOOL },
-0x11: { n: 'CharacterCount', t: VT_I4 },
-0x13: { n: 'SharedDoc', t: VT_BOOL },
-0x16: { n: 'HyperlinksChanged', t: VT_BOOL },
-0x17: { n: 'AppVersion', t: VT_I4, p: 'version' },
-0x18: { n: 'DigSig', t: VT_BLOB },
-0x1A: { n: 'ContentType', t: VT_STRING },
-0x1B: { n: 'ContentStatus', t: VT_STRING },
-0x1C: { n: 'Language', t: VT_STRING },
-0x1D: { n: 'Version', t: VT_STRING },
-0xFF: {},
-	/* [MS-OLEPS] 2.18 */
-0x80000000: { n: 'Locale', t: VT_UI4 },
-0x80000003: { n: 'Behavior', t: VT_UI4 },
-0x72627262: {}
-};
-
-/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */
-var SummaryPIDSI = {
-0x01: { n: 'CodePage', t: VT_I2 },
-0x02: { n: 'Title', t: VT_STRING },
-0x03: { n: 'Subject', t: VT_STRING },
-0x04: { n: 'Author', t: VT_STRING },
-0x05: { n: 'Keywords', t: VT_STRING },
-0x06: { n: 'Comments', t: VT_STRING },
-0x07: { n: 'Template', t: VT_STRING },
-0x08: { n: 'LastAuthor', t: VT_STRING },
-0x09: { n: 'RevNumber', t: VT_STRING },
-0x0A: { n: 'EditTime', t: VT_FILETIME },
-0x0B: { n: 'LastPrinted', t: VT_FILETIME },
-0x0C: { n: 'CreatedDate', t: VT_FILETIME },
-0x0D: { n: 'ModifiedDate', t: VT_FILETIME },
-0x0E: { n: 'PageCount', t: VT_I4 },
-0x0F: { n: 'WordCount', t: VT_I4 },
-0x10: { n: 'CharCount', t: VT_I4 },
-0x11: { n: 'Thumbnail', t: VT_CF },
-0x12: { n: 'Application', t: VT_STRING },
-0x13: { n: 'DocSecurity', t: VT_I4 },
-0xFF: {},
-	/* [MS-OLEPS] 2.18 */
-0x80000000: { n: 'Locale', t: VT_UI4 },
-0x80000003: { n: 'Behavior', t: VT_UI4 },
-0x72627262: {}
-};
-
-/* [MS-XLS] 2.4.63 Country/Region codes */
-var CountryEnum = {
-0x0001: "US", // United States
-0x0002: "CA", // Canada
-0x0003: "", // Latin America (except Brazil)
-0x0007: "RU", // Russia
-0x0014: "EG", // Egypt
-0x001E: "GR", // Greece
-0x001F: "NL", // Netherlands
-0x0020: "BE", // Belgium
-0x0021: "FR", // France
-0x0022: "ES", // Spain
-0x0024: "HU", // Hungary
-0x0027: "IT", // Italy
-0x0029: "CH", // Switzerland
-0x002B: "AT", // Austria
-0x002C: "GB", // United Kingdom
-0x002D: "DK", // Denmark
-0x002E: "SE", // Sweden
-0x002F: "NO", // Norway
-0x0030: "PL", // Poland
-0x0031: "DE", // Germany
-0x0034: "MX", // Mexico
-0x0037: "BR", // Brazil
-0x003d: "AU", // Australia
-0x0040: "NZ", // New Zealand
-0x0042: "TH", // Thailand
-0x0051: "JP", // Japan
-0x0052: "KR", // Korea
-0x0054: "VN", // Viet Nam
-0x0056: "CN", // China
-0x005A: "TR", // Turkey
-0x0069: "JS", // Ramastan
-0x00D5: "DZ", // Algeria
-0x00D8: "MA", // Morocco
-0x00DA: "LY", // Libya
-0x015F: "PT", // Portugal
-0x0162: "IS", // Iceland
-0x0166: "FI", // Finland
-0x01A4: "CZ", // Czech Republic
-0x0376: "TW", // Taiwan
-0x03C1: "LB", // Lebanon
-0x03C2: "JO", // Jordan
-0x03C3: "SY", // Syria
-0x03C4: "IQ", // Iraq
-0x03C5: "KW", // Kuwait
-0x03C6: "SA", // Saudi Arabia
-0x03CB: "AE", // United Arab Emirates
-0x03CC: "IL", // Israel
-0x03CE: "QA", // Qatar
-0x03D5: "IR", // Iran
-0xFFFF: "US"  // United States
-};
-
-/* [MS-XLS] 2.5.127 */
-var XLSFillPattern = [
-	null,
-	'solid',
-	'mediumGray',
-	'darkGray',
-	'lightGray',
-	'darkHorizontal',
-	'darkVertical',
-	'darkDown',
-	'darkUp',
-	'darkGrid',
-	'darkTrellis',
-	'lightHorizontal',
-	'lightVertical',
-	'lightDown',
-	'lightUp',
-	'lightGrid',
-	'lightTrellis',
-	'gray125',
-	'gray0625'
-];
-
-function rgbify(arr) { return arr.map(function(x) { return [(x>>16)&255,(x>>8)&255,x&255]; }); }
-
-/* [MS-XLS] 2.5.161 */
-/* [MS-XLSB] 2.5.75 Icv */
-var _XLSIcv =  rgbify([
-	/* Color Constants */
-	0x000000,
-	0xFFFFFF,
-	0xFF0000,
-	0x00FF00,
-	0x0000FF,
-	0xFFFF00,
-	0xFF00FF,
-	0x00FFFF,
-
-	/* Overridable Defaults */
-	0x000000,
-	0xFFFFFF,
-	0xFF0000,
-	0x00FF00,
-	0x0000FF,
-	0xFFFF00,
-	0xFF00FF,
-	0x00FFFF,
-
-	0x800000,
-	0x008000,
-	0x000080,
-	0x808000,
-	0x800080,
-	0x008080,
-	0xC0C0C0,
-	0x808080,
-	0x9999FF,
-	0x993366,
-	0xFFFFCC,
-	0xCCFFFF,
-	0x660066,
-	0xFF8080,
-	0x0066CC,
-	0xCCCCFF,
-
-	0x000080,
-	0xFF00FF,
-	0xFFFF00,
-	0x00FFFF,
-	0x800080,
-	0x800000,
-	0x008080,
-	0x0000FF,
-	0x00CCFF,
-	0xCCFFFF,
-	0xCCFFCC,
-	0xFFFF99,
-	0x99CCFF,
-	0xFF99CC,
-	0xCC99FF,
-	0xFFCC99,
-
-	0x3366FF,
-	0x33CCCC,
-	0x99CC00,
-	0xFFCC00,
-	0xFF9900,
-	0xFF6600,
-	0x666699,
-	0x969696,
-	0x003366,
-	0x339966,
-	0x003300,
-	0x333300,
-	0x993300,
-	0x993366,
-	0x333399,
-	0x333333,
-
-	/* Other entries to appease BIFF8/12 */
-	0x000000, /* 0x40 icvForeground ?? */
-	0xFFFFFF, /* 0x41 icvBackground ?? */
-	0x000000, /* 0x42 icvFrame ?? */
-	0x000000, /* 0x43 icv3D ?? */
-	0x000000, /* 0x44 icv3DText ?? */
-	0x000000, /* 0x45 icv3DHilite ?? */
-	0x000000, /* 0x46 icv3DShadow ?? */
-	0x000000, /* 0x47 icvHilite ?? */
-	0x000000, /* 0x48 icvCtlText ?? */
-	0x000000, /* 0x49 icvCtlScrl ?? */
-	0x000000, /* 0x4A icvCtlInv ?? */
-	0x000000, /* 0x4B icvCtlBody ?? */
-	0x000000, /* 0x4C icvCtlFrame ?? */
-	0x000000, /* 0x4D icvCtlFore ?? */
-	0x000000, /* 0x4E icvCtlBack ?? */
-	0x000000, /* 0x4F icvCtlNeutral */
-	0x000000, /* 0x50 icvInfoBk ?? */
-	0x000000 /* 0x51 icvInfoText ?? */
-]);
-var XLSIcv = dup(_XLSIcv);
-
-/* [MS-XLSB] 2.5.97.2 */
-var BErr = {
-0x00: "#NULL!",
-0x07: "#DIV/0!",
-0x0F: "#VALUE!",
-0x17: "#REF!",
-0x1D: "#NAME?",
-0x24: "#NUM!",
-0x2A: "#N/A",
-0x2B: "#GETTING_DATA",
-0xFF: "#WTF?"
-};
-//var RBErr = evert_num(BErr);
-var RBErr = {
-	"#NULL!":        0x00,
-	"#DIV/0!":       0x07,
-	"#VALUE!":       0x0F,
-	"#REF!":         0x17,
-	"#NAME?":        0x1D,
-	"#NUM!":         0x24,
-	"#N/A":          0x2A,
-	"#GETTING_DATA": 0x2B,
-	"#WTF?":         0xFF
-};
-
-var XLSLblBuiltIn = [
-	"_xlnm.Consolidate_Area",
-	"_xlnm.Auto_Open",
-	"_xlnm.Auto_Close",
-	"_xlnm.Extract",
-	"_xlnm.Database",
-	"_xlnm.Criteria",
-	"_xlnm.Print_Area",
-	"_xlnm.Print_Titles",
-	"_xlnm.Recorder",
-	"_xlnm.Data_Form",
-	"_xlnm.Auto_Activate",
-	"_xlnm.Auto_Deactivate",
-	"_xlnm.Sheet_Title",
-	"_xlnm._FilterDatabase"
-];
-
-/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */
-/* 12.3 Part Summary <SpreadsheetML> */
-/* 14.2 Part Summary <DrawingML> */
-/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */
-var ct2type/*{[string]:string}*/ = ({
-	/* Workbook */
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": "workbooks",
-	"application/vnd.ms-excel.sheet.macroEnabled.main+xml": "workbooks",
-	"application/vnd.ms-excel.sheet.binary.macroEnabled.main": "workbooks",
-	"application/vnd.ms-excel.addin.macroEnabled.main+xml": "workbooks",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": "workbooks",
-
-	/* Worksheet */
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": "sheets",
-	"application/vnd.ms-excel.worksheet": "sheets",
-	"application/vnd.ms-excel.binIndexWs": "TODO", /* Binary Index */
-
-	/* Chartsheet */
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": "charts",
-	"application/vnd.ms-excel.chartsheet": "charts",
-
-	/* Macrosheet */
-	"application/vnd.ms-excel.macrosheet+xml": "macros",
-	"application/vnd.ms-excel.macrosheet": "macros",
-	"application/vnd.ms-excel.intlmacrosheet": "TODO",
-	"application/vnd.ms-excel.binIndexMs": "TODO", /* Binary Index */
-
-	/* Dialogsheet */
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": "dialogs",
-	"application/vnd.ms-excel.dialogsheet": "dialogs",
-
-	/* Shared Strings */
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml": "strs",
-	"application/vnd.ms-excel.sharedStrings": "strs",
-
-	/* Styles */
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": "styles",
-	"application/vnd.ms-excel.styles": "styles",
-
-	/* File Properties */
-	"application/vnd.openxmlformats-package.core-properties+xml": "coreprops",
-	"application/vnd.openxmlformats-officedocument.custom-properties+xml": "custprops",
-	"application/vnd.openxmlformats-officedocument.extended-properties+xml": "extprops",
-
-	/* Custom Data Properties */
-	"application/vnd.openxmlformats-officedocument.customXmlProperties+xml": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty": "TODO",
-
-	/* Comments */
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": "comments",
-	"application/vnd.ms-excel.comments": "comments",
-	"application/vnd.ms-excel.threadedcomments+xml": "threadedcomments",
-	"application/vnd.ms-excel.person+xml": "people",
-
-	/* Metadata (Stock/Geography and Dynamic Array) */
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml": "metadata",
-	"application/vnd.ms-excel.sheetMetadata": "metadata",
-
-	/* PivotTable */
-	"application/vnd.ms-excel.pivotTable": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml": "TODO",
-
-	/* Chart Objects */
-	"application/vnd.openxmlformats-officedocument.drawingml.chart+xml": "TODO",
-
-	/* Chart Colors */
-	"application/vnd.ms-office.chartcolorstyle+xml": "TODO",
-
-	/* Chart Style */
-	"application/vnd.ms-office.chartstyle+xml": "TODO",
-
-	/* Chart Advanced */
-	"application/vnd.ms-office.chartex+xml": "TODO",
-
-	/* Calculation Chain */
-	"application/vnd.ms-excel.calcChain": "calcchains",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml": "calcchains",
-
-	/* Printer Settings */
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings": "TODO",
-
-	/* ActiveX */
-	"application/vnd.ms-office.activeX": "TODO",
-	"application/vnd.ms-office.activeX+xml": "TODO",
-
-	/* Custom Toolbars */
-	"application/vnd.ms-excel.attachedToolbars": "TODO",
-
-	/* External Data Connections */
-	"application/vnd.ms-excel.connections": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": "TODO",
-
-	/* External Links */
-	"application/vnd.ms-excel.externalLink": "links",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml": "links",
-
-	/* PivotCache */
-	"application/vnd.ms-excel.pivotCacheDefinition": "TODO",
-	"application/vnd.ms-excel.pivotCacheRecords": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml": "TODO",
-
-	/* Query Table */
-	"application/vnd.ms-excel.queryTable": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml": "TODO",
-
-	/* Shared Workbook */
-	"application/vnd.ms-excel.userNames": "TODO",
-	"application/vnd.ms-excel.revisionHeaders": "TODO",
-	"application/vnd.ms-excel.revisionLog": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml": "TODO",
-
-	/* Single Cell Table */
-	"application/vnd.ms-excel.tableSingleCells": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml": "TODO",
-
-	/* Slicer */
-	"application/vnd.ms-excel.slicer": "TODO",
-	"application/vnd.ms-excel.slicerCache": "TODO",
-	"application/vnd.ms-excel.slicer+xml": "TODO",
-	"application/vnd.ms-excel.slicerCache+xml": "TODO",
-
-	/* Sort Map */
-	"application/vnd.ms-excel.wsSortMap": "TODO",
-
-	/* Table */
-	"application/vnd.ms-excel.table": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": "TODO",
-
-	/* Themes */
-	"application/vnd.openxmlformats-officedocument.theme+xml": "themes",
-
-	/* Theme Override */
-	"application/vnd.openxmlformats-officedocument.themeOverride+xml": "TODO",
-
-	/* Timeline */
-	"application/vnd.ms-excel.Timeline+xml": "TODO", /* verify */
-	"application/vnd.ms-excel.TimelineCache+xml": "TODO", /* verify */
-
-	/* VBA */
-	"application/vnd.ms-office.vbaProject": "vba",
-	"application/vnd.ms-office.vbaProjectSignature": "TODO",
-
-	/* Volatile Dependencies */
-	"application/vnd.ms-office.volatileDependencies": "TODO",
-	"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml": "TODO",
-
-	/* Control Properties */
-	"application/vnd.ms-excel.controlproperties+xml": "TODO",
-
-	/* Data Model */
-	"application/vnd.openxmlformats-officedocument.model+data": "TODO",
-
-	/* Survey */
-	"application/vnd.ms-excel.Survey+xml": "TODO",
-
-	/* Drawing */
-	"application/vnd.openxmlformats-officedocument.drawing+xml": "drawings",
-	"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": "TODO",
-	"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml": "TODO",
-	"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml": "TODO",
-	"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml": "TODO",
-	"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml": "TODO",
-
-	/* VML */
-	"application/vnd.openxmlformats-officedocument.vmlDrawing": "TODO",
-
-	"application/vnd.openxmlformats-package.relationships+xml": "rels",
-	"application/vnd.openxmlformats-officedocument.oleObject": "TODO",
-
-	/* Image */
-	"image/png": "TODO",
-
-	"sheet": "js"
-});
-
-var CT_LIST = {
-	workbooks: {
-		xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml",
-		xlsm: "application/vnd.ms-excel.sheet.macroEnabled.main+xml",
-		xlsb: "application/vnd.ms-excel.sheet.binary.macroEnabled.main",
-		xlam: "application/vnd.ms-excel.addin.macroEnabled.main+xml",
-		xltx: "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml"
-	},
-	strs: { /* Shared Strings */
-		xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml",
-		xlsb: "application/vnd.ms-excel.sharedStrings"
-	},
-	comments: { /* Comments */
-		xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml",
-		xlsb: "application/vnd.ms-excel.comments"
-	},
-	sheets: { /* Worksheet */
-		xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml",
-		xlsb: "application/vnd.ms-excel.worksheet"
-	},
-	charts: { /* Chartsheet */
-		xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml",
-		xlsb: "application/vnd.ms-excel.chartsheet"
-	},
-	dialogs: { /* Dialogsheet */
-		xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml",
-		xlsb: "application/vnd.ms-excel.dialogsheet"
-	},
-	macros: { /* Macrosheet (Excel 4.0 Macros) */
-		xlsx: "application/vnd.ms-excel.macrosheet+xml",
-		xlsb: "application/vnd.ms-excel.macrosheet"
-	},
-	metadata: { /* Metadata (Stock/Geography and Dynamic Array) */
-		xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml",
-		xlsb: "application/vnd.ms-excel.sheetMetadata"
-	},
-	styles: { /* Styles */
-		xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml",
-		xlsb: "application/vnd.ms-excel.styles"
-	}
-};
-
-function new_ct() {
-	return ({
-		workbooks:[], sheets:[], charts:[], dialogs:[], macros:[],
-		rels:[], strs:[], comments:[], threadedcomments:[], links:[],
-		coreprops:[], extprops:[], custprops:[], themes:[], styles:[],
-		calcchains:[], vba: [], drawings: [], metadata: [], people:[],
-		TODO:[], xmlns: "" });
-}
-
-function parse_ct(data) {
-	var ct = new_ct();
-	if(!data || !data.match) return ct;
-	var ctext = {};
-	(data.match(tagregex)||[]).forEach(function(x) {
-		var y = parsexmltag(x);
-		switch(y[0].replace(nsregex,"<")) {
-			case '<?xml': break;
-			case '<Types': ct.xmlns = y['xmlns' + (y[0].match(/<(\w+):/)||["",""])[1] ]; break;
-			case '<Default': ctext[y.Extension.toLowerCase()] = y.ContentType; break;
-			case '<Override':
-				if(ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);
-				break;
-		}
-	});
-	if(ct.xmlns !== XMLNS.CT) throw new Error("Unknown Namespace: " + ct.xmlns);
-	ct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : "";
-	ct.sst = ct.strs.length > 0 ? ct.strs[0] : "";
-	ct.style = ct.styles.length > 0 ? ct.styles[0] : "";
-	ct.defaults = ctext;
-	delete ct.calcchains;
-	return ct;
-}
-
-function write_ct(ct, opts, raw) {
-	var type2ct/*{[string]:Array<string>}*/ = evert_arr(ct2type);
-
-	var o = [], v;
-
-	if(!raw) {
-		o[o.length] = (XML_HEADER);
-		o[o.length] = writextag('Types', null, {
-			'xmlns': XMLNS.CT,
-			'xmlns:xsd': XMLNS.xsd,
-			'xmlns:xsi': XMLNS.xsi
-		});
-		o = o.concat([
-			['xml', 'application/xml'],
-			['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'],
-			['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'],
-			['data', 'application/vnd.openxmlformats-officedocument.model+data'],
-			/* from test files */
-			['bmp', 'image/bmp'],
-			['png', 'image/png'],
-			['gif', 'image/gif'],
-			['emf', 'image/x-emf'],
-			['wmf', 'image/x-wmf'],
-			['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'],
-			['tif', 'image/tiff'], ['tiff', 'image/tiff'],
-			['pdf', 'application/pdf'],
-			['rels', 'application/vnd.openxmlformats-package.relationships+xml']
-		].map(function(x) {
-			return writextag('Default', null, {'Extension':x[0], 'ContentType': x[1]});
-		}));
-	}
-
-	/* only write first instance */
-	var f1 = function(w) {
-		if(ct[w] && ct[w].length > 0) {
-			v = ct[w][0];
-			o[o.length] = (writextag('Override', null, {
-				'PartName': (v[0] == '/' ? "":"/") + v,
-				'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']
-			}));
-		}
-	};
-
-	/* book type-specific */
-	var f2 = function(w) {
-		(ct[w]||[]).forEach(function(v) {
-			o[o.length] = (writextag('Override', null, {
-				'PartName': (v[0] == '/' ? "":"/") + v,
-				'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']
-			}));
-		});
-	};
-
-	/* standard type */
-	var f3 = function(t) {
-		(ct[t]||[]).forEach(function(v) {
-			o[o.length] = (writextag('Override', null, {
-				'PartName': (v[0] == '/' ? "":"/") + v,
-				'ContentType': type2ct[t][0]
-			}));
-		});
-	};
-
-	f1('workbooks');
-	f2('sheets');
-	f2('charts');
-	f3('themes');
-	['strs', 'styles'].forEach(f1);
-	['coreprops', 'extprops', 'custprops'].forEach(f3);
-	f3('vba');
-	f3('comments');
-	f3('threadedcomments');
-	f3('drawings');
-	f2('metadata');
-	f3('people');
-	if(!raw && o.length>2){ o[o.length] = ('</Types>'); o[1]=o[1].replace("/>",">"); }
-	return o.join("");
-}
-/* 9.3 Relationships */
-var RELS = ({
-	WB: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument",
-	SHEET: "http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument",
-	HLINK: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink",
-	VML: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing",
-	XPATH: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath",
-	XMISS: "http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing",
-	XLINK: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink",
-	CXML: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml",
-	CXMLP: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps",
-	CMNT: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments",
-	CORE_PROPS: "http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties",
-	EXT_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties',
-	CUST_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties',
-	SST: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings",
-	STY: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles",
-	THEME: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme",
-	CHART: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart",
-	CHARTEX: "http://schemas.microsoft.com/office/2014/relationships/chartEx",
-	CS: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet",
-	WS: [
-		"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet",
-		"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet"
-	],
-	DS: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet",
-	MS: "http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet",
-	IMG: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image",
-	DRAW: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing",
-	XLMETA: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata",
-	TCMNT: "http://schemas.microsoft.com/office/2017/10/relationships/threadedComment",
-	PEOPLE: "http://schemas.microsoft.com/office/2017/10/relationships/person",
-	CONN: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/connections",
-	VBA: "http://schemas.microsoft.com/office/2006/relationships/vbaProject"
-});
-
-/* 9.3.3 Representing Relationships */
-function get_rels_path(file) {
-	var n = file.lastIndexOf("/");
-	return file.slice(0,n+1) + '_rels/' + file.slice(n+1) + ".rels";
-}
-
-function parse_rels(data, currentFilePath) {
-	var rels = {"!id":{}};
-	if (!data) return rels;
-	if (currentFilePath.charAt(0) !== '/') {
-		currentFilePath = '/'+currentFilePath;
-	}
-	var hash = {};
-
-	(data.match(tagregex)||[]).forEach(function(x) {
-		var y = parsexmltag(x);
-		/* 9.3.2.2 OPC_Relationships */
-		if (y[0] === '<Relationship') {
-			var rel = {}; rel.Type = y.Type; rel.Target = y.Target; rel.Id = y.Id; if(y.TargetMode) rel.TargetMode = y.TargetMode;
-			var canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);
-			rels[canonictarget] = rel;
-			hash[y.Id] = rel;
-		}
-	});
-	rels["!id"] = hash;
-	return rels;
-}
-
-
-/* TODO */
-function write_rels(rels) {
-	var o = [XML_HEADER, writextag('Relationships', null, {
-		//'xmlns:ns0': XMLNS.RELS,
-		'xmlns': XMLNS.RELS
-	})];
-	keys(rels['!id']).forEach(function(rid) {
-		o[o.length] = (writextag('Relationship', null, rels['!id'][rid]));
-	});
-	if(o.length>2){ o[o.length] = ('</Relationships>'); o[1]=o[1].replace("/>",">"); }
-	return o.join("");
-}
-
-function add_rels(rels, rId, f, type, relobj, targetmode) {
-	if(!relobj) relobj = {};
-	if(!rels['!id']) rels['!id'] = {};
-	if(!rels['!idx']) rels['!idx'] = 1;
-	if(rId < 0) for(rId = rels['!idx']; rels['!id']['rId' + rId]; ++rId){/* empty */}
-	rels['!idx'] = rId + 1;
-	relobj.Id = 'rId' + rId;
-	relobj.Type = type;
-	relobj.Target = f;
-	if(targetmode) relobj.TargetMode = targetmode;
-	else if([RELS.HLINK, RELS.XPATH, RELS.XMISS].indexOf(relobj.Type) > -1) relobj.TargetMode = "External";
-	if(rels['!id'][relobj.Id]) throw new Error("Cannot rewrite rId " + rId);
-	rels['!id'][relobj.Id] = relobj;
-	rels[('/' + relobj.Target).replace("//","/")] = relobj;
-	return rId;
-}
-/* Open Document Format for Office Applications (OpenDocument) Version 1.2 */
-/* Part 3 Section 4 Manifest File */
-var CT_ODS = "application/vnd.oasis.opendocument.spreadsheet";
-function parse_manifest(d, opts) {
-	var str = xlml_normalize(d);
-	var Rn;
-	var FEtag;
-	while((Rn = xlmlregex.exec(str))) switch(Rn[3]) {
-		case 'manifest': break; // 4.2 <manifest:manifest>
-		case 'file-entry': // 4.3 <manifest:file-entry>
-			FEtag = parsexmltag(Rn[0], false);
-			if(FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error("This OpenDocument is not a spreadsheet");
-			break;
-		case 'encryption-data': // 4.4 <manifest:encryption-data>
-		case 'algorithm': // 4.5 <manifest:algorithm>
-		case 'start-key-generation': // 4.6 <manifest:start-key-generation>
-		case 'key-derivation': // 4.7 <manifest:key-derivation>
-			throw new Error("Unsupported ODS Encryption");
-		default: if(opts && opts.WTF) throw Rn;
-	}
-}
-
-function write_manifest(manifest) {
-	var o = [XML_HEADER];
-	o.push('<manifest:manifest xmlns:manifest="urn:oasis:names:tc:opendocument:xmlns:manifest:1.0" manifest:version="1.2">\n');
-	o.push('  <manifest:file-entry manifest:full-path="/" manifest:version="1.2" manifest:media-type="application/vnd.oasis.opendocument.spreadsheet"/>\n');
-	for(var i = 0; i < manifest.length; ++i) o.push('  <manifest:file-entry manifest:full-path="' + manifest[i][0] + '" manifest:media-type="' + manifest[i][1] + '"/>\n');
-	o.push('</manifest:manifest>');
-	return o.join("");
-}
-
-/* Part 3 Section 6 Metadata Manifest File */
-function write_rdf_type(file, res, tag) {
-	return [
-		'  <rdf:Description rdf:about="' + file + '">\n',
-		'    <rdf:type rdf:resource="http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || "odf") + '#' + res + '"/>\n',
-		'  </rdf:Description>\n'
-	].join("");
-}
-function write_rdf_has(base, file) {
-	return [
-		'  <rdf:Description rdf:about="' + base + '">\n',
-		'    <ns0:hasPart xmlns:ns0="http://docs.oasis-open.org/ns/office/1.2/meta/pkg#" rdf:resource="' + file + '"/>\n',
-		'  </rdf:Description>\n'
-	].join("");
-}
-function write_rdf(rdf) {
-	var o = [XML_HEADER];
-	o.push('<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">\n');
-	for(var i = 0; i != rdf.length; ++i) {
-		o.push(write_rdf_type(rdf[i][0], rdf[i][1]));
-		o.push(write_rdf_has("",rdf[i][0]));
-	}
-	o.push(write_rdf_type("","Document", "pkg"));
-	o.push('</rdf:RDF>');
-	return o.join("");
-}
-/* TODO: pull properties */
-function write_meta_ods() {
-	return '<office:document-meta xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xlink="http://www.w3.org/1999/xlink" office:version="1.2"><office:meta><meta:generator>Sheet' + 'JS ' + XLSX.version + '</meta:generator></office:meta></office:document-meta>';
-}
-
-/* ECMA-376 Part II 11.1 Core Properties Part */
-/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */
-var CORE_PROPS = [
-	["cp:category", "Category"],
-	["cp:contentStatus", "ContentStatus"],
-	["cp:keywords", "Keywords"],
-	["cp:lastModifiedBy", "LastAuthor"],
-	["cp:lastPrinted", "LastPrinted"],
-	["cp:revision", "RevNumber"],
-	["cp:version", "Version"],
-	["dc:creator", "Author"],
-	["dc:description", "Comments"],
-	["dc:identifier", "Identifier"],
-	["dc:language", "Language"],
-	["dc:subject", "Subject"],
-	["dc:title", "Title"],
-	["dcterms:created", "CreatedDate", 'date'],
-	["dcterms:modified", "ModifiedDate", 'date']
-];
-
-var CORE_PROPS_REGEX = (function() {
-	var r = new Array(CORE_PROPS.length);
-	for(var i = 0; i < CORE_PROPS.length; ++i) {
-		var f = CORE_PROPS[i];
-		var g = "(?:"+ f[0].slice(0,f[0].indexOf(":")) +":)"+ f[0].slice(f[0].indexOf(":")+1);
-		r[i] = new RegExp("<" + g + "[^>]*>([\\s\\S]*?)<\/" + g + ">");
-	}
-	return r;
-})();
-
-function parse_core_props(data) {
-	var p = {};
-	data = utf8read(data);
-
-	for(var i = 0; i < CORE_PROPS.length; ++i) {
-		var f = CORE_PROPS[i], cur = data.match(CORE_PROPS_REGEX[i]);
-		if(cur != null && cur.length > 0) p[f[1]] = unescapexml(cur[1]);
-		if(f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);
-	}
-
-	return p;
-}
-
-function cp_doit(f, g, h, o, p) {
-	if(p[f] != null || g == null || g === "") return;
-	p[f] = g;
-	g = escapexml(g);
-	o[o.length] = (h ? writextag(f,g,h) : writetag(f,g));
-}
-
-function write_core_props(cp, _opts) {
-	var opts = _opts || {};
-	var o = [XML_HEADER, writextag('cp:coreProperties', null, {
-		//'xmlns': XMLNS.CORE_PROPS,
-		'xmlns:cp': XMLNS.CORE_PROPS,
-		'xmlns:dc': XMLNS.dc,
-		'xmlns:dcterms': XMLNS.dcterms,
-		'xmlns:dcmitype': XMLNS.dcmitype,
-		'xmlns:xsi': XMLNS.xsi
-	})], p = {};
-	if(!cp && !opts.Props) return o.join("");
-
-	if(cp) {
-		if(cp.CreatedDate != null) cp_doit("dcterms:created", typeof cp.CreatedDate === "string" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {"xsi:type":"dcterms:W3CDTF"}, o, p);
-		if(cp.ModifiedDate != null) cp_doit("dcterms:modified", typeof cp.ModifiedDate === "string" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {"xsi:type":"dcterms:W3CDTF"}, o, p);
-	}
-
-	for(var i = 0; i != CORE_PROPS.length; ++i) {
-		var f = CORE_PROPS[i];
-		var v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;
-		if(v === true) v = "1";
-		else if(v === false) v = "0";
-		else if(typeof v == "number") v = String(v);
-		if(v != null) cp_doit(f[0], v, null, o, p);
-	}
-	if(o.length>2){ o[o.length] = ('</cp:coreProperties>'); o[1]=o[1].replace("/>",">"); }
-	return o.join("");
-}
-/* 15.2.12.3 Extended File Properties Part */
-/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */
-var EXT_PROPS = [
-	["Application", "Application", "string"],
-	["AppVersion", "AppVersion", "string"],
-	["Company", "Company", "string"],
-	["DocSecurity", "DocSecurity", "string"],
-	["Manager", "Manager", "string"],
-	["HyperlinksChanged", "HyperlinksChanged", "bool"],
-	["SharedDoc", "SharedDoc", "bool"],
-	["LinksUpToDate", "LinksUpToDate", "bool"],
-	["ScaleCrop", "ScaleCrop", "bool"],
-	["HeadingPairs", "HeadingPairs", "raw"],
-	["TitlesOfParts", "TitlesOfParts", "raw"]
-];
-
-var PseudoPropsPairs = [
-	"Worksheets",  "SheetNames",
-	"NamedRanges", "DefinedNames",
-	"Chartsheets", "ChartNames"
-];
-function load_props_pairs(HP, TOP, props, opts) {
-	var v = [];
-	if(typeof HP == "string") v = parseVector(HP, opts);
-	else for(var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function(hp) { return {v:hp}; }));
-	var parts = (typeof TOP == "string") ? parseVector(TOP, opts).map(function (x) { return x.v; }) : TOP;
-	var idx = 0, len = 0;
-	if(parts.length > 0) for(var i = 0; i !== v.length; i += 2) {
-		len = +(v[i+1].v);
-		switch(v[i].v) {
-			case "Worksheets":
-			case "å·¥ä½è¡¨":
-			case "ÐÐ¸ÑÑÑ":
-			case "Ø£ÙØ±Ø§Ù Ø§ÙØ¹ÙÙ":
-			case "ã¯ã¼ã¯ã·ã¼ã":
-			case "××××× ××ª ×¢××××":
-			case "ArbeitsblÃ¤tter":
-			case "ÃalÄ±Åma SayfalarÄ±":
-			case "Feuilles de calcul":
-			case "Fogli di lavoro":
-			case "Folhas de cÃ¡lculo":
-			case "Planilhas":
-			case "Regneark":
-			case "Hojas de cÃ¡lculo":
-			case "Werkbladen":
-				props.Worksheets = len;
-				props.SheetNames = parts.slice(idx, idx + len);
-				break;
-
-			case "Named Ranges":
-			case "Rangos con nombre":
-			case "ååä»ãä¸è¦§":
-			case "Benannte Bereiche":
-			case "Navngivne omrÃ¥der":
-				props.NamedRanges = len;
-				props.DefinedNames = parts.slice(idx, idx + len);
-				break;
-
-			case "Charts":
-			case "Diagramme":
-				props.Chartsheets = len;
-				props.ChartNames = parts.slice(idx, idx + len);
-				break;
-		}
-		idx += len;
-	}
-}
-
-function parse_ext_props(data, p, opts) {
-	var q = {}; if(!p) p = {};
-	data = utf8read(data);
-
-	EXT_PROPS.forEach(function(f) {
-		var xml = (data.match(matchtag(f[0]))||[])[1];
-		switch(f[2]) {
-			case "string": if(xml) p[f[1]] = unescapexml(xml); break;
-			case "bool": p[f[1]] = xml === "true"; break;
-			case "raw":
-				var cur = data.match(new RegExp("<" + f[0] + "[^>]*>([\\s\\S]*?)<\/" + f[0] + ">"));
-				if(cur && cur.length > 0) q[f[1]] = cur[1];
-				break;
-		}
-	});
-
-	if(q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);
-
-	return p;
-}
-
-function write_ext_props(cp) {
-	var o = [], W = writextag;
-	if(!cp) cp = {};
-	cp.Application = "SheetJS";
-	o[o.length] = (XML_HEADER);
-	o[o.length] = (writextag('Properties', null, {
-		'xmlns': XMLNS.EXT_PROPS,
-		'xmlns:vt': XMLNS.vt
-	}));
-
-	EXT_PROPS.forEach(function(f) {
-		if(cp[f[1]] === undefined) return;
-		var v;
-		switch(f[2]) {
-			case 'string': v = escapexml(String(cp[f[1]])); break;
-			case 'bool': v = cp[f[1]] ? 'true' : 'false'; break;
-		}
-		if(v !== undefined) o[o.length] = (W(f[0], v));
-	});
-
-	/* TODO: HeadingPairs, TitlesOfParts */
-	o[o.length] = (W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>')+W('vt:variant', W('vt:i4', String(cp.Worksheets))), {size:2, baseType:"variant"})));
-	o[o.length] = (W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function(s) { return "<vt:lpstr>" + escapexml(s) + "</vt:lpstr>"; }).join(""), {size: cp.Worksheets, baseType:"lpstr"})));
-	if(o.length>2){ o[o.length] = ('</Properties>'); o[1]=o[1].replace("/>",">"); }
-	return o.join("");
-}
-/* 15.2.12.2 Custom File Properties Part */
-var custregex = /<[^>]+>[^<]*/g;
-function parse_cust_props(data, opts) {
-	var p = {}, name = "";
-	var m = data.match(custregex);
-	if(m) for(var i = 0; i != m.length; ++i) {
-		var x = m[i], y = parsexmltag(x);
-		switch(strip_ns(y[0])) {
-			case '<?xml': break;
-			case '<Properties': break;
-			case '<property': name = unescapexml(y.name); break;
-			case '</property>': name = null; break;
-			default: if (x.indexOf('<vt:') === 0) {
-				var toks = x.split('>');
-				var type = toks[0].slice(4), text = toks[1];
-				/* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */
-				switch(type) {
-					case 'lpstr': case 'bstr': case 'lpwstr':
-						p[name] = unescapexml(text);
-						break;
-					case 'bool':
-						p[name] = parsexmlbool(text);
-						break;
-					case 'i1': case 'i2': case 'i4': case 'i8': case 'int': case 'uint':
-						p[name] = parseInt(text, 10);
-						break;
-					case 'r4': case 'r8': case 'decimal':
-						p[name] = parseFloat(text);
-						break;
-					case 'filetime': case 'date':
-						p[name] = parseDate(text);
-						break;
-					case 'cy': case 'error':
-						p[name] = unescapexml(text);
-						break;
-					default:
-						if(type.slice(-1) == '/') break;
-						if(opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);
-				}
-			} else if(x.slice(0,2) === "</") {/* empty */
-			} else if(opts.WTF) throw new Error(x);
-		}
-	}
-	return p;
-}
-
-function write_cust_props(cp) {
-	var o = [XML_HEADER, writextag('Properties', null, {
-		'xmlns': XMLNS.CUST_PROPS,
-		'xmlns:vt': XMLNS.vt
-	})];
-	if(!cp) return o.join("");
-	var pid = 1;
-	keys(cp).forEach(function custprop(k) { ++pid;
-		o[o.length] = (writextag('property', write_vt(cp[k], true), {
-			'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',
-			'pid': pid,
-			'name': escapexml(k)
-		}));
-	});
-	if(o.length>2){ o[o.length] = '</Properties>'; o[1]=o[1].replace("/>",">"); }
-	return o.join("");
-}
-var DBF_SUPPORTED_VERSIONS = [0x02, 0x03, 0x30, 0x31, 0x83, 0x8B, 0x8C, 0xF5];
-var DBF = (function() {
-var dbf_codepage_map = {
-	/* Code Pages Supported by Visual FoxPro */
-0x01:   437,           0x02:   850,
-0x03:  1252,           0x04: 10000,
-0x64:   852,           0x65:   866,
-0x66:   865,           0x67:   861,
-0x68:   895,           0x69:   620,
-0x6A:   737,           0x6B:   857,
-0x78:   950,           0x79:   949,
-0x7A:   936,           0x7B:   932,
-0x7C:   874,           0x7D:  1255,
-0x7E:  1256,           0x96: 10007,
-0x97: 10029,           0x98: 10006,
-0xC8:  1250,           0xC9:  1251,
-0xCA:  1254,           0xCB:  1253,
-
-	/* shapefile DBF extension */
-0x00: 20127,           0x08:   865,
-0x09:   437,           0x0A:   850,
-0x0B:   437,           0x0D:   437,
-0x0E:   850,           0x0F:   437,
-0x10:   850,           0x11:   437,
-0x12:   850,           0x13:   932,
-0x14:   850,           0x15:   437,
-0x16:   850,           0x17:   865,
-0x18:   437,           0x19:   437,
-0x1A:   850,           0x1B:   437,
-0x1C:   863,           0x1D:   850,
-0x1F:   852,           0x22:   852,
-0x23:   852,           0x24:   860,
-0x25:   850,           0x26:   866,
-0x37:   850,           0x40:   852,
-0x4D:   936,           0x4E:   949,
-0x4F:   950,           0x50:   874,
-0x57:  1252,           0x58:  1252,
-0x59:  1252,           0x6C:   863,
-0x86:   737,           0x87:   852,
-0x88:   857,           0xCC:  1257,
-
-0xFF: 16969
-};
-var dbf_reverse_map = evert({
-0x01:   437,           0x02:   850,
-0x03:  1252,           0x04: 10000,
-0x64:   852,           0x65:   866,
-0x66:   865,           0x67:   861,
-0x68:   895,           0x69:   620,
-0x6A:   737,           0x6B:   857,
-0x78:   950,           0x79:   949,
-0x7A:   936,           0x7B:   932,
-0x7C:   874,           0x7D:  1255,
-0x7E:  1256,           0x96: 10007,
-0x97: 10029,           0x98: 10006,
-0xC8:  1250,           0xC9:  1251,
-0xCA:  1254,           0xCB:  1253,
-0x00: 20127
-});
-/* TODO: find an actual specification */
-function dbf_to_aoa(buf, opts) {
-	var out = [];
-	var d = (new_raw_buf(1));
-	switch(opts.type) {
-		case 'base64': d = s2a(Base64_decode(buf)); break;
-		case 'binary': d = s2a(buf); break;
-		case 'buffer':
-		case 'array': d = buf; break;
-	}
-	prep_blob(d, 0);
-
-	/* header */
-	var ft = d.read_shift(1);
-	var memo = !!(ft & 0x88);
-	var vfp = false, l7 = false;
-	switch(ft) {
-		case 0x02: break; // dBASE II
-		case 0x03: break; // dBASE III
-		case 0x30: vfp = true; memo = true; break; // VFP
-		case 0x31: vfp = true; memo = true; break; // VFP with autoincrement
-		// 0x43 dBASE IV SQL table files
-		// 0x63 dBASE IV SQL system files
-		case 0x83: break; // dBASE III with memo
-		case 0x8B: break; // dBASE IV with memo
-		case 0x8C: l7 = true; break; // dBASE Level 7 with memo
-		// case 0xCB dBASE IV SQL table files with memo
-		case 0xF5: break; // FoxPro 2.x with memo
-		// case 0xFB FoxBASE
-		default: throw new Error("DBF Unsupported Version: " + ft.toString(16));
-	}
-
-	var nrow = 0, fpos = 0x0209;
-	if(ft == 0x02) nrow = d.read_shift(2);
-	d.l += 3; // dBASE II stores DDMMYY date, others use YYMMDD
-	if(ft != 0x02) nrow = d.read_shift(4);
-	if(nrow > 1048576) nrow = 1e6;
-
-	if(ft != 0x02) fpos = d.read_shift(2); // header length
-	var rlen = d.read_shift(2); // record length
-
-	var /*flags = 0,*/ current_cp = opts.codepage || 1252;
-	if(ft != 0x02) { // 20 reserved bytes
-		d.l+=16;
-		/*flags = */d.read_shift(1);
-		//if(memo && ((flags & 0x02) === 0)) throw new Error("DBF Flags " + flags.toString(16) + " ft " + ft.toString(16));
-
-		/* codepage present in FoxPro and dBASE Level 7 */
-		if(d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];
-		d.l+=1;
-
-		d.l+=2;
-	}
-	if(l7) d.l += 36; // Level 7: 32 byte "Language driver name", 4 byte reserved
-
-var fields = [], field = ({});
-	var hend = Math.min(d.length, (ft == 0x02 ? 0x209 : (fpos - 10 - (vfp ? 264 : 0))));
-	var ww = l7 ? 32 : 11;
-	while(d.l < hend && d[d.l] != 0x0d) {
-		field = ({});
-		field.name = (typeof $cptable !== "undefined" ? $cptable.utils.decode(current_cp, d.slice(d.l, d.l+ww)) : a2s(d.slice(d.l, d.l + ww))).replace(/[\u0000\r\n].*$/g,"");
-		d.l += ww;
-		field.type = String.fromCharCode(d.read_shift(1));
-		if(ft != 0x02 && !l7) field.offset = d.read_shift(4);
-		field.len = d.read_shift(1);
-		if(ft == 0x02) field.offset = d.read_shift(2);
-		field.dec = d.read_shift(1);
-		if(field.name.length) fields.push(field);
-		if(ft != 0x02) d.l += l7 ? 13 : 14;
-		switch(field.type) {
-			case 'B': // Double (VFP) / Binary (dBASE L7)
-				if((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);
-				break;
-			case 'G': // General (FoxPro and dBASE L7)
-			case 'P': // Picture (FoxPro and dBASE L7)
-				if(opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);
-				break;
-			case '+': // Autoincrement (dBASE L7 only)
-			case '0': // _NullFlags (VFP only)
-			case '@': // Timestamp (dBASE L7 only)
-			case 'C': // Character (dBASE II)
-			case 'D': // Date (dBASE III)
-			case 'F': // Float (dBASE IV)
-			case 'I': // Long (VFP and dBASE L7)
-			case 'L': // Logical (dBASE II)
-			case 'M': // Memo (dBASE III)
-			case 'N': // Number (dBASE II)
-			case 'O': // Double (dBASE L7 only)
-			case 'T': // Datetime (VFP only)
-			case 'Y': // Currency (VFP only)
-				break;
-			default: throw new Error('Unknown Field Type: ' + field.type);
-		}
-	}
-
-	if(d[d.l] !== 0x0D) d.l = fpos-1;
-	if(d.read_shift(1) !== 0x0D) throw new Error("DBF Terminator not found " + d.l + " " + d[d.l]);
-	d.l = fpos;
-
-	/* data */
-	var R = 0, C = 0;
-	out[0] = [];
-	for(C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;
-	while(nrow-- > 0) {
-		if(d[d.l] === 0x2A) {
-			// TODO: record marked as deleted -- create a hidden row?
-			d.l+=rlen;
-			continue;
-		}
-		++d.l;
-		out[++R] = []; C = 0;
-		for(C = 0; C != fields.length; ++C) {
-			var dd = d.slice(d.l, d.l+fields[C].len); d.l+=fields[C].len;
-			prep_blob(dd, 0);
-			var s = typeof $cptable !== "undefined" ? $cptable.utils.decode(current_cp, dd) : a2s(dd);
-			switch(fields[C].type) {
-				case 'C':
-					// NOTE: it is conventional to write '  /  /  ' for empty dates
-					if(s.trim().length) out[R][C] = s.replace(/\s+$/,"");
-					break;
-				case 'D':
-					if(s.length === 8) out[R][C] = new Date(+s.slice(0,4), +s.slice(4,6)-1, +s.slice(6,8));
-					else out[R][C] = s;
-					break;
-				case 'F': out[R][C] = parseFloat(s.trim()); break;
-				case '+': case 'I': out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i'); break;
-				case 'L': switch(s.trim().toUpperCase()) {
-					case 'Y': case 'T': out[R][C] = true; break;
-					case 'N': case 'F': out[R][C] = false; break;
-					case '': case '?': break;
-					default: throw new Error("DBF Unrecognized L:|" + s + "|");
-					} break;
-				case 'M': /* TODO: handle memo files */
-					if(!memo) throw new Error("DBF Unexpected MEMO for type " + ft.toString(16));
-					out[R][C] = "##MEMO##" + (l7 ? parseInt(s.trim(), 10): dd.read_shift(4));
-					break;
-				case 'N':
-					s = s.replace(/\u0000/g,"").trim();
-					// NOTE: dBASE II interprets "  .  " as 0
-					if(s && s != ".") out[R][C] = +s || 0; break;
-				case '@':
-					// NOTE: dBASE specs appear to be incorrect
-					out[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400);
-					break;
-				case 'T': out[R][C] = new Date((dd.read_shift(4) - 0x253D8C) * 0x5265C00 + dd.read_shift(4)); break;
-				case 'Y': out[R][C] = dd.read_shift(4,'i')/1e4 + (dd.read_shift(4, 'i')/1e4)*Math.pow(2,32); break;
-				case 'O': out[R][C] = -dd.read_shift(-8, 'f'); break;
-				case 'B': if(vfp && fields[C].len == 8) { out[R][C] = dd.read_shift(8,'f'); break; }
-					/* falls through */
-				case 'G': case 'P': dd.l += fields[C].len; break;
-				case '0':
-					if(fields[C].name === '_NullFlags') break;
-					/* falls through */
-				default: throw new Error("DBF Unsupported data type " + fields[C].type);
-			}
-		}
-	}
-	if(ft != 0x02) if(d.l < d.length && d[d.l++] != 0x1A) throw new Error("DBF EOF Marker missing " + (d.l-1) + " of " + d.length + " " + d[d.l-1].toString(16));
-	if(opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);
-	opts.DBF = fields;
-	return out;
-}
-
-function dbf_to_sheet(buf, opts) {
-	var o = opts || {};
-	if(!o.dateNF) o.dateNF = "yyyymmdd";
-	var ws = aoa_to_sheet(dbf_to_aoa(buf, o), o);
-	ws["!cols"] = o.DBF.map(function(field) { return {
-		wch: field.len,
-		DBF: field
-	};});
-	delete o.DBF;
-	return ws;
-}
-
-function dbf_to_workbook(buf, opts) {
-	try {
-		var o = sheet_to_workbook(dbf_to_sheet(buf, opts), opts);
-		o.bookType = "dbf";
-		return o;
-	} catch(e) { if(opts && opts.WTF) throw e; }
-	return ({SheetNames:[],Sheets:{}});
-}
-
-var _RLEN = { 'B': 8, 'C': 250, 'L': 1, 'D': 8, '?': 0, '': 0 };
-function sheet_to_dbf(ws, opts) {
-	var o = opts || {};
-	var old_cp = current_codepage;
-	if(+o.codepage >= 0) set_cp(+o.codepage);
-	if(o.type == "string") throw new Error("Cannot write DBF to JS string");
-	var ba = buf_array();
-	var aoa = sheet_to_json(ws, {header:1, raw:true, cellDates:true});
-	var headers = aoa[0], data = aoa.slice(1), cols = ws["!cols"] || [];
-	var i = 0, j = 0, hcnt = 0, rlen = 1;
-	for(i = 0; i < headers.length; ++i) {
-		if(((cols[i]||{}).DBF||{}).name) { headers[i] = cols[i].DBF.name; ++hcnt; continue; }
-		if(headers[i] == null) continue;
-		++hcnt;
-		if(typeof headers[i] === 'number') headers[i] = headers[i].toString(10);
-		if(typeof headers[i] !== 'string') throw new Error("DBF Invalid column name " + headers[i] + " |" + (typeof headers[i]) + "|");
-		if(headers.indexOf(headers[i]) !== i) for(j=0; j<1024;++j)
-			if(headers.indexOf(headers[i] + "_" + j) == -1) { headers[i] += "_" + j; break; }
-	}
-	var range = safe_decode_range(ws['!ref']);
-	var coltypes = [];
-	var colwidths = [];
-	var coldecimals = [];
-	for(i = 0; i <= range.e.c - range.s.c; ++i) {
-		var guess = '', _guess = '', maxlen = 0;
-		var col = [];
-		for(j=0; j < data.length; ++j) {
-			if(data[j][i] != null) col.push(data[j][i]);
-		}
-		if(col.length == 0 || headers[i] == null) { coltypes[i] = '?'; continue; }
-		for(j = 0; j < col.length; ++j) {
-			switch(typeof col[j]) {
-				/* TODO: check if L2 compat is desired */
-				case 'number': _guess = 'B'; break;
-				case 'string': _guess = 'C'; break;
-				case 'boolean': _guess = 'L'; break;
-				case 'object': _guess = col[j] instanceof Date ? 'D' : 'C'; break;
-				default: _guess = 'C';
-			}
-			/* TODO: cache the values instead of encoding twice */
-			maxlen = Math.max(maxlen, (typeof $cptable !== "undefined" && typeof col[j] == "string" ? $cptable.utils.encode(current_ansi, col[j]): String(col[j])).length);
-			guess = guess && guess != _guess ? 'C' : _guess;
-			//if(guess == 'C') break;
-		}
-		if(maxlen > 250) maxlen = 250;
-		_guess = ((cols[i]||{}).DBF||{}).type;
-		/* TODO: more fine grained control over DBF type resolution */
-		if(_guess == 'C') {
-			if(cols[i].DBF.len > maxlen) maxlen = cols[i].DBF.len;
-		}
-		if(guess == 'B' && _guess == 'N') {
-			guess = 'N';
-			coldecimals[i] = cols[i].DBF.dec;
-			maxlen = cols[i].DBF.len;
-		}
-		colwidths[i] = guess == 'C' || _guess == 'N' ? maxlen : (_RLEN[guess] || 0);
-		rlen += colwidths[i];
-		coltypes[i] = guess;
-	}
-
-	var h = ba.next(32);
-	h.write_shift(4, 0x13021130);
-	h.write_shift(4, data.length);
-	h.write_shift(2, 296 + 32 * hcnt);
-	h.write_shift(2, rlen);
-	for(i=0; i < 4; ++i) h.write_shift(4, 0);
-	var cp = +dbf_reverse_map[current_codepage] || 0x03;
-	h.write_shift(4, 0x00000000 | (cp<<8));
-	if(dbf_codepage_map[cp] != +o.codepage) {
-		if(o.codepage) console.error("DBF Unsupported codepage " + current_codepage + ", using 1252");
-		current_codepage = 1252;
-	}
-
-	for(i = 0, j = 0; i < headers.length; ++i) {
-		if(headers[i] == null) continue;
-		var hf = ba.next(32);
-		/* TODO: test how applications handle non-ASCII field names */
-		var _f = (headers[i].slice(-10) + "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00").slice(0, 11);
-		hf.write_shift(1, _f, "sbcs");
-		hf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], "sbcs");
-		hf.write_shift(4, j);
-		hf.write_shift(1, colwidths[i] || _RLEN[coltypes[i]] || 0);
-		hf.write_shift(1, coldecimals[i] || 0);
-		hf.write_shift(1, 0x02);
-		hf.write_shift(4, 0);
-		hf.write_shift(1, 0);
-		hf.write_shift(4, 0);
-		hf.write_shift(4, 0);
-		j += (colwidths[i] || _RLEN[coltypes[i]] || 0);
-	}
-
-	var hb = ba.next(264);
-	hb.write_shift(4, 0x0000000D);
-	for(i=0; i < 65;++i) hb.write_shift(4, 0x00000000);
-	for(i=0; i < data.length; ++i) {
-		var rout = ba.next(rlen);
-		rout.write_shift(1, 0);
-		for(j=0; j<headers.length; ++j) {
-			if(headers[j] == null) continue;
-			switch(coltypes[j]) {
-				case 'L': rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46); break;
-				case 'B': rout.write_shift(8, data[i][j]||0, 'f'); break;
-				case 'N':
-					var _n = "0";
-					if(typeof data[i][j] == "number") _n = data[i][j].toFixed(coldecimals[j]||0);
-					for(hcnt=0; hcnt < colwidths[j]-_n.length; ++hcnt) rout.write_shift(1, 0x20);
-					rout.write_shift(1, _n, "sbcs");
-					break;
-				case 'D':
-					if(!data[i][j]) rout.write_shift(8, "00000000", "sbcs");
-					else {
-						rout.write_shift(4, ("0000"+data[i][j].getFullYear()).slice(-4), "sbcs");
-						rout.write_shift(2, ("00"+(data[i][j].getMonth()+1)).slice(-2), "sbcs");
-						rout.write_shift(2, ("00"+data[i][j].getDate()).slice(-2), "sbcs");
-					} break;
-				case 'C':
-					var _l = rout.l;
-					var _s = String(data[i][j] != null ? data[i][j] : "").slice(0, colwidths[j]);
-					rout.write_shift(1, _s, "cpstr");
-					_l += colwidths[j] - rout.l;
-					for(hcnt=0; hcnt < _l; ++hcnt) rout.write_shift(1, 0x20); break;
-			}
-		}
-		// data
-	}
-	current_codepage = old_cp;
-	ba.next(1).write_shift(1, 0x1A);
-	return ba.end();
-}
-	return {
-		to_workbook: dbf_to_workbook,
-		to_sheet: dbf_to_sheet,
-		from_sheet: sheet_to_dbf
-	};
-})();
-
-var SYLK = (function() {
-	/* TODO: stress test sequences */
-	var sylk_escapes = ({
-		AA:'Ã', BA:'Ã', CA:'Ã', DA:195, HA:'Ã', JA:197,
-		AE:'Ã', BE:'Ã', CE:'Ã',         HE:'Ã',
-		AI:'Ã', BI:'Ã', CI:'Ã',         HI:'Ã',
-		AO:'Ã', BO:'Ã', CO:'Ã', DO:213, HO:'Ã',
-		AU:'Ã', BU:'Ã', CU:'Ã',         HU:'Ã',
-		Aa:'Ã ', Ba:'Ã¡', Ca:'Ã¢', Da:227, Ha:'Ã¤', Ja:229,
-		Ae:'Ã¨', Be:'Ã©', Ce:'Ãª',         He:'Ã«',
-		Ai:'Ã¬', Bi:'Ã­', Ci:'Ã®',         Hi:'Ã¯',
-		Ao:'Ã²', Bo:'Ã³', Co:'Ã´', Do:245, Ho:'Ã¶',
-		Au:'Ã¹', Bu:'Ãº', Cu:'Ã»',         Hu:'Ã¼',
-		KC:'Ã', Kc:'Ã§', q:'Ã¦',  z:'Å',  a:'Ã',  j:'Å',
-		DN:209, Dn:241, Hy:255,
-		S:169,  c:170,  R:174,  "B ":180,
-0:176,    1:177,  2:178,
-3:179,    5:181,  6:182,
-7:183,    Q:185,  k:186,  b:208,  i:216,  l:222,  s:240,  y:248,
-		"!":161, '"':162, "#":163, "(":164, "%":165, "'":167, "H ":168,
-		"+":171, ";":187, "<":188, "=":189, ">":190, "?":191, "{":223
-	});
-	var sylk_char_regex = new RegExp("\u001BN(" + keys(sylk_escapes).join("|").replace(/\|\|\|/, "|\\||").replace(/([?()+])/g,"\\$1") + "|\\|)", "gm");
-	var sylk_char_fn = function(_, $1){ var o = sylk_escapes[$1]; return typeof o == "number" ? _getansi(o) : o; };
-	var decode_sylk_char = function($$, $1, $2) { var newcc = (($1.charCodeAt(0) - 0x20)<<4) | ($2.charCodeAt(0) - 0x30); return newcc == 59 ? $$ : _getansi(newcc); };
-	sylk_escapes["|"] = 254;
-	/* https://oss.sheetjs.com/notes/sylk/ for more details */
-	function sylk_to_aoa(d, opts) {
-		switch(opts.type) {
-			case 'base64': return sylk_to_aoa_str(Base64_decode(d), opts);
-			case 'binary': return sylk_to_aoa_str(d, opts);
-			case 'buffer': return sylk_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);
-			case 'array': return sylk_to_aoa_str(cc2str(d), opts);
-		}
-		throw new Error("Unrecognized type " + opts.type);
-	}
-	function sylk_to_aoa_str(str, opts) {
-		var records = str.split(/[\n\r]+/), R = -1, C = -1, ri = 0, rj = 0, arr = [];
-		var formats = [];
-		var next_cell_format = null;
-		var sht = {}, rowinfo = [], colinfo = [], cw = [];
-		var Mval = 0, j;
-		var wb = { Workbook: { WBProps: {}, Names: [] } };
-		if(+opts.codepage >= 0) set_cp(+opts.codepage);
-		for (; ri !== records.length; ++ri) {
-			Mval = 0;
-			var rstr=records[ri].trim().replace(/\x1B([\x20-\x2F])([\x30-\x3F])/g, decode_sylk_char).replace(sylk_char_regex, sylk_char_fn);
-			var record=rstr.replace(/;;/g, "\u0000").split(";").map(function(x) { return x.replace(/\u0000/g, ";"); });
-			var RT=record[0], val;
-			if(rstr.length > 0) switch(RT) {
-			case 'ID': break; /* header */
-			case 'E': break; /* EOF */
-			case 'B': break; /* dimensions */
-			case 'O': /* workbook options */
-			for(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {
-				case 'V': {
-					var d1904 = parseInt(record[rj].slice(1), 10);
-					// NOTE: it is technically an error if d1904 >= 5 or < 0
-					if(d1904 >= 1 && d1904 <= 4) wb.Workbook.WBProps.date1904 = true;
-				} break;
-			} break;
-			case 'W': break; /* window */
-			case 'P':
-				switch(record[1].charAt(0)){
-					case 'P': formats.push(rstr.slice(3).replace(/;;/g, ";")); break;
-				} break;
-			case 'NN': { /* defined name */
-				var nn = {Sheet: 0};
-				for(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {
-					case 'N': nn.Name = record[rj].slice(1); break;
-					case 'E': nn.Ref = (opts && opts.sheet || "Sheet1") + "!" + rc_to_a1(record[rj].slice(1)); break;
-				}
-				wb.Workbook.Names.push(nn);
-			} break;
-			// case 'NE': // ??
-			// case 'NU': // ??
-			case 'C': /* cell */
-			var C_seen_K = false, C_seen_X = false, C_seen_S = false, C_seen_E = false, _R = -1, _C = -1, formula = "", cell_t = "z";
-			for(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {
-				case 'A': break; // TODO: comment
-				case 'X': C = parseInt(record[rj].slice(1), 10)-1; C_seen_X = true; break;
-				case 'Y':
-					R = parseInt(record[rj].slice(1), 10)-1; if(!C_seen_X) C = 0;
-					for(j = arr.length; j <= R; ++j) arr[j] = [];
-					break;
-				case 'K':
-					val = record[rj].slice(1);
-					if(val.charAt(0) === '"') { val = val.slice(1,val.length - 1); cell_t = "s"; }
-					else if(val === 'TRUE' || val === 'FALSE') { val = val === 'TRUE'; cell_t = "b"; }
-					else if(!isNaN(fuzzynum(val))) {
-						val = fuzzynum(val); cell_t = "n";
-						if(next_cell_format !== null && fmt_is_date(next_cell_format) && opts.cellDates) { val = numdate(wb.Workbook.WBProps.date1904 ? val + 1462 : val); cell_t = "d"; }
-					} else if(!isNaN(fuzzydate(val).getDate())) {
-						val = parseDate(val); cell_t = "d";
-						if(!opts.cellDates) { cell_t = "n"; val = datenum(val, wb.Workbook.WBProps.date1904); }
-					}
-					if(typeof $cptable !== 'undefined' && typeof val == "string" && ((opts||{}).type != "string") && (opts||{}).codepage) val = $cptable.utils.decode(opts.codepage, val);
-					C_seen_K = true;
-					break;
-				case 'E':
-					C_seen_E = true;
-					formula = rc_to_a1(record[rj].slice(1), {r:R,c:C});
-					break;
-				case 'S':
-					C_seen_S = true;
-					break;
-				case 'G': break; // unknown
-				case 'R': _R = parseInt(record[rj].slice(1), 10)-1; break;
-				case 'C': _C = parseInt(record[rj].slice(1), 10)-1; break;
-				// case 'P': // ??
-				// case 'D': // ??
-				default: if(opts && opts.WTF) throw new Error("SYLK bad record " + rstr);
-			}
-			if(C_seen_K) {
-				if(!arr[R][C]) arr[R][C] = { t: cell_t, v: val };
-				else { arr[R][C].t = cell_t; arr[R][C].v = val; }
-				if(next_cell_format) arr[R][C].z = next_cell_format;
-				if(opts.cellText !== false && next_cell_format) arr[R][C].w = SSF_format(arr[R][C].z, arr[R][C].v, { date1904: wb.Workbook.WBProps.date1904 });
-				next_cell_format = null;
-			}
-			if(C_seen_S) {
-				if(C_seen_E) throw new Error("SYLK shared formula cannot have own formula");
-				var shrbase = _R > -1 && arr[_R][_C];
-				if(!shrbase || !shrbase[1]) throw new Error("SYLK shared formula cannot find base");
-				formula = shift_formula_str(shrbase[1], {r: R - _R, c: C - _C});
-			}
-			if(formula) {
-				if(!arr[R][C]) arr[R][C] = { t: 'n', f: formula };
-				else arr[R][C].f = formula;
-			}
-			break;
-			case 'F': /* Format */
-			var F_seen = 0;
-			for(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {
-				case 'X': C = parseInt(record[rj].slice(1), 10)-1; ++F_seen; break;
-				case 'Y':
-					R = parseInt(record[rj].slice(1), 10)-1; /*C = 0;*/
-					for(j = arr.length; j <= R; ++j) arr[j] = [];
-					break;
-				case 'M': Mval = parseInt(record[rj].slice(1), 10) / 20; break;
-				case 'F': break; /* ??? */
-				case 'G': break; /* hide grid */
-				case 'P':
-					next_cell_format = formats[parseInt(record[rj].slice(1), 10)];
-					break;
-				case 'S': break; /* cell style */
-				case 'D': break; /* column */
-				case 'N': break; /* font */
-				case 'W':
-					cw = record[rj].slice(1).split(" ");
-					for(j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {
-						Mval = parseInt(cw[2], 10);
-						colinfo[j-1] = Mval === 0 ? {hidden:true}: {wch:Mval};
-					} break;
-				case 'C': /* default column format */
-					C = parseInt(record[rj].slice(1), 10)-1;
-					if(!colinfo[C]) colinfo[C] = {};
-					break;
-				case 'R': /* row properties */
-					R = parseInt(record[rj].slice(1), 10)-1;
-					if(!rowinfo[R]) rowinfo[R] = {};
-					if(Mval > 0) { rowinfo[R].hpt = Mval; rowinfo[R].hpx = pt2px(Mval); }
-					else if(Mval === 0) rowinfo[R].hidden = true;
-					break;
-				// case 'K': // ??
-				// case 'E': // ??
-				default: if(opts && opts.WTF) throw new Error("SYLK bad record " + rstr);
-			}
-			if(F_seen < 1) next_cell_format = null; break;
-			default: if(opts && opts.WTF) throw new Error("SYLK bad record " + rstr);
-			}
-		}
-		if(rowinfo.length > 0) sht['!rows'] = rowinfo;
-		if(colinfo.length > 0) sht['!cols'] = colinfo;
-		colinfo.forEach(function(col) { process_col(col); });
-		if(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);
-		return [arr, sht, wb];
-	}
-
-	function sylk_to_workbook(d, opts) {
-		var aoasht = sylk_to_aoa(d, opts);
-		var aoa = aoasht[0], ws = aoasht[1], wb = aoasht[2];
-		var _opts = dup(opts); _opts.date1904 = (((wb||{}).Workbook || {}).WBProps || {}).date1904;
-		var o = aoa_to_sheet(aoa, _opts);
-		keys(ws).forEach(function(k) { o[k] = ws[k]; });
-		var outwb = sheet_to_workbook(o, opts);
-		keys(wb).forEach(function(k) { outwb[k] = wb[k]; });
-		outwb.bookType = "sylk";
-		return outwb;
-	}
-
-	function write_ws_cell_sylk(cell, ws, R, C) {
-		var o = "C;Y" + (R+1) + ";X" + (C+1) + ";K";
-		switch(cell.t) {
-			case 'n':
-				o += (cell.v||0);
-				if(cell.f && !cell.F) o += ";E" + a1_to_rc(cell.f, {r:R, c:C}); break;
-			case 'b': o += cell.v ? "TRUE" : "FALSE"; break;
-			case 'e': o += cell.w || cell.v; break;
-			case 'd': o += '"' + (cell.w || cell.v) + '"'; break;
-			case 's': o += '"' + (cell.v == null ? "" : String(cell.v)).replace(/"/g,"").replace(/;/g, ";;") + '"'; break;
-		}
-		return o;
-	}
-
-	function write_ws_cols_sylk(out, cols) {
-		cols.forEach(function(col, i) {
-			var rec = "F;W" + (i+1) + " " + (i+1) + " ";
-			if(col.hidden) rec += "0";
-			else {
-				if(typeof col.width == 'number' && !col.wpx) col.wpx = width2px(col.width);
-				if(typeof col.wpx == 'number' && !col.wch) col.wch = px2char(col.wpx);
-				if(typeof col.wch == 'number') rec += Math.round(col.wch);
-			}
-			if(rec.charAt(rec.length - 1) != " ") out.push(rec);
-		});
-	}
-
-	function write_ws_rows_sylk(out, rows) {
-		rows.forEach(function(row, i) {
-			var rec = "F;";
-			if(row.hidden) rec += "M0;";
-			else if(row.hpt) rec += "M" + 20 * row.hpt + ";";
-			else if(row.hpx) rec += "M" + 20 * px2pt(row.hpx) + ";";
-			if(rec.length > 2) out.push(rec + "R" + (i+1));
-		});
-	}
-
-	function sheet_to_sylk(ws, opts, wb) {
-		/* TODO: codepage */
-		var preamble = ["ID;PSheetJS;N;E"], o = [];
-		var r = safe_decode_range(ws['!ref']), cell;
-		var dense = Array.isArray(ws);
-		var RS = "\r\n";
-		var d1904 = (((wb||{}).Workbook||{}).WBProps||{}).date1904;
-
-		preamble.push("P;PGeneral");
-		preamble.push("F;P0;DG0G8;M255");
-		if(ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);
-		if(ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);
-
-		preamble.push("B;Y" + (r.e.r - r.s.r + 1) + ";X" + (r.e.c - r.s.c + 1) + ";D" + [r.s.c,r.s.r,r.e.c,r.e.r].join(" "));
-		preamble.push("O;L;D;B" + (d1904 ? ";V4" : "") + ";K47;G100 0.001");
-		for(var R = r.s.r; R <= r.e.r; ++R) {
-			var p = [];
-			for(var C = r.s.c; C <= r.e.c; ++C) {
-				var coord = encode_cell({r:R,c:C});
-				cell = dense ? (ws[R]||[])[C]: ws[coord];
-				if(!cell || (cell.v == null && (!cell.f || cell.F))) continue;
-				p.push(write_ws_cell_sylk(cell, ws, R, C, opts)); // TODO: pass date1904 info
-			}
-			o.push(p.join(RS));
-		}
-		return preamble.join(RS) + RS + o.join(RS) + RS + "E" + RS;
-	}
-
-	return {
-		to_workbook: sylk_to_workbook,
-		from_sheet: sheet_to_sylk
-	};
-})();
-
-var DIF = (function() {
-	function dif_to_aoa(d, opts) {
-		switch(opts.type) {
-			case 'base64': return dif_to_aoa_str(Base64_decode(d), opts);
-			case 'binary': return dif_to_aoa_str(d, opts);
-			case 'buffer': return dif_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);
-			case 'array': return dif_to_aoa_str(cc2str(d), opts);
-		}
-		throw new Error("Unrecognized type " + opts.type);
-	}
-	function dif_to_aoa_str(str, opts) {
-		var records = str.split('\n'), R = -1, C = -1, ri = 0, arr = [];
-		for (; ri !== records.length; ++ri) {
-			if (records[ri].trim() === 'BOT') { arr[++R] = []; C = 0; continue; }
-			if (R < 0) continue;
-			var metadata = records[ri].trim().split(",");
-			var type = metadata[0], value = metadata[1];
-			++ri;
-			var data = records[ri] || "";
-			while(((data.match(/["]/g)||[]).length & 1) && ri < records.length - 1) data += "\n" + records[++ri];
-			data = data.trim();
-			switch (+type) {
-				case -1:
-					if (data === 'BOT') { arr[++R] = []; C = 0; continue; }
-					else if (data !== 'EOD') throw new Error("Unrecognized DIF special command " + data);
-					break;
-				case 0:
-					if(data === 'TRUE') arr[R][C] = true;
-					else if(data === 'FALSE') arr[R][C] = false;
-					else if(!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);
-					else if(!isNaN(fuzzydate(value).getDate())) arr[R][C] = parseDate(value);
-					else arr[R][C] = value;
-					++C; break;
-				case 1:
-					data = data.slice(1,data.length-1);
-					data = data.replace(/""/g, '"');
-					if(DIF_XL && data && data.match(/^=".*"$/)) data = data.slice(2, -1);
-					arr[R][C++] = data !== '' ? data : null;
-					break;
-			}
-			if (data === 'EOD') break;
-		}
-		if(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);
-		return arr;
-	}
-
-	function dif_to_sheet(str, opts) { return aoa_to_sheet(dif_to_aoa(str, opts), opts); }
-	function dif_to_workbook(str, opts) {
-		var o = sheet_to_workbook(dif_to_sheet(str, opts), opts);
-		o.bookType = "dif";
-		return o;
-	}
-
-	function make_value(v, s) { return "0," + String(v) + "\r\n" + s; }
-	function make_value_str(s) { return "1,0\r\n\"" + s.replace(/"/g,'""') + '"'; }
-	function sheet_to_dif(ws) {
-		var _DIF_XL = DIF_XL;
-		var r = safe_decode_range(ws['!ref']);
-		var dense = Array.isArray(ws);
-		var o = [
-			"TABLE\r\n0,1\r\n\"sheetjs\"\r\n",
-			"VECTORS\r\n0," + (r.e.r - r.s.r + 1) + "\r\n\"\"\r\n",
-			"TUPLES\r\n0," + (r.e.c - r.s.c + 1) + "\r\n\"\"\r\n",
-			"DATA\r\n0,0\r\n\"\"\r\n"
-		];
-		for(var R = r.s.r; R <= r.e.r; ++R) {
-			var p = "-1,0\r\nBOT\r\n";
-			for(var C = r.s.c; C <= r.e.c; ++C) {
-				var cell = dense ? (ws[R] && ws[R][C]) : ws[encode_cell({r:R,c:C})];
-				if(cell == null) { p +=("1,0\r\n\"\"\r\n"); continue;}
-				switch(cell.t) {
-					case 'n':
-						if(_DIF_XL) {
-							if(cell.w != null) p +=("0," + cell.w + "\r\nV");
-							else if(cell.v != null) p +=(make_value(cell.v, "V")); // TODO: should this call SSF_format?
-							else if(cell.f != null && !cell.F) p +=(make_value_str("=" + cell.f));
-							else p +=("1,0\r\n\"\"");
-						} else {
-							if(cell.v == null) p +=("1,0\r\n\"\"");
-							else p +=(make_value(cell.v, "V"));
-						}
-						break;
-					case 'b':
-						p +=(cell.v ? make_value(1, "TRUE") : make_value(0, "FALSE"));
-						break;
-					case 's':
-						p +=(make_value_str((!_DIF_XL || isNaN(+cell.v)) ? cell.v : '="' + cell.v + '"'));
-						break;
-					case 'd':
-						if(!cell.w) cell.w = SSF_format(cell.z || table_fmt[14], datenum(parseDate(cell.v)));
-						if(_DIF_XL) p +=(make_value(cell.w, "V"));
-						else p +=(make_value_str(cell.w));
-						break;
-					default: p +=("1,0\r\n\"\"");
-				}
-				p += "\r\n";
-			}
-			o.push(p);
-		}
-		return o.join("") + "-1,0\r\nEOD";
-	}
-	return {
-		to_workbook: dif_to_workbook,
-		to_sheet: dif_to_sheet,
-		from_sheet: sheet_to_dif
-	};
-})();
-
-var ETH = (function() {
-	function decode(s) { return s.replace(/\\b/g,"\\").replace(/\\c/g,":").replace(/\\n/g,"\n"); }
-	function encode(s) { return s.replace(/\\/g, "\\b").replace(/:/g, "\\c").replace(/\n/g,"\\n"); }
-
-	function eth_to_aoa(str, opts) {
-		var records = str.split('\n'), R = -1, C = -1, ri = 0, arr = [];
-		for (; ri !== records.length; ++ri) {
-			var record = records[ri].trim().split(":");
-			if(record[0] !== 'cell') continue;
-			var addr = decode_cell(record[1]);
-			if(arr.length <= addr.r) for(R = arr.length; R <= addr.r; ++R) if(!arr[R]) arr[R] = [];
-			R = addr.r; C = addr.c;
-			switch(record[2]) {
-				case 't': arr[R][C] = decode(record[3]); break;
-				case 'v': arr[R][C] = +record[3]; break;
-				case 'vtf': var _f = record[record.length - 1];
-					/* falls through */
-				case 'vtc':
-					switch(record[3]) {
-						case 'nl': arr[R][C] = +record[4] ? true : false; break;
-						default: arr[R][C] = +record[4]; break;
-					}
-					if(record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];
-			}
-		}
-		if(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);
-		return arr;
-	}
-
-	function eth_to_sheet(d, opts) { return aoa_to_sheet(eth_to_aoa(d, opts), opts); }
-	function eth_to_workbook(d, opts) { return sheet_to_workbook(eth_to_sheet(d, opts), opts); }
-
-	var header = [
-		"socialcalc:version:1.5",
-		"MIME-Version: 1.0",
-		"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave"
-	].join("\n");
-
-	var sep = [
-		"--SocialCalcSpreadsheetControlSave",
-		"Content-type: text/plain; charset=UTF-8"
-	].join("\n") + "\n";
-
-	/* TODO: the other parts */
-	var meta = [
-		"# SocialCalc Spreadsheet Control Save",
-		"part:sheet"
-	].join("\n");
-
-	var end = "--SocialCalcSpreadsheetControlSave--";
-
-	function sheet_to_eth_data(ws) {
-		if(!ws || !ws['!ref']) return "";
-		var o = [], oo = [], cell, coord = "";
-		var r = decode_range(ws['!ref']);
-		var dense = Array.isArray(ws);
-		for(var R = r.s.r; R <= r.e.r; ++R) {
-			for(var C = r.s.c; C <= r.e.c; ++C) {
-				coord = encode_cell({r:R,c:C});
-				cell = dense ? (ws[R]||[])[C] : ws[coord];
-				if(!cell || cell.v == null || cell.t === 'z') continue;
-				oo = ["cell", coord, 't'];
-				switch(cell.t) {
-					case 's': case 'str': oo.push(encode(cell.v)); break;
-					case 'n':
-						if(!cell.f) { oo[2]='v'; oo[3]=cell.v; }
-						else { oo[2]='vtf'; oo[3]='n'; oo[4]=cell.v; oo[5]=encode(cell.f); }
-						break;
-					case 'b':
-						oo[2] = 'vt'+(cell.f?'f':'c'); oo[3]='nl'; oo[4]=cell.v?"1":"0";
-						oo[5] = encode(cell.f||(cell.v?'TRUE':'FALSE'));
-						break;
-					case 'd':
-						var t = datenum(parseDate(cell.v));
-						oo[2] = 'vtc'; oo[3] = 'nd'; oo[4] = ""+t;
-						oo[5] = cell.w || SSF_format(cell.z || table_fmt[14], t);
-						break;
-					case 'e': continue;
-				}
-				o.push(oo.join(":"));
-			}
-		}
-		o.push("sheet:c:" + (r.e.c-r.s.c+1) + ":r:" + (r.e.r-r.s.r+1) + ":tvf:1");
-		o.push("valueformat:1:text-wiki");
-		//o.push("copiedfrom:" + ws['!ref']); // clipboard only
-		return o.join("\n");
-	}
-
-	function sheet_to_eth(ws) {
-		return [header, sep, meta, sep, sheet_to_eth_data(ws), end].join("\n");
-		// return ["version:1.5", sheet_to_eth_data(ws)].join("\n"); // clipboard form
-	}
-
-	return {
-		to_workbook: eth_to_workbook,
-		to_sheet: eth_to_sheet,
-		from_sheet: sheet_to_eth
-	};
-})();
-
-var PRN = (function() {
-	function set_text_arr(data, arr, R, C, o) {
-		if(o.raw) arr[R][C] = data;
-		else if(data === ""){/* empty */}
-		else if(data === 'TRUE') arr[R][C] = true;
-		else if(data === 'FALSE') arr[R][C] = false;
-		else if(!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);
-		else if(!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);
-		else arr[R][C] = data;
-	}
-
-	function prn_to_aoa_str(f, opts) {
-		var o = opts || {};
-		var arr = ([]);
-		if(!f || f.length === 0) return arr;
-		var lines = f.split(/[\r\n]/);
-		var L = lines.length - 1;
-		while(L >= 0 && lines[L].length === 0) --L;
-		var start = 10, idx = 0;
-		var R = 0;
-		for(; R <= L; ++R) {
-			idx = lines[R].indexOf(" ");
-			if(idx == -1) idx = lines[R].length; else idx++;
-			start = Math.max(start, idx);
-		}
-		for(R = 0; R <= L; ++R) {
-			arr[R] = [];
-			/* TODO: confirm that widths are always 10 */
-			var C = 0;
-			set_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);
-			for(C = 1; C <= (lines[R].length - start)/10 + 1; ++C)
-				set_text_arr(lines[R].slice(start+(C-1)*10,start+C*10).trim(),arr,R,C,o);
-		}
-		if(o.sheetRows) arr = arr.slice(0, o.sheetRows);
-		return arr;
-	}
-
-	// List of accepted CSV separators
-	var guess_seps = {
-0x2C: ',',
-0x09: "\t",
-0x3B: ';',
-0x7C: '|'
-	};
-
-	// CSV separator weights to be used in case of equal numbers
-	var guess_sep_weights = {
-0x2C: 3,
-0x09: 2,
-0x3B: 1,
-0x7C: 0
-	};
-
-	function guess_sep(str) {
-		var cnt = {}, instr = false, end = 0, cc = 0;
-		for(;end < str.length;++end) {
-			if((cc=str.charCodeAt(end)) == 0x22) instr = !instr;
-			else if(!instr && cc in guess_seps) cnt[cc] = (cnt[cc]||0)+1;
-		}
-
-		cc = [];
-		for(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {
-			cc.push([ cnt[end], end ]);
-		}
-
-		if ( !cc.length ) {
-			cnt = guess_sep_weights;
-			for(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {
-				cc.push([ cnt[end], end ]);
-			}
-		}
-
-		cc.sort(function(a, b) { return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]]; });
-
-		return guess_seps[cc.pop()[1]] || 0x2C;
-	}
-
-	function dsv_to_sheet_str(str, opts) {
-		var o = opts || {};
-		var sep = "";
-		if(DENSE != null && o.dense == null) o.dense = DENSE;
-		var ws = o.dense ? ([]) : ({});
-		var range = ({s: {c:0, r:0}, e: {c:0, r:0}});
-
-		if(str.slice(0,4) == "sep=") {
-			// If the line ends in \r\n
-			if(str.charCodeAt(5) == 13 && str.charCodeAt(6) == 10 ) {
-				sep = str.charAt(4); str = str.slice(7);
-			}
-			// If line ends in \r OR \n
-			else if(str.charCodeAt(5) == 13 || str.charCodeAt(5) == 10 ) {
-				sep = str.charAt(4); str = str.slice(6);
-			}
-			else sep = guess_sep(str.slice(0,1024));
-		}
-		else if(o && o.FS) sep = o.FS;
-		else sep = guess_sep(str.slice(0,1024));
-		var R = 0, C = 0, v = 0;
-		var start = 0, end = 0, sepcc = sep.charCodeAt(0), instr = false, cc=0, startcc=str.charCodeAt(0);
-		var _re = o.dateNF != null ? dateNF_regex(o.dateNF) : null;
-		function finish_cell() {
-			var s = str.slice(start, end); if(s.slice(-1) == "\r") s = s.slice(0, -1);
-			var cell = ({});
-			if(s.charAt(0) == '"' && s.charAt(s.length - 1) == '"') s = s.slice(1,-1).replace(/""/g,'"');
-			if(s.length === 0) cell.t = 'z';
-			else if(o.raw) { cell.t = 's'; cell.v = s; }
-			else if(s.trim().length === 0) { cell.t = 's'; cell.v = s; }
-			else if(s.charCodeAt(0) == 0x3D) {
-				if(s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) { cell.t = 's'; cell.v = s.slice(2,-1).replace(/""/g,'"'); }
-				else if(fuzzyfmla(s)) { cell.t = 'n'; cell.f = s.slice(1); }
-				else { cell.t = 's'; cell.v = s; } }
-			else if(s == "TRUE") { cell.t = 'b'; cell.v = true; }
-			else if(s == "FALSE") { cell.t = 'b'; cell.v = false; }
-			else if(!isNaN(v = fuzzynum(s))) { cell.t = 'n'; if(o.cellText !== false) cell.w = s; cell.v = v; }
-			else if(!isNaN((v = fuzzydate(s)).getDate()) || _re && s.match(_re)) {
-				cell.z = o.dateNF || table_fmt[14];
-				var k = 0;
-				if(_re && s.match(_re)){ s=dateNF_fix(s, o.dateNF, (s.match(_re)||[])); k=1; v = parseDate(s, k); }
-				if(o.cellDates) { cell.t = 'd'; cell.v = v; }
-				else { cell.t = 'n'; cell.v = datenum(v); }
-				if(o.cellText !== false) cell.w = SSF_format(cell.z, cell.v instanceof Date ? datenum(cell.v):cell.v);
-				if(!o.cellNF) delete cell.z;
-			} else {
-				cell.t = 's';
-				cell.v = s;
-			}
-			if(cell.t == 'z'){}
-			else if(o.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = cell; }
-			else ws[encode_cell({c:C,r:R})] = cell;
-			start = end+1; startcc = str.charCodeAt(start);
-			if(range.e.c < C) range.e.c = C;
-			if(range.e.r < R) range.e.r = R;
-			if(cc == sepcc) ++C; else { C = 0; ++R; if(o.sheetRows && o.sheetRows <= R) return true; }
-		}
-		outer: for(;end < str.length;++end) switch((cc=str.charCodeAt(end))) {
-			case 0x22: if(startcc === 0x22) instr = !instr; break;
-			case 0x0d:
-				if(instr) break;
-				if(str.charCodeAt(end+1) == 0x0a) ++end;
-				/* falls through */
-			case sepcc: case 0x0a: if(!instr && finish_cell()) break outer; break;
-			default: break;
-		}
-		if(end - start > 0) finish_cell();
-
-		ws['!ref'] = encode_range(range);
-		return ws;
-	}
-
-	function prn_to_sheet_str(str, opts) {
-		if(!(opts && opts.PRN)) return dsv_to_sheet_str(str, opts);
-		if(opts.FS) return dsv_to_sheet_str(str, opts);
-		if(str.slice(0,4) == "sep=") return dsv_to_sheet_str(str, opts);
-		if(str.indexOf("\t") >= 0 || str.indexOf(",") >= 0 || str.indexOf(";") >= 0) return dsv_to_sheet_str(str, opts);
-		return aoa_to_sheet(prn_to_aoa_str(str, opts), opts);
-	}
-
-	function prn_to_sheet(d, opts) {
-		var str = "", bytes = opts.type == 'string' ? [0,0,0,0] : firstbyte(d, opts);
-		switch(opts.type) {
-			case 'base64': str = Base64_decode(d); break;
-			case 'binary': str = d; break;
-			case 'buffer':
-				if(opts.codepage == 65001) str = d.toString('utf8'); // TODO: test if buf
-				else if(opts.codepage && typeof $cptable !== 'undefined') str = $cptable.utils.decode(opts.codepage, d);
-				else str = has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d);
-				break;
-			case 'array': str = cc2str(d); break;
-			case 'string': str = d; break;
-			default: throw new Error("Unrecognized type " + opts.type);
-		}
-		if(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));
-		else if(opts.type != 'string' && opts.type != 'buffer' && opts.codepage == 65001) str = utf8read(str);
-		else if((opts.type == 'binary') && typeof $cptable !== 'undefined' && opts.codepage)  str = $cptable.utils.decode(opts.codepage, $cptable.utils.encode(28591,str));
-		if(str.slice(0,19) == "socialcalc:version:") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);
-		return prn_to_sheet_str(str, opts);
-	}
-
-	function prn_to_workbook(d, opts) { return sheet_to_workbook(prn_to_sheet(d, opts), opts); }
-
-	function sheet_to_prn(ws) {
-		var o = [];
-		var r = safe_decode_range(ws['!ref']), cell;
-		var dense = Array.isArray(ws);
-		for(var R = r.s.r; R <= r.e.r; ++R) {
-			var oo = [];
-			for(var C = r.s.c; C <= r.e.c; ++C) {
-				var coord = encode_cell({r:R,c:C});
-				cell = dense ? (ws[R]||[])[C] : ws[coord];
-				if(!cell || cell.v == null) { oo.push("          "); continue; }
-				var w = (cell.w || (format_cell(cell), cell.w) || "").slice(0,10);
-				while(w.length < 10) w += " ";
-				oo.push(w + (C === 0 ? " " : ""));
-			}
-			o.push(oo.join(""));
-		}
-		return o.join("\n");
-	}
-
-	return {
-		to_workbook: prn_to_workbook,
-		to_sheet: prn_to_sheet,
-		from_sheet: sheet_to_prn
-	};
-})();
-
-/* Excel defaults to SYLK but warns if data is not valid */
-function read_wb_ID(d, opts) {
-	var o = opts || {}, OLD_WTF = !!o.WTF; o.WTF = true;
-	try {
-		var out = SYLK.to_workbook(d, o);
-		o.WTF = OLD_WTF;
-		return out;
-	} catch(e) {
-		o.WTF = OLD_WTF;
-		if(!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;
-		return PRN.to_workbook(d, opts);
-	}
-}
-
-/* 18.4.7 rPr CT_RPrElt */
-function parse_rpr(rpr) {
-	var font = {}, m = rpr.match(tagregex), i = 0;
-	var pass = false;
-	if(m) for(;i!=m.length; ++i) {
-		var y = parsexmltag(m[i]);
-		switch(y[0].replace(/\w*:/g,"")) {
-			/* 18.8.12 condense CT_BooleanProperty */
-			/* ** not required . */
-			case '<condense': break;
-			/* 18.8.17 extend CT_BooleanProperty */
-			/* ** not required . */
-			case '<extend': break;
-			/* 18.8.36 shadow CT_BooleanProperty */
-			/* ** not required . */
-			case '<shadow':
-				if(!y.val) break;
-				/* falls through */
-			case '<shadow>':
-			case '<shadow/>': font.shadow = 1; break;
-			case '</shadow>': break;
-
-			/* 18.4.1 charset CT_IntProperty TODO */
-			case '<charset':
-				if(y.val == '1') break;
-				font.cp = CS2CP[parseInt(y.val, 10)];
-				break;
-
-			/* 18.4.2 outline CT_BooleanProperty TODO */
-			case '<outline':
-				if(!y.val) break;
-				/* falls through */
-			case '<outline>':
-			case '<outline/>': font.outline = 1; break;
-			case '</outline>': break;
-
-			/* 18.4.5 rFont CT_FontName */
-			case '<rFont': font.name = y.val; break;
-
-			/* 18.4.11 sz CT_FontSize */
-			case '<sz': font.sz = y.val; break;
-
-			/* 18.4.10 strike CT_BooleanProperty */
-			case '<strike':
-				if(!y.val) break;
-				/* falls through */
-			case '<strike>':
-			case '<strike/>': font.strike = 1; break;
-			case '</strike>': break;
-
-			/* 18.4.13 u CT_UnderlineProperty */
-			case '<u':
-				if(!y.val) break;
-				switch(y.val) {
-					case 'double': font.uval = "double"; break;
-					case 'singleAccounting': font.uval = "single-accounting"; break;
-					case 'doubleAccounting': font.uval = "double-accounting"; break;
-				}
-				/* falls through */
-			case '<u>':
-			case '<u/>': font.u = 1; break;
-			case '</u>': break;
-
-			/* 18.8.2 b */
-			case '<b':
-				if(y.val == '0') break;
-				/* falls through */
-			case '<b>':
-			case '<b/>': font.b = 1; break;
-			case '</b>': break;
-
-			/* 18.8.26 i */
-			case '<i':
-				if(y.val == '0') break;
-				/* falls through */
-			case '<i>':
-			case '<i/>': font.i = 1; break;
-			case '</i>': break;
-
-			/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */
-			case '<color':
-				if(y.rgb) font.color = y.rgb.slice(2,8);
-				break;
-			case '<color>': case '<color/>': case '</color>': break;
-
-			/* 18.8.18 family ST_FontFamily */
-			case '<family': font.family = y.val; break;
-			case '<family>': case '<family/>': case '</family>': break;
-
-			/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */
-			case '<vertAlign': font.valign = y.val; break;
-			case '<vertAlign>': case '<vertAlign/>': case '</vertAlign>': break;
-
-			/* 18.8.35 scheme CT_FontScheme TODO */
-			case '<scheme': break;
-			case '<scheme>': case '<scheme/>': case '</scheme>': break;
-
-			/* 18.2.10 extLst CT_ExtensionList ? */
-			case '<extLst': case '<extLst>': case '</extLst>': break;
-			case '<ext': pass = true; break;
-			case '</ext>': pass = false; break;
-			default:
-				if(y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);
-		}
-	}
-	return font;
-}
-
-var parse_rs = (function() {
-	var tregex = matchtag("t"), rpregex = matchtag("rPr");
-	/* 18.4.4 r CT_RElt */
-	function parse_r(r) {
-		/* 18.4.12 t ST_Xstring */
-		var t = r.match(tregex)/*, cp = 65001*/;
-		if(!t) return {t:"s", v:""};
-
-		var o = ({t:'s', v:unescapexml(t[1])});
-		var rpr = r.match(rpregex);
-		if(rpr) o.s = parse_rpr(rpr[1]);
-		return o;
-	}
-	var rregex = /<(?:\w+:)?r>/g, rend = /<\/(?:\w+:)?r>/;
-	return function parse_rs(rs) {
-		return rs.replace(rregex,"").split(rend).map(parse_r).filter(function(r) { return r.v; });
-	};
-})();
-
-
-/* Parse a list of <r> tags */
-var rs_to_html = (function parse_rs_factory() {
-	var nlregex = /(\r\n|\n)/g;
-	function parse_rpr2(font, intro, outro) {
-		var style = [];
-
-		if(font.u) style.push("text-decoration: underline;");
-		if(font.uval) style.push("text-underline-style:" + font.uval + ";");
-		if(font.sz) style.push("font-size:" + font.sz + "pt;");
-		if(font.outline) style.push("text-effect: outline;");
-		if(font.shadow) style.push("text-shadow: auto;");
-		intro.push('<span style="' + style.join("") + '">');
-
-		if(font.b) { intro.push("<b>"); outro.push("</b>"); }
-		if(font.i) { intro.push("<i>"); outro.push("</i>"); }
-		if(font.strike) { intro.push("<s>"); outro.push("</s>"); }
-
-		var align = font.valign || "";
-		if(align == "superscript" || align == "super") align = "sup";
-		else if(align == "subscript") align = "sub";
-		if(align != "") { intro.push("<" + align + ">"); outro.push("</" + align + ">"); }
-
-		outro.push("</span>");
-		return font;
-	}
-
-	/* 18.4.4 r CT_RElt */
-	function r_to_html(r) {
-		var terms = [[],r.v,[]];
-		if(!r.v) return "";
-
-		if(r.s) parse_rpr2(r.s, terms[0], terms[2]);
-
-		return terms[0].join("") + terms[1].replace(nlregex,'<br/>') + terms[2].join("");
-	}
-
-	return function parse_rs(rs) {
-		return rs.map(r_to_html).join("");
-	};
-})();
-
-/* 18.4.8 si CT_Rst */
-var sitregex = /<(?:\w+:)?t[^>]*>([^<]*)<\/(?:\w+:)?t>/g, sirregex = /<(?:\w+:)?r>/;
-var sirphregex = /<(?:\w+:)?rPh.*?>([\s\S]*?)<\/(?:\w+:)?rPh>/g;
-function parse_si(x, opts) {
-	var html = opts ? opts.cellHTML : true;
-	var z = {};
-	if(!x) return { t: "" };
-	//var y;
-	/* 18.4.12 t ST_Xstring (Plaintext String) */
-	// TODO: is whitespace actually valid here?
-	if(x.match(/^\s*<(?:\w+:)?t[^>]*>/)) {
-		z.t = unescapexml(utf8read(x.slice(x.indexOf(">")+1).split(/<\/(?:\w+:)?t>/)[0]||""), true);
-		z.r = utf8read(x);
-		if(html) z.h = escapehtml(z.t);
-	}
-	/* 18.4.4 r CT_RElt (Rich Text Run) */
-	else if((/*y = */x.match(sirregex))) {
-		z.r = utf8read(x);
-		z.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex)||[]).join("").replace(tagregex,"")), true);
-		if(html) z.h = rs_to_html(parse_rs(z.r));
-	}
-	/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */
-	/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */
-	return z;
-}
-
-/* 18.4 Shared String Table */
-var sstr0 = /<(?:\w+:)?sst([^>]*)>([\s\S]*)<\/(?:\w+:)?sst>/;
-var sstr1 = /<(?:\w+:)?(?:si|sstItem)>/g;
-var sstr2 = /<\/(?:\w+:)?(?:si|sstItem)>/;
-function parse_sst_xml(data, opts) {
-	var s = ([]), ss = "";
-	if(!data) return s;
-	/* 18.4.9 sst CT_Sst */
-	var sst = data.match(sstr0);
-	if(sst) {
-		ss = sst[2].replace(sstr1,"").split(sstr2);
-		for(var i = 0; i != ss.length; ++i) {
-			var o = parse_si(ss[i].trim(), opts);
-			if(o != null) s[s.length] = o;
-		}
-		sst = parsexmltag(sst[1]); s.Count = sst.count; s.Unique = sst.uniqueCount;
-	}
-	return s;
-}
-
-var straywsregex = /^\s|\s$|[\t\n\r]/;
-function write_sst_xml(sst, opts) {
-	if(!opts.bookSST) return "";
-	var o = [XML_HEADER];
-	o[o.length] = (writextag('sst', null, {
-		xmlns: XMLNS_main[0],
-		count: sst.Count,
-		uniqueCount: sst.Unique
-	}));
-	for(var i = 0; i != sst.length; ++i) { if(sst[i] == null) continue;
-		var s = sst[i];
-		var sitag = "<si>";
-		if(s.r) sitag += s.r;
-		else {
-			sitag += "<t";
-			if(!s.t) s.t = "";
-			if(typeof s.t !== "string") s.t = String(s.t);
-			if(s.t.match(straywsregex)) sitag += ' xml:space="preserve"';
-			sitag += ">" + escapexml(s.t) + "</t>";
-		}
-		sitag += "</si>";
-		o[o.length] = (sitag);
-	}
-	if(o.length>2){ o[o.length] = ('</sst>'); o[1]=o[1].replace("/>",">"); }
-	return o.join("");
-}
-function hex2RGB(h) {
-	var o = h.slice(h[0]==="#"?1:0).slice(0,6);
-	return [parseInt(o.slice(0,2),16),parseInt(o.slice(2,4),16),parseInt(o.slice(4,6),16)];
-}
-function rgb2Hex(rgb) {
-	for(var i=0,o=1; i!=3; ++i) o = o*256 + (rgb[i]>255?255:rgb[i]<0?0:rgb[i]);
-	return o.toString(16).toUpperCase().slice(1);
-}
-
-function rgb2HSL(rgb) {
-	var R = rgb[0]/255, G = rgb[1]/255, B=rgb[2]/255;
-	var M = Math.max(R, G, B), m = Math.min(R, G, B), C = M - m;
-	if(C === 0) return [0, 0, R];
-
-	var H6 = 0, S = 0, L2 = (M + m);
-	S = C / (L2 > 1 ? 2 - L2 : L2);
-	switch(M){
-		case R: H6 = ((G - B) / C + 6)%6; break;
-		case G: H6 = ((B - R) / C + 2); break;
-		case B: H6 = ((R - G) / C + 4); break;
-	}
-	return [H6 / 6, S, L2 / 2];
-}
-
-function hsl2RGB(hsl){
-	var H = hsl[0], S = hsl[1], L = hsl[2];
-	var C = S * 2 * (L < 0.5 ? L : 1 - L), m = L - C/2;
-	var rgb = [m,m,m], h6 = 6*H;
-
-	var X;
-	if(S !== 0) switch(h6|0) {
-		case 0: case 6: X = C * h6; rgb[0] += C; rgb[1] += X; break;
-		case 1: X = C * (2 - h6);   rgb[0] += X; rgb[1] += C; break;
-		case 2: X = C * (h6 - 2);   rgb[1] += C; rgb[2] += X; break;
-		case 3: X = C * (4 - h6);   rgb[1] += X; rgb[2] += C; break;
-		case 4: X = C * (h6 - 4);   rgb[2] += C; rgb[0] += X; break;
-		case 5: X = C * (6 - h6);   rgb[2] += X; rgb[0] += C; break;
-	}
-	for(var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i]*255);
-	return rgb;
-}
-
-/* 18.8.3 bgColor tint algorithm */
-function rgb_tint(hex, tint) {
-	if(tint === 0) return hex;
-	var hsl = rgb2HSL(hex2RGB(hex));
-	if (tint < 0) hsl[2] = hsl[2] * (1 + tint);
-	else hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);
-	return rgb2Hex(hsl2RGB(hsl));
-}
-
-/* 18.3.1.13 width calculations */
-/* [MS-OI29500] 2.1.595 Column Width & Formatting */
-var DEF_MDW = 6, MAX_MDW = 15, MIN_MDW = 1, MDW = DEF_MDW;
-function width2px(width) { return Math.floor(( width + (Math.round(128/MDW))/256 )* MDW ); }
-function px2char(px) { return (Math.floor((px - 5)/MDW * 100 + 0.5))/100; }
-function char2width(chr) { return (Math.round((chr * MDW + 5)/MDW*256))/256; }
-//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }
-//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }
-function cycle_width(collw) { return char2width(px2char(width2px(collw))); }
-/* XLSX/XLSB/XLS specify width in units of MDW */
-function find_mdw_colw(collw) {
-	var delta = Math.abs(collw - cycle_width(collw)), _MDW = MDW;
-	if(delta > 0.005) for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) if(Math.abs(collw - cycle_width(collw)) <= delta) { delta = Math.abs(collw - cycle_width(collw)); _MDW = MDW; }
-	MDW = _MDW;
-}
-/* XLML specifies width in terms of pixels */
-/*function find_mdw_wpx(wpx) {
-	var delta = Infinity, guess = 0, _MDW = MIN_MDW;
-	for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {
-		guess = char2width_(px2char_(wpx))*256;
-		guess = (guess) % 1;
-		if(guess > 0.5) guess--;
-		if(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }
-	}
-	MDW = _MDW;
-}*/
-
-function process_col(coll) {
-	if(coll.width) {
-		coll.wpx = width2px(coll.width);
-		coll.wch = px2char(coll.wpx);
-		coll.MDW = MDW;
-	} else if(coll.wpx) {
-		coll.wch = px2char(coll.wpx);
-		coll.width = char2width(coll.wch);
-		coll.MDW = MDW;
-	} else if(typeof coll.wch == 'number') {
-		coll.width = char2width(coll.wch);
-		coll.wpx = width2px(coll.width);
-		coll.MDW = MDW;
-	}
-	if(coll.customWidth) delete coll.customWidth;
-}
-
-var DEF_PPI = 96, PPI = DEF_PPI;
-function px2pt(px) { return px * 96 / PPI; }
-function pt2px(pt) { return pt * PPI / 96; }
-
-/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */
-var XLMLPatternTypeMap = {
-	"None": "none",
-	"Solid": "solid",
-	"Gray50": "mediumGray",
-	"Gray75": "darkGray",
-	"Gray25": "lightGray",
-	"HorzStripe": "darkHorizontal",
-	"VertStripe": "darkVertical",
-	"ReverseDiagStripe": "darkDown",
-	"DiagStripe": "darkUp",
-	"DiagCross": "darkGrid",
-	"ThickDiagCross": "darkTrellis",
-	"ThinHorzStripe": "lightHorizontal",
-	"ThinVertStripe": "lightVertical",
-	"ThinReverseDiagStripe": "lightDown",
-	"ThinHorzCross": "lightGrid"
-};
-
-/* 18.8.5 borders CT_Borders */
-function parse_borders(t, styles, themes, opts) {
-	styles.Borders = [];
-	var border = {};
-	var pass = false;
-	(t[0].match(tagregex)||[]).forEach(function(x) {
-		var y = parsexmltag(x);
-		switch(strip_ns(y[0])) {
-			case '<borders': case '<borders>': case '</borders>': break;
-
-			/* 18.8.4 border CT_Border */
-			case '<border': case '<border>': case '<border/>':
-				border = {};
-				if(y.diagonalUp) border.diagonalUp = parsexmlbool(y.diagonalUp);
-				if(y.diagonalDown) border.diagonalDown = parsexmlbool(y.diagonalDown);
-				styles.Borders.push(border);
-				break;
-			case '</border>': break;
-
-			/* note: not in spec, appears to be CT_BorderPr */
-			case '<left/>': break;
-			case '<left': case '<left>': break;
-			case '</left>': break;
-
-			/* note: not in spec, appears to be CT_BorderPr */
-			case '<right/>': break;
-			case '<right': case '<right>': break;
-			case '</right>': break;
-
-			/* 18.8.43 top CT_BorderPr */
-			case '<top/>': break;
-			case '<top': case '<top>': break;
-			case '</top>': break;
-
-			/* 18.8.6 bottom CT_BorderPr */
-			case '<bottom/>': break;
-			case '<bottom': case '<bottom>': break;
-			case '</bottom>': break;
-
-			/* 18.8.13 diagonal CT_BorderPr */
-			case '<diagonal': case '<diagonal>': case '<diagonal/>': break;
-			case '</diagonal>': break;
-
-			/* 18.8.25 horizontal CT_BorderPr */
-			case '<horizontal': case '<horizontal>': case '<horizontal/>': break;
-			case '</horizontal>': break;
-
-			/* 18.8.44 vertical CT_BorderPr */
-			case '<vertical': case '<vertical>': case '<vertical/>': break;
-			case '</vertical>': break;
-
-			/* 18.8.37 start CT_BorderPr */
-			case '<start': case '<start>': case '<start/>': break;
-			case '</start>': break;
-
-			/* 18.8.16 end CT_BorderPr */
-			case '<end': case '<end>': case '<end/>': break;
-			case '</end>': break;
-
-			/* 18.8.? color CT_Color */
-			case '<color': case '<color>':
-				break;
-			case '<color/>': case '</color>': break;
-
-			/* 18.2.10 extLst CT_ExtensionList ? */
-			case '<extLst': case '<extLst>': case '</extLst>': break;
-			case '<ext': pass = true; break;
-			case '</ext>': pass = false; break;
-			default: if(opts && opts.WTF) {
-				if(!pass) throw new Error('unrecognized ' + y[0] + ' in borders');
-			}
-		}
-	});
-}
-
-/* 18.8.21 fills CT_Fills */
-function parse_fills(t, styles, themes, opts) {
-	styles.Fills = [];
-	var fill = {};
-	var pass = false;
-	(t[0].match(tagregex)||[]).forEach(function(x) {
-		var y = parsexmltag(x);
-		switch(strip_ns(y[0])) {
-			case '<fills': case '<fills>': case '</fills>': break;
-
-			/* 18.8.20 fill CT_Fill */
-			case '<fill>': case '<fill': case '<fill/>':
-				fill = {}; styles.Fills.push(fill); break;
-			case '</fill>': break;
-
-			/* 18.8.24 gradientFill CT_GradientFill */
-			case '<gradientFill>': break;
-			case '<gradientFill':
-			case '</gradientFill>': styles.Fills.push(fill); fill = {}; break;
-
-			/* 18.8.32 patternFill CT_PatternFill */
-			case '<patternFill': case '<patternFill>':
-				if(y.patternType) fill.patternType = y.patternType;
-				break;
-			case '<patternFill/>': case '</patternFill>': break;
-
-			/* 18.8.3 bgColor CT_Color */
-			case '<bgColor':
-				if(!fill.bgColor) fill.bgColor = {};
-				if(y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);
-				if(y.theme) fill.bgColor.theme = parseInt(y.theme, 10);
-				if(y.tint) fill.bgColor.tint = parseFloat(y.tint);
-				/* Excel uses ARGB strings */
-				if(y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);
-				break;
-			case '<bgColor/>': case '</bgColor>': break;
-
-			/* 18.8.19 fgColor CT_Color */
-			case '<fgColor':
-				if(!fill.fgColor) fill.fgColor = {};
-				if(y.theme) fill.fgColor.theme = parseInt(y.theme, 10);
-				if(y.tint) fill.fgColor.tint = parseFloat(y.tint);
-				/* Excel uses ARGB strings */
-				if(y.rgb != null) fill.fgColor.rgb = y.rgb.slice(-6);
-				break;
-			case '<fgColor/>': case '</fgColor>': break;
-
-			/* 18.8.38 stop CT_GradientStop */
-			case '<stop': case '<stop/>': break;
-			case '</stop>': break;
-
-			/* 18.8.? color CT_Color */
-			case '<color': case '<color/>': break;
-			case '</color>': break;
-
-			/* 18.2.10 extLst CT_ExtensionList ? */
-			case '<extLst': case '<extLst>': case '</extLst>': break;
-			case '<ext': pass = true; break;
-			case '</ext>': pass = false; break;
-			default: if(opts && opts.WTF) {
-				if(!pass) throw new Error('unrecognized ' + y[0] + ' in fills');
-			}
-		}
-	});
-}
-
-/* 18.8.23 fonts CT_Fonts */
-function parse_fonts(t, styles, themes, opts) {
-	styles.Fonts = [];
-	var font = {};
-	var pass = false;
-	(t[0].match(tagregex)||[]).forEach(function(x) {
-		var y = parsexmltag(x);
-		switch(strip_ns(y[0])) {
-			case '<fonts': case '<fonts>': case '</fonts>': break;
-
-			/* 18.8.22 font CT_Font */
-			case '<font': case '<font>': break;
-			case '</font>': case '<font/>':
-				styles.Fonts.push(font);
-				font = {};
-				break;
-
-			/* 18.8.29 name CT_FontName */
-			case '<name': if(y.val) font.name = utf8read(y.val); break;
-			case '<name/>': case '</name>': break;
-
-			/* 18.8.2  b CT_BooleanProperty */
-			case '<b': font.bold = y.val ? parsexmlbool(y.val) : 1; break;
-			case '<b/>': font.bold = 1; break;
-
-			/* 18.8.26 i CT_BooleanProperty */
-			case '<i': font.italic = y.val ? parsexmlbool(y.val) : 1; break;
-			case '<i/>': font.italic = 1; break;
-
-			/* 18.4.13 u CT_UnderlineProperty */
-			case '<u':
-				switch(y.val) {
-					case "none": font.underline = 0x00; break;
-					case "single": font.underline = 0x01; break;
-					case "double": font.underline = 0x02; break;
-					case "singleAccounting": font.underline = 0x21; break;
-					case "doubleAccounting": font.underline = 0x22; break;
-				} break;
-			case '<u/>': font.underline = 1; break;
-
-			/* 18.4.10 strike CT_BooleanProperty */
-			case '<strike': font.strike = y.val ? parsexmlbool(y.val) : 1; break;
-			case '<strike/>': font.strike = 1; break;
-
-			/* 18.4.2  outline CT_BooleanProperty */
-			case '<outline': font.outline = y.val ? parsexmlbool(y.val) : 1; break;
-			case '<outline/>': font.outline = 1; break;
-
-			/* 18.8.36 shadow CT_BooleanProperty */
-			case '<shadow': font.shadow = y.val ? parsexmlbool(y.val) : 1; break;
-			case '<shadow/>': font.shadow = 1; break;
-
-			/* 18.8.12 condense CT_BooleanProperty */
-			case '<condense': font.condense = y.val ? parsexmlbool(y.val) : 1; break;
-			case '<condense/>': font.condense = 1; break;
-
-			/* 18.8.17 extend CT_BooleanProperty */
-			case '<extend': font.extend = y.val ? parsexmlbool(y.val) : 1; break;
-			case '<extend/>': font.extend = 1; break;
-
-			/* 18.4.11 sz CT_FontSize */
-			case '<sz': if(y.val) font.sz = +y.val; break;
-			case '<sz/>': case '</sz>': break;
-
-			/* 18.4.14 vertAlign CT_VerticalAlignFontProperty */
-			case '<vertAlign': if(y.val) font.vertAlign = y.val; break;
-			case '<vertAlign/>': case '</vertAlign>': break;
-
-			/* 18.8.18 family CT_FontFamily */
-			case '<family': if(y.val) font.family = parseInt(y.val,10); break;
-			case '<family/>': case '</family>': break;
-
-			/* 18.8.35 scheme CT_FontScheme */
-			case '<scheme': if(y.val) font.scheme = y.val; break;
-			case '<scheme/>': case '</scheme>': break;
-
-			/* 18.4.1 charset CT_IntProperty */
-			case '<charset':
-				if(y.val == '1') break;
-				y.codepage = CS2CP[parseInt(y.val, 10)];
-				break;
-
-			/* 18.?.? color CT_Color */
-			case '<color':
-				if(!font.color) font.color = {};
-				if(y.auto) font.color.auto = parsexmlbool(y.auto);
-
-				if(y.rgb) font.color.rgb = y.rgb.slice(-6);
-				else if(y.indexed) {
-					font.color.index = parseInt(y.indexed, 10);
-					var icv = XLSIcv[font.color.index];
-					if(font.color.index == 81) icv = XLSIcv[1];
-					if(!icv) icv = XLSIcv[1]; //throw new Error(x); // note: 206 is valid
-					font.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);
-				} else if(y.theme) {
-					font.color.theme = parseInt(y.theme, 10);
-					if(y.tint) font.color.tint = parseFloat(y.tint);
-					if(y.theme && themes.themeElements && themes.themeElements.clrScheme) {
-						font.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);
-					}
-				}
-
-				break;
-			case '<color/>': case '</color>': break;
-
-			/* note: sometimes mc:AlternateContent appears bare */
-			case '<AlternateContent': pass = true; break;
-			case '</AlternateContent>': pass = false; break;
-
-			/* 18.2.10 extLst CT_ExtensionList ? */
-			case '<extLst': case '<extLst>': case '</extLst>': break;
-			case '<ext': pass = true; break;
-			case '</ext>': pass = false; break;
-			default: if(opts && opts.WTF) {
-				if(!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');
-			}
-		}
-	});
-}
-
-/* 18.8.31 numFmts CT_NumFmts */
-function parse_numFmts(t, styles, opts) {
-	styles.NumberFmt = [];
-	var k/*Array<number>*/ = (keys(table_fmt));
-	for(var i=0; i < k.length; ++i) styles.NumberFmt[k[i]] = table_fmt[k[i]];
-	var m = t[0].match(tagregex);
-	if(!m) return;
-	for(i=0; i < m.length; ++i) {
-		var y = parsexmltag(m[i]);
-		switch(strip_ns(y[0])) {
-			case '<numFmts': case '</numFmts>': case '<numFmts/>': case '<numFmts>': break;
-			case '<numFmt': {
-				var f=unescapexml(utf8read(y.formatCode)), j=parseInt(y.numFmtId,10);
-				styles.NumberFmt[j] = f;
-				if(j>0) {
-					if(j > 0x188) {
-						for(j = 0x188; j > 0x3c; --j) if(styles.NumberFmt[j] == null) break;
-						styles.NumberFmt[j] = f;
-					}
-					SSF__load(f,j);
-				}
-			} break;
-			case '</numFmt>': break;
-			default: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');
-		}
-	}
-}
-
-function write_numFmts(NF) {
-	var o = ["<numFmts>"];
-	[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {
-		for(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) o[o.length] = (writextag('numFmt',null,{numFmtId:i,formatCode:escapexml(NF[i])}));
-	});
-	if(o.length === 1) return "";
-	o[o.length] = ("</numFmts>");
-	o[0] = writextag('numFmts', null, { count:o.length-2 }).replace("/>", ">");
-	return o.join("");
-}
-
-/* 18.8.10 cellXfs CT_CellXfs */
-var cellXF_uint = [ "numFmtId", "fillId", "fontId", "borderId", "xfId" ];
-var cellXF_bool = [ "applyAlignment", "applyBorder", "applyFill", "applyFont", "applyNumberFormat", "applyProtection", "pivotButton", "quotePrefix" ];
-function parse_cellXfs(t, styles, opts) {
-	styles.CellXf = [];
-	var xf;
-	var pass = false;
-	(t[0].match(tagregex)||[]).forEach(function(x) {
-		var y = parsexmltag(x), i = 0;
-		switch(strip_ns(y[0])) {
-			case '<cellXfs': case '<cellXfs>': case '<cellXfs/>': case '</cellXfs>': break;
-
-			/* 18.8.45 xf CT_Xf */
-			case '<xf': case '<xf/>':
-				xf = y;
-				delete xf[0];
-				for(i = 0; i < cellXF_uint.length; ++i) if(xf[cellXF_uint[i]])
-					xf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);
-				for(i = 0; i < cellXF_bool.length; ++i) if(xf[cellXF_bool[i]])
-					xf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);
-				if(styles.NumberFmt && xf.numFmtId > 0x188) {
-					for(i = 0x188; i > 0x3c; --i) if(styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) { xf.numFmtId = i; break; }
-				}
-				styles.CellXf.push(xf); break;
-			case '</xf>': break;
-
-			/* 18.8.1 alignment CT_CellAlignment */
-			case '<alignment': case '<alignment/>':
-				var alignment = {};
-				if(y.vertical) alignment.vertical = y.vertical;
-				if(y.horizontal) alignment.horizontal = y.horizontal;
-				if(y.textRotation != null) alignment.textRotation = y.textRotation;
-				if(y.indent) alignment.indent = y.indent;
-				if(y.wrapText) alignment.wrapText = parsexmlbool(y.wrapText);
-				xf.alignment = alignment;
-				break;
-			case '</alignment>': break;
-
-			/* 18.8.33 protection CT_CellProtection */
-			case '<protection':
-				break;
-			case '</protection>': case '<protection/>': break;
-
-			/* note: sometimes mc:AlternateContent appears bare */
-			case '<AlternateContent': pass = true; break;
-			case '</AlternateContent>': pass = false; break;
-
-			/* 18.2.10 extLst CT_ExtensionList ? */
-			case '<extLst': case '<extLst>': case '</extLst>': break;
-			case '<ext': pass = true; break;
-			case '</ext>': pass = false; break;
-			default: if(opts && opts.WTF) {
-				if(!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');
-			}
-		}
-	});
-}
-
-function write_cellXfs(cellXfs) {
-	var o = [];
-	o[o.length] = (writextag('cellXfs',null));
-	cellXfs.forEach(function(c) {
-		o[o.length] = (writextag('xf', null, c));
-	});
-	o[o.length] = ("</cellXfs>");
-	if(o.length === 2) return "";
-	o[0] = writextag('cellXfs',null, {count:o.length-2}).replace("/>",">");
-	return o.join("");
-}
-
-/* 18.8 Styles CT_Stylesheet*/
-var parse_sty_xml= (function make_pstyx() {
-var numFmtRegex = /<(?:\w+:)?numFmts([^>]*)>[\S\s]*?<\/(?:\w+:)?numFmts>/;
-var cellXfRegex = /<(?:\w+:)?cellXfs([^>]*)>[\S\s]*?<\/(?:\w+:)?cellXfs>/;
-var fillsRegex = /<(?:\w+:)?fills([^>]*)>[\S\s]*?<\/(?:\w+:)?fills>/;
-var fontsRegex = /<(?:\w+:)?fonts([^>]*)>[\S\s]*?<\/(?:\w+:)?fonts>/;
-var bordersRegex = /<(?:\w+:)?borders([^>]*)>[\S\s]*?<\/(?:\w+:)?borders>/;
-
-return function parse_sty_xml(data, themes, opts) {
-	var styles = {};
-	if(!data) return styles;
-	data = data.replace(/<!--([\s\S]*?)-->/mg,"").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm,"");
-	/* 18.8.39 styleSheet CT_Stylesheet */
-	var t;
-
-	/* 18.8.31 numFmts CT_NumFmts ? */
-	if((t=data.match(numFmtRegex))) parse_numFmts(t, styles, opts);
-
-	/* 18.8.23 fonts CT_Fonts ? */
-	if((t=data.match(fontsRegex))) parse_fonts(t, styles, themes, opts);
-
-	/* 18.8.21 fills CT_Fills ? */
-	if((t=data.match(fillsRegex))) parse_fills(t, styles, themes, opts);
-
-	/* 18.8.5  borders CT_Borders ? */
-	if((t=data.match(bordersRegex))) parse_borders(t, styles, themes, opts);
-
-	/* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */
-	/* 18.8.8  cellStyles CT_CellStyles ? */
-
-	/* 18.8.10 cellXfs CT_CellXfs ? */
-	if((t=data.match(cellXfRegex))) parse_cellXfs(t, styles, opts);
-
-	/* 18.8.15 dxfs CT_Dxfs ? */
-	/* 18.8.42 tableStyles CT_TableStyles ? */
-	/* 18.8.11 colors CT_Colors ? */
-	/* 18.2.10 extLst CT_ExtensionList ? */
-
-	return styles;
-};
-})();
-
-function write_sty_xml(wb, opts) {
-	var o = [XML_HEADER, writextag('styleSheet', null, {
-		'xmlns': XMLNS_main[0],
-		'xmlns:vt': XMLNS.vt
-	})], w;
-	if(wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;
-	o[o.length] = ('<fonts count="1"><font><sz val="12"/><color theme="1"/><name val="Calibri"/><family val="2"/><scheme val="minor"/></font></fonts>');
-	o[o.length] = ('<fills count="2"><fill><patternFill patternType="none"/></fill><fill><patternFill patternType="gray125"/></fill></fills>');
-	o[o.length] = ('<borders count="1"><border><left/><right/><top/><bottom/><diagonal/></border></borders>');
-	o[o.length] = ('<cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0"/></cellStyleXfs>');
-	if((w = write_cellXfs(opts.cellXfs))) o[o.length] = (w);
-	o[o.length] = ('<cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0"/></cellStyles>');
-	o[o.length] = ('<dxfs count="0"/>');
-	o[o.length] = ('<tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4"/>');
-
-	if(o.length>2){ o[o.length] = ('</styleSheet>'); o[1]=o[1].replace("/>",">"); }
-	return o.join("");
-}
-/* Even though theme layout is dk1 lt1 dk2 lt2, true order is lt1 dk1 lt2 dk2 */
-var XLSXThemeClrScheme = [
-	'</a:lt1>', '</a:dk1>', '</a:lt2>', '</a:dk2>',
-	'</a:accent1>', '</a:accent2>', '</a:accent3>',
-	'</a:accent4>', '</a:accent5>', '</a:accent6>',
-	'</a:hlink>', '</a:folHlink>'
-];
-/* 20.1.6.2 clrScheme CT_ColorScheme */
-function parse_clrScheme(t, themes, opts) {
-	themes.themeElements.clrScheme = [];
-	var color = {};
-	(t[0].match(tagregex)||[]).forEach(function(x) {
-		var y = parsexmltag(x);
-		switch(y[0]) {
-			/* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */
-			case '<a:clrScheme': case '</a:clrScheme>': break;
-
-			/* 20.1.2.3.32 srgbClr CT_SRgbColor */
-			case '<a:srgbClr':
-				color.rgb = y.val; break;
-
-			/* 20.1.2.3.33 sysClr CT_SystemColor */
-			case '<a:sysClr':
-				color.rgb = y.lastClr; break;
-
-			/* 20.1.4.1.1 accent1 (Accent 1) */
-			/* 20.1.4.1.2 accent2 (Accent 2) */
-			/* 20.1.4.1.3 accent3 (Accent 3) */
-			/* 20.1.4.1.4 accent4 (Accent 4) */
-			/* 20.1.4.1.5 accent5 (Accent 5) */
-			/* 20.1.4.1.6 accent6 (Accent 6) */
-			/* 20.1.4.1.9 dk1 (Dark 1) */
-			/* 20.1.4.1.10 dk2 (Dark 2) */
-			/* 20.1.4.1.15 folHlink (Followed Hyperlink) */
-			/* 20.1.4.1.19 hlink (Hyperlink) */
-			/* 20.1.4.1.22 lt1 (Light 1) */
-			/* 20.1.4.1.23 lt2 (Light 2) */
-			case '<a:dk1>': case '</a:dk1>':
-			case '<a:lt1>': case '</a:lt1>':
-			case '<a:dk2>': case '</a:dk2>':
-			case '<a:lt2>': case '</a:lt2>':
-			case '<a:accent1>': case '</a:accent1>':
-			case '<a:accent2>': case '</a:accent2>':
-			case '<a:accent3>': case '</a:accent3>':
-			case '<a:accent4>': case '</a:accent4>':
-			case '<a:accent5>': case '</a:accent5>':
-			case '<a:accent6>': case '</a:accent6>':
-			case '<a:hlink>': case '</a:hlink>':
-			case '<a:folHlink>': case '</a:folHlink>':
-				if (y[0].charAt(1) === '/') {
-					themes.themeElements.clrScheme[XLSXThemeClrScheme.indexOf(y[0])] = color;
-					color = {};
-				} else {
-					color.name = y[0].slice(3, y[0].length - 1);
-				}
-				break;
-
-			default: if(opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');
-		}
-	});
-}
-
-/* 20.1.4.1.18 fontScheme CT_FontScheme */
-function parse_fontScheme() { }
-
-/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */
-function parse_fmtScheme() { }
-
-var clrsregex = /<a:clrScheme([^>]*)>[\s\S]*<\/a:clrScheme>/;
-var fntsregex = /<a:fontScheme([^>]*)>[\s\S]*<\/a:fontScheme>/;
-var fmtsregex = /<a:fmtScheme([^>]*)>[\s\S]*<\/a:fmtScheme>/;
-
-/* 20.1.6.10 themeElements CT_BaseStyles */
-function parse_themeElements(data, themes, opts) {
-	themes.themeElements = {};
-
-	var t;
-
-	[
-		/* clrScheme CT_ColorScheme */
-		['clrScheme', clrsregex, parse_clrScheme],
-		/* fontScheme CT_FontScheme */
-		['fontScheme', fntsregex, parse_fontScheme],
-		/* fmtScheme CT_StyleMatrix */
-		['fmtScheme', fmtsregex, parse_fmtScheme]
-	].forEach(function(m) {
-		if(!(t=data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');
-		m[2](t, themes, opts);
-	});
-}
-
-var themeltregex = /<a:themeElements([^>]*)>[\s\S]*<\/a:themeElements>/;
-
-/* 14.2.7 Theme Part */
-function parse_theme_xml(data, opts) {
-	/* 20.1.6.9 theme CT_OfficeStyleSheet */
-	if(!data || data.length === 0) data = write_theme();
-
-	var t;
-	var themes = {};
-
-	/* themeElements CT_BaseStyles */
-	if(!(t=data.match(themeltregex))) throw new Error('themeElements not found in theme');
-	parse_themeElements(t[0], themes, opts);
-	themes.raw = data;
-	return themes;
-}
-
-function write_theme(Themes, opts) {
-	if(opts && opts.themeXLSX) return opts.themeXLSX;
-	if(Themes && typeof Themes.raw == "string") return Themes.raw;
-	var o = [XML_HEADER];
-	o[o.length] = '<a:theme xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" name="Office Theme">';
-	o[o.length] =  '<a:themeElements>';
-
-	o[o.length] =   '<a:clrScheme name="Office">';
-	o[o.length] =    '<a:dk1><a:sysClr val="windowText" lastClr="000000"/></a:dk1>';
-	o[o.length] =    '<a:lt1><a:sysClr val="window" lastClr="FFFFFF"/></a:lt1>';
-	o[o.length] =    '<a:dk2><a:srgbClr val="1F497D"/></a:dk2>';
-	o[o.length] =    '<a:lt2><a:srgbClr val="EEECE1"/></a:lt2>';
-	o[o.length] =    '<a:accent1><a:srgbClr val="4F81BD"/></a:accent1>';
-	o[o.length] =    '<a:accent2><a:srgbClr val="C0504D"/></a:accent2>';
-	o[o.length] =    '<a:accent3><a:srgbClr val="9BBB59"/></a:accent3>';
-	o[o.length] =    '<a:accent4><a:srgbClr val="8064A2"/></a:accent4>';
-	o[o.length] =    '<a:accent5><a:srgbClr val="4BACC6"/></a:accent5>';
-	o[o.length] =    '<a:accent6><a:srgbClr val="F79646"/></a:accent6>';
-	o[o.length] =    '<a:hlink><a:srgbClr val="0000FF"/></a:hlink>';
-	o[o.length] =    '<a:folHlink><a:srgbClr val="800080"/></a:folHlink>';
-	o[o.length] =   '</a:clrScheme>';
-
-	o[o.length] =   '<a:fontScheme name="Office">';
-	o[o.length] =    '<a:majorFont>';
-	o[o.length] =     '<a:latin typeface="Cambria"/>';
-	o[o.length] =     '<a:ea typeface=""/>';
-	o[o.length] =     '<a:cs typeface=""/>';
-	o[o.length] =     '<a:font script="Jpan" typeface="ï¼­ï¼³ ï¼°ã´ã·ãã¯"/>';
-	o[o.length] =     '<a:font script="Hang" typeface="ë§ì ê³ ë"/>';
-	o[o.length] =     '<a:font script="Hans" typeface="å®ä½"/>';
-	o[o.length] =     '<a:font script="Hant" typeface="æ°ç´°æé«"/>';
-	o[o.length] =     '<a:font script="Arab" typeface="Times New Roman"/>';
-	o[o.length] =     '<a:font script="Hebr" typeface="Times New Roman"/>';
-	o[o.length] =     '<a:font script="Thai" typeface="Tahoma"/>';
-	o[o.length] =     '<a:font script="Ethi" typeface="Nyala"/>';
-	o[o.length] =     '<a:font script="Beng" typeface="Vrinda"/>';
-	o[o.length] =     '<a:font script="Gujr" typeface="Shruti"/>';
-	o[o.length] =     '<a:font script="Khmr" typeface="MoolBoran"/>';
-	o[o.length] =     '<a:font script="Knda" typeface="Tunga"/>';
-	o[o.length] =     '<a:font script="Guru" typeface="Raavi"/>';
-	o[o.length] =     '<a:font script="Cans" typeface="Euphemia"/>';
-	o[o.length] =     '<a:font script="Cher" typeface="Plantagenet Cherokee"/>';
-	o[o.length] =     '<a:font script="Yiii" typeface="Microsoft Yi Baiti"/>';
-	o[o.length] =     '<a:font script="Tibt" typeface="Microsoft Himalaya"/>';
-	o[o.length] =     '<a:font script="Thaa" typeface="MV Boli"/>';
-	o[o.length] =     '<a:font script="Deva" typeface="Mangal"/>';
-	o[o.length] =     '<a:font script="Telu" typeface="Gautami"/>';
-	o[o.length] =     '<a:font script="Taml" typeface="Latha"/>';
-	o[o.length] =     '<a:font script="Syrc" typeface="Estrangelo Edessa"/>';
-	o[o.length] =     '<a:font script="Orya" typeface="Kalinga"/>';
-	o[o.length] =     '<a:font script="Mlym" typeface="Kartika"/>';
-	o[o.length] =     '<a:font script="Laoo" typeface="DokChampa"/>';
-	o[o.length] =     '<a:font script="Sinh" typeface="Iskoola Pota"/>';
-	o[o.length] =     '<a:font script="Mong" typeface="Mongolian Baiti"/>';
-	o[o.length] =     '<a:font script="Viet" typeface="Times New Roman"/>';
-	o[o.length] =     '<a:font script="Uigh" typeface="Microsoft Uighur"/>';
-	o[o.length] =     '<a:font script="Geor" typeface="Sylfaen"/>';
-	o[o.length] =    '</a:majorFont>';
-	o[o.length] =    '<a:minorFont>';
-	o[o.length] =     '<a:latin typeface="Calibri"/>';
-	o[o.length] =     '<a:ea typeface=""/>';
-	o[o.length] =     '<a:cs typeface=""/>';
-	o[o.length] =     '<a:font script="Jpan" typeface="ï¼­ï¼³ ï¼°ã´ã·ãã¯"/>';
-	o[o.length] =     '<a:font script="Hang" typeface="ë§ì ê³ ë"/>';
-	o[o.length] =     '<a:font script="Hans" typeface="å®ä½"/>';
-	o[o.length] =     '<a:font script="Hant" typeface="æ°ç´°æé«"/>';
-	o[o.length] =     '<a:font script="Arab" typeface="Arial"/>';
-	o[o.length] =     '<a:font script="Hebr" typeface="Arial"/>';
-	o[o.length] =     '<a:font script="Thai" typeface="Tahoma"/>';
-	o[o.length] =     '<a:font script="Ethi" typeface="Nyala"/>';
-	o[o.length] =     '<a:font script="Beng" typeface="Vrinda"/>';
-	o[o.length] =     '<a:font script="Gujr" typeface="Shruti"/>';
-	o[o.length] =     '<a:font script="Khmr" typeface="DaunPenh"/>';
-	o[o.length] =     '<a:font script="Knda" typeface="Tunga"/>';
-	o[o.length] =     '<a:font script="Guru" typeface="Raavi"/>';
-	o[o.length] =     '<a:font script="Cans" typeface="Euphemia"/>';
-	o[o.length] =     '<a:font script="Cher" typeface="Plantagenet Cherokee"/>';
-	o[o.length] =     '<a:font script="Yiii" typeface="Microsoft Yi Baiti"/>';
-	o[o.length] =     '<a:font script="Tibt" typeface="Microsoft Himalaya"/>';
-	o[o.length] =     '<a:font script="Thaa" typeface="MV Boli"/>';
-	o[o.length] =     '<a:font script="Deva" typeface="Mangal"/>';
-	o[o.length] =     '<a:font script="Telu" typeface="Gautami"/>';
-	o[o.length] =     '<a:font script="Taml" typeface="Latha"/>';
-	o[o.length] =     '<a:font script="Syrc" typeface="Estrangelo Edessa"/>';
-	o[o.length] =     '<a:font script="Orya" typeface="Kalinga"/>';
-	o[o.length] =     '<a:font script="Mlym" typeface="Kartika"/>';
-	o[o.length] =     '<a:font script="Laoo" typeface="DokChampa"/>';
-	o[o.length] =     '<a:font script="Sinh" typeface="Iskoola Pota"/>';
-	o[o.length] =     '<a:font script="Mong" typeface="Mongolian Baiti"/>';
-	o[o.length] =     '<a:font script="Viet" typeface="Arial"/>';
-	o[o.length] =     '<a:font script="Uigh" typeface="Microsoft Uighur"/>';
-	o[o.length] =     '<a:font script="Geor" typeface="Sylfaen"/>';
-	o[o.length] =    '</a:minorFont>';
-	o[o.length] =   '</a:fontScheme>';
-
-	o[o.length] =   '<a:fmtScheme name="Office">';
-	o[o.length] =    '<a:fillStyleLst>';
-	o[o.length] =     '<a:solidFill><a:schemeClr val="phClr"/></a:solidFill>';
-	o[o.length] =     '<a:gradFill rotWithShape="1">';
-	o[o.length] =      '<a:gsLst>';
-	o[o.length] =       '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="50000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';
-	o[o.length] =       '<a:gs pos="35000"><a:schemeClr val="phClr"><a:tint val="37000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';
-	o[o.length] =       '<a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="15000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
-	o[o.length] =      '</a:gsLst>';
-	o[o.length] =      '<a:lin ang="16200000" scaled="1"/>';
-	o[o.length] =     '</a:gradFill>';
-	o[o.length] =     '<a:gradFill rotWithShape="1">';
-	o[o.length] =      '<a:gsLst>';
-	o[o.length] =       '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="100000"/><a:shade val="100000"/><a:satMod val="130000"/></a:schemeClr></a:gs>';
-	o[o.length] =       '<a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="50000"/><a:shade val="100000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
-	o[o.length] =      '</a:gsLst>';
-	o[o.length] =      '<a:lin ang="16200000" scaled="0"/>';
-	o[o.length] =     '</a:gradFill>';
-	o[o.length] =    '</a:fillStyleLst>';
-	o[o.length] =    '<a:lnStyleLst>';
-	o[o.length] =     '<a:ln w="9525" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"><a:shade val="95000"/><a:satMod val="105000"/></a:schemeClr></a:solidFill><a:prstDash val="solid"/></a:ln>';
-	o[o.length] =     '<a:ln w="25400" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln>';
-	o[o.length] =     '<a:ln w="38100" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln>';
-	o[o.length] =    '</a:lnStyleLst>';
-	o[o.length] =    '<a:effectStyleLst>';
-	o[o.length] =     '<a:effectStyle>';
-	o[o.length] =      '<a:effectLst>';
-	o[o.length] =       '<a:outerShdw blurRad="40000" dist="20000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="38000"/></a:srgbClr></a:outerShdw>';
-	o[o.length] =      '</a:effectLst>';
-	o[o.length] =     '</a:effectStyle>';
-	o[o.length] =     '<a:effectStyle>';
-	o[o.length] =      '<a:effectLst>';
-	o[o.length] =       '<a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw>';
-	o[o.length] =      '</a:effectLst>';
-	o[o.length] =     '</a:effectStyle>';
-	o[o.length] =     '<a:effectStyle>';
-	o[o.length] =      '<a:effectLst>';
-	o[o.length] =       '<a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw>';
-	o[o.length] =      '</a:effectLst>';
-	o[o.length] =      '<a:scene3d><a:camera prst="orthographicFront"><a:rot lat="0" lon="0" rev="0"/></a:camera><a:lightRig rig="threePt" dir="t"><a:rot lat="0" lon="0" rev="1200000"/></a:lightRig></a:scene3d>';
-	o[o.length] =      '<a:sp3d><a:bevelT w="63500" h="25400"/></a:sp3d>';
-	o[o.length] =     '</a:effectStyle>';
-	o[o.length] =    '</a:effectStyleLst>';
-	o[o.length] =    '<a:bgFillStyleLst>';
-	o[o.length] =     '<a:solidFill><a:schemeClr val="phClr"/></a:solidFill>';
-	o[o.length] =     '<a:gradFill rotWithShape="1">';
-	o[o.length] =      '<a:gsLst>';
-	o[o.length] =       '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="40000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
-	o[o.length] =       '<a:gs pos="40000"><a:schemeClr val="phClr"><a:tint val="45000"/><a:shade val="99000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
-	o[o.length] =       '<a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="20000"/><a:satMod val="255000"/></a:schemeClr></a:gs>';
-	o[o.length] =      '</a:gsLst>';
-	o[o.length] =      '<a:path path="circle"><a:fillToRect l="50000" t="-80000" r="50000" b="180000"/></a:path>';
-	o[o.length] =     '</a:gradFill>';
-	o[o.length] =     '<a:gradFill rotWithShape="1">';
-	o[o.length] =      '<a:gsLst>';
-	o[o.length] =       '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="80000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';
-	o[o.length] =       '<a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="30000"/><a:satMod val="200000"/></a:schemeClr></a:gs>';
-	o[o.length] =      '</a:gsLst>';
-	o[o.length] =      '<a:path path="circle"><a:fillToRect l="50000" t="50000" r="50000" b="50000"/></a:path>';
-	o[o.length] =     '</a:gradFill>';
-	o[o.length] =    '</a:bgFillStyleLst>';
-	o[o.length] =   '</a:fmtScheme>';
-	o[o.length] =  '</a:themeElements>';
-
-	o[o.length] =  '<a:objectDefaults>';
-	o[o.length] =   '<a:spDef>';
-	o[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx="1"><a:schemeClr val="accent1"/></a:lnRef><a:fillRef idx="3"><a:schemeClr val="accent1"/></a:fillRef><a:effectRef idx="2"><a:schemeClr val="accent1"/></a:effectRef><a:fontRef idx="minor"><a:schemeClr val="lt1"/></a:fontRef></a:style>';
-	o[o.length] =   '</a:spDef>';
-	o[o.length] =   '<a:lnDef>';
-	o[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx="2"><a:schemeClr val="accent1"/></a:lnRef><a:fillRef idx="0"><a:schemeClr val="accent1"/></a:fillRef><a:effectRef idx="1"><a:schemeClr val="accent1"/></a:effectRef><a:fontRef idx="minor"><a:schemeClr val="tx1"/></a:fontRef></a:style>';
-	o[o.length] =   '</a:lnDef>';
-	o[o.length] =  '</a:objectDefaults>';
-	o[o.length] =  '<a:extraClrSchemeLst/>';
-	o[o.length] = '</a:theme>';
-	return o.join("");
-}
-function parse_xlmeta_xml(data, name, opts) {
-  var out = { Types: [], Cell: [], Value: [] };
-  if (!data)
-    return out;
-  var pass = false;
-  var metatype = 2;
-  var lastmeta;
-  data.replace(tagregex, function(x) {
-    var y = parsexmltag(x);
-    switch (strip_ns(y[0])) {
-      case "<?xml":
-        break;
-      case "<metadata":
-      case "</metadata>":
-        break;
-      case "<metadataTypes":
-      case "</metadataTypes>":
-        break;
-      case "<metadataType":
-        out.Types.push({ name: y.name });
-        break;
-      case "</metadataType>":
-        break;
-      case "<futureMetadata":
-        for (var j = 0; j < out.Types.length; ++j)
-          if (out.Types[j].name == y.name)
-            lastmeta = out.Types[j];
-        break;
-      case "</futureMetadata>":
-        break;
-      case "<bk>":
-        break;
-      case "</bk>":
-        break;
-      case "<rc":
-        if (metatype == 1)
-          out.Cell.push({ type: out.Types[y.t - 1].name, index: +y.v });
-        else if (metatype == 0)
-          out.Value.push({ type: out.Types[y.t - 1].name, index: +y.v });
-        break;
-      case "</rc>":
-        break;
-      case "<cellMetadata":
-        metatype = 1;
-        break;
-      case "</cellMetadata>":
-        metatype = 2;
-        break;
-      case "<valueMetadata":
-        metatype = 0;
-        break;
-      case "</valueMetadata>":
-        metatype = 2;
-        break;
-      case "<extLst":
-      case "<extLst>":
-      case "</extLst>":
-      case "<extLst/>":
-        break;
-      case "<ext":
-        pass = true;
-        break;
-      case "</ext>":
-        pass = false;
-        break;
-      case "<rvb":
-        if (!lastmeta)
-          break;
-        if (!lastmeta.offsets)
-          lastmeta.offsets = [];
-        lastmeta.offsets.push(+y.i);
-        break;
-      default:
-        if (!pass && (opts == null ? void 0 : opts.WTF))
-          throw new Error("unrecognized " + y[0] + " in metadata");
-    }
-    return x;
-  });
-  return out;
-}
-function write_xlmeta_xml() {
-  var o = [XML_HEADER];
-  o.push('<metadata xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:xlrd="http://schemas.microsoft.com/office/spreadsheetml/2017/richdata" xmlns:xda="http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray">\n  <metadataTypes count="1">\n    <metadataType name="XLDAPR" minSupportedVersion="120000" copy="1" pasteAll="1" pasteValues="1" merge="1" splitFirst="1" rowColShift="1" clearFormats="1" clearComments="1" assign="1" coerce="1" cellMeta="1"/>\n  </metadataTypes>\n  <futureMetadata name="XLDAPR" count="1">\n    <bk>\n      <extLst>\n        <ext uri="{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}">\n          <xda:dynamicArrayProperties fDynamic="1" fCollapsed="0"/>\n        </ext>\n      </extLst>\n    </bk>\n  </futureMetadata>\n  <cellMetadata count="1">\n    <bk>\n      <rc t="1" v="0"/>\n    </bk>\n  </cellMetadata>\n</metadata>');
-  return o.join("");
-}
-/* 18.14 Supplementary Workbook Data */
-function parse_xlink_xml() {
-	//var opts = _opts || {};
-	//if(opts.WTF) throw "XLSX External Link";
-}
-
-/* [MS-XLSB] 2.1.7.25 External Link */
-function parse_xlink_bin(data, rel, name, _opts) {
-	if(!data) return data;
-	var opts = _opts || {};
-
-	var pass = false, end = false;
-
-	recordhopper(data, function xlink_parse(val, R, RT) {
-		if(end) return;
-		switch(RT) {
-			case 0x0167: /* 'BrtSupTabs' */
-			case 0x016B: /* 'BrtExternTableStart' */
-			case 0x016C: /* 'BrtExternTableEnd' */
-			case 0x016E: /* 'BrtExternRowHdr' */
-			case 0x016F: /* 'BrtExternCellBlank' */
-			case 0x0170: /* 'BrtExternCellReal' */
-			case 0x0171: /* 'BrtExternCellBool' */
-			case 0x0172: /* 'BrtExternCellError' */
-			case 0x0173: /* 'BrtExternCellString' */
-			case 0x01D8: /* 'BrtExternValueMeta' */
-			case 0x0241: /* 'BrtSupNameStart' */
-			case 0x0242: /* 'BrtSupNameValueStart' */
-			case 0x0243: /* 'BrtSupNameValueEnd' */
-			case 0x0244: /* 'BrtSupNameNum' */
-			case 0x0245: /* 'BrtSupNameErr' */
-			case 0x0246: /* 'BrtSupNameSt' */
-			case 0x0247: /* 'BrtSupNameNil' */
-			case 0x0248: /* 'BrtSupNameBool' */
-			case 0x0249: /* 'BrtSupNameFmla' */
-			case 0x024A: /* 'BrtSupNameBits' */
-			case 0x024B: /* 'BrtSupNameEnd' */
-				break;
-
-			case 0x0023: /* 'BrtFRTBegin' */
-				pass = true; break;
-			case 0x0024: /* 'BrtFRTEnd' */
-				pass = false; break;
-
-			default:
-				if(R.T){/* empty */}
-				else if(!pass || opts.WTF) throw new Error("Unexpected record 0x" + RT.toString(16));
-		}
-	}, opts);
-}
-/* 20.5 DrawingML - SpreadsheetML Drawing */
-/* 20.5.2.35 wsDr CT_Drawing */
-function parse_drawing(data, rels) {
-	if(!data) return "??";
-	/*
-	  Chartsheet Drawing:
-	   - 20.5.2.35 wsDr CT_Drawing
-	    - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor
-	     - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame
-	      - 20.1.2.2.16 graphic CT_GraphicalObject
-	       - 20.1.2.2.17 graphicData CT_GraphicalObjectData
-          - chart reference
-	   the actual type is based on the URI of the graphicData
-		TODO: handle embedded charts and other types of graphics
-	*/
-	var id = (data.match(/<c:chart [^>]*r:id="([^"]*)"/)||["",""])[1];
-
-	return rels['!id'][id].Target;
-}
-
-/* L.5.5.2 SpreadsheetML Comments + VML Schema */
-function write_vml(rId, comments) {
-	var csize = [21600, 21600];
-	/* L.5.2.1.2 Path Attribute */
-	var bbox = ["m0,0l0",csize[1],csize[0],csize[1],csize[0],"0xe"].join(",");
-	var o = [
-		writextag("xml", null, { 'xmlns:v': XLMLNS.v, 'xmlns:o': XLMLNS.o, 'xmlns:x': XLMLNS.x, 'xmlns:mv': XLMLNS.mv }).replace(/\/>/,">"),
-		writextag("o:shapelayout", writextag("o:idmap", null, {'v:ext':"edit", 'data':rId}), {'v:ext':"edit"})
-	];
-
-	var _shapeid = 65536 * rId;
-
-	var _comments = comments || [];
-	if(_comments.length > 0) o.push(writextag("v:shapetype", [
-		writextag("v:stroke", null, {joinstyle:"miter"}),
-		writextag("v:path", null, {gradientshapeok:"t", 'o:connecttype':"rect"})
-	].join(""), {id:"_x0000_t202", coordsize:csize.join(","), 'o:spt':202, path:bbox}));
-
-	_comments.forEach(function(x) { ++_shapeid; o.push(write_vml_comment(x, _shapeid)); });
-	o.push('</xml>');
-	return o.join("");
-}
-
-function write_vml_comment(x, _shapeid) {
-	var c = decode_cell(x[0]);
-	var fillopts = {'color2':"#BEFF82", 'type':"gradient"};
-	if(fillopts.type == "gradient") fillopts.angle = "-180";
-	var fillparm = fillopts.type == "gradient" ? writextag("o:fill", null, {type:"gradientUnscaled", 'v:ext':"view"}) : null;
-	var fillxml = writextag('v:fill', fillparm, fillopts);
-
-	var shadata = ({on:"t", 'obscured':"t"});
-
-	return [
-	'<v:shape' + wxt_helper({
-		id:'_x0000_s' + _shapeid,
-		type:"#_x0000_t202",
-		style:"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10" + (x[1].hidden ? ";visibility:hidden" : "") ,
-		fillcolor:"#ECFAD4",
-		strokecolor:"#edeaa1"
-	}) + '>',
-		fillxml,
-		writextag("v:shadow", null, shadata),
-		writextag("v:path", null, {'o:connecttype':"none"}),
-		'<v:textbox><div style="text-align:left"></div></v:textbox>',
-		'<x:ClientData ObjectType="Note">',
-			'<x:MoveWithCells/>',
-			'<x:SizeWithCells/>',
-			/* Part 4 19.4.2.3 Anchor (Anchor) */
-			writetag('x:Anchor', [c.c+1, 0, c.r+1, 0, c.c+3, 20, c.r+5, 20].join(",")),
-			writetag('x:AutoFill', "False"),
-			writetag('x:Row', String(c.r)),
-			writetag('x:Column', String(c.c)),
-			x[1].hidden ? '' : '<x:Visible/>',
-		'</x:ClientData>',
-	'</v:shape>'
-	].join("");
-}
-function sheet_insert_comments(sheet, comments, threaded, people) {
-	var dense = Array.isArray(sheet);
-	var cell;
-	comments.forEach(function(comment) {
-		var r = decode_cell(comment.ref);
-		if(dense) {
-			if(!sheet[r.r]) sheet[r.r] = [];
-			cell = sheet[r.r][r.c];
-		} else cell = sheet[comment.ref];
-		if (!cell) {
-			cell = ({t:"z"});
-			if(dense) sheet[r.r][r.c] = cell;
-			else sheet[comment.ref] = cell;
-			var range = safe_decode_range(sheet["!ref"]||"BDWGO1000001:A1");
-			if(range.s.r > r.r) range.s.r = r.r;
-			if(range.e.r < r.r) range.e.r = r.r;
-			if(range.s.c > r.c) range.s.c = r.c;
-			if(range.e.c < r.c) range.e.c = r.c;
-			var encoded = encode_range(range);
-			if (encoded !== sheet["!ref"]) sheet["!ref"] = encoded;
-		}
-
-		if (!cell.c) cell.c = [];
-		var o = ({a: comment.author, t: comment.t, r: comment.r, T: threaded});
-		if(comment.h) o.h = comment.h;
-
-		/* threaded comments always override */
-		for(var i = cell.c.length - 1; i >= 0; --i) {
-			if(!threaded && cell.c[i].T) return;
-			if(threaded && !cell.c[i].T) cell.c.splice(i, 1);
-		}
-		if(threaded && people) for(i = 0; i < people.length; ++i) {
-			if(o.a == people[i].id) { o.a = people[i].name || o.a; break; }
-		}
-		cell.c.push(o);
-	});
-}
-
-/* 18.7 Comments */
-function parse_comments_xml(data, opts) {
-	/* 18.7.6 CT_Comments */
-	if(data.match(/<(?:\w+:)?comments *\/>/)) return [];
-	var authors = [];
-	var commentList = [];
-	var authtag = data.match(/<(?:\w+:)?authors>([\s\S]*)<\/(?:\w+:)?authors>/);
-	if(authtag && authtag[1]) authtag[1].split(/<\/\w*:?author>/).forEach(function(x) {
-		if(x === "" || x.trim() === "") return;
-		var a = x.match(/<(?:\w+:)?author[^>]*>(.*)/);
-		if(a) authors.push(a[1]);
-	});
-	var cmnttag = data.match(/<(?:\w+:)?commentList>([\s\S]*)<\/(?:\w+:)?commentList>/);
-	if(cmnttag && cmnttag[1]) cmnttag[1].split(/<\/\w*:?comment>/).forEach(function(x) {
-		if(x === "" || x.trim() === "") return;
-		var cm = x.match(/<(?:\w+:)?comment[^>]*>/);
-		if(!cm) return;
-		var y = parsexmltag(cm[0]);
-		var comment = ({ author: y.authorId && authors[y.authorId] || "sheetjsghost", ref: y.ref, guid: y.guid });
-		var cell = decode_cell(y.ref);
-		if(opts.sheetRows && opts.sheetRows <= cell.r) return;
-		var textMatch = x.match(/<(?:\w+:)?text>([\s\S]*)<\/(?:\w+:)?text>/);
-		var rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {r:"",t:"",h:""};
-		comment.r = rt.r;
-		if(rt.r == "<t></t>") rt.t = rt.h = "";
-		comment.t = (rt.t||"").replace(/\r\n/g,"\n").replace(/\r/g,"\n");
-		if(opts.cellHTML) comment.h = rt.h;
-		commentList.push(comment);
-	});
-	return commentList;
-}
-
-function write_comments_xml(data) {
-	var o = [XML_HEADER, writextag('comments', null, { 'xmlns': XMLNS_main[0] })];
-
-	var iauthor = [];
-	o.push("<authors>");
-	data.forEach(function(x) { x[1].forEach(function(w) { var a = escapexml(w.a);
-		if(iauthor.indexOf(a) == -1) {
-			iauthor.push(a);
-			o.push("<author>" + a + "</author>");
-		}
-		if(w.T && w.ID && iauthor.indexOf("tc=" + w.ID) == -1) {
-			iauthor.push("tc=" + w.ID);
-			o.push("<author>" + "tc=" + w.ID + "</author>");
-		}
-	}); });
-	if(iauthor.length == 0) { iauthor.push("SheetJ5"); o.push("<author>SheetJ5</author>"); }
-	o.push("</authors>");
-	o.push("<commentList>");
-	data.forEach(function(d) {
-		/* 18.7.3 CT_Comment */
-		var lastauthor = 0, ts = [], tcnt = 0;
-		if(d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf("tc=" + d[1][0].ID);
-		d[1].forEach(function(c) {
-			if(c.a) lastauthor = iauthor.indexOf(escapexml(c.a));
-			if(c.T) ++tcnt;
-			ts.push(c.t == null ? "" : escapexml(c.t));
-		});
-		if(tcnt === 0) {
-			d[1].forEach(function(c) {
-				o.push('<comment ref="' + d[0] + '" authorId="' + iauthor.indexOf(escapexml(c.a)) + '"><text>');
-				o.push(writetag("t", c.t == null ? "" : escapexml(c.t)));
-				o.push('</text></comment>');
-			});
-		} else {
-			/* based on Threaded Comments -> Comments projection */
-			o.push('<comment ref="' + d[0] + '" authorId="' + lastauthor + '"><text>');
-			var t = "Comment:\n    " + (ts[0]) + "\n";
-			for(var i = 1; i < ts.length; ++i) t += "Reply:\n    " + ts[i] + "\n";
-			o.push(writetag("t", escapexml(t)));
-			o.push('</text></comment>');
-		}
-	});
-	o.push("</commentList>");
-	if(o.length>2) { o[o.length] = ('</comments>'); o[1]=o[1].replace("/>",">"); }
-	return o.join("");
-}
-
-/* [MS-XLSX] 2.1.17 */
-function parse_tcmnt_xml(data, opts) {
-	var out = [];
-	var pass = false, comment = {}, tidx = 0;
-	data.replace(tagregex, function xml_tcmnt(x, idx) {
-		var y = parsexmltag(x);
-		switch(strip_ns(y[0])) {
-			case '<?xml': break;
-
-			/* 2.6.207 ThreadedComments CT_ThreadedComments */
-			case '<ThreadedComments': break;
-			case '</ThreadedComments>': break;
-
-			/* 2.6.205 threadedComment CT_ThreadedComment */
-			case '<threadedComment': comment = {author: y.personId, guid: y.id, ref: y.ref, T: 1}; break;
-			case '</threadedComment>': if(comment.t != null) out.push(comment); break;
-
-			case '<text>': case '<text': tidx = idx + x.length; break;
-			case '</text>': comment.t = data.slice(tidx, idx).replace(/\r\n/g, "\n").replace(/\r/g, "\n"); break;
-
-			/* 2.6.206 mentions CT_ThreadedCommentMentions TODO */
-			case '<mentions': case '<mentions>': pass = true; break;
-			case '</mentions>': pass = false; break;
-
-			/* 2.6.202 mention CT_Mention TODO */
-
-			/* 18.2.10 extLst CT_ExtensionList ? */
-			case '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;
-			/* 18.2.7  ext CT_Extension + */
-			case '<ext': pass=true; break;
-			case '</ext>': pass=false; break;
-
-			default: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');
-		}
-		return x;
-	});
-	return out;
-}
-
-function write_tcmnt_xml(comments, people, opts) {
-	var o = [XML_HEADER, writextag('ThreadedComments', null, { 'xmlns': XMLNS.TCMNT }).replace(/[\/]>/, ">")];
-	comments.forEach(function(carr) {
-		var rootid = "";
-		(carr[1] || []).forEach(function(c, idx) {
-			if(!c.T) { delete c.ID; return; }
-			if(c.a && people.indexOf(c.a) == -1) people.push(c.a);
-			var tcopts = {
-				ref: carr[0],
-				id: "{54EE7951-7262-4200-6969-" + ("000000000000" + opts.tcid++).slice(-12) + "}"
-			};
-			if(idx == 0) rootid = tcopts.id;
-			else tcopts.parentId = rootid;
-			c.ID = tcopts.id;
-			if(c.a) tcopts.personId = "{54EE7950-7262-4200-6969-" + ("000000000000" + people.indexOf(c.a)).slice(-12) + "}";
-			o.push(writextag('threadedComment', writetag('text', c.t||""), tcopts));
-		});
-	});
-	o.push('</ThreadedComments>');
-	return o.join("");
-}
-
-/* [MS-XLSX] 2.1.18 */
-function parse_people_xml(data, opts) {
-	var out = [];
-	var pass = false;
-	data.replace(tagregex, function xml_tcmnt(x) {
-		var y = parsexmltag(x);
-		switch(strip_ns(y[0])) {
-			case '<?xml': break;
-
-			/* 2.4.85 personList CT_PersonList */
-			case '<personList': break;
-			case '</personList>': break;
-
-			/* 2.6.203 person CT_Person TODO: providers */
-			case '<person': out.push({name: y.displayname, id: y.id }); break;
-			case '</person>': break;
-
-			/* 18.2.10 extLst CT_ExtensionList ? */
-			case '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;
-			/* 18.2.7  ext CT_Extension + */
-			case '<ext': pass=true; break;
-			case '</ext>': pass=false; break;
-
-			default: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');
-		}
-		return x;
-	});
-	return out;
-}
-function write_people_xml(people/*, opts*/) {
-	var o = [XML_HEADER, writextag('personList', null, {
-		'xmlns': XMLNS.TCMNT,
-		'xmlns:x': XMLNS_main[0]
-	}).replace(/[\/]>/, ">")];
-	people.forEach(function(person, idx) {
-		o.push(writextag('person', null, {
-			displayName: person,
-			id: "{54EE7950-7262-4200-6969-" + ("000000000000" + idx).slice(-12) + "}",
-			userId: person,
-			providerId: "None"
-		}));
-	});
-	o.push("</personList>");
-	return o.join("");
-}
-var CT_VBA = "application/vnd.ms-office.vbaProject";
-function make_vba_xls(cfb) {
-  var newcfb = CFB.utils.cfb_new({ root: "R" });
-  cfb.FullPaths.forEach(function(p, i) {
-    if (p.slice(-1) === "/" || !p.match(/_VBA_PROJECT_CUR/))
-      return;
-    var newpath = p.replace(/^[^\/]*/, "R").replace(/\/_VBA_PROJECT_CUR\u0000*/, "");
-    CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);
-  });
-  return CFB.write(newcfb);
-}
-function fill_vba_xls(cfb, vba) {
-  vba.FullPaths.forEach(function(p, i) {
-    if (i == 0)
-      return;
-    var newpath = p.replace(/[^\/]*[\/]/, "/_VBA_PROJECT_CUR/");
-    if (newpath.slice(-1) !== "/")
-      CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);
-  });
-}
-var VBAFMTS = ["xlsb", "xlsm", "xlam", "biff8", "xla"];
-/* macro and dialog sheet stubs */
-function parse_ds_bin() { return {'!type':'dialog'}; }
-function parse_ds_xml() { return {'!type':'dialog'}; }
-function parse_ms_bin() { return {'!type':'macro'}; }
-function parse_ms_xml() { return {'!type':'macro'}; }
-/* TODO: it will be useful to parse the function str */
-var rc_to_a1 = (function(){
-	var rcregex = /(^|[^A-Za-z_])R(\[?-?\d+\]|[1-9]\d*|)C(\[?-?\d+\]|[1-9]\d*|)(?![A-Za-z0-9_])/g;
-	var rcbase = ({r:0,c:0});
-	function rcfunc($$,$1,$2,$3) {
-		var cRel = false, rRel = false;
-
-		if($2.length == 0) rRel = true;
-		else if($2.charAt(0) == "[") { rRel = true; $2 = $2.slice(1, -1); }
-
-		if($3.length == 0) cRel = true;
-		else if($3.charAt(0) == "[") { cRel = true; $3 = $3.slice(1, -1); }
-
-		var R = $2.length>0?parseInt($2,10)|0:0, C = $3.length>0?parseInt($3,10)|0:0;
-
-		if(cRel) C += rcbase.c; else --C;
-		if(rRel) R += rcbase.r; else --R;
-		return $1 + (cRel ? "" : "$") + encode_col(C) + (rRel ? "" : "$") + encode_row(R);
-	}
-	return function rc_to_a1(fstr, base) {
-		rcbase = base;
-		return fstr.replace(rcregex, rcfunc);
-	};
-})();
-
-var crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})(?![_.\(A-Za-z0-9])/g;
-var a1_to_rc = (function(){
-	return function a1_to_rc(fstr, base) {
-		return fstr.replace(crefregex, function($0, $1, $2, $3, $4, $5) {
-			var c = decode_col($3) - ($2 ? 0 : base.c);
-			var r = decode_row($5) - ($4 ? 0 : base.r);
-			var R = $4 == "$" ? (r+1) : (r == 0 ? "" : "[" + r + "]");
-			var C = $2 == "$" ? (c+1) : (c == 0 ? "" : "[" + c + "]");
-			return $1 + "R" + R + "C" + C;
-		});
-	};
-})();
-
-/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */
-function shift_formula_str(f, delta) {
-	return f.replace(crefregex, function($0, $1, $2, $3, $4, $5) {
-		return $1+($2=="$" ? $2+$3 : encode_col(decode_col($3)+delta.c))+($4=="$" ? $4+$5 : encode_row(decode_row($5) + delta.r));
-	});
-}
-
-function shift_formula_xlsx(f, range, cell) {
-	var r = decode_range(range), s = r.s, c = decode_cell(cell);
-	var delta = {r:c.r - s.r, c:c.c - s.c};
-	return shift_formula_str(f, delta);
-}
-
-/* TODO: parse formula */
-function fuzzyfmla(f) {
-	if(f.length == 1) return false;
-	return true;
-}
-
-function _xlfn(f) {
-	return f.replace(/_xlfn\./g,"");
-}
-/* Part 3 TODO: actually parse formulae */
-function ods_to_csf_formula(f) {
-	if(f.slice(0,3) == "of:") f = f.slice(3);
-	/* 5.2 Basic Expressions */
-	if(f.charCodeAt(0) == 61) {
-		f = f.slice(1);
-		if(f.charCodeAt(0) == 61) f = f.slice(1);
-	}
-	f = f.replace(/COM\.MICROSOFT\./g, "");
-	/* Part 3 Section 5.8 References */
-	f = f.replace(/\[((?:\.[A-Z]+[0-9]+)(?::\.[A-Z]+[0-9]+)?)\]/g, function($$, $1) { return $1.replace(/\./g,""); });
-	f = f.replace(/\$'([^']|'')+'/g, function($$) { return $$.slice(1); });
-	f = f.replace(/\$([^\]\. #$]+)/g, function($$, $1) { return ($1).match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})?$/) ? $$ : $1; });
-	/* TODO: something other than this */
-	f = f.replace(/\[.(#[A-Z]*[?!])\]/g, "$1");
-	return f.replace(/[;~]/g,",").replace(/\|/g,";");
-}
-
-function csf_to_ods_formula(f) {
-	var o = "of:=" + f.replace(crefregex, "$1[.$2$3$4$5]").replace(/\]:\[/g,":");
-	/* TODO: something other than this */
-	return o.replace(/;/g, "|").replace(/,/g,";");
-}
-
-function ods_to_csf_3D(r) {
-	r = r.replace(/\$'([^']|'')+'/g, function($$) { return $$.slice(1); });
-	r = r.replace(/\$([^\]\. #$]+)/g, function($$, $1) { return ($1).match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})?$/) ? $$ : $1; });
-	var a = r.split(":");
-	var s = a[0].split(".")[0];
-	return [s, a[0].split(".")[1] + (a.length > 1 ? (":" + (a[1].split(".")[1] || a[1].split(".")[0])) : "")];
-}
-
-function csf_to_ods_3D(r) {
-	return r.replace(/!/,".");
-}
-
-var strs = {}; // shared strings
-var _ssfopts = {}; // spreadsheet formatting options
-
-
-/*global Map */
-var browser_has_Map = typeof Map !== 'undefined';
-
-function get_sst_id(sst, str, rev) {
-	var i = 0, len = sst.length;
-	if(rev) {
-		if(browser_has_Map ? rev.has(str) : Object.prototype.hasOwnProperty.call(rev, str)) {
-			var revarr = browser_has_Map ? rev.get(str) : rev[str];
-			for(; i < revarr.length; ++i) {
-				if(sst[revarr[i]].t === str) { sst.Count ++; return revarr[i]; }
-			}
-		}
-	} else for(; i < len; ++i) {
-		if(sst[i].t === str) { sst.Count ++; return i; }
-	}
-	sst[len] = ({t:str}); sst.Count ++; sst.Unique ++;
-	if(rev) {
-		if(browser_has_Map) {
-			if(!rev.has(str)) rev.set(str, []);
-			rev.get(str).push(len);
-		} else {
-			if(!Object.prototype.hasOwnProperty.call(rev, str)) rev[str] = [];
-			rev[str].push(len);
-		}
-	}
-	return len;
-}
-
-function col_obj_w(C, col) {
-	var p = ({min:C+1,max:C+1});
-	/* wch (chars), wpx (pixels) */
-	var wch = -1;
-	if(col.MDW) MDW = col.MDW;
-	if(col.width != null) p.customWidth = 1;
-	else if(col.wpx != null) wch = px2char(col.wpx);
-	else if(col.wch != null) wch = col.wch;
-	if(wch > -1) { p.width = char2width(wch); p.customWidth = 1; }
-	else if(col.width != null) p.width = col.width;
-	if(col.hidden) p.hidden = true;
-	if(col.level != null) { p.outlineLevel = p.level = col.level; }
-	return p;
-}
-
-function default_margins(margins, mode) {
-	if(!margins) return;
-	var defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];
-	if(mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];
-	if(margins.left   == null) margins.left   = defs[0];
-	if(margins.right  == null) margins.right  = defs[1];
-	if(margins.top    == null) margins.top    = defs[2];
-	if(margins.bottom == null) margins.bottom = defs[3];
-	if(margins.header == null) margins.header = defs[4];
-	if(margins.footer == null) margins.footer = defs[5];
-}
-
-function get_cell_style(styles, cell, opts) {
-	var z = opts.revssf[cell.z != null ? cell.z : "General"];
-	var i = 0x3c, len = styles.length;
-	if(z == null && opts.ssf) {
-		for(; i < 0x188; ++i) if(opts.ssf[i] == null) {
-			SSF__load(cell.z, i);
-			// $FlowIgnore
-			opts.ssf[i] = cell.z;
-			opts.revssf[cell.z] = z = i;
-			break;
-		}
-	}
-	for(i = 0; i != len; ++i) if(styles[i].numFmtId === z) return i;
-	styles[len] = {
-		numFmtId:z,
-		fontId:0,
-		fillId:0,
-		borderId:0,
-		xfId:0,
-		applyNumberFormat:1
-	};
-	return len;
-}
-
-function safe_format(p, fmtid, fillid, opts, themes, styles) {
-	try {
-		if(opts.cellNF) p.z = table_fmt[fmtid];
-	} catch(e) { if(opts.WTF) throw e; }
-	if(p.t === 'z' && !opts.cellStyles) return;
-	if(p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);
-	if((!opts || opts.cellText !== false) && p.t !== 'z') try {
-		if(table_fmt[fmtid] == null) SSF__load(SSFImplicit[fmtid] || "General", fmtid);
-		if(p.t === 'e') p.w = p.w || BErr[p.v];
-		else if(fmtid === 0) {
-			if(p.t === 'n') {
-				if((p.v|0) === p.v) p.w = p.v.toString(10);
-				else p.w = SSF_general_num(p.v);
-			}
-			else if(p.t === 'd') {
-				var dd = datenum(p.v);
-				if((dd|0) === dd) p.w = dd.toString(10);
-				else p.w = SSF_general_num(dd);
-			}
-			else if(p.v === undefined) return "";
-			else p.w = SSF_general(p.v,_ssfopts);
-		}
-		else if(p.t === 'd') p.w = SSF_format(fmtid,datenum(p.v),_ssfopts);
-		else p.w = SSF_format(fmtid,p.v,_ssfopts);
-	} catch(e) { if(opts.WTF) throw e; }
-	if(!opts.cellStyles) return;
-	if(fillid != null) try {
-		p.s = styles.Fills[fillid];
-		if (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {
-			p.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);
-			if(opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;
-		}
-		if (p.s.bgColor && p.s.bgColor.theme) {
-			p.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);
-			if(opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;
-		}
-	} catch(e) { if(opts.WTF && styles.Fills) throw e; }
-}
-
-function check_ws(ws, sname, i) {
-	if(ws && ws['!ref']) {
-		var range = safe_decode_range(ws['!ref']);
-		if(range.e.c < range.s.c || range.e.r < range.s.r) throw new Error("Bad range (" + i + "): " + ws['!ref']);
-	}
-}
-function parse_ws_xml_dim(ws, s) {
-	var d = safe_decode_range(s);
-	if(d.s.r<=d.e.r && d.s.c<=d.e.c && d.s.r>=0 && d.s.c>=0) ws["!ref"] = encode_range(d);
-}
-var mergecregex = /<(?:\w:)?mergeCell ref="[A-Z0-9:]+"\s*[\/]?>/g;
-var sheetdataregex = /<(?:\w+:)?sheetData[^>]*>([\s\S]*)<\/(?:\w+:)?sheetData>/;
-var hlinkregex = /<(?:\w:)?hyperlink [^>]*>/mg;
-var dimregex = /"(\w*:\w*)"/;
-var colregex = /<(?:\w:)?col\b[^>]*[\/]?>/g;
-var afregex = /<(?:\w:)?autoFilter[^>]*([\/]|>([\s\S]*)<\/(?:\w:)?autoFilter)>/g;
-var marginregex= /<(?:\w:)?pageMargins[^>]*\/>/g;
-var sheetprregex = /<(?:\w:)?sheetPr\b(?:[^>a-z][^>]*)?\/>/;
-var sheetprregex2= /<(?:\w:)?sheetPr[^>]*(?:[\/]|>([\s\S]*)<\/(?:\w:)?sheetPr)>/;
-var svsregex = /<(?:\w:)?sheetViews[^>]*(?:[\/]|>([\s\S]*)<\/(?:\w:)?sheetViews)>/;
-
-/* 18.3 Worksheets */
-function parse_ws_xml(data, opts, idx, rels, wb, themes, styles) {
-	if(!data) return data;
-	if(!rels) rels = {'!id':{}};
-	if(DENSE != null && opts.dense == null) opts.dense = DENSE;
-
-	/* 18.3.1.99 worksheet CT_Worksheet */
-	var s = opts.dense ? ([]) : ({});
-	var refguess = ({s: {r:2000000, c:2000000}, e: {r:0, c:0} });
-
-	var data1 = "", data2 = "";
-	var mtch = data.match(sheetdataregex);
-	if(mtch) {
-		data1 = data.slice(0, mtch.index);
-		data2 = data.slice(mtch.index + mtch[0].length);
-	} else data1 = data2 = data;
-
-	/* 18.3.1.82 sheetPr CT_SheetPr */
-	var sheetPr = data1.match(sheetprregex);
-	if(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);
-	else if((sheetPr = data1.match(sheetprregex2))) parse_ws_xml_sheetpr2(sheetPr[0], sheetPr[1]||"", s, wb, idx, styles, themes);
-
-	/* 18.3.1.35 dimension CT_SheetDimension */
-	var ridx = (data1.match(/<(?:\w*:)?dimension/)||{index:-1}).index;
-	if(ridx > 0) {
-		var ref = data1.slice(ridx,ridx+50).match(dimregex);
-		if(ref) parse_ws_xml_dim(s, ref[1]);
-	}
-
-	/* 18.3.1.88 sheetViews CT_SheetViews */
-	var svs = data1.match(svsregex);
-	if(svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);
-
-	/* 18.3.1.17 cols CT_Cols */
-	var columns = [];
-	if(opts.cellStyles) {
-		/* 18.3.1.13 col CT_Col */
-		var cols = data1.match(colregex);
-		if(cols) parse_ws_xml_cols(columns, cols);
-	}
-
-	/* 18.3.1.80 sheetData CT_SheetData ? */
-	if(mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles);
-
-	/* 18.3.1.2  autoFilter CT_AutoFilter */
-	var afilter = data2.match(afregex);
-	if(afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);
-
-	/* 18.3.1.55 mergeCells CT_MergeCells */
-	var merges = [];
-	var _merge = data2.match(mergecregex);
-	if(_merge) for(ridx = 0; ridx != _merge.length; ++ridx)
-		merges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf("\"")+1));
-
-	/* 18.3.1.48 hyperlinks CT_Hyperlinks */
-	var hlink = data2.match(hlinkregex);
-	if(hlink) parse_ws_xml_hlinks(s, hlink, rels);
-
-	/* 18.3.1.62 pageMargins CT_PageMargins */
-	var margins = data2.match(marginregex);
-	if(margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));
-
-	if(!s["!ref"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s["!ref"] = encode_range(refguess);
-	if(opts.sheetRows > 0 && s["!ref"]) {
-		var tmpref = safe_decode_range(s["!ref"]);
-		if(opts.sheetRows <= +tmpref.e.r) {
-			tmpref.e.r = opts.sheetRows - 1;
-			if(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;
-			if(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;
-			if(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;
-			if(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;
-			s["!fullref"] = s["!ref"];
-			s["!ref"] = encode_range(tmpref);
-		}
-	}
-	if(columns.length > 0) s["!cols"] = columns;
-	if(merges.length > 0) s["!merges"] = merges;
-	return s;
-}
-
-function write_ws_xml_merges(merges) {
-	if(merges.length === 0) return "";
-	var o = '<mergeCells count="' + merges.length + '">';
-	for(var i = 0; i != merges.length; ++i) o += '<mergeCell ref="' + encode_range(merges[i]) + '"/>';
-	return o + '</mergeCells>';
-}
-
-/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */
-function parse_ws_xml_sheetpr(sheetPr, s, wb, idx) {
-	var data = parsexmltag(sheetPr);
-	if(!wb.Sheets[idx]) wb.Sheets[idx] = {};
-	if(data.codeName) wb.Sheets[idx].CodeName = unescapexml(utf8read(data.codeName));
-}
-function parse_ws_xml_sheetpr2(sheetPr, body, s, wb, idx) {
-	parse_ws_xml_sheetpr(sheetPr.slice(0, sheetPr.indexOf(">")), s, wb, idx);
-}
-function write_ws_xml_sheetpr(ws, wb, idx, opts, o) {
-	var needed = false;
-	var props = {}, payload = null;
-	if(opts.bookType !== 'xlsx' && wb.vbaraw) {
-		var cname = wb.SheetNames[idx];
-		try { if(wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname; } catch(e) {}
-		needed = true;
-		props.codeName = utf8write(escapexml(cname));
-	}
-
-	if(ws && ws["!outline"]) {
-		var outlineprops = {summaryBelow:1, summaryRight:1};
-		if(ws["!outline"].above) outlineprops.summaryBelow = 0;
-		if(ws["!outline"].left) outlineprops.summaryRight = 0;
-		payload = (payload||"") + writextag('outlinePr', null, outlineprops);
-	}
-
-	if(!needed && !payload) return;
-	o[o.length] = (writextag('sheetPr', payload, props));
-}
-
-/* 18.3.1.85 sheetProtection CT_SheetProtection */
-var sheetprot_deffalse = ["objects", "scenarios", "selectLockedCells", "selectUnlockedCells"];
-var sheetprot_deftrue = [
-	"formatColumns", "formatRows", "formatCells",
-	"insertColumns", "insertRows", "insertHyperlinks",
-	"deleteColumns", "deleteRows",
-	"sort", "autoFilter", "pivotTables"
-];
-function write_ws_xml_protection(sp) {
-	// algorithmName, hashValue, saltValue, spinCount
-	var o = ({sheet:1});
-	sheetprot_deffalse.forEach(function(n) { if(sp[n] != null && sp[n]) o[n] = "1"; });
-	sheetprot_deftrue.forEach(function(n) { if(sp[n] != null && !sp[n]) o[n] = "0"; });
-	/* TODO: algorithm */
-	if(sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();
-	return writextag('sheetProtection', null, o);
-}
-
-function parse_ws_xml_hlinks(s, data, rels) {
-	var dense = Array.isArray(s);
-	for(var i = 0; i != data.length; ++i) {
-		var val = parsexmltag(utf8read(data[i]), true);
-		if(!val.ref) return;
-		var rel = ((rels || {})['!id']||[])[val.id];
-		if(rel) {
-			val.Target = rel.Target;
-			if(val.location) val.Target += "#"+unescapexml(val.location);
-		} else {
-			val.Target = "#" + unescapexml(val.location);
-			rel = {Target: val.Target, TargetMode: 'Internal'};
-		}
-		val.Rel = rel;
-		if(val.tooltip) { val.Tooltip = val.tooltip; delete val.tooltip; }
-		var rng = safe_decode_range(val.ref);
-		for(var R=rng.s.r;R<=rng.e.r;++R) for(var C=rng.s.c;C<=rng.e.c;++C) {
-			var addr = encode_cell({c:C,r:R});
-			if(dense) {
-				if(!s[R]) s[R] = [];
-				if(!s[R][C]) s[R][C] = {t:"z",v:undefined};
-				s[R][C].l = val;
-			} else {
-				if(!s[addr]) s[addr] = {t:"z",v:undefined};
-				s[addr].l = val;
-			}
-		}
-	}
-}
-
-function parse_ws_xml_margins(margin) {
-	var o = {};
-	["left", "right", "top", "bottom", "header", "footer"].forEach(function(k) {
-		if(margin[k]) o[k] = parseFloat(margin[k]);
-	});
-	return o;
-}
-function write_ws_xml_margins(margin) {
-	default_margins(margin);
-	return writextag('pageMargins', null, margin);
-}
-
-function parse_ws_xml_cols(columns, cols) {
-	var seencol = false;
-	for(var coli = 0; coli != cols.length; ++coli) {
-		var coll = parsexmltag(cols[coli], true);
-		if(coll.hidden) coll.hidden = parsexmlbool(coll.hidden);
-		var colm=parseInt(coll.min, 10)-1, colM=parseInt(coll.max,10)-1;
-		if(coll.outlineLevel) coll.level = (+coll.outlineLevel || 0);
-		delete coll.min; delete coll.max; coll.width = +coll.width;
-		if(!seencol && coll.width) { seencol = true; find_mdw_colw(coll.width); }
-		process_col(coll);
-		while(colm <= colM) columns[colm++] = dup(coll);
-	}
-}
-function write_ws_xml_cols(ws, cols) {
-	var o = ["<cols>"], col;
-	for(var i = 0; i != cols.length; ++i) {
-		if(!(col = cols[i])) continue;
-		o[o.length] = (writextag('col', null, col_obj_w(i, col)));
-	}
-	o[o.length] = "</cols>";
-	return o.join("");
-}
-
-function parse_ws_xml_autofilter(data) {
-	var o = { ref: (data.match(/ref="([^"]*)"/)||[])[1]};
-	return o;
-}
-function write_ws_xml_autofilter(data, ws, wb, idx) {
-	var ref = typeof data.ref == "string" ? data.ref : encode_range(data.ref);
-	if(!wb.Workbook) wb.Workbook = ({Sheets:[]});
-	if(!wb.Workbook.Names) wb.Workbook.Names = [];
-	var names = wb.Workbook.Names;
-	var range = decode_range(ref);
-	if(range.s.r == range.e.r) { range.e.r = decode_range(ws["!ref"]).e.r; ref = encode_range(range); }
-	for(var i = 0; i < names.length; ++i) {
-		var name = names[i];
-		if(name.Name != '_xlnm._FilterDatabase') continue;
-		if(name.Sheet != idx) continue;
-		name.Ref = formula_quote_sheet_name(wb.SheetNames[idx]) + "!" + fix_range(ref); break;
-	}
-	if(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: "'" + wb.SheetNames[idx] + "'!" + ref  });
-	return writextag("autoFilter", null, {ref:ref});
-}
-
-/* 18.3.1.88 sheetViews CT_SheetViews */
-/* 18.3.1.87 sheetView CT_SheetView */
-var sviewregex = /<(?:\w:)?sheetView(?:[^>a-z][^>]*)?\/?>/g;
-function parse_ws_xml_sheetviews(data, wb) {
-	if(!wb.Views) wb.Views = [{}];
-	(data.match(sviewregex)||[]).forEach(function(r, i) {
-		var tag = parsexmltag(r);
-		// $FlowIgnore
-		if(!wb.Views[i]) wb.Views[i] = {};
-		// $FlowIgnore
-		if(+tag.zoomScale) wb.Views[i].zoom = +tag.zoomScale;
-		// $FlowIgnore
-		if(tag.rightToLeft && parsexmlbool(tag.rightToLeft)) wb.Views[i].RTL = true;
-	});
-}
-function write_ws_xml_sheetviews(ws, opts, idx, wb) {
-	var sview = ({workbookViewId:"0"});
-	// $FlowIgnore
-	if((((wb||{}).Workbook||{}).Views||[])[0]) sview.rightToLeft = wb.Workbook.Views[0].RTL ? "1" : "0";
-	return writextag("sheetViews", writextag("sheetView", null, sview), {});
-}
-
-function write_ws_xml_cell(cell, ref, ws, opts) {
-	if(cell.c) ws['!comments'].push([ref, cell.c]);
-	if((cell.v === undefined || cell.t === "z" && !(opts||{}).sheetStubs) && typeof cell.f !== "string" && typeof cell.z == "undefined") return "";
-	var vv = "";
-	var oldt = cell.t, oldv = cell.v;
-	if(cell.t !== "z") switch(cell.t) {
-		case 'b': vv = cell.v ? "1" : "0"; break;
-		case 'n': vv = ''+cell.v; break;
-		case 'e': vv = BErr[cell.v]; break;
-		case 'd':
-			if(opts && opts.cellDates) vv = parseDate(cell.v, -1).toISOString();
-			else {
-				cell = dup(cell);
-				cell.t = 'n';
-				vv = ''+(cell.v = datenum(parseDate(cell.v)));
-			}
-			if(typeof cell.z === 'undefined') cell.z = table_fmt[14];
-			break;
-		default: vv = cell.v; break;
-	}
-	var v = (cell.t == "z" || cell.v == null)? "" : writetag('v', escapexml(vv)), o = ({r:ref});
-	/* TODO: cell style */
-	var os = get_cell_style(opts.cellXfs, cell, opts);
-	if(os !== 0) o.s = os;
-	switch(cell.t) {
-		case 'n': break;
-		case 'd': o.t = "d"; break;
-		case 'b': o.t = "b"; break;
-		case 'e': o.t = "e"; break;
-		case 'z': break;
-		default: if(cell.v == null) { delete cell.t; break; }
-			if(cell.v.length > 32767) throw new Error("Text length must not exceed 32767 characters");
-			if(opts && opts.bookSST) {
-				v = writetag('v', ''+get_sst_id(opts.Strings, cell.v, opts.revStrings));
-				o.t = "s"; break;
-			}
-			else o.t = "str"; break;
-	}
-	if(cell.t != oldt) { cell.t = oldt; cell.v = oldv; }
-	if(typeof cell.f == "string" && cell.f) {
-		var ff = cell.F && cell.F.slice(0, ref.length) == ref ? {t:"array", ref:cell.F} : null;
-		v = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : "");
-	}
-	if(cell.l) {
-		cell.l.display = escapexml(vv);
-		ws['!links'].push([ref, cell.l]);
-	}
-	if(cell.D) o.cm = 1;
-	return writextag('c', v, o);
-}
-
-var parse_ws_xml_data = (function() {
-	var cellregex = /<(?:\w+:)?c[ \/>]/, rowregex = /<\/(?:\w+:)?row>/;
-	var rregex = /r=["']([^"']*)["']/, isregex = /<(?:\w+:)?is>([\S\s]*?)<\/(?:\w+:)?is>/;
-	var refregex = /ref=["']([^"']*)["']/;
-	var match_v = matchtag("v"), match_f = matchtag("f");
-
-return function parse_ws_xml_data(sdata, s, opts, guess, themes, styles) {
-	var ri = 0, x = "", cells = [], cref = [], idx=0, i=0, cc=0, d="", p;
-	var tag, tagr = 0, tagc = 0;
-	var sstr, ftag;
-	var fmtid = 0, fillid = 0;
-	var do_format = Array.isArray(styles.CellXf), cf;
-	var arrayf = [];
-	var sharedf = [];
-	var dense = Array.isArray(s);
-	var rows = [], rowobj = {}, rowrite = false;
-	var sheetStubs = !!opts.sheetStubs;
-	for(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {
-		x = marr[mt].trim();
-		var xlen = x.length;
-		if(xlen === 0) continue;
-
-		/* 18.3.1.73 row CT_Row */
-		var rstarti = 0;
-		outa: for(ri = 0; ri < xlen; ++ri) switch(/*x.charCodeAt(ri)*/x[ri]) {
-			case ">" /*62*/:
-				if(/*x.charCodeAt(ri-1) != 47*/x[ri-1] != "/") { ++ri; break outa; }
-				if(opts && opts.cellStyles) {
-					// TODO: avoid duplication
-					tag = parsexmltag(x.slice(rstarti,ri), true);
-					tagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;
-					if(opts.sheetRows && opts.sheetRows < tagr) continue;
-					rowobj = {}; rowrite = false;
-					if(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }
-					if(tag.hidden && parsexmlbool(tag.hidden)) { rowrite = true; rowobj.hidden = true; }
-					if(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }
-					if(rowrite) rows[tagr-1] = rowobj;
-				}
-				break;
-			case "<" /*60*/: rstarti = ri; break;
-		}
-		if(rstarti >= ri) break;
-		tag = parsexmltag(x.slice(rstarti,ri), true);
-		tagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;
-		if(opts.sheetRows && opts.sheetRows < tagr) continue;
-		if(guess.s.r > tagr - 1) guess.s.r = tagr - 1;
-		if(guess.e.r < tagr - 1) guess.e.r = tagr - 1;
-
-		if(opts && opts.cellStyles) {
-			rowobj = {}; rowrite = false;
-			if(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }
-			if(tag.hidden && parsexmlbool(tag.hidden)) { rowrite = true; rowobj.hidden = true; }
-			if(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }
-			if(rowrite) rows[tagr-1] = rowobj;
-		}
-
-		/* 18.3.1.4 c CT_Cell */
-		cells = x.slice(ri).split(cellregex);
-		for(var rslice = 0; rslice != cells.length; ++rslice) if(cells[rslice].trim().charAt(0) != "<") break;
-		cells = cells.slice(rslice);
-		for(ri = 0; ri != cells.length; ++ri) {
-			x = cells[ri].trim();
-			if(x.length === 0) continue;
-			cref = x.match(rregex); idx = ri; i=0; cc=0;
-			x = "<c " + (x.slice(0,1)=="<"?">":"") + x;
-			if(cref != null && cref.length === 2) {
-				idx = 0; d=cref[1];
-				for(i=0; i != d.length; ++i) {
-					if((cc=d.charCodeAt(i)-64) < 1 || cc > 26) break;
-					idx = 26*idx + cc;
-				}
-				--idx;
-				tagc = idx;
-			} else ++tagc;
-			for(i = 0; i != x.length; ++i) if(x.charCodeAt(i) === 62) break; ++i;
-			tag = parsexmltag(x.slice(0,i), true);
-			if(!tag.r) tag.r = encode_cell({r:tagr-1, c:tagc});
-			d = x.slice(i);
-			p = ({t:""});
-
-			if((cref=d.match(match_v))!= null && cref[1] !== '') p.v=unescapexml(cref[1]);
-			if(opts.cellFormula) {
-				if((cref=d.match(match_f))!= null && cref[1] !== '') {
-					/* TODO: match against XLSXFutureFunctions */
-					p.f=unescapexml(utf8read(cref[1]), true);
-					if(!opts.xlfn) p.f = _xlfn(p.f);
-					if(cref[0].indexOf('t="array"') > -1) {
-						p.F = (d.match(refregex)||[])[1];
-						if(p.F.indexOf(":") > -1) arrayf.push([safe_decode_range(p.F), p.F]);
-					} else if(cref[0].indexOf('t="shared"') > -1) {
-						// TODO: parse formula
-						ftag = parsexmltag(cref[0]);
-						var ___f = unescapexml(utf8read(cref[1]));
-						if(!opts.xlfn) ___f = _xlfn(___f);
-						sharedf[parseInt(ftag.si, 10)] = [ftag, ___f, tag.r];
-					}
-				} else if((cref=d.match(/<f[^>]*\/>/))) {
-					ftag = parsexmltag(cref[0]);
-					if(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2]/*[0].ref*/, tag.r);
-				}
-				/* TODO: factor out contains logic */
-				var _tag = decode_cell(tag.r);
-				for(i = 0; i < arrayf.length; ++i)
-					if(_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r)
-						if(_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c)
-							p.F = arrayf[i][1];
-			}
-
-			if(tag.t == null && p.v === undefined) {
-				if(p.f || p.F) {
-					p.v = 0; p.t = "n";
-				} else if(!sheetStubs) continue;
-				else p.t = "z";
-			}
-			else p.t = tag.t || "n";
-			if(guess.s.c > tagc) guess.s.c = tagc;
-			if(guess.e.c < tagc) guess.e.c = tagc;
-			/* 18.18.11 t ST_CellType */
-			switch(p.t) {
-				case 'n':
-					if(p.v == "" || p.v == null) {
-						if(!sheetStubs) continue;
-						p.t = 'z';
-					} else p.v = parseFloat(p.v);
-					break;
-				case 's':
-					if(typeof p.v == 'undefined') {
-						if(!sheetStubs) continue;
-						p.t = 'z';
-					} else {
-						sstr = strs[parseInt(p.v, 10)];
-						p.v = sstr.t;
-						p.r = sstr.r;
-						if(opts.cellHTML) p.h = sstr.h;
-					}
-					break;
-				case 'str':
-					p.t = "s";
-					p.v = (p.v!=null) ? unescapexml(utf8read(p.v), true) : '';
-					if(opts.cellHTML) p.h = escapehtml(p.v);
-					break;
-				case 'inlineStr':
-					cref = d.match(isregex);
-					p.t = 's';
-					if(cref != null && (sstr = parse_si(cref[1]))) {
-						p.v = sstr.t;
-						if(opts.cellHTML) p.h = sstr.h;
-					} else p.v = "";
-					break;
-				case 'b': p.v = parsexmlbool(p.v); break;
-				case 'd':
-					if(opts.cellDates) p.v = parseDate(p.v, 1);
-					else { p.v = datenum(parseDate(p.v, 1)); p.t = 'n'; }
-					break;
-				/* error string in .w, number in .v */
-				case 'e':
-					if(!opts || opts.cellText !== false) p.w = p.v;
-					p.v = RBErr[p.v]; break;
-			}
-			/* formatting */
-			fmtid = fillid = 0;
-			cf = null;
-			if(do_format && tag.s !== undefined) {
-				cf = styles.CellXf[tag.s];
-				if(cf != null) {
-					if(cf.numFmtId != null) fmtid = cf.numFmtId;
-					if(opts.cellStyles) {
-						if(cf.fillId != null) fillid = cf.fillId;
-					}
-				}
-			}
-			safe_format(p, fmtid, fillid, opts, themes, styles);
-			if(opts.cellDates && do_format && p.t == 'n' && fmt_is_date(table_fmt[fmtid])) { p.t = 'd'; p.v = numdate(p.v); }
-			if(tag.cm && opts.xlmeta) {
-				var cm = (opts.xlmeta.Cell||[])[+tag.cm-1];
-				if(cm && cm.type == 'XLDAPR') p.D = true;
-			}
-			if(dense) {
-				var _r = decode_cell(tag.r);
-				if(!s[_r.r]) s[_r.r] = [];
-				s[_r.r][_r.c] = p;
-			} else s[tag.r] = p;
-		}
-	}
-	if(rows.length > 0) s['!rows'] = rows;
-}; })();
-
-function write_ws_xml_data(ws, opts, idx, wb) {
-	var o = [], r = [], range = safe_decode_range(ws['!ref']), cell="", ref, rr = "", cols = [], R=0, C=0, rows = ws['!rows'];
-	var dense = Array.isArray(ws);
-	var params = ({r:rr}), row, height = -1;
-	for(C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);
-	for(R = range.s.r; R <= range.e.r; ++R) {
-		r = [];
-		rr = encode_row(R);
-		for(C = range.s.c; C <= range.e.c; ++C) {
-			ref = cols[C] + rr;
-			var _cell = dense ? (ws[R]||[])[C]: ws[ref];
-			if(_cell === undefined) continue;
-			if((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb)) != null) r.push(cell);
-		}
-		if(r.length > 0 || (rows && rows[R])) {
-			params = ({r:rr});
-			if(rows && rows[R]) {
-				row = rows[R];
-				if(row.hidden) params.hidden = 1;
-				height = -1;
-				if(row.hpx) height = px2pt(row.hpx);
-				else if(row.hpt) height = row.hpt;
-				if(height > -1) { params.ht = height; params.customHeight = 1; }
-				if(row.level) { params.outlineLevel = row.level; }
-			}
-			o[o.length] = (writextag('row', r.join(""), params));
-		}
-	}
-	if(rows) for(; R < rows.length; ++R) {
-		if(rows && rows[R]) {
-			params = ({r:R+1});
-			row = rows[R];
-			if(row.hidden) params.hidden = 1;
-			height = -1;
-			if (row.hpx) height = px2pt(row.hpx);
-			else if (row.hpt) height = row.hpt;
-			if (height > -1) { params.ht = height; params.customHeight = 1; }
-			if (row.level) { params.outlineLevel = row.level; }
-			o[o.length] = (writextag('row', "", params));
-		}
-	}
-	return o.join("");
-}
-
-function write_ws_xml(idx, opts, wb, rels) {
-	var o = [XML_HEADER, writextag('worksheet', null, {
-		'xmlns': XMLNS_main[0],
-		'xmlns:r': XMLNS.r
-	})];
-	var s = wb.SheetNames[idx], sidx = 0, rdata = "";
-	var ws = wb.Sheets[s];
-	if(ws == null) ws = {};
-	var ref = ws['!ref'] || 'A1';
-	var range = safe_decode_range(ref);
-	if(range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {
-		if(opts.WTF) throw new Error("Range " + ref + " exceeds format limit A1:XFD1048576");
-		range.e.c = Math.min(range.e.c, 0x3FFF);
-		range.e.r = Math.min(range.e.c, 0xFFFFF);
-		ref = encode_range(range);
-	}
-	if(!rels) rels = {};
-	ws['!comments'] = [];
-	var _drawing = [];
-
-	write_ws_xml_sheetpr(ws, wb, idx, opts, o);
-
-	o[o.length] = (writextag('dimension', null, {'ref': ref}));
-
-	o[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);
-
-	/* TODO: store in WB, process styles */
-	if(opts.sheetFormat) o[o.length] = (writextag('sheetFormatPr', null, {
-		defaultRowHeight:opts.sheetFormat.defaultRowHeight||'16',
-		baseColWidth:opts.sheetFormat.baseColWidth||'10',
-		outlineLevelRow:opts.sheetFormat.outlineLevelRow||'7'
-	}));
-
-	if(ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = (write_ws_xml_cols(ws, ws['!cols']));
-
-	o[sidx = o.length] = '<sheetData/>';
-	ws['!links'] = [];
-	if(ws['!ref'] != null) {
-		rdata = write_ws_xml_data(ws, opts, idx, wb, rels);
-		if(rdata.length > 0) o[o.length] = (rdata);
-	}
-	if(o.length>sidx+1) { o[o.length] = ('</sheetData>'); o[sidx]=o[sidx].replace("/>",">"); }
-
-	/* sheetCalcPr */
-
-	if(ws['!protect']) o[o.length] = write_ws_xml_protection(ws['!protect']);
-
-	/* protectedRanges */
-	/* scenarios */
-
-	if(ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);
-
-	/* sortState */
-	/* dataConsolidate */
-	/* customSheetViews */
-
-	if(ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = (write_ws_xml_merges(ws['!merges']));
-
-	/* phoneticPr */
-	/* conditionalFormatting */
-	/* dataValidations */
-
-	var relc = -1, rel, rId = -1;
-	if(ws['!links'].length > 0) {
-		o[o.length] = "<hyperlinks>";
-ws['!links'].forEach(function(l) {
-			if(!l[1].Target) return;
-			rel = ({"ref":l[0]});
-			if(l[1].Target.charAt(0) != "#") {
-				rId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#.*$/, ""), RELS.HLINK);
-				rel["r:id"] = "rId"+rId;
-			}
-			if((relc = l[1].Target.indexOf("#")) > -1) rel.location = escapexml(l[1].Target.slice(relc+1));
-			if(l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);
-			rel.display = l[1].display;
-			o[o.length] = writextag("hyperlink",null,rel);
-		});
-		o[o.length] = "</hyperlinks>";
-	}
-	delete ws['!links'];
-
-	/* printOptions */
-
-	if(ws['!margins'] != null) o[o.length] =  write_ws_xml_margins(ws['!margins']);
-
-	/* pageSetup */
-	/* headerFooter */
-	/* rowBreaks */
-	/* colBreaks */
-	/* customProperties */
-	/* cellWatches */
-
-	if(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) o[o.length] = writetag("ignoredErrors", writextag("ignoredError", null, {numberStoredAsText:1, sqref:ref}));
-
-	/* smartTags */
-
-	if(_drawing.length > 0) {
-		rId = add_rels(rels, -1, "../drawings/drawing" + (idx+1) + ".xml", RELS.DRAW);
-		o[o.length] = writextag("drawing", null, {"r:id":"rId" + rId});
-		ws['!drawing'] = _drawing;
-	}
-
-	if(ws['!comments'].length > 0) {
-		rId = add_rels(rels, -1, "../drawings/vmlDrawing" + (idx+1) + ".vml", RELS.VML);
-		o[o.length] = writextag("legacyDrawing", null, {"r:id":"rId" + rId});
-		ws['!legacy'] = rId;
-	}
-
-	/* legacyDrawingHF */
-	/* picture */
-	/* oleObjects */
-	/* controls */
-	/* webPublishItems */
-	/* tableParts */
-	/* extLst */
-
-	if(o.length>1) { o[o.length] = ('</worksheet>'); o[1]=o[1].replace("/>",">"); }
-	return o.join("");
-}
-function parse_Cache(data) {
-	var col = [];
-	var num = data.match(/^<c:numCache>/);
-	var f;
-
-	/* 21.2.2.150 pt CT_NumVal */
-	(data.match(/<c:pt idx="(\d*)">(.*?)<\/c:pt>/mg)||[]).forEach(function(pt) {
-		var q = pt.match(/<c:pt idx="(\d*?)"><c:v>(.*)<\/c:v><\/c:pt>/);
-		if(!q) return;
-		col[+q[1]] = num ? +q[2] : q[2];
-	});
-
-	/* 21.2.2.71 formatCode CT_Xstring */
-	var nf = unescapexml((data.match(/<c:formatCode>([\s\S]*?)<\/c:formatCode>/) || ["","General"])[1]);
-
-	(data.match(/<c:f>(.*?)<\/c:f>/mg)||[]).forEach(function(F) { f = F.replace(/<.*?>/g,""); });
-
-	return [col, nf, f];
-}
-
-/* 21.2 DrawingML - Charts */
-function parse_chart(data, name, opts, rels, wb, csheet) {
-	var cs = ((csheet || {"!type":"chart"}));
-	if(!data) return csheet;
-	/* 21.2.2.27 chart CT_Chart */
-
-	var C = 0, R = 0, col = "A";
-	var refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };
-
-	/* 21.2.2.120 numCache CT_NumData */
-	(data.match(/<c:numCache>[\s\S]*?<\/c:numCache>/gm)||[]).forEach(function(nc) {
-		var cache = parse_Cache(nc);
-		refguess.s.r = refguess.s.c = 0;
-		refguess.e.c = C;
-		col = encode_col(C);
-		cache[0].forEach(function(n,i) {
-			cs[col + encode_row(i)] = {t:'n', v:n, z:cache[1] };
-			R = i;
-		});
-		if(refguess.e.r < R) refguess.e.r = R;
-		++C;
-	});
-	if(C > 0) cs["!ref"] = encode_range(refguess);
-	return cs;
-}
-/* 18.3 Worksheets also covers Chartsheets */
-function parse_cs_xml(data, opts, idx, rels, wb) {
-	if(!data) return data;
-	/* 18.3.1.12 chartsheet CT_ChartSheet */
-	if(!rels) rels = {'!id':{}};
-	var s = ({'!type':"chart", '!drawel':null, '!rel':""});
-	var m;
-
-	/* 18.3.1.83 sheetPr CT_ChartsheetPr */
-	var sheetPr = data.match(sheetprregex);
-	if(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);
-
-	/* 18.3.1.36 drawing CT_Drawing */
-	if((m = data.match(/drawing r:id="(.*?)"/))) s['!rel'] = m[1];
-
-	if(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];
-	return s;
-}
-//function write_cs_xml(idx, opts, wb, rels) {
-//	var o = [XML_HEADER, writextag('chartsheet', null, {
-//		'xmlns': XMLNS_main[0],
-//		'xmlns:r': XMLNS.r
-//	})];
-//	o[o.length] = writextag("drawing", null, {"r:id": "rId1"});
-//	add_rels(rels, -1, "../drawings/drawing" + (idx+1) + ".xml", RELS.DRAW);
-//	if(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace("/>",">"); }
-//	return o.join("");
-//}
-/* 18.2.28 (CT_WorkbookProtection) Defaults */
-var WBPropsDef = [
-	['allowRefreshQuery',           false, "bool"],
-	['autoCompressPictures',        true,  "bool"],
-	['backupFile',                  false, "bool"],
-	['checkCompatibility',          false, "bool"],
-	['CodeName',                    ''],
-	['date1904',                    false, "bool"],
-	['defaultThemeVersion',         0,      "int"],
-	['filterPrivacy',               false, "bool"],
-	['hidePivotFieldList',          false, "bool"],
-	['promptedSolutions',           false, "bool"],
-	['publishItems',                false, "bool"],
-	['refreshAllConnections',       false, "bool"],
-	['saveExternalLinkValues',      true,  "bool"],
-	['showBorderUnselectedTables',  true,  "bool"],
-	['showInkAnnotation',           true,  "bool"],
-	['showObjects',                 'all'],
-	['showPivotChartFilter',        false, "bool"],
-	['updateLinks', 'userSet']
-];
-
-/* 18.2.30 (CT_BookView) Defaults */
-var WBViewDef = [
-	['activeTab',                   0,      "int"],
-	['autoFilterDateGrouping',      true,  "bool"],
-	['firstSheet',                  0,      "int"],
-	['minimized',                   false, "bool"],
-	['showHorizontalScroll',        true,  "bool"],
-	['showSheetTabs',               true,  "bool"],
-	['showVerticalScroll',          true,  "bool"],
-	['tabRatio',                    600,    "int"],
-	['visibility',                  'visible']
-	//window{Height,Width}, {x,y}Window
-];
-
-/* 18.2.19 (CT_Sheet) Defaults */
-var SheetDef = [
-	//['state', 'visible']
-];
-
-/* 18.2.2  (CT_CalcPr) Defaults */
-var CalcPrDef = [
-	['calcCompleted', 'true'],
-	['calcMode', 'auto'],
-	['calcOnSave', 'true'],
-	['concurrentCalc', 'true'],
-	['fullCalcOnLoad', 'false'],
-	['fullPrecision', 'true'],
-	['iterate', 'false'],
-	['iterateCount', '100'],
-	['iterateDelta', '0.001'],
-	['refMode', 'A1']
-];
-
-/* 18.2.3 (CT_CustomWorkbookView) Defaults */
-/*var CustomWBViewDef = [
-	['autoUpdate', 'false'],
-	['changesSavedWin', 'false'],
-	['includeHiddenRowCol', 'true'],
-	['includePrintSettings', 'true'],
-	['maximized', 'false'],
-	['minimized', 'false'],
-	['onlySync', 'false'],
-	['personalView', 'false'],
-	['showComments', 'commIndicator'],
-	['showFormulaBar', 'true'],
-	['showHorizontalScroll', 'true'],
-	['showObjects', 'all'],
-	['showSheetTabs', 'true'],
-	['showStatusbar', 'true'],
-	['showVerticalScroll', 'true'],
-	['tabRatio', '600'],
-	['xWindow', '0'],
-	['yWindow', '0']
-];*/
-
-function push_defaults_array(target, defaults) {
-	for(var j = 0; j != target.length; ++j) { var w = target[j];
-		for(var i=0; i != defaults.length; ++i) { var z = defaults[i];
-			if(w[z[0]] == null) w[z[0]] = z[1];
-			else switch(z[2]) {
-			case "bool": if(typeof w[z[0]] == "string") w[z[0]] = parsexmlbool(w[z[0]]); break;
-			case "int": if(typeof w[z[0]] == "string") w[z[0]] = parseInt(w[z[0]], 10); break;
-			}
-		}
-	}
-}
-function push_defaults(target, defaults) {
-	for(var i = 0; i != defaults.length; ++i) { var z = defaults[i];
-		if(target[z[0]] == null) target[z[0]] = z[1];
-		else switch(z[2]) {
-			case "bool": if(typeof target[z[0]] == "string") target[z[0]] = parsexmlbool(target[z[0]]); break;
-			case "int": if(typeof target[z[0]] == "string") target[z[0]] = parseInt(target[z[0]], 10); break;
-		}
-	}
-}
-
-function parse_wb_defaults(wb) {
-	push_defaults(wb.WBProps, WBPropsDef);
-	push_defaults(wb.CalcPr, CalcPrDef);
-
-	push_defaults_array(wb.WBView, WBViewDef);
-	push_defaults_array(wb.Sheets, SheetDef);
-
-	_ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);
-}
-
-function safe1904(wb) {
-	/* TODO: store date1904 somewhere else */
-	if(!wb.Workbook) return "false";
-	if(!wb.Workbook.WBProps) return "false";
-	return parsexmlbool(wb.Workbook.WBProps.date1904) ? "true" : "false";
-}
-
-var badchars = ":][*?\/\\".split("");
-function check_ws_name(n, safe) {
-	if(n.length > 31) { if(safe) return false; throw new Error("Sheet names cannot exceed 31 chars"); }
-	var _good = true;
-	badchars.forEach(function(c) {
-		if(n.indexOf(c) == -1) return;
-		if(!safe) throw new Error("Sheet name cannot contain : \\ / ? * [ ]");
-		_good = false;
-	});
-	return _good;
-}
-function check_wb_names(N, S, codes) {
-	N.forEach(function(n,i) {
-		check_ws_name(n);
-		for(var j = 0; j < i; ++j) if(n == N[j]) throw new Error("Duplicate Sheet Name: " + n);
-		if(codes) {
-			var cn = (S && S[i] && S[i].CodeName) || n;
-			if(cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error("Bad Code Name: Worksheet" + cn);
-		}
-	});
-}
-function check_wb(wb) {
-	if(!wb || !wb.SheetNames || !wb.Sheets) throw new Error("Invalid Workbook");
-	if(!wb.SheetNames.length) throw new Error("Workbook is empty");
-	var Sheets = (wb.Workbook && wb.Workbook.Sheets) || [];
-	check_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);
-	for(var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);
-	wb.SheetNames.forEach(function(n, i) {
-		var ws = wb.Sheets[n];
-		if(!ws || !ws["!autofilter"]) return;
-		var DN;
-		if(!wb.Workbook) wb.Workbook = {};
-		if(!wb.Workbook.Names) wb.Workbook.Names = [];
-		wb.Workbook.Names.forEach(function(dn) { if(dn.Name == "_xlnm._FilterDatabase" && dn.Sheet == i) DN = dn; });
-		var nn = formula_quote_sheet_name(n) + "!" + fix_range(ws["!autofilter"].ref);
-		if(DN) DN.Ref = nn;
-		else wb.Workbook.Names.push({Name: "_xlnm._FilterDatabase", Sheet: i, Ref: nn});
-	});
-	/* TODO: validate workbook */
-}
-/* 18.2 Workbook */
-var wbnsregex = /<\w+:workbook/;
-function parse_wb_xml(data, opts) {
-	if(!data) throw new Error("Could not find file");
-	var wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, Names:[], xmlns: "" };
-	var pass = false, xmlns = "xmlns";
-	var dname = {}, dnstart = 0;
-	data.replace(tagregex, function xml_wb(x, idx) {
-		var y = parsexmltag(x);
-		switch(strip_ns(y[0])) {
-			case '<?xml': break;
-
-			/* 18.2.27 workbook CT_Workbook 1 */
-			case '<workbook':
-				if(x.match(wbnsregex)) xmlns = "xmlns" + x.match(/<(\w+):/)[1];
-				wb.xmlns = y[xmlns];
-				break;
-			case '</workbook>': break;
-
-			/* 18.2.13 fileVersion CT_FileVersion ? */
-			case '<fileVersion': delete y[0]; wb.AppVersion = y; break;
-			case '<fileVersion/>': case '</fileVersion>': break;
-
-			/* 18.2.12 fileSharing CT_FileSharing ? */
-			case '<fileSharing':
-				break;
-			case '<fileSharing/>': break;
-
-			/* 18.2.28 workbookPr CT_WorkbookPr ? */
-			case '<workbookPr':
-			case '<workbookPr/>':
-				WBPropsDef.forEach(function(w) {
-					if(y[w[0]] == null) return;
-					switch(w[2]) {
-						case "bool": wb.WBProps[w[0]] = parsexmlbool(y[w[0]]); break;
-						case "int": wb.WBProps[w[0]] = parseInt(y[w[0]], 10); break;
-						default: wb.WBProps[w[0]] = y[w[0]];
-					}
-				});
-				if(y.codeName) wb.WBProps.CodeName = utf8read(y.codeName);
-				break;
-			case '</workbookPr>': break;
-
-			/* 18.2.29 workbookProtection CT_WorkbookProtection ? */
-			case '<workbookProtection':
-				break;
-			case '<workbookProtection/>': break;
-
-			/* 18.2.1  bookViews CT_BookViews ? */
-			case '<bookViews': case '<bookViews>': case '</bookViews>': break;
-			/* 18.2.30   workbookView CT_BookView + */
-			case '<workbookView': case '<workbookView/>': delete y[0]; wb.WBView.push(y); break;
-			case '</workbookView>': break;
-
-			/* 18.2.20 sheets CT_Sheets 1 */
-			case '<sheets': case '<sheets>': case '</sheets>': break; // aggregate sheet
-			/* 18.2.19   sheet CT_Sheet + */
-			case '<sheet':
-				switch(y.state) {
-					case "hidden": y.Hidden = 1; break;
-					case "veryHidden": y.Hidden = 2; break;
-					default: y.Hidden = 0;
-				}
-				delete y.state;
-				y.name = unescapexml(utf8read(y.name));
-				delete y[0]; wb.Sheets.push(y); break;
-			case '</sheet>': break;
-
-			/* 18.2.15 functionGroups CT_FunctionGroups ? */
-			case '<functionGroups': case '<functionGroups/>': break;
-			/* 18.2.14   functionGroup CT_FunctionGroup + */
-			case '<functionGroup': break;
-
-			/* 18.2.9  externalReferences CT_ExternalReferences ? */
-			case '<externalReferences': case '</externalReferences>': case '<externalReferences>': break;
-			/* 18.2.8    externalReference CT_ExternalReference + */
-			case '<externalReference': break;
-
-			/* 18.2.6  definedNames CT_DefinedNames ? */
-			case '<definedNames/>': break;
-			case '<definedNames>': case '<definedNames': pass=true; break;
-			case '</definedNames>': pass=false; break;
-			/* 18.2.5    definedName CT_DefinedName + */
-			case '<definedName': {
-				dname = {};
-				dname.Name = utf8read(y.name);
-				if(y.comment) dname.Comment = y.comment;
-				if(y.localSheetId) dname.Sheet = +y.localSheetId;
-				if(parsexmlbool(y.hidden||"0")) dname.Hidden = true;
-				dnstart = idx + x.length;
-			}	break;
-			case '</definedName>': {
-				dname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));
-				wb.Names.push(dname);
-			} break;
-			case '<definedName/>': break;
-
-			/* 18.2.2  calcPr CT_CalcPr ? */
-			case '<calcPr': delete y[0]; wb.CalcPr = y; break;
-			case '<calcPr/>': delete y[0]; wb.CalcPr = y; break;
-			case '</calcPr>': break;
-
-			/* 18.2.16 oleSize CT_OleSize ? (ref required) */
-			case '<oleSize': break;
-
-			/* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */
-			case '<customWorkbookViews>': case '</customWorkbookViews>': case '<customWorkbookViews': break;
-			/* 18.2.3  customWorkbookView CT_CustomWorkbookView + */
-			case '<customWorkbookView': case '</customWorkbookView>': break;
-
-			/* 18.2.18 pivotCaches CT_PivotCaches ? */
-			case '<pivotCaches>': case '</pivotCaches>': case '<pivotCaches': break;
-			/* 18.2.17 pivotCache CT_PivotCache ? */
-			case '<pivotCache': break;
-
-			/* 18.2.21 smartTagPr CT_SmartTagPr ? */
-			case '<smartTagPr': case '<smartTagPr/>': break;
-
-			/* 18.2.23 smartTagTypes CT_SmartTagTypes ? */
-			case '<smartTagTypes': case '<smartTagTypes>': case '</smartTagTypes>': break;
-			/* 18.2.22 smartTagType CT_SmartTagType ? */
-			case '<smartTagType': break;
-
-			/* 18.2.24 webPublishing CT_WebPublishing ? */
-			case '<webPublishing': case '<webPublishing/>': break;
-
-			/* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */
-			case '<fileRecoveryPr': case '<fileRecoveryPr/>': break;
-
-			/* 18.2.26 webPublishObjects CT_WebPublishObjects ? */
-			case '<webPublishObjects>': case '<webPublishObjects': case '</webPublishObjects>': break;
-			/* 18.2.25 webPublishObject CT_WebPublishObject ? */
-			case '<webPublishObject': break;
-
-			/* 18.2.10 extLst CT_ExtensionList ? */
-			case '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;
-			/* 18.2.7  ext CT_Extension + */
-			case '<ext': pass=true; break; //TODO: check with versions of excel
-			case '</ext>': pass=false; break;
-
-			/* Others */
-			case '<ArchID': break;
-			case '<AlternateContent':
-			case '<AlternateContent>': pass=true; break;
-			case '</AlternateContent>': pass=false; break;
-
-			/* TODO */
-			case '<revisionPtr': break;
-
-			default: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');
-		}
-		return x;
-	});
-	if(XMLNS_main.indexOf(wb.xmlns) === -1) throw new Error("Unknown Namespace: " + wb.xmlns);
-
-	parse_wb_defaults(wb);
-
-	return wb;
-}
-
-function write_wb_xml(wb) {
-	var o = [XML_HEADER];
-	o[o.length] = writextag('workbook', null, {
-		'xmlns': XMLNS_main[0],
-		//'xmlns:mx': XMLNS.mx,
-		//'xmlns:s': XMLNS_main[0],
-		'xmlns:r': XMLNS.r
-	});
-
-	var write_names = (wb.Workbook && (wb.Workbook.Names||[]).length > 0);
-
-	/* fileVersion */
-	/* fileSharing */
-
-	var workbookPr = ({codeName:"ThisWorkbook"});
-	if(wb.Workbook && wb.Workbook.WBProps) {
-		WBPropsDef.forEach(function(x) {
-if((wb.Workbook.WBProps[x[0]]) == null) return;
-			if((wb.Workbook.WBProps[x[0]]) == x[1]) return;
-			workbookPr[x[0]] = (wb.Workbook.WBProps[x[0]]);
-		});
-if(wb.Workbook.WBProps.CodeName) { workbookPr.codeName = wb.Workbook.WBProps.CodeName; delete workbookPr.CodeName; }
-	}
-	o[o.length] = (writextag('workbookPr', null, workbookPr));
-
-	/* workbookProtection */
-
-	var sheets = wb.Workbook && wb.Workbook.Sheets || [];
-	var i = 0;
-
-	/* bookViews only written if first worksheet is hidden */
-	if(sheets && sheets[0] && !!sheets[0].Hidden) {
-		o[o.length] = "<bookViews>";
-		for(i = 0; i != wb.SheetNames.length; ++i) {
-			if(!sheets[i]) break;
-			if(!sheets[i].Hidden) break;
-		}
-		if(i == wb.SheetNames.length) i = 0;
-		o[o.length] = '<workbookView firstSheet="' + i + '" activeTab="' + i + '"/>';
-		o[o.length] = "</bookViews>";
-	}
-
-	o[o.length] = "<sheets>";
-	for(i = 0; i != wb.SheetNames.length; ++i) {
-		var sht = ({name:escapexml(wb.SheetNames[i].slice(0,31))});
-		sht.sheetId = ""+(i+1);
-		sht["r:id"] = "rId"+(i+1);
-		if(sheets[i]) switch(sheets[i].Hidden) {
-			case 1: sht.state = "hidden"; break;
-			case 2: sht.state = "veryHidden"; break;
-		}
-		o[o.length] = (writextag('sheet',null,sht));
-	}
-	o[o.length] = "</sheets>";
-
-	/* functionGroups */
-	/* externalReferences */
-
-	if(write_names) {
-		o[o.length] = "<definedNames>";
-		if(wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function(n) {
-			var d = {name:n.Name};
-			if(n.Comment) d.comment = n.Comment;
-			if(n.Sheet != null) d.localSheetId = ""+n.Sheet;
-			if(n.Hidden) d.hidden = "1";
-			if(!n.Ref) return;
-			o[o.length] = writextag('definedName', escapexml(n.Ref), d);
-		});
-		o[o.length] = "</definedNames>";
-	}
-
-	/* calcPr */
-	/* oleSize */
-	/* customWorkbookViews */
-	/* pivotCaches */
-	/* smartTagPr */
-	/* smartTagTypes */
-	/* webPublishing */
-	/* fileRecoveryPr */
-	/* webPublishObjects */
-	/* extLst */
-
-	if(o.length>2){ o[o.length] = '</workbook>'; o[1]=o[1].replace("/>",">"); }
-	return o.join("");
-}
-function parse_wb(data, name, opts) {
-	if(name.slice(-4)===".bin") return parse_wb_bin((data), opts);
-	return parse_wb_xml((data), opts);
-}
-
-function parse_ws(data, name, idx, opts, rels, wb, themes, styles) {
-	if(name.slice(-4)===".bin") return parse_ws_bin((data), opts, idx, rels, wb, themes, styles);
-	return parse_ws_xml((data), opts, idx, rels, wb, themes, styles);
-}
-
-function parse_cs(data, name, idx, opts, rels, wb, themes, styles) {
-	if(name.slice(-4)===".bin") return parse_cs_bin((data), opts, idx, rels, wb, themes, styles);
-	return parse_cs_xml((data), opts, idx, rels, wb, themes, styles);
-}
-
-function parse_ms(data, name, idx, opts, rels, wb, themes, styles) {
-	if(name.slice(-4)===".bin") return parse_ms_bin((data), opts, idx, rels, wb, themes, styles);
-	return parse_ms_xml((data), opts, idx, rels, wb, themes, styles);
-}
-
-function parse_ds(data, name, idx, opts, rels, wb, themes, styles) {
-	if(name.slice(-4)===".bin") return parse_ds_bin((data), opts, idx, rels, wb, themes, styles);
-	return parse_ds_xml((data), opts, idx, rels, wb, themes, styles);
-}
-
-function parse_sty(data, name, themes, opts) {
-	if(name.slice(-4)===".bin") return parse_sty_bin((data), themes, opts);
-	return parse_sty_xml((data), themes, opts);
-}
-
-function parse_sst(data, name, opts) {
-	if(name.slice(-4)===".bin") return parse_sst_bin((data), opts);
-	return parse_sst_xml((data), opts);
-}
-
-function parse_cmnt(data, name, opts) {
-	if(name.slice(-4)===".bin") return parse_comments_bin((data), opts);
-	return parse_comments_xml((data), opts);
-}
-
-function parse_cc(data, name, opts) {
-	if(name.slice(-4)===".bin") return parse_cc_bin((data), name, opts);
-	return parse_cc_xml((data), name, opts);
-}
-
-function parse_xlink(data, rel, name, opts) {
-	if(name.slice(-4)===".bin") return parse_xlink_bin((data), rel, name, opts);
-	return parse_xlink_xml((data), rel, name, opts);
-}
-
-function parse_xlmeta(data, name, opts) {
-	if(name.slice(-4)===".bin") return parse_xlmeta_bin((data), name, opts);
-	return parse_xlmeta_xml((data), name, opts);
-}
-/* note: browser DOM element cannot see mso- style attrs, must parse */
-function html_to_sheet(str, _opts) {
-	var opts = _opts || {};
-	if(DENSE != null && opts.dense == null) opts.dense = DENSE;
-	var ws = opts.dense ? ([]) : ({});
-	str = str.replace(/<!--.*?-->/g, "");
-	var mtch = str.match(/<table/i);
-	if(!mtch) throw new Error("Invalid HTML: could not find <table>");
-	var mtch2 = str.match(/<\/table/i);
-	var i = mtch.index, j = mtch2 && mtch2.index || str.length;
-	var rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, "<tr>");
-	var R = -1, C = 0, RS = 0, CS = 0;
-	var range = {s:{r:10000000, c:10000000},e:{r:0,c:0}};
-	var merges = [];
-	for(i = 0; i < rows.length; ++i) {
-		var row = rows[i].trim();
-		var hd = row.slice(0,3).toLowerCase();
-		if(hd == "<tr") { ++R; if(opts.sheetRows && opts.sheetRows <= R) { --R; break; } C = 0; continue; }
-		if(hd != "<td" && hd != "<th") continue;
-		var cells = row.split(/<\/t[dh]>/i);
-		for(j = 0; j < cells.length; ++j) {
-			var cell = cells[j].trim();
-			if(!cell.match(/<t[dh]/i)) continue;
-			var m = cell, cc = 0;
-			/* TODO: parse styles etc */
-			while(m.charAt(0) == "<" && (cc = m.indexOf(">")) > -1) m = m.slice(cc+1);
-			for(var midx = 0; midx < merges.length; ++midx) {
-				var _merge = merges[midx];
-				if(_merge.s.c == C && _merge.s.r < R && R <= _merge.e.r) { C = _merge.e.c + 1; midx = -1; }
-			}
-			var tag = parsexmltag(cell.slice(0, cell.indexOf(">")));
-			CS = tag.colspan ? +tag.colspan : 1;
-			if((RS = +tag.rowspan)>1 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});
-			var _t = tag.t || tag["data-t"] || "";
-			/* TODO: generate stub cells */
-			if(!m.length) { C += CS; continue; }
-			m = htmldecode(m);
-			if(range.s.r > R) range.s.r = R; if(range.e.r < R) range.e.r = R;
-			if(range.s.c > C) range.s.c = C; if(range.e.c < C) range.e.c = C;
-			if(!m.length) { C += CS; continue; }
-			var o = {t:'s', v:m};
-			if(opts.raw || !m.trim().length || _t == 's'){}
-			else if(m === 'TRUE') o = {t:'b', v:true};
-			else if(m === 'FALSE') o = {t:'b', v:false};
-			else if(!isNaN(fuzzynum(m))) o = {t:'n', v:fuzzynum(m)};
-			else if(!isNaN(fuzzydate(m).getDate())) {
-				o = ({t:'d', v:parseDate(m)});
-				if(!opts.cellDates) o = ({t:'n', v:datenum(o.v)});
-				o.z = opts.dateNF || table_fmt[14];
-			}
-			if(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }
-			else ws[encode_cell({r:R, c:C})] = o;
-			C += CS;
-		}
-	}
-	ws['!ref'] = encode_range(range);
-	if(merges.length) ws["!merges"] = merges;
-	return ws;
-}
-function make_html_row(ws, r, R, o) {
-	var M = (ws['!merges'] ||[]);
-	var oo = [];
-	var sp = ({});
-	for(var C = r.s.c; C <= r.e.c; ++C) {
-		var RS = 0, CS = 0;
-		for(var j = 0; j < M.length; ++j) {
-			if(M[j].s.r > R || M[j].s.c > C) continue;
-			if(M[j].e.r < R || M[j].e.c < C) continue;
-			if(M[j].s.r < R || M[j].s.c < C) { RS = -1; break; }
-			RS = M[j].e.r - M[j].s.r + 1; CS = M[j].e.c - M[j].s.c + 1; break;
-		}
-		if(RS < 0) continue;
-		var coord = encode_cell({r:R,c:C});
-		var cell = o.dense ? (ws[R]||[])[C] : ws[coord];
-		/* TODO: html entities */
-		var w = (cell && cell.v != null) && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || "")) || "";
-		sp = ({});
-		if(RS > 1) sp.rowspan = RS;
-		if(CS > 1) sp.colspan = CS;
-		if(o.editable) w = '<span contenteditable="true">' + w + '</span>';
-		else if(cell) {
-			sp["data-t"] = cell && cell.t || 'z';
-			if(cell.v != null) sp["data-v"] = cell.v;
-			if(cell.z != null) sp["data-z"] = cell.z;
-			if(cell.l && (cell.l.Target || "#").charAt(0) != "#") w = '<a href="' + cell.l.Target +'">' + w + '</a>';
-		}
-		sp.id = (o.id || "sjs") + "-" + coord;
-		oo.push(writextag('td', w, sp));
-	}
-	var preamble = "<tr>";
-	return preamble + oo.join("") + "</tr>";
-}
-
-var HTML_BEGIN = '<html><head><meta charset="utf-8"/><title>SheetJS Table Export</title></head><body>';
-var HTML_END = '</body></html>';
-
-function html_to_workbook(str, opts) {
-	var mtch = str.match(/<table[\s\S]*?>[\s\S]*?<\/table>/gi);
-	if(!mtch || mtch.length == 0) throw new Error("Invalid HTML: could not find <table>");
-	if(mtch.length == 1) {
-		var w = sheet_to_workbook(html_to_sheet(mtch[0], opts), opts);
-		w.bookType = "html";
-		return w;
-	}
-	var wb = book_new();
-	mtch.forEach(function(s, idx) { book_append_sheet(wb, html_to_sheet(s, opts), "Sheet" + (idx+1)); });
-	wb.bookType = "html";
-	return wb;
-}
-
-function make_html_preamble(ws, R, o) {
-	var out = [];
-	return out.join("") + '<table' + (o && o.id ? ' id="' + o.id + '"' : "") + '>';
-}
-
-function sheet_to_html(ws, opts/*, wb:?Workbook*/) {
-	var o = opts || {};
-	var header = o.header != null ? o.header : HTML_BEGIN;
-	var footer = o.footer != null ? o.footer : HTML_END;
-	var out = [header];
-	var r = decode_range(ws['!ref']);
-	o.dense = Array.isArray(ws);
-	out.push(make_html_preamble(ws, r, o));
-	for(var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));
-	out.push("</table>" + footer);
-	return out.join("");
-}
-
-function sheet_add_dom(ws, table, _opts) {
-	var rows = table.rows;
-	if(!rows) {
-		/* not an HTML TABLE */
-		throw "Unsupported origin when " + table.tagName + " is not a TABLE";
-	}
-
-	var opts = _opts || {};
-	if(DENSE != null) opts.dense = DENSE;
-	var or_R = 0, or_C = 0;
-	if(opts.origin != null) {
-		if(typeof opts.origin == 'number') or_R = opts.origin;
-		else {
-			var _origin = typeof opts.origin == "string" ? decode_cell(opts.origin) : opts.origin;
-			or_R = _origin.r; or_C = _origin.c;
-		}
-	}
-
-	var sheetRows = Math.min(opts.sheetRows||10000000, rows.length);
-	var range = {s:{r:0,c:0},e:{r:or_R,c:or_C}};
-	if(ws["!ref"]) {
-		var _range = decode_range(ws["!ref"]);
-		range.s.r = Math.min(range.s.r, _range.s.r);
-		range.s.c = Math.min(range.s.c, _range.s.c);
-		range.e.r = Math.max(range.e.r, _range.e.r);
-		range.e.c = Math.max(range.e.c, _range.e.c);
-		if(or_R == -1) range.e.r = or_R = _range.e.r + 1;
-	}
-	var merges = [], midx = 0;
-	var rowinfo = ws["!rows"] || (ws["!rows"] = []);
-	var _R = 0, R = 0, _C = 0, C = 0, RS = 0, CS = 0;
-	if(!ws["!cols"]) ws['!cols'] = [];
-	for(; _R < rows.length && R < sheetRows; ++_R) {
-		var row = rows[_R];
-		if (is_dom_element_hidden(row)) {
-			if (opts.display) continue;
-			rowinfo[R] = {hidden: true};
-		}
-		var elts = (row.cells);
-		for(_C = C = 0; _C < elts.length; ++_C) {
-			var elt = elts[_C];
-			if (opts.display && is_dom_element_hidden(elt)) continue;
-			var v = elt.hasAttribute('data-v') ? elt.getAttribute('data-v') : elt.hasAttribute('v') ? elt.getAttribute('v') : htmldecode(elt.innerHTML);
-			var z = elt.getAttribute('data-z') || elt.getAttribute('z');
-			for(midx = 0; midx < merges.length; ++midx) {
-				var m = merges[midx];
-				if(m.s.c == C + or_C && m.s.r < R + or_R && R + or_R <= m.e.r) { C = m.e.c+1 - or_C; midx = -1; }
-			}
-			/* TODO: figure out how to extract nonstandard mso- style */
-			CS = +elt.getAttribute("colspan") || 1;
-			if( ((RS = (+elt.getAttribute("rowspan") || 1)))>1 || CS>1) merges.push({s:{r:R + or_R,c:C + or_C},e:{r:R + or_R + (RS||1) - 1, c:C + or_C + (CS||1) - 1}});
-			var o = {t:'s', v:v};
-			var _t = elt.getAttribute("data-t") || elt.getAttribute("t") || "";
-			if(v != null) {
-				if(v.length == 0) o.t = _t || 'z';
-				else if(opts.raw || v.trim().length == 0 || _t == "s"){}
-				else if(v === 'TRUE') o = {t:'b', v:true};
-				else if(v === 'FALSE') o = {t:'b', v:false};
-				else if(!isNaN(fuzzynum(v))) o = {t:'n', v:fuzzynum(v)};
-				else if(!isNaN(fuzzydate(v).getDate())) {
-					o = ({t:'d', v:parseDate(v)});
-					if(!opts.cellDates) o = ({t:'n', v:datenum(o.v)});
-					o.z = opts.dateNF || table_fmt[14];
-				}
-			}
-			if(o.z === undefined && z != null) o.z = z;
-			/* The first link is used.  Links are assumed to be fully specified.
-			 * TODO: The right way to process relative links is to make a new <a> */
-			var l = "", Aelts = elt.getElementsByTagName("A");
-			if(Aelts && Aelts.length) for(var Aelti = 0; Aelti < Aelts.length; ++Aelti)	if(Aelts[Aelti].hasAttribute("href")) {
-				l = Aelts[Aelti].getAttribute("href"); if(l.charAt(0) != "#") break;
-			}
-			if(l && l.charAt(0) != "#" &&	l.slice(0, 11).toLowerCase() != 'javascript:') o.l = ({ Target: l });
-			if(opts.dense) { if(!ws[R + or_R]) ws[R + or_R] = []; ws[R + or_R][C + or_C] = o; }
-			else ws[encode_cell({c:C + or_C, r:R + or_R})] = o;
-			if(range.e.c < C + or_C) range.e.c = C + or_C;
-			C += CS;
-		}
-		++R;
-	}
-	if(merges.length) ws['!merges'] = (ws["!merges"] || []).concat(merges);
-	range.e.r = Math.max(range.e.r, R - 1 + or_R);
-	ws['!ref'] = encode_range(range);
-	if(R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length-_R+R-1 + or_R,range)); // We can count the real number of rows to parse but we don't to improve the performance
-	return ws;
-}
-
-function parse_dom_table(table, _opts) {
-	var opts = _opts || {};
-	var ws = opts.dense ? ([]) : ({});
-	return sheet_add_dom(ws, table, _opts);
-}
-
-function table_to_book(table, opts) {
-	var o = sheet_to_workbook(parse_dom_table(table, opts), opts);
-	//o.bookType = "dom"; // TODO: define a type for this
-	return o;
-}
-
-function is_dom_element_hidden(element) {
-	var display = '';
-	var get_computed_style = get_get_computed_style_function(element);
-	if(get_computed_style) display = get_computed_style(element).getPropertyValue('display');
-	if(!display) display = element.style && element.style.display;
-	return display === 'none';
-}
-
-/* global getComputedStyle */
-function get_get_computed_style_function(element) {
-	// The proper getComputedStyle implementation is the one defined in the element window
-	if(element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;
-	// If it is not available, try to get one from the global namespace
-	if(typeof getComputedStyle === 'function') return getComputedStyle;
-	return null;
-}
-/* OpenDocument */
-function parse_text_p(text) {
-	/* 6.1.2 White Space Characters */
-	var fixed = text
-		.replace(/[\t\r\n]/g, " ").trim().replace(/ +/g, " ")
-		.replace(/<text:s\/>/g," ")
-		.replace(/<text:s text:c="(\d+)"\/>/g, function($$,$1) { return Array(parseInt($1,10)+1).join(" "); })
-		.replace(/<text:tab[^>]*\/>/g,"\t")
-		.replace(/<text:line-break\/>/g,"\n");
-	var v = unescapexml(fixed.replace(/<[^>]*>/g,""));
-
-	return [v];
-}
-
-/* Note: ODS can stick styles in content.xml or styles.xml, FODS blurs lines */
-function parse_ods_styles(d, _opts, _nfm) {
-	var number_format_map = _nfm || {};
-	var str = xlml_normalize(d);
-	xlmlregex.lastIndex = 0;
-	str = str.replace(/<!--([\s\S]*?)-->/mg,"").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm,"");
-	var Rn, NFtag, NF = "", tNF = "", y, etpos = 0, tidx = -1, infmt = false, payload = "";
-	while((Rn = xlmlregex.exec(str))) {
-		switch((Rn[3]=Rn[3].replace(/_.*$/,""))) {
-		/* Number Format Definitions */
-		case 'number-style': // <number:number-style> 16.29.2
-		case 'currency-style': // <number:currency-style> 16.29.8
-		case 'percentage-style': // <number:percentage-style> 16.29.10
-		case 'date-style': // <number:date-style> 16.29.11
-		case 'time-style': // <number:time-style> 16.29.19
-		case 'text-style': // <number:text-style> 16.29.26
-			if(Rn[1]==='/') {
-				infmt = false;
-				if(NFtag['truncate-on-overflow'] == "false") {
-					if(NF.match(/h/)) NF = NF.replace(/h+/, "[$&]");
-					else if(NF.match(/m/)) NF = NF.replace(/m+/, "[$&]");
-					else if(NF.match(/s/)) NF = NF.replace(/s+/, "[$&]");
-				}
-				number_format_map[NFtag.name] = NF;
-				NF = "";
-			} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
-				infmt = true;
-				NF = "";
-				NFtag = parsexmltag(Rn[0], false);
-			} break;
-
-		// LibreOffice bug https://bugs.documentfoundation.org/show_bug.cgi?id=149484
-		case 'boolean-style': // <number:boolean-style> 16.29.24
-			if(Rn[1]==='/') {
-				infmt = false;
-				number_format_map[NFtag.name] = "General";
-				NF = "";
-			} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
-				infmt = true;
-				NF = "";
-				NFtag = parsexmltag(Rn[0], false);
-			} break;
-
-		/* Number Format Elements */
-		case 'boolean': // <number:boolean> 16.29.25
-			NF += "General"; // ODF spec is unfortunately underspecified here
-			break;
-
-		case 'text': // <number:text> 16.29.27
-			if(Rn[1]==='/') {
-				payload = str.slice(tidx, xlmlregex.lastIndex - Rn[0].length);
-				// NOTE: Excel has a different interpretation of "%%" and friends
-				if(payload == "%" && NFtag[0] == '<number:percentage-style') NF += "%";
-				else NF += '"' + payload.replace(/"/g, '""') + '"';
-			} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
-				tidx = xlmlregex.lastIndex;
-			} break;
-
-
-		case 'day': { // <number:day> 16.29.12
-			y = parsexmltag(Rn[0], false);
-			switch(y["style"]) {
-				case "short": NF += "d"; break;
-				case "long": NF += "dd"; break;
-				default: NF += "dd"; break; // TODO: error condition
-			}
-		} break;
-
-		case 'day-of-week': { // <number:day-of-week> 16.29.16
-			y = parsexmltag(Rn[0], false);
-			switch(y["style"]) {
-				case "short": NF += "ddd"; break;
-				case "long": NF += "dddd"; break;
-				default: NF += "ddd"; break;
-			}
-		} break;
-
-		case 'era': { // <number:era> 16.29.15 TODO: proper mapping
-			y = parsexmltag(Rn[0], false);
-			switch(y["style"]) {
-				case "short": NF += "ee"; break;
-				case "long": NF += "eeee"; break;
-				default: NF += "eeee"; break; // TODO: error condition
-			}
-		} break;
-
-		case 'hours': { // <number:hours> 16.29.20
-			y = parsexmltag(Rn[0], false);
-			switch(y["style"]) {
-				case "short": NF += "h"; break;
-				case "long": NF += "hh"; break;
-				default: NF += "hh"; break; // TODO: error condition
-			}
-		} break;
-
-		case 'minutes': { // <number:minutes> 16.29.21
-			y = parsexmltag(Rn[0], false);
-			switch(y["style"]) {
-				case "short": NF += "m"; break;
-				case "long": NF += "mm"; break;
-				default: NF += "mm"; break; // TODO: error condition
-			}
-		} break;
-
-		case 'month': { // <number:month> 16.29.13
-			y = parsexmltag(Rn[0], false);
-			if(y["textual"]) NF += "mm";
-			switch(y["style"]) {
-				case "short": NF += "m"; break;
-				case "long": NF += "mm"; break;
-				default: NF += "m"; break;
-			}
-		} break;
-
-		case 'seconds': { // <number:seconds> 16.29.22
-			y = parsexmltag(Rn[0], false);
-			switch(y["style"]) {
-				case "short": NF += "s"; break;
-				case "long": NF += "ss"; break;
-				default: NF += "ss"; break; // TODO: error condition
-			}
-			if(y["decimal-places"]) NF += "." + fill("0", +y["decimal-places"]);
-		} break;
-
-		case 'year': { // <number:year> 16.29.14
-			y = parsexmltag(Rn[0], false);
-			switch(y["style"]) {
-				case "short": NF += "yy"; break;
-				case "long": NF += "yyyy"; break;
-				default: NF += "yy"; break; // TODO: error condition
-			}
-		} break;
-
-		case 'am-pm': // <number:am-pm> 16.29.23
-			NF += "AM/PM"; // LO autocorrects A/P -> AM/PM
-			break;
-
-		case 'week-of-year': // <number:week-of-year> 16.29.17
-		case 'quarter': // <number:quarter> 16.29.18
-			console.error("Excel does not support ODS format token " + Rn[3]);
-			break;
-
-		case 'fill-character': // <number:fill-character> 16.29.5
-			if(Rn[1]==='/') {
-				payload = str.slice(tidx, xlmlregex.lastIndex - Rn[0].length);
-				// NOTE: Excel has a different interpretation of "%%" and friends
-				NF += '"' + payload.replace(/"/g, '""') + '"*';
-			} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
-				tidx = xlmlregex.lastIndex;
-			} break;
-
-		case 'scientific-number': // <number:scientific-number> 16.29.6
-			// TODO: find a mapping for all parameters
-			y = parsexmltag(Rn[0], false);
-			NF += "0." + fill("0", +y["min-decimal-places"] || +y["decimal-places"] || 2) + fill("?", +y["decimal-places"] - +y["min-decimal-places"] || 0) + "E" + (parsexmlbool(y["forced-exponent-sign"]) ? "+" : "") + fill("0", +y["min-exponent-digits"] || 2);
-			break;
-
-		case 'fraction': // <number:fraction> 16.29.7
-			// TODO: find a mapping for all parameters
-			y = parsexmltag(Rn[0], false);
-			if(!+y["min-integer-digits"]) NF += "#";
-			else NF += fill("0", +y["min-integer-digits"]);
-			NF += " ";
-			NF += fill("?", +y["min-numerator-digits"] || 1);
-			NF += "/";
-			if(+y["denominator-value"]) NF += y["denominator-value"];
-			else NF += fill("?", +y["min-denominator-digits"] || 1);
-			break;
-
-		case 'currency-symbol': // <number:currency-symbol> 16.29.9
-			// TODO: localization with [$-...]
-			if(Rn[1]==='/') {
-				NF += '"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/"/g, '""') + '"';
-			} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
-				tidx = xlmlregex.lastIndex;
-			} else NF += "$";
-			break;
-
-		case 'text-properties': // <style:text-properties> 16.29.29
-			y = parsexmltag(Rn[0], false);
-			switch((y["color"]||"").toLowerCase().replace("#", "")) {
-				case "ff0000": case "red": NF = "[Red]" + NF; break;
-			}
-			break;
-
-		case 'text-content': // <number:text-content> 16.29.28
-			NF += "@";
-			break;
-
-		case 'map': // <style:map> 16.3
-			// TODO: handle more complex maps
-			y = parsexmltag(Rn[0], false);
-			if(unescapexml(y["condition"]) == "value()>=0") NF = number_format_map[y["apply-style-name"]] + ";" + NF;
-			else console.error("ODS number format may be incorrect: " + y["condition"]);
-			break;
-
-		case 'number': // <number:number> 16.29.3
-			// TODO: handle all the attributes
-			if(Rn[1]==='/') break;
-			y = parsexmltag(Rn[0], false);
-			tNF = "";
-			tNF += fill("0", +y["min-integer-digits"] || 1);
-			if(parsexmlbool(y["grouping"])) tNF = commaify(fill("#", Math.max(0, 4 - tNF.length)) + tNF);
-			if(+y["min-decimal-places"] || +y["decimal-places"]) tNF += ".";
-			if(+y["min-decimal-places"]) tNF += fill("0", +y["min-decimal-places"] || 1);
-			if(+y["decimal-places"] - (+y["min-decimal-places"]||0)) tNF += fill("0", +y["decimal-places"] - (+y["min-decimal-places"]||0)); // TODO: should this be "#" ?
-			NF += tNF;
-			break;
-
-		case 'embedded-text': // <number:embedded-text> 16.29.4
-			// TODO: verify interplay with grouping et al
-			if(Rn[1]==='/') {
-				if(etpos == 0) NF += '"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/"/g, '""') + '"';
-				else NF = NF.slice(0, etpos) + '"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/"/g, '""') + '"' + NF.slice(etpos);
-			} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
-				tidx = xlmlregex.lastIndex;
-				etpos = -+parsexmltag(Rn[0], false)["position"] || 0;
-			} break;
-
-	}}
-	return number_format_map;
-}
-
-function parse_content_xml(d, _opts, _nfm) {
-		var opts = _opts || {};
-		if(DENSE != null && opts.dense == null) opts.dense = DENSE;
-		var str = xlml_normalize(d);
-		var state = [], tmp;
-		var tag;
-		var nfidx, NF = "", pidx = 0;
-		var sheetag;
-		var rowtag;
-		var Sheets = {}, SheetNames = [];
-		var ws = opts.dense ? ([]) : ({});
-		var Rn, q;
-		var ctag = ({value:""});
-		var textp = "", textpidx = 0, textptag;
-		var textR = [];
-		var R = -1, C = -1, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};
-		var row_ol = 0;
-		var number_format_map = _nfm || {}, styles = {};
-		var merges = [], mrange = {}, mR = 0, mC = 0;
-		var rowinfo = [], rowpeat = 1, colpeat = 1;
-		var arrayf = [];
-		var WB = {Names:[], WBProps:{}};
-		var atag = ({});
-		var _Ref = ["", ""];
-		var comments = [], comment = ({});
-		var creator = "", creatoridx = 0;
-		var isstub = false, intable = false;
-		var i = 0;
-		var baddate = 0;
-		xlmlregex.lastIndex = 0;
-		str = str.replace(/<!--([\s\S]*?)-->/mg,"").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm,"");
-		while((Rn = xlmlregex.exec(str))) switch((Rn[3]=Rn[3].replace(/_.*$/,""))) {
-
-			case 'table': case 'å·¥ä½è¡¨': // 9.1.2 <table:table>
-				if(Rn[1]==='/') {
-					if(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);
-					else ws['!ref'] = "A1:A1";
-					if(opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {
-						ws['!fullref'] = ws['!ref'];
-						range.e.r = opts.sheetRows - 1;
-						ws['!ref'] = encode_range(range);
-					}
-					if(merges.length) ws['!merges'] = merges;
-					if(rowinfo.length) ws["!rows"] = rowinfo;
-					sheetag.name = sheetag['åç§°'] || sheetag.name;
-					if(typeof JSON !== 'undefined') JSON.stringify(sheetag);
-					SheetNames.push(sheetag.name);
-					Sheets[sheetag.name] = ws;
-					intable = false;
-				}
-				else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
-					sheetag = parsexmltag(Rn[0], false);
-					R = C = -1;
-					range.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;
-					ws = opts.dense ? ([]) : ({}); merges = [];
-					rowinfo = [];
-					intable = true;
-				}
-				break;
-
-			case 'table-row-group': // 9.1.9 <table:table-row-group>
-				if(Rn[1] === "/") --row_ol; else ++row_ol;
-				break;
-			case 'table-row': case 'è¡': // 9.1.3 <table:table-row>
-				if(Rn[1] === '/') { R+=rowpeat; rowpeat = 1; break; }
-				rowtag = parsexmltag(Rn[0], false);
-				if(rowtag['è¡å·']) R = rowtag['è¡å·'] - 1; else if(R == -1) R = 0;
-				rowpeat = +rowtag['number-rows-repeated'] || 1;
-				/* TODO: remove magic */
-				if(rowpeat < 10) for(i = 0; i < rowpeat; ++i) if(row_ol > 0) rowinfo[R + i] = {level: row_ol};
-				C = -1; break;
-			case 'covered-table-cell': // 9.1.5 <table:covered-table-cell>
-				if(Rn[1] !== '/') ++C;
-				if(opts.sheetStubs) {
-					if(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = {t:'z'}; }
-					else ws[encode_cell({r:R,c:C})] = {t:'z'};
-				}
-				textp = ""; textR = [];
-				break; /* stub */
-			case 'table-cell': case 'æ°æ®':
-				if(Rn[0].charAt(Rn[0].length-2) === '/') {
-					++C;
-					ctag = parsexmltag(Rn[0], false);
-					colpeat = parseInt(ctag['number-columns-repeated']||"1", 10);
-					q = ({t:'z', v:null});
-					if(ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));
-					if(ctag["style-name"] && styles[ctag["style-name"]]) q.z = styles[ctag["style-name"]];
-					if((ctag['æ°æ®ç±»å'] || ctag['value-type']) == "string") {
-						q.t = "s"; q.v = unescapexml(ctag['string-value'] || "");
-						if(opts.dense) {
-							if(!ws[R]) ws[R] = [];
-							ws[R][C] = q;
-						} else {
-							ws[encode_cell({r:R,c:C})] = q;
-						}
-					}
-					C+= colpeat-1;
-				} else if(Rn[1]!=='/') {
-					++C;
-					textp = ""; textpidx = 0; textR = [];
-					colpeat = 1;
-					var rptR = rowpeat ? R + rowpeat - 1 : R;
-					if(C > range.e.c) range.e.c = C;
-					if(C < range.s.c) range.s.c = C;
-					if(R < range.s.r) range.s.r = R;
-					if(rptR > range.e.r) range.e.r = rptR;
-					ctag = parsexmltag(Rn[0], false);
-					comments = []; comment = ({});
-					q = ({t:ctag['æ°æ®ç±»å'] || ctag['value-type'], v:null});
-					if(ctag["style-name"] && styles[ctag["style-name"]]) q.z = styles[ctag["style-name"]];
-					if(opts.cellFormula) {
-						if(ctag.formula) ctag.formula = unescapexml(ctag.formula);
-						if(ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {
-							mR = parseInt(ctag['number-matrix-rows-spanned'],10) || 0;
-							mC = parseInt(ctag['number-matrix-columns-spanned'],10) || 0;
-							mrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};
-							q.F = encode_range(mrange);
-							arrayf.push([mrange, q.F]);
-						}
-						if(ctag.formula) q.f = ods_to_csf_formula(ctag.formula);
-						else for(i = 0; i < arrayf.length; ++i)
-							if(R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r)
-								if(C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c)
-									q.F = arrayf[i][1];
-					}
-					if(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {
-						mR = parseInt(ctag['number-rows-spanned'],10) || 0;
-						mC = parseInt(ctag['number-columns-spanned'],10) || 0;
-						mrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};
-						merges.push(mrange);
-					}
-
-					/* 19.675.2 table:number-columns-repeated */
-					if(ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);
-
-					/* 19.385 office:value-type */
-					switch(q.t) {
-						case 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']) || (+ctag['boolean-value'] >= 1); break;
-						case 'float': q.t = 'n'; q.v = parseFloat(ctag.value); break;
-						case 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;
-						case 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;
-						case 'date': q.t = 'd'; q.v = parseDate(ctag['date-value']);
-							if(!opts.cellDates) { q.t = 'n'; q.v = datenum(q.v, WB.WBProps.date1904) - baddate; }
-							if(!q.z) q.z = 'm/d/yy'; break;
-						case 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400;
-							if(opts.cellDates) { q.t = 'd'; q.v = numdate(q.v); }
-							if(!q.z) q.z = 'HH:MM:SS'; break;
-						case 'number': q.t = 'n'; q.v = parseFloat(ctag['æ°æ®æ°å¼']); break;
-						default:
-							if(q.t === 'string' || q.t === 'text' || !q.t) {
-								q.t = 's';
-								if(ctag['string-value'] != null) { textp = unescapexml(ctag['string-value']); textR = []; }
-							} else throw new Error('Unsupported value type ' + q.t);
-					}
-				} else {
-					isstub = false;
-					if(q.t === 's') {
-						q.v = textp || '';
-						if(textR.length) q.R = textR;
-						isstub = textpidx == 0;
-					}
-					if(atag.Target) q.l = atag;
-					if(comments.length > 0) { q.c = comments; comments = []; }
-					if(textp && opts.cellText !== false) q.w = textp;
-					if(isstub) { q.t = "z"; delete q.v; }
-					if(!isstub || opts.sheetStubs) {
-						if(!(opts.sheetRows && opts.sheetRows <= R)) {
-							for(var rpt = 0; rpt < rowpeat; ++rpt) {
-								colpeat = parseInt(ctag['number-columns-repeated']||"1", 10);
-								if(opts.dense) {
-									if(!ws[R + rpt]) ws[R + rpt] = [];
-									ws[R + rpt][C] = rpt == 0 ? q : dup(q);
-									while(--colpeat > 0) ws[R + rpt][C + colpeat] = dup(q);
-								} else {
-									ws[encode_cell({r:R + rpt,c:C})] = q;
-									while(--colpeat > 0) ws[encode_cell({r:R + rpt,c:C + colpeat})] = dup(q);
-								}
-								if(range.e.c <= C) range.e.c = C;
-							}
-						}
-					}
-					colpeat = parseInt(ctag['number-columns-repeated']||"1", 10);
-					C += colpeat-1; colpeat = 0;
-					q = {};
-					textp = ""; textR = [];
-				}
-				atag = ({});
-				break; // 9.1.4 <table:table-cell>
-
-			/* pure state */
-			case 'document': // TODO: <office:document> is the root for FODS
-			case 'document-content': case 'çµå­è¡¨æ ¼ææ¡£': // 3.1.3.2 <office:document-content>
-			case 'spreadsheet': case 'ä¸»ä½': // 3.7 <office:spreadsheet>
-			case 'scripts': // 3.12 <office:scripts>
-			case 'styles': // TODO <office:styles>
-			case 'font-face-decls': // 3.14 <office:font-face-decls>
-			case 'master-styles': // 3.15.4 <office:master-styles> -- relevant for FODS
-				if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw "Bad state: "+tmp;}
-				else if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);
-				break;
-
-			case 'annotation': // 14.1 <office:annotation>
-				if(Rn[1]==='/'){
-					if((tmp=state.pop())[0]!==Rn[3]) throw "Bad state: "+tmp;
-					comment.t = textp;
-					if(textR.length) comment.R = textR;
-					comment.a = creator;
-					comments.push(comment);
-				}
-				else if(Rn[0].charAt(Rn[0].length-2) !== '/') {state.push([Rn[3], false]);}
-				creator = ""; creatoridx = 0;
-				textp = ""; textpidx = 0; textR = [];
-				break;
-
-			case 'creator': // 4.3.2.7 <dc:creator>
-				if(Rn[1]==='/') { creator = str.slice(creatoridx,Rn.index); }
-				else creatoridx = Rn.index + Rn[0].length;
-				break;
-
-			/* ignore state */
-			case 'meta': case 'åæ°æ®': // TODO: <office:meta> <uof:åæ°æ®> FODS/UOF
-			case 'settings': // TODO: <office:settings>
-			case 'config-item-set': // TODO: <office:config-item-set>
-			case 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>
-			case 'config-item-map-entry': // TODO: <office:config-item-map-entry>
-			case 'config-item-map-named': // TODO: <office:config-item-map-entry>
-			case 'shapes': // 9.2.8 <table:shapes>
-			case 'frame': // 10.4.2 <draw:frame>
-			case 'text-box': // 10.4.3 <draw:text-box>
-			case 'image': // 10.4.4 <draw:image>
-			case 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>
-			case 'list-style': // 16.30 <text:list-style>
-			case 'form': // 13.13 <form:form>
-			case 'dde-links': // 9.8 <table:dde-links>
-			case 'event-listeners': // TODO
-			case 'chart': // TODO
-				if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw "Bad state: "+tmp;}
-				else if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);
-				textp = ""; textpidx = 0; textR = [];
-				break;
-
-			case 'scientific-number': // <number:scientific-number>
-			case 'currency-symbol': // <number:currency-symbol>
-			case 'fill-character': // 16.29.5 <number:fill-character>
-				break;
-
-			case 'text-style': // 16.27.25 <number:text-style>
-			case 'boolean-style': // 16.27.23 <number:boolean-style>
-			case 'number-style': // 16.27.2 <number:number-style>
-			case 'currency-style': // 16.29.8 <number:currency-style>
-			case 'percentage-style': // 16.27.9 <number:percentage-style>
-			case 'date-style': // 16.27.10 <number:date-style>
-			case 'time-style': // 16.27.18 <number:time-style>
-				if(Rn[1]==='/'){
-					var xlmlidx = xlmlregex.lastIndex;
-					parse_ods_styles(str.slice(nfidx, xlmlregex.lastIndex), _opts, number_format_map);
-					xlmlregex.lastIndex = xlmlidx;
-				} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {
-					nfidx = xlmlregex.lastIndex - Rn[0].length;
-				} break;
-
-			case 'script': break; // 3.13 <office:script>
-			case 'libraries': break; // TODO: <ooo:libraries>
-			case 'automatic-styles': break; // 3.15.3 <office:automatic-styles>
-
-			case 'default-style': // TODO: <style:default-style>
-			case 'page-layout': break; // TODO: <style:page-layout>
-			case 'style': { // 16.2 <style:style>
-				var styletag = parsexmltag(Rn[0], false);
-				if(styletag["family"] == "table-cell" && number_format_map[styletag["data-style-name"]]) styles[styletag["name"]] = number_format_map[styletag["data-style-name"]];
-			} break;
-			case 'map': break; // 16.3 <style:map>
-			case 'font-face': break; // 16.21 <style:font-face>
-
-			case 'paragraph-properties': break; // 17.6 <style:paragraph-properties>
-			case 'table-properties': break; // 17.15 <style:table-properties>
-			case 'table-column-properties': break; // 17.16 <style:table-column-properties>
-			case 'table-row-properties': break; // 17.17 <style:table-row-properties>
-			case 'table-cell-properties': break; // 17.18 <style:table-cell-properties>
-
-			case 'number': // 16.27.3 <number:number>
-				break;
-
-			case 'fraction': break; // TODO 16.27.6 <number:fraction>
-
-			case 'day': // 16.27.11 <number:day>
-			case 'month': // 16.27.12 <number:month>
-			case 'year': // 16.27.13 <number:year>
-			case 'era': // 16.27.14 <number:era>
-			case 'day-of-week': // 16.27.15 <number:day-of-week>
-			case 'week-of-year': // 16.27.16 <number:week-of-year>
-			case 'quarter': // 16.27.17 <number:quarter>
-			case 'hours': // 16.27.19 <number:hours>
-			case 'minutes': // 16.27.20 <number:minutes>
-			case 'seconds': // 16.27.21 <number:seconds>
-			case 'am-pm': // 16.27.22 <number:am-pm>
-				break;
-
-			case 'boolean': break; // 16.27.24 <number:boolean>
-			case 'text': // 16.27.26 <number:text>
-				if(Rn[0].slice(-2) === "/>") break;
-				else if(Rn[1]==="/") switch(state[state.length-1][0]) {
-					case 'number-style':
-					case 'date-style':
-					case 'time-style':
-						NF += str.slice(pidx, Rn.index);
-						break;
-				}
-				else pidx = Rn.index + Rn[0].length;
-				break;
-
-			case 'named-range': // 9.4.12 <table:named-range>
-				tag = parsexmltag(Rn[0], false);
-				_Ref = ods_to_csf_3D(tag['cell-range-address']);
-				var nrange = ({Name:tag.name, Ref:_Ref[0] + '!' + _Ref[1]});
-				if(intable) nrange.Sheet = SheetNames.length;
-				WB.Names.push(nrange);
-				break;
-
-			case 'text-content': break; // 16.27.27 <number:text-content>
-			case 'text-properties': break; // 16.27.27 <style:text-properties>
-			case 'embedded-text': break; // 16.27.4 <number:embedded-text>
-
-			case 'body': case 'çµå­è¡¨æ ¼': break; // 3.3 16.9.6 19.726.3
-
-			case 'forms': break; // 12.25.2 13.2
-			case 'table-column': break; // 9.1.6 <table:table-column>
-			case 'table-header-rows': break; // 9.1.7 <table:table-header-rows>
-			case 'table-rows': break; // 9.1.12 <table:table-rows>
-			/* TODO: outline levels */
-			case 'table-column-group': break; // 9.1.10 <table:table-column-group>
-			case 'table-header-columns': break; // 9.1.11 <table:table-header-columns>
-			case 'table-columns': break; // 9.1.12 <table:table-columns>
-
-			case 'null-date': // 9.4.2 <table:null-date>
-				tag = parsexmltag(Rn[0], false);
-				switch(tag["date-value"]) {
-					case "1904-01-01": WB.WBProps.date1904 = true;
-					/* falls through */
-					case "1900-01-01": baddate = 0;
-				}
-				break;
-
-			case 'graphic-properties': break; // 17.21 <style:graphic-properties>
-			case 'calculation-settings': break; // 9.4.1 <table:calculation-settings>
-			case 'named-expressions': break; // 9.4.11 <table:named-expressions>
-			case 'label-range': break; // 9.4.9 <table:label-range>
-			case 'label-ranges': break; // 9.4.10 <table:label-ranges>
-			case 'named-expression': break; // 9.4.13 <table:named-expression>
-			case 'sort': break; // 9.4.19 <table:sort>
-			case 'sort-by': break; // 9.4.20 <table:sort-by>
-			case 'sort-groups': break; // 9.4.22 <table:sort-groups>
-
-			case 'tab': break; // 6.1.4 <text:tab>
-			case 'line-break': break; // 6.1.5 <text:line-break>
-			case 'span': break; // 6.1.7 <text:span>
-			case 'p': case 'ææ¬ä¸²': // 5.1.3 <text:p>
-				if(['master-styles'].indexOf(state[state.length-1][0]) > -1) break;
-				if(Rn[1]==='/' && (!ctag || !ctag['string-value'])) {
-					var ptp = parse_text_p(str.slice(textpidx,Rn.index), textptag);
-					textp = (textp.length > 0 ? textp + "\n" : "") + ptp[0];
-				} else { textptag = parsexmltag(Rn[0], false); textpidx = Rn.index + Rn[0].length; }
-				break; // <text:p>
-			case 's': break; // <text:s>
-
-			case 'database-range': // 9.4.15 <table:database-range>
-				if(Rn[1]==='/') break;
-				try {
-					_Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);
-					Sheets[_Ref[0]]['!autofilter'] = { ref:_Ref[1] };
-				} catch(e) {/* empty */}
-				break;
-
-			case 'date': break; // <*:date>
-
-			case 'object': break; // 10.4.6.2 <draw:object>
-			case 'title': case 'æ é¢': break; // <*:title> OR <uof:æ é¢>
-			case 'desc': break; // <*:desc>
-			case 'binary-data': break; // 10.4.5 TODO: b64 blob
-
-			/* 9.2 Advanced Tables */
-			case 'table-source': break; // 9.2.6
-			case 'scenario': break; // 9.2.6
-
-			case 'iteration': break; // 9.4.3 <table:iteration>
-			case 'content-validations': break; // 9.4.4 <table:
-			case 'content-validation': break; // 9.4.5 <table:
-			case 'help-message': break; // 9.4.6 <table:
-			case 'error-message': break; // 9.4.7 <table:
-			case 'database-ranges': break; // 9.4.14 <table:database-ranges>
-			case 'filter': break; // 9.5.2 <table:filter>
-			case 'filter-and': break; // 9.5.3 <table:filter-and>
-			case 'filter-or': break; // 9.5.4 <table:filter-or>
-			case 'filter-condition': break; // 9.5.5 <table:filter-condition>
-
-			case 'list-level-style-bullet': break; // 16.31 <text:
-			case 'list-level-style-number': break; // 16.32 <text:
-			case 'list-level-properties': break; // 17.19 <style:
-
-			/* 7.3 Document Fields */
-			case 'sender-firstname': // 7.3.6.2
-			case 'sender-lastname': // 7.3.6.3
-			case 'sender-initials': // 7.3.6.4
-			case 'sender-title': // 7.3.6.5
-			case 'sender-position': // 7.3.6.6
-			case 'sender-email': // 7.3.6.7
-			case 'sender-phone-private': // 7.3.6.8
-			case 'sender-fax': // 7.3.6.9
-			case 'sender-company': // 7.3.6.10
-			case 'sender-phone-work': // 7.3.6.11
-			case 'sender-street': // 7.3.6.12
-			case 'sender-city': // 7.3.6.13
-			case 'sender-postal-code': // 7.3.6.14
-			case 'sender-country': // 7.3.6.15
-			case 'sender-state-or-province': // 7.3.6.16
-			case 'author-name': // 7.3.7.1
-			case 'author-initials': // 7.3.7.2
-			case 'chapter': // 7.3.8
-			case 'file-name': // 7.3.9
-			case 'template-name': // 7.3.9
-			case 'sheet-name': // 7.3.9
-				break;
-
-			case 'event-listener':
-				break;
-			/* TODO: FODS Properties */
-			case 'initial-creator':
-			case 'creation-date':
-			case 'print-date':
-			case 'generator':
-			case 'document-statistic':
-			case 'user-defined':
-			case 'editing-duration':
-			case 'editing-cycles':
-				break;
-
-			/* TODO: FODS Config */
-			case 'config-item':
-				break;
-
-			/* TODO: style tokens */
-			case 'page-number': break; // TODO <text:page-number>
-			case 'page-count': break; // TODO <text:page-count>
-			case 'time': break; // TODO <text:time>
-
-			/* 9.3 Advanced Table Cells */
-			case 'cell-range-source': break; // 9.3.1 <table:
-			case 'detective': break; // 9.3.2 <table:
-			case 'operation': break; // 9.3.3 <table:
-			case 'highlighted-range': break; // 9.3.4 <table:
-
-			/* 9.6 Data Pilot Tables <table: */
-			case 'data-pilot-table': // 9.6.3
-			case 'source-cell-range': // 9.6.5
-			case 'source-service': // 9.6.6
-			case 'data-pilot-field': // 9.6.7
-			case 'data-pilot-level': // 9.6.8
-			case 'data-pilot-subtotals': // 9.6.9
-			case 'data-pilot-subtotal': // 9.6.10
-			case 'data-pilot-members': // 9.6.11
-			case 'data-pilot-member': // 9.6.12
-			case 'data-pilot-display-info': // 9.6.13
-			case 'data-pilot-sort-info': // 9.6.14
-			case 'data-pilot-layout-info': // 9.6.15
-			case 'data-pilot-field-reference': // 9.6.16
-			case 'data-pilot-groups': // 9.6.17
-			case 'data-pilot-group': // 9.6.18
-			case 'data-pilot-group-member': // 9.6.19
-				break;
-
-			/* 10.3 Drawing Shapes */
-			case 'rect': // 10.3.2
-				break;
-
-			/* 14.6 DDE Connections */
-			case 'dde-connection-decls': // 14.6.2 <text:
-			case 'dde-connection-decl': // 14.6.3 <text:
-			case 'dde-link': // 14.6.4 <table:
-			case 'dde-source': // 14.6.5 <office:
-				break;
-
-			case 'properties': break; // 13.7 <form:properties>
-			case 'property': break; // 13.8 <form:property>
-
-			case 'a': // 6.1.8 hyperlink
-				if(Rn[1]!== '/') {
-					atag = parsexmltag(Rn[0], false);
-					if(!atag.href) break;
-					atag.Target = unescapexml(atag.href); delete atag.href;
-					if(atag.Target.charAt(0) == "#" && atag.Target.indexOf(".") > -1) {
-						_Ref = ods_to_csf_3D(atag.Target.slice(1));
-						atag.Target = "#" + _Ref[0] + "!" + _Ref[1];
-					} else if(atag.Target.match(/^\.\.[\\\/]/)) atag.Target = atag.Target.slice(3);
-				}
-				break;
-
-			/* non-standard */
-			case 'table-protection': break;
-			case 'data-pilot-grand-total': break; // <table:
-			case 'office-document-common-attrs': break; // bare
-			default: switch(Rn[2]) {
-				case 'dc:':       // TODO: properties
-				case 'calcext:':  // ignore undocumented extensions
-				case 'loext:':    // ignore undocumented extensions
-				case 'ooo:':      // ignore undocumented extensions
-				case 'chartooo:': // ignore undocumented extensions
-				case 'draw:':     // TODO: drawing
-				case 'style:':    // TODO: styles
-				case 'chart:':    // TODO: charts
-				case 'form:':     // TODO: forms
-				case 'uof:':      // TODO: uof
-				case 'è¡¨:':       // TODO: uof
-				case 'å­:':       // TODO: uof
-					break;
-				default: if(opts.WTF) throw new Error(Rn);
-			}
-		}
-		var out = ({
-			Sheets: Sheets,
-			SheetNames: SheetNames,
-			Workbook: WB
-		});
-		if(opts.bookSheets) delete out.Sheets;
-		return out;
-}
-
-function parse_ods(zip, opts) {
-	opts = opts || ({});
-	if(safegetzipfile(zip, 'META-INF/manifest.xml')) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);
-	var styles = getzipstr(zip, 'styles.xml');
-	var Styles = styles && parse_ods_styles(utf8read(styles), opts);
-	var content = getzipstr(zip, 'content.xml');
-	if(!content) throw new Error("Missing content.xml in ODS / UOF file");
-	var wb = parse_content_xml(utf8read(content), opts, Styles);
-	if(safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));
-	wb.bookType = "ods";
-	return wb;
-}
-function parse_fods(data, opts) {
-	var wb = parse_content_xml(data, opts);
-	wb.bookType = "fods";
-	return wb;
-}
-
-/* OpenDocument */
-var write_styles_ods = /* @__PURE__ */(function() {
-	var master_styles = [
-		'<office:master-styles>',
-			'<style:master-page style:name="mp1" style:page-layout-name="mp1">',
-				'<style:header/>',
-				'<style:header-left style:display="false"/>',
-				'<style:footer/>',
-				'<style:footer-left style:display="false"/>',
-			'</style:master-page>',
-		'</office:master-styles>'
-	].join("");
-
-	var payload = '<office:document-styles ' + wxt_helper({
-		'xmlns:office':   "urn:oasis:names:tc:opendocument:xmlns:office:1.0",
-		'xmlns:table':    "urn:oasis:names:tc:opendocument:xmlns:table:1.0",
-		'xmlns:style':    "urn:oasis:names:tc:opendocument:xmlns:style:1.0",
-		'xmlns:text':     "urn:oasis:names:tc:opendocument:xmlns:text:1.0",
-		'xmlns:draw':     "urn:oasis:names:tc:opendocument:xmlns:drawing:1.0",
-		'xmlns:fo':       "urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0",
-		'xmlns:xlink':    "http://www.w3.org/1999/xlink",
-		'xmlns:dc':       "http://purl.org/dc/elements/1.1/",
-		'xmlns:number':   "urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0",
-		'xmlns:svg':      "urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0",
-		'xmlns:of':       "urn:oasis:names:tc:opendocument:xmlns:of:1.2",
-		'office:version': "1.2"
-	}) + '>' + master_styles + '</office:document-styles>';
-
-	return function wso() {
-		return XML_HEADER + payload;
-	};
-})();
-
-// TODO: find out if anyone actually read the spec.  LO has some wild errors
-function write_number_format_ods(nf, nfidx) {
-	var type = "number", payload = "", nopts = { "style:name": nfidx }, c = "", i = 0;
-	nf = nf.replace(/"[$]"/g, "$");
-	/* TODO: replace with an actual parser based on a real grammar */
-	j: {
-		// TODO: support style maps
-		if(nf.indexOf(";") > -1) {
-			console.error("Unsupported ODS Style Map exported.  Using first branch of " + nf);
-			nf = nf.slice(0, nf.indexOf(";"));
-		}
-
-		if(nf == "@") { type = "text"; payload = "<number:text-content/>"; break j; }
-
-		/* currency flag */
-		if(nf.indexOf(/\$/) > -1) { type = "currency"; }
-
-		/* opening string literal */
-		if(nf[i] == '"') {
-			c = "";
-			while(nf[++i] != '"' || nf[++i] == '"') c += nf[i]; --i;
-			if(nf[i+1] == "*") {
-				i++;
-				payload += '<number:fill-character>' + escapexml(c.replace(/""/g, '"')) + '</number:fill-character>';
-			} else {
-				payload += '<number:text>' + escapexml(c.replace(/""/g, '"')) + '</number:text>';
-			}
-			nf = nf.slice(i+1); i = 0;
-		}
-
-		/* fractions */
-		var t = nf.match(/# (\?+)\/(\?+)/);
-		if(t) { payload += writextag("number:fraction", null, {"number:min-integer-digits":0, "number:min-numerator-digits": t[1].length, "number:max-denominator-value": Math.max(+(t[1].replace(/./g, "9")), +(t[2].replace(/./g, "9"))) }); break j; }
-		if((t=nf.match(/# (\?+)\/(\d+)/))) { payload += writextag("number:fraction", null, {"number:min-integer-digits":0, "number:min-numerator-digits": t[1].length, "number:denominator-value": +t[2]}); break j; }
-
-		/* percentages */
-		if((t=nf.match(/(\d+)(|\.\d+)%/))) { type = "percentage"; payload += writextag("number:number", null, {"number:decimal-places": t[2] && t.length - 1 || 0, "number:min-decimal-places": t[2] && t.length - 1 || 0, "number:min-integer-digits": t[1].length }) + "<number:text>%</number:text>"; break j; }
-
-		/* datetime */
-		var has_time = false;
-		if(["y","m","d"].indexOf(nf[0]) > -1) {
-			type = "date";
-			k: for(; i < nf.length; ++i) switch((c = nf[i].toLowerCase())) {
-				case "h": case "s": has_time = true; --i; break k;
-				case "m":
-					l: for(var h = i+1; h < nf.length; ++h) switch(nf[h]) {
-						case "y": case "d": break l;
-						case "h": case "s": has_time = true; --i; break k;
-					}
-					/* falls through */
-				case "y": case "d":
-					while((nf[++i]||"").toLowerCase() == c[0]) c += c[0]; --i;
-					switch(c) {
-						case "y": case "yy": payload += "<number:year/>"; break;
-						case "yyy": case "yyyy": payload += '<number:year number:style="long"/>'; break;
-						case "mmmmm": console.error("ODS has no equivalent of format |mmmmm|");
-							/* falls through */
-						case "m": case "mm": case "mmm": case "mmmm":
-							payload += '<number:month number:style="' + (c.length % 2 ? "short" : "long") + '" number:textual="' + (c.length >= 3 ? "true" : "false") + '"/>';
-							break;
-						case "d": case "dd": payload += '<number:day number:style="' + (c.length % 2 ? "short" : "long") + '"/>'; break;
-						case "ddd": case "dddd": payload += '<number:day-of-week number:style="' + (c.length % 2 ? "short" : "long") + '"/>'; break;
-					}
-					break;
-				case '"':
-					while(nf[++i] != '"' || nf[++i] == '"') c += nf[i]; --i;
-					payload += '<number:text>' + escapexml(c.slice(1).replace(/""/g, '"')) + '</number:text>';
-					break;
-				case '/': payload += '<number:text>' + escapexml(c) + '</number:text>'; break;
-				default: console.error("unrecognized character " + c + " in ODF format " + nf);
-			}
-			if(!has_time) break j;
-			nf = nf.slice(i+1); i = 0;
-		}
-		if(nf.match(/^\[?[hms]/)) {
-			if(type == "number") type = "time";
-			if(nf.match(/\[/)) {
-				nf = nf.replace(/[\[\]]/g, "");
-				nopts['number:truncate-on-overflow'] = "false";
-			}
-			for(; i < nf.length; ++i) switch((c = nf[i].toLowerCase())) {
-				case "h": case "m": case "s":
-					while((nf[++i]||"").toLowerCase() == c[0]) c += c[0]; --i;
-					switch(c) {
-						case "h": case "hh": payload += '<number:hours number:style="' + (c.length % 2 ? "short" : "long") + '"/>'; break;
-						case "m": case "mm": payload += '<number:minutes number:style="' + (c.length % 2 ? "short" : "long") + '"/>'; break;
-						case "s": case "ss":
-							if(nf[i+1] == ".") do { c += nf[i+1]; ++i; } while(nf[i+1] == "0");
-							payload += '<number:seconds number:style="' + (c.match("ss") ? "long" : "short") + '"' + (c.match(/\./) ? ' number:decimal-places="' + (c.match(/0+/)||[""])[0].length + '"' : "")+ '/>'; break;
-					}
-					break;
-				case '"':
-					while(nf[++i] != '"' || nf[++i] == '"') c += nf[i]; --i;
-					payload += '<number:text>' + escapexml(c.slice(1).replace(/""/g, '"')) + '</number:text>';
-					break;
-				case '/': payload += '<number:text>' + escapexml(c) + '</number:text>'; break;
-				case "a":
-					if(nf.slice(i, i+3).toLowerCase() == "a/p") { payload += '<number:am-pm/>'; i += 2; break; } // Note: ODF does not support A/P
-					if(nf.slice(i, i+5).toLowerCase() == "am/pm")  { payload += '<number:am-pm/>'; i += 4; break; }
-					/* falls through */
-				default: console.error("unrecognized character " + c + " in ODF format " + nf);
-			}
-			break j;
-		}
-
-		/* currency flag */
-		if(nf.indexOf(/\$/) > -1) { type = "currency"; }
-
-		/* should be in a char loop */
-		if(nf[0] == "$") { payload += '<number:currency-symbol number:language="en" number:country="US">$</number:currency-symbol>'; nf = nf.slice(1); i = 0; }
-		i = 0; if(nf[i] == '"') {
-			while(nf[++i] != '"' || nf[++i] == '"') c += nf[i]; --i;
-			if(nf[i+1] == "*") {
-				i++;
-				payload += '<number:fill-character>' + escapexml(c.replace(/""/g, '"')) + '</number:fill-character>';
-			} else {
-				payload += '<number:text>' + escapexml(c.replace(/""/g, '"')) + '</number:text>';
-			}
-			nf = nf.slice(i+1); i = 0;
-		}
-
-		/* number TODO: interstitial text e.g. 000)000-0000 */
-		var np = nf.match(/([#0][0#,]*)(\.[0#]*|)(E[+]?0*|)/i);
-		if(!np || !np[0]) console.error("Could not find numeric part of " + nf);
-		else {
-			var base = np[1].replace(/,/g, "");
-			payload += '<number:' + (np[3] ? "scientific-" : "")+ 'number' +
-				' number:min-integer-digits="' + (base.indexOf("0") == -1 ? "0" : base.length - base.indexOf("0")) + '"' +
-				(np[0].indexOf(",") > -1 ? ' number:grouping="true"' : "") +
-				(np[2] && ' number:decimal-places="' + (np[2].length - 1) + '"' || ' number:decimal-places="0"') +
-				(np[3] && np[3].indexOf("+") > -1 ? ' number:forced-exponent-sign="true"' : "" ) +
-				(np[3] ? ' number:min-exponent-digits="' + np[3].match(/0+/)[0].length + '"' : "" ) +
-				'>' +
-				/* TODO: interstitial text placeholders */
-				'</number:' + (np[3] ? "scientific-" : "") + 'number>';
-			i = np.index + np[0].length;
-		}
-
-		/* residual text */
-		if(nf[i] == '"') {
-			c = "";
-			while(nf[++i] != '"' || nf[++i] == '"') c += nf[i]; --i;
-			payload += '<number:text>' + escapexml(c.replace(/""/g, '"')) + '</number:text>';
-		}
-	}
-
-	if(!payload) { console.error("Could not generate ODS number format for |" + nf + "|"); return ""; }
-	return writextag("number:" + type + "-style", payload, nopts);
-}
-
-function write_names_ods(Names, SheetNames, idx) {
-	var scoped = Names.filter(function(name) { return name.Sheet == (idx == -1 ? null : idx); });
-	if(!scoped.length) return "";
-	return "      <table:named-expressions>\n" + scoped.map(function(name) {
-		var odsref =  csf_to_ods_3D(name.Ref);
-		return "        " + writextag("table:named-range", null, {
-			"table:name": name.Name,
-			"table:cell-range-address": odsref,
-			"table:base-cell-address": odsref.replace(/[\.]?[^\.]*$/, ".$A$1")
-		});
-	}).join("\n") + "\n      </table:named-expressions>\n";
-}
-var write_content_ods = /* @__PURE__ */(function() {
-	/* 6.1.2 White Space Characters */
-	var write_text_p = function(text) {
-		return escapexml(text)
-			.replace(/  +/g, function($$){return '<text:s text:c="'+$$.length+'"/>';})
-			.replace(/\t/g, "<text:tab/>")
-			.replace(/\n/g, "</text:p><text:p>")
-			.replace(/^ /, "<text:s/>").replace(/ $/, "<text:s/>");
-	};
-
-	var null_cell_xml = '          <table:table-cell />\n';
-	var covered_cell_xml = '          <table:covered-table-cell/>\n';
-	var write_ws = function(ws, wb, i, opts, nfs) {
-		/* Section 9 Tables */
-		var o = [];
-		o.push('      <table:table table:name="' + escapexml(wb.SheetNames[i]) + '" table:style-name="ta1">\n');
-		var R=0,C=0, range = decode_range(ws['!ref']||"A1");
-		var marr = ws['!merges'] || [], mi = 0;
-		var dense = Array.isArray(ws);
-		if(ws["!cols"]) {
-			for(C = 0; C <= range.e.c; ++C) o.push('        <table:table-column' + (ws["!cols"][C] ? ' table:style-name="co' + ws["!cols"][C].ods + '"' : '') + '></table:table-column>\n');
-		}
-		var H = "", ROWS = ws["!rows"]||[];
-		for(R = 0; R < range.s.r; ++R) {
-			H = ROWS[R] ? ' table:style-name="ro' + ROWS[R].ods + '"' : "";
-			o.push('        <table:table-row' + H + '></table:table-row>\n');
-		}
-		for(; R <= range.e.r; ++R) {
-			H = ROWS[R] ? ' table:style-name="ro' + ROWS[R].ods + '"' : "";
-			o.push('        <table:table-row' + H + '>\n');
-			for(C=0; C < range.s.c; ++C) o.push(null_cell_xml);
-			for(; C <= range.e.c; ++C) {
-				var skip = false, ct = {}, textp = "";
-				for(mi = 0; mi != marr.length; ++mi) {
-					if(marr[mi].s.c > C) continue;
-					if(marr[mi].s.r > R) continue;
-					if(marr[mi].e.c < C) continue;
-					if(marr[mi].e.r < R) continue;
-					if(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;
-					ct['table:number-columns-spanned'] = (marr[mi].e.c - marr[mi].s.c + 1);
-					ct['table:number-rows-spanned'] =    (marr[mi].e.r - marr[mi].s.r + 1);
-					break;
-				}
-				if(skip) { o.push(covered_cell_xml); continue; }
-				var ref = encode_cell({r:R, c:C}), cell = dense ? (ws[R]||[])[C]: ws[ref];
-				if(cell && cell.f) {
-					ct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));
-					if(cell.F) {
-						if(cell.F.slice(0, ref.length) == ref) {
-							var _Fref = decode_range(cell.F);
-							ct['table:number-matrix-columns-spanned'] = (_Fref.e.c - _Fref.s.c + 1);
-							ct['table:number-matrix-rows-spanned'] =    (_Fref.e.r - _Fref.s.r + 1);
-						}
-					}
-				}
-				if(!cell) { o.push(null_cell_xml); continue; }
-				switch(cell.t) {
-					case 'b':
-						textp = (cell.v ? 'TRUE' : 'FALSE');
-						ct['office:value-type'] = "boolean";
-						ct['office:boolean-value'] = (cell.v ? 'true' : 'false');
-						break;
-					case 'n':
-						textp = (cell.w||String(cell.v||0));
-						ct['office:value-type'] = "float";
-						ct['office:value'] = (cell.v||0);
-						break;
-					case 's': case 'str':
-						textp = cell.v == null ? "" : cell.v;
-						ct['office:value-type'] = "string";
-						break;
-					case 'd':
-						textp = (cell.w||(parseDate(cell.v).toISOString()));
-						ct['office:value-type'] = "date";
-						ct['office:date-value'] = (parseDate(cell.v).toISOString());
-						ct['table:style-name'] = "ce1";
-						break;
-					//case 'e':
-					default: o.push(null_cell_xml); continue;
-				}
-				var text_p = write_text_p(textp);
-				if(cell.l && cell.l.Target) {
-					var _tgt = cell.l.Target;
-					_tgt = _tgt.charAt(0) == "#" ? "#" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;
-					// TODO: choose correct parent path format based on link delimiters
-					if(_tgt.charAt(0) != "#" && !_tgt.match(/^\w+:/)) _tgt = '../' + _tgt;
-					text_p = writextag('text:a', text_p, {'xlink:href': _tgt.replace(/&/g, "&amp;")});
-				}
-				if(nfs[cell.z]) ct["table:style-name"] = "ce" + nfs[cell.z].slice(1);
-				o.push('          ' + writextag('table:table-cell', writextag('text:p', text_p, {}), ct) + '\n');
-			}
-			o.push('        </table:table-row>\n');
-		}
-		if((wb.Workbook||{}).Names) o.push(write_names_ods(wb.Workbook.Names, wb.SheetNames, i));
-		o.push('      </table:table>\n');
-		return o.join("");
-	};
-
-	var write_automatic_styles_ods = function(o, wb) {
-		o.push(' <office:automatic-styles>\n');
-
-		/* column styles */
-		var cidx = 0;
-		wb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {
-			if(!ws) return;
-			if(ws["!cols"]) {
-				for(var C = 0; C < ws["!cols"].length; ++C) if(ws["!cols"][C]) {
-					var colobj = ws["!cols"][C];
-					if(colobj.width == null && colobj.wpx == null && colobj.wch == null) continue;
-					process_col(colobj);
-					colobj.ods = cidx;
-					var w = ws["!cols"][C].wpx + "px";
-					o.push('  <style:style style:name="co' + cidx + '" style:family="table-column">\n');
-					o.push('   <style:table-column-properties fo:break-before="auto" style:column-width="' + w + '"/>\n');
-					o.push('  </style:style>\n');
-					++cidx;
-				}
-			}
-		});
-
-		/* row styles */
-		var ridx = 0;
-		wb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {
-			if(!ws) return;
-			if(ws["!rows"]) {
-				for(var R = 0; R < ws["!rows"].length; ++R) if(ws["!rows"][R]) {
-					ws["!rows"][R].ods = ridx;
-					var h = ws["!rows"][R].hpx + "px";
-					o.push('  <style:style style:name="ro' + ridx + '" style:family="table-row">\n');
-					o.push('   <style:table-row-properties fo:break-before="auto" style:row-height="' + h + '"/>\n');
-					o.push('  </style:style>\n');
-					++ridx;
-				}
-			}
-		});
-
-		/* table */
-		o.push('  <style:style style:name="ta1" style:family="table" style:master-page-name="mp1">\n');
-		o.push('   <style:table-properties table:display="true" style:writing-mode="lr-tb"/>\n');
-		o.push('  </style:style>\n');
-
-		o.push('  <number:date-style style:name="N37" number:automatic-order="true">\n');
-		o.push('   <number:month number:style="long"/>\n');
-		o.push('   <number:text>/</number:text>\n');
-		o.push('   <number:day number:style="long"/>\n');
-		o.push('   <number:text>/</number:text>\n');
-		o.push('   <number:year/>\n');
-		o.push('  </number:date-style>\n');
-
-		/* number formats, table cells, text */
-		var nfs = {};
-		var nfi = 69;
-		wb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {
-			if(!ws) return;
-			var range = decode_range(ws["!ref"]);
-			for(var R = 0; R <= range.e.r; ++R) for(var C = 0; C <= range.e.c; ++C) {
-				var c = Array.isArray(ws) ? (ws[R]||[])[C] : ws[encode_cell({r:R,c:C})];
-				if(!c || !c.z || c.z.toLowerCase() == "general") continue;
-				if(!nfs[c.z]) {
-					var out = write_number_format_ods(c.z, "N" + nfi);
-					if(out) { nfs[c.z] = "N" + nfi; ++nfi; o.push(out + "\n"); }
-				}
-			}
-		});
-		o.push('  <style:style style:name="ce1" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N37"/>\n');
-		keys(nfs).forEach(function(nf) {
-			o.push('<style:style style:name="ce' + nfs[nf].slice(1) + '" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="' + nfs[nf] + '"/>\n');
-		});
-
-		/* page-layout */
-
-		o.push(' </office:automatic-styles>\n');
-		return nfs;
-	};
-
-	return function wcx(wb, opts) {
-		var o = [XML_HEADER];
-		/* 3.1.3.2 */
-		var attr = wxt_helper({
-			'xmlns:office':       "urn:oasis:names:tc:opendocument:xmlns:office:1.0",
-			'xmlns:table':        "urn:oasis:names:tc:opendocument:xmlns:table:1.0",
-			'xmlns:style':        "urn:oasis:names:tc:opendocument:xmlns:style:1.0",
-			'xmlns:text':         "urn:oasis:names:tc:opendocument:xmlns:text:1.0",
-			'xmlns:draw':         "urn:oasis:names:tc:opendocument:xmlns:drawing:1.0",
-			'xmlns:fo':           "urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0",
-			'xmlns:xlink':        "http://www.w3.org/1999/xlink",
-			'xmlns:dc':           "http://purl.org/dc/elements/1.1/",
-			'xmlns:meta':         "urn:oasis:names:tc:opendocument:xmlns:meta:1.0",
-			'xmlns:number':       "urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0",
-			'xmlns:presentation': "urn:oasis:names:tc:opendocument:xmlns:presentation:1.0",
-			'xmlns:svg':          "urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0",
-			'xmlns:chart':        "urn:oasis:names:tc:opendocument:xmlns:chart:1.0",
-			'xmlns:dr3d':         "urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0",
-			'xmlns:math':         "http://www.w3.org/1998/Math/MathML",
-			'xmlns:form':         "urn:oasis:names:tc:opendocument:xmlns:form:1.0",
-			'xmlns:script':       "urn:oasis:names:tc:opendocument:xmlns:script:1.0",
-			'xmlns:ooo':          "http://openoffice.org/2004/office",
-			'xmlns:ooow':         "http://openoffice.org/2004/writer",
-			'xmlns:oooc':         "http://openoffice.org/2004/calc",
-			'xmlns:dom':          "http://www.w3.org/2001/xml-events",
-			'xmlns:xforms':       "http://www.w3.org/2002/xforms",
-			'xmlns:xsd':          "http://www.w3.org/2001/XMLSchema",
-			'xmlns:xsi':          "http://www.w3.org/2001/XMLSchema-instance",
-			'xmlns:sheet':        "urn:oasis:names:tc:opendocument:sh33tjs:1.0",
-			'xmlns:rpt':          "http://openoffice.org/2005/report",
-			'xmlns:of':           "urn:oasis:names:tc:opendocument:xmlns:of:1.2",
-			'xmlns:xhtml':        "http://www.w3.org/1999/xhtml",
-			'xmlns:grddl':        "http://www.w3.org/2003/g/data-view#",
-			'xmlns:tableooo':     "http://openoffice.org/2009/table",
-			'xmlns:drawooo':      "http://openoffice.org/2010/draw",
-			'xmlns:calcext':      "urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0",
-			'xmlns:loext':        "urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0",
-			'xmlns:field':        "urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0",
-			'xmlns:formx':        "urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0",
-			'xmlns:css3t':        "http://www.w3.org/TR/css3-text/",
-			'office:version':     "1.2"
-		});
-
-		var fods = wxt_helper({
-			'xmlns:config':    "urn:oasis:names:tc:opendocument:xmlns:config:1.0",
-			'office:mimetype': "application/vnd.oasis.opendocument.spreadsheet"
-		});
-
-		if(opts.bookType == "fods") {
-			o.push('<office:document' + attr + fods + '>\n');
-			o.push(write_meta_ods().replace(/<office:document-meta.*?>/, "").replace(/<\/office:document-meta>/, "") + "\n");
-			// TODO: settings (equiv of settings.xml for ODS)
-		} else o.push('<office:document-content' + attr  + '>\n');
-		// o.push('  <office:scripts/>\n');
-		var nfs = write_automatic_styles_ods(o, wb);
-		o.push('  <office:body>\n');
-		o.push('    <office:spreadsheet>\n');
-		if(((wb.Workbook||{}).WBProps||{}).date1904) o.push('      <table:calculation-settings table:case-sensitive="false" table:search-criteria-must-apply-to-whole-cell="true" table:use-wildcards="true" table:use-regular-expressions="false" table:automatic-find-labels="false">\n        <table:null-date table:date-value="1904-01-01"/>\n      </table:calculation-settings>\n');
-		for(var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts, nfs));
-		if((wb.Workbook||{}).Names) o.push(write_names_ods(wb.Workbook.Names, wb.SheetNames, -1));
-		o.push('    </office:spreadsheet>\n');
-		o.push('  </office:body>\n');
-		if(opts.bookType == "fods") o.push('</office:document>');
-		else o.push('</office:document-content>');
-		return o.join("");
-	};
-})();
-
-function write_ods(wb, opts) {
-	if(opts.bookType == "fods") return write_content_ods(wb, opts);
-
-	var zip = zip_new();
-	var f = "";
-
-	var manifest = [];
-	var rdf = [];
-
-	/* Part 3 Section 3.3 MIME Media Type */
-	f = "mimetype";
-	zip_add_file(zip, f, "application/vnd.oasis.opendocument.spreadsheet");
-
-	/* Part 1 Section 2.2 Documents */
-	f = "content.xml";
-	zip_add_file(zip, f, write_content_ods(wb, opts));
-	manifest.push([f, "text/xml"]);
-	rdf.push([f, "ContentFile"]);
-
-	/* TODO: these are hard-coded styles to satiate excel */
-	f = "styles.xml";
-	zip_add_file(zip, f, write_styles_ods(wb, opts));
-	manifest.push([f, "text/xml"]);
-	rdf.push([f, "StylesFile"]);
-
-	/* TODO: this is hard-coded to satiate excel */
-	f = "meta.xml";
-	zip_add_file(zip, f, XML_HEADER + write_meta_ods());
-	manifest.push([f, "text/xml"]);
-	rdf.push([f, "MetadataFile"]);
-
-	/* Part 3 Section 6 Metadata Manifest File */
-	f = "manifest.rdf";
-	zip_add_file(zip, f, write_rdf(rdf/*, opts*/));
-	manifest.push([f, "application/rdf+xml"]);
-
-	/* Part 3 Section 4 Manifest File */
-	f = "META-INF/manifest.xml";
-	zip_add_file(zip, f, write_manifest(manifest/*, opts*/));
-
-	return zip;
-}
-
-function fix_opts_func(defaults) {
-	return function fix_opts(opts) {
-		for(var i = 0; i != defaults.length; ++i) {
-			var d = defaults[i];
-			if(opts[d[0]] === undefined) opts[d[0]] = d[1];
-			if(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);
-		}
-	};
-}
-
-function fix_read_opts(opts) {
-fix_opts_func([
-	['cellNF', false], /* emit cell number format string as .z */
-	['cellHTML', true], /* emit html string as .h */
-	['cellFormula', true], /* emit formulae as .f */
-	['cellStyles', false], /* emits style/theme as .s */
-	['cellText', true], /* emit formatted text as .w */
-	['cellDates', false], /* emit date cells with type `d` */
-
-	['sheetStubs', false], /* emit empty cells */
-	['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */
-
-	['bookDeps', false], /* parse calculation chains */
-	['bookSheets', false], /* only try to get sheet names (no Sheets) */
-	['bookProps', false], /* only try to get properties (no Sheets) */
-	['bookFiles', false], /* include raw file structure (keys, files, cfb) */
-	['bookVBA', false], /* include vba raw data (vbaraw) */
-
-	['password',''], /* password */
-	['WTF', false] /* WTF mode (throws errors) */
-])(opts);
-}
-
-function fix_write_opts(opts) {
-fix_opts_func([
-	['cellDates', false], /* write date cells with type `d` */
-
-	['bookSST', false], /* Generate Shared String Table */
-
-	['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */
-
-	['compression', false], /* Use file compression */
-
-	['WTF', false] /* WTF mode (throws errors) */
-])(opts);
-}
-function get_sheet_type(n) {
-	if(RELS.WS.indexOf(n) > -1) return "sheet";
-	if(RELS.CS && n == RELS.CS) return "chart";
-	if(RELS.DS && n == RELS.DS) return "dialog";
-	if(RELS.MS && n == RELS.MS) return "macro";
-	return (n && n.length) ? n : "sheet";
-}
-function safe_parse_wbrels(wbrels, sheets) {
-	if(!wbrels) return 0;
-	try {
-		wbrels = sheets.map(function pwbr(w) { if(!w.id) w.id = w.strRelID; return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)]; });
-	} catch(e) { return null; }
-	return !wbrels || wbrels.length === 0 ? null : wbrels;
-}
-
-function safe_parse_sheet(zip, path, relsPath, sheet, idx, sheetRels, sheets, stype, opts, wb, themes, styles) {
-	try {
-		sheetRels[sheet]=parse_rels(getzipstr(zip, relsPath, true), path);
-		var data = getzipdata(zip, path);
-		var _ws;
-		switch(stype) {
-			case 'sheet':  _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;
-			case 'chart':  _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);
-				if(!_ws || !_ws['!drawel']) break;
-				var dfile = resolve_path(_ws['!drawel'].Target, path);
-				var drelsp = get_rels_path(dfile);
-				var draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));
-				var chartp = resolve_path(draw, dfile);
-				var crelsp = get_rels_path(chartp);
-				_ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);
-				break;
-			case 'macro':  _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;
-			case 'dialog': _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;
-			default: throw new Error("Unrecognized sheet type " + stype);
-		}
-		sheets[sheet] = _ws;
-
-		/* scan rels for comments and threaded comments */
-		var comments = [], tcomments = [];
-		if(sheetRels && sheetRels[sheet]) keys(sheetRels[sheet]).forEach(function(n) {
-			var dfile = "";
-			if(sheetRels[sheet][n].Type == RELS.CMNT) {
-				dfile = resolve_path(sheetRels[sheet][n].Target, path);
-				comments = parse_cmnt(getzipdata(zip, dfile, true), dfile, opts);
-				if(!comments || !comments.length) return;
-				sheet_insert_comments(_ws, comments, false);
-			}
-			if(sheetRels[sheet][n].Type == RELS.TCMNT) {
-				dfile = resolve_path(sheetRels[sheet][n].Target, path);
-				tcomments = tcomments.concat(parse_tcmnt_xml(getzipdata(zip, dfile, true), opts));
-			}
-		});
-		if(tcomments && tcomments.length) sheet_insert_comments(_ws, tcomments, true, opts.people || []);
-	} catch(e) { if(opts.WTF) throw e; }
-}
-
-function strip_front_slash(x) { return x.charAt(0) == '/' ? x.slice(1) : x; }
-
-function parse_zip(zip, opts) {
-	make_ssf();
-	opts = opts || {};
-	fix_read_opts(opts);
-
-	/* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */
-	if(safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);
-	/* UOC */
-	if(safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);
-	/* Numbers */
-	if(safegetzipfile(zip, 'Index/Document.iwa')) {
-		if(typeof Uint8Array == "undefined") throw new Error('NUMBERS file parsing requires Uint8Array support');
-		if(typeof parse_numbers_iwa != "undefined") {
-			if(zip.FileIndex) return parse_numbers_iwa(zip, opts);
-			var _zip = CFB.utils.cfb_new();
-			zipentries(zip).forEach(function(e) { zip_add_file(_zip, e, getzipbin(zip, e)); });
-			return parse_numbers_iwa(_zip, opts);
-		}
-		throw new Error('Unsupported NUMBERS file');
-	}
-	if(!safegetzipfile(zip, '[Content_Types].xml')) {
-		if(safegetzipfile(zip, 'index.xml.gz')) throw new Error('Unsupported NUMBERS 08 file');
-		if(safegetzipfile(zip, 'index.xml')) throw new Error('Unsupported NUMBERS 09 file');
-		var index_zip = CFB.find(zip, 'Index.zip');
-		if(index_zip) {
-			opts = dup(opts);
-			delete opts.type;
-			if(typeof index_zip.content == "string") opts.type = "binary";
-			// TODO: Bun buffer bug
-			if(typeof Bun !== "undefined" && Buffer.isBuffer(index_zip.content)) return readSync(new Uint8Array(index_zip.content), opts);
-			return readSync(index_zip.content, opts);
-		}
-		throw new Error('Unsupported ZIP file');
-	}
-
-	var entries = zipentries(zip);
-	var dir = parse_ct((getzipstr(zip, '[Content_Types].xml')));
-	var xlsb = false;
-	var sheets, binname;
-	if(dir.workbooks.length === 0) {
-		binname = "xl/workbook.xml";
-		if(getzipdata(zip,binname, true)) dir.workbooks.push(binname);
-	}
-	if(dir.workbooks.length === 0) {
-		binname = "xl/workbook.bin";
-		if(!getzipdata(zip,binname,true)) throw new Error("Could not find workbook");
-		dir.workbooks.push(binname);
-		xlsb = true;
-	}
-	if(dir.workbooks[0].slice(-3) == "bin") xlsb = true;
-
-	var themes = ({});
-	var styles = ({});
-	if(!opts.bookSheets && !opts.bookProps) {
-		strs = [];
-		if(dir.sst) try { strs=parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts); } catch(e) { if(opts.WTF) throw e; }
-
-		if(opts.cellStyles && dir.themes.length) themes = parse_theme_xml(getzipstr(zip, dir.themes[0].replace(/^\//,''), true)||"", opts);
-
-		if(dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);
-	}
-
-	/*var externbooks = */dir.links.map(function(link) {
-		try {
-			var rels = parse_rels(getzipstr(zip, get_rels_path(strip_front_slash(link))), link);
-			return parse_xlink(getzipdata(zip, strip_front_slash(link)), rels, link, opts);
-		} catch(e) {}
-	});
-
-	var wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);
-
-	var props = {}, propdata = "";
-
-	if(dir.coreprops.length) {
-		propdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);
-		if(propdata) props = parse_core_props(propdata);
-		if(dir.extprops.length !== 0) {
-			propdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);
-			if(propdata) parse_ext_props(propdata, props, opts);
-		}
-	}
-
-	var custprops = {};
-	if(!opts.bookSheets || opts.bookProps) {
-		if (dir.custprops.length !== 0) {
-			propdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);
-			if(propdata) custprops = parse_cust_props(propdata, opts);
-		}
-	}
-
-	var out = ({});
-	if(opts.bookSheets || opts.bookProps) {
-		if(wb.Sheets) sheets = wb.Sheets.map(function pluck(x){ return x.name; });
-		else if(props.Worksheets && props.SheetNames.length > 0) sheets=props.SheetNames;
-		if(opts.bookProps) { out.Props = props; out.Custprops = custprops; }
-		if(opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;
-		if(opts.bookSheets ? out.SheetNames : opts.bookProps) return out;
-	}
-	sheets = {};
-
-	var deps = {};
-	if(opts.bookDeps && dir.calcchain) deps=parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)),dir.calcchain,opts);
-
-	var i=0;
-	var sheetRels = ({});
-	var path, relsPath;
-
-	{
-		var wbsheets = wb.Sheets;
-		props.Worksheets = wbsheets.length;
-		props.SheetNames = [];
-		for(var j = 0; j != wbsheets.length; ++j) {
-			props.SheetNames[j] = wbsheets[j].name;
-		}
-	}
-
-	var wbext = xlsb ? "bin" : "xml";
-	var wbrelsi = dir.workbooks[0].lastIndexOf("/");
-	var wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi+1) + "_rels/" + dir.workbooks[0].slice(wbrelsi+1) + ".rels").replace(/^\//,"");
-	if(!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';
-	var wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile.replace(/_rels.*/, "s5s"));
-
-	if((dir.metadata || []).length >= 1) {
-		/* TODO: MDX and other types of metadata */
-		opts.xlmeta = parse_xlmeta(getzipdata(zip, strip_front_slash(dir.metadata[0])),dir.metadata[0],opts);
-	}
-
-	if((dir.people || []).length >= 1) {
-		opts.people = parse_people_xml(getzipdata(zip, strip_front_slash(dir.people[0])),opts);
-	}
-
-	if(wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);
-
-	/* Numbers iOS hack */
-	var nmode = (getzipdata(zip,"xl/worksheets/sheet.xml",true))?1:0;
-	wsloop: for(i = 0; i != props.Worksheets; ++i) {
-		var stype = "sheet";
-		if(wbrels && wbrels[i]) {
-			path = 'xl/' + (wbrels[i][1]).replace(/[\/]?xl\//, "");
-			if(!safegetzipfile(zip, path)) path = wbrels[i][1];
-			if(!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\/.*$/,"") + wbrels[i][1];
-			stype = wbrels[i][2];
-		} else {
-			path = 'xl/worksheets/sheet'+(i+1-nmode)+"." + wbext;
-			path = path.replace(/sheet0\./,"sheet.");
-		}
-		relsPath = path.replace(/^(.*)(\/)([^\/]*)$/, "$1/_rels/$3.rels");
-		if(opts && opts.sheets != null) switch(typeof opts.sheets) {
-			case "number": if(i != opts.sheets) continue wsloop; break;
-			case "string": if(props.SheetNames[i].toLowerCase() != opts.sheets.toLowerCase()) continue wsloop; break;
-			default: if(Array.isArray && Array.isArray(opts.sheets)) {
-				var snjseen = false;
-				for(var snj = 0; snj != opts.sheets.length; ++snj) {
-					if(typeof opts.sheets[snj] == "number" && opts.sheets[snj] == i) snjseen=1;
-					if(typeof opts.sheets[snj] == "string" && opts.sheets[snj].toLowerCase() == props.SheetNames[i].toLowerCase()) snjseen = 1;
-				}
-				if(!snjseen) continue wsloop;
-			}
-		}
-		safe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);
-	}
-
-	out = ({
-		Directory: dir,
-		Workbook: wb,
-		Props: props,
-		Custprops: custprops,
-		Deps: deps,
-		Sheets: sheets,
-		SheetNames: props.SheetNames,
-		Strings: strs,
-		Styles: styles,
-		Themes: themes,
-		SSF: dup(table_fmt)
-	});
-	if(opts && opts.bookFiles) {
-		if(zip.files) {
-			out.keys = entries;
-			out.files = zip.files;
-		} else {
-			out.keys = [];
-			out.files = {};
-			zip.FullPaths.forEach(function(p, idx) {
-				p = p.replace(/^Root Entry[\/]/, "");
-				out.keys.push(p);
-				out.files[p] = zip.FileIndex[idx];
-			});
-		}
-	}
-	if(opts && opts.bookVBA) {
-		if(dir.vba.length > 0) out.vbaraw = getzipdata(zip,strip_front_slash(dir.vba[0]),true);
-		else if(dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin',true);
-	}
-	// TODO: pass back content types metdata for xlsm/xlsx resolution
-	out.bookType = xlsb ? "xlsb" : "xlsx";
-	return out;
-}
-
-/* [MS-OFFCRYPTO] 2.1.1 */
-function parse_xlsxcfb(cfb, _opts) {
-	var opts = _opts || {};
-	var f = 'Workbook', data = CFB.find(cfb, f);
-	try {
-	f = '/!DataSpaces/Version';
-	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
-	/*var version = */parse_DataSpaceVersionInfo(data.content);
-
-	/* 2.3.4.1 */
-	f = '/!DataSpaces/DataSpaceMap';
-	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
-	var dsm = parse_DataSpaceMap(data.content);
-	if(dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== "StrongEncryptionDataSpace" || dsm[0].comps[0].v !== "EncryptedPackage")
-		throw new Error("ECMA-376 Encrypted file bad " + f);
-
-	/* 2.3.4.2 */
-	f = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';
-	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
-	var seds = parse_DataSpaceDefinition(data.content);
-	if(seds.length != 1 || seds[0] != "StrongEncryptionTransform")
-		throw new Error("ECMA-376 Encrypted file bad " + f);
-
-	/* 2.3.4.3 */
-	f = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';
-	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
-	/*var hdr = */parse_Primary(data.content);
-	} catch(e) {}
-
-	f = '/EncryptionInfo';
-	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
-	var einfo = parse_EncryptionInfo(data.content);
-
-	/* 2.3.4.4 */
-	f = '/EncryptedPackage';
-	data = CFB.find(cfb, f); if(!data || !data.content) throw new Error("ECMA-376 Encrypted file missing " + f);
-
-/*global decrypt_agile */
-if(einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || "", opts);
-/*global decrypt_std76 */
-if(einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || "", opts);
-	throw new Error("File is password-protected");
-}
-
-function write_zip_xlsb(wb, opts) {
-	if(wb && !wb.SSF) {
-		wb.SSF = dup(table_fmt);
-	}
-	if(wb && wb.SSF) {
-		make_ssf(); SSF_load_table(wb.SSF);
-		// $FlowIgnore
-		opts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;
-		opts.ssf = wb.SSF;
-	}
-	opts.rels = {}; opts.wbrels = {};
-	opts.Strings = []; opts.Strings.Count = 0; opts.Strings.Unique = 0;
-	if(browser_has_Map) opts.revStrings = new Map();
-	else { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }
-	var wbext = "bin";
-	var vbafmt = true;
-	var ct = new_ct();
-	fix_write_opts(opts = opts || {});
-	var zip = zip_new();
-	var f = "", rId = 0;
-
-	opts.cellXfs = [];
-	get_cell_style(opts.cellXfs, {}, {revssf:{"General":0}});
-
-	if(!wb.Props) wb.Props = {};
-
-	f = "docProps/core.xml";
-	zip_add_file(zip, f, write_core_props(wb.Props, opts));
-	ct.coreprops.push(f);
-	add_rels(opts.rels, 2, f, RELS.CORE_PROPS);
-
-f = "docProps/app.xml";
-	if(wb.Props && wb.Props.SheetNames){/* empty */}
-	else if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;
-	else {
-		var _sn = [];
-		for(var _i = 0; _i < wb.SheetNames.length; ++_i)
-			if((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);
-		wb.Props.SheetNames = _sn;
-	}
-	wb.Props.Worksheets = wb.Props.SheetNames.length;
-	zip_add_file(zip, f, write_ext_props(wb.Props, opts));
-	ct.extprops.push(f);
-	add_rels(opts.rels, 3, f, RELS.EXT_PROPS);
-
-	if(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {
-		f = "docProps/custom.xml";
-		zip_add_file(zip, f, write_cust_props(wb.Custprops, opts));
-		ct.custprops.push(f);
-		add_rels(opts.rels, 4, f, RELS.CUST_PROPS);
-	}
-
-	for(rId=1;rId <= wb.SheetNames.length; ++rId) {
-		var wsrels = {'!id':{}};
-		var ws = wb.Sheets[wb.SheetNames[rId-1]];
-		var _type = (ws || {})["!type"] || "sheet";
-		switch(_type) {
-		case "chart":
-			/* falls through */
-		default:
-			f = "xl/worksheets/sheet" + rId + "." + wbext;
-			zip_add_file(zip, f, write_ws_bin(rId-1, opts, wb, wsrels));
-			ct.sheets.push(f);
-			add_rels(opts.wbrels, -1, "worksheets/sheet" + rId + "." + wbext, RELS.WS[0]);
-		}
-
-		if(ws) {
-			var comments = ws['!comments'];
-			var need_vml = false;
-			var cf = "";
-			if(comments && comments.length > 0) {
-				cf = "xl/comments" + rId + "." + wbext;
-				zip_add_file(zip, cf, write_comments_bin(comments, opts));
-				ct.comments.push(cf);
-				add_rels(wsrels, -1, "../comments" + rId + "." + wbext, RELS.CMNT);
-				need_vml = true;
-			}
-			if(ws['!legacy']) {
-				if(need_vml) zip_add_file(zip, "xl/drawings/vmlDrawing" + (rId) + ".vml", write_vml(rId, ws['!comments']));
-			}
-			delete ws['!comments'];
-			delete ws['!legacy'];
-		}
-
-		if(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));
-	}
-
-	if(opts.Strings != null && opts.Strings.length > 0) {
-		f = "xl/sharedStrings." + wbext;
-		zip_add_file(zip, f, write_sst_bin(opts.Strings, opts));
-		ct.strs.push(f);
-		add_rels(opts.wbrels, -1, "sharedStrings." + wbext, RELS.SST);
-	}
-
-	f = "xl/workbook." + wbext;
-	zip_add_file(zip, f, write_wb_bin(wb, opts));
-	ct.workbooks.push(f);
-	add_rels(opts.rels, 1, f, RELS.WB);
-
-	/* TODO: something more intelligent with themes */
-
-	f = "xl/theme/theme1.xml";
-	var ww = write_theme(wb.Themes, opts);
-	zip_add_file(zip, f, ww);
-	ct.themes.push(f);
-	add_rels(opts.wbrels, -1, "theme/theme1.xml", RELS.THEME);
-
-	/* TODO: something more intelligent with styles */
-
-	f = "xl/styles." + wbext;
-	zip_add_file(zip, f, write_sty_bin(wb, opts));
-	ct.styles.push(f);
-	add_rels(opts.wbrels, -1, "styles." + wbext, RELS.STY);
-
-	if(wb.vbaraw && vbafmt) {
-		f = "xl/vbaProject.bin";
-		zip_add_file(zip, f, wb.vbaraw);
-		ct.vba.push(f);
-		add_rels(opts.wbrels, -1, "vbaProject.bin", RELS.VBA);
-	}
-
-	f = "xl/metadata." + wbext;
-	zip_add_file(zip, f, write_xlmeta_bin());
-	ct.metadata.push(f);
-	add_rels(opts.wbrels, -1, "metadata." + wbext, RELS.XLMETA);
-
-	zip_add_file(zip, "[Content_Types].xml", write_ct(ct, opts));
-	zip_add_file(zip, '_rels/.rels', write_rels(opts.rels));
-	zip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));
-
-	delete opts.revssf; delete opts.ssf;
-	return zip;
-}
-
-function write_zip_xlsx(wb, opts) {
-	if(wb && !wb.SSF) {
-		wb.SSF = dup(table_fmt);
-	}
-	if(wb && wb.SSF) {
-		make_ssf(); SSF_load_table(wb.SSF);
-		// $FlowIgnore
-		opts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;
-		opts.ssf = wb.SSF;
-	}
-	opts.rels = {}; opts.wbrels = {};
-	opts.Strings = []; opts.Strings.Count = 0; opts.Strings.Unique = 0;
-	if(browser_has_Map) opts.revStrings = new Map();
-	else { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }
-	var wbext = "xml";
-	var vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;
-	var ct = new_ct();
-	fix_write_opts(opts = opts || {});
-	var zip = zip_new();
-	var f = "", rId = 0;
-
-	opts.cellXfs = [];
-	get_cell_style(opts.cellXfs, {}, {revssf:{"General":0}});
-
-	if(!wb.Props) wb.Props = {};
-
-	f = "docProps/core.xml";
-	zip_add_file(zip, f, write_core_props(wb.Props, opts));
-	ct.coreprops.push(f);
-	add_rels(opts.rels, 2, f, RELS.CORE_PROPS);
-
-f = "docProps/app.xml";
-	if(wb.Props && wb.Props.SheetNames){/* empty */}
-	else if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;
-	else {
-		var _sn = [];
-		for(var _i = 0; _i < wb.SheetNames.length; ++_i)
-			if((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);
-		wb.Props.SheetNames = _sn;
-	}
-	wb.Props.Worksheets = wb.Props.SheetNames.length;
-	zip_add_file(zip, f, write_ext_props(wb.Props, opts));
-	ct.extprops.push(f);
-	add_rels(opts.rels, 3, f, RELS.EXT_PROPS);
-
-	if(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {
-		f = "docProps/custom.xml";
-		zip_add_file(zip, f, write_cust_props(wb.Custprops, opts));
-		ct.custprops.push(f);
-		add_rels(opts.rels, 4, f, RELS.CUST_PROPS);
-	}
-
-	var people = ["SheetJ5"];
-	opts.tcid = 0;
-
-	for(rId=1;rId <= wb.SheetNames.length; ++rId) {
-		var wsrels = {'!id':{}};
-		var ws = wb.Sheets[wb.SheetNames[rId-1]];
-		var _type = (ws || {})["!type"] || "sheet";
-		switch(_type) {
-		case "chart":
-			/* falls through */
-		default:
-			f = "xl/worksheets/sheet" + rId + "." + wbext;
-			zip_add_file(zip, f, write_ws_xml(rId-1, opts, wb, wsrels));
-			ct.sheets.push(f);
-			add_rels(opts.wbrels, -1, "worksheets/sheet" + rId + "." + wbext, RELS.WS[0]);
-		}
-
-		if(ws) {
-			var comments = ws['!comments'];
-			var need_vml = false;
-			var cf = "";
-			if(comments && comments.length > 0) {
-				var needtc = false;
-				comments.forEach(function(carr) {
-					carr[1].forEach(function(c) { if(c.T == true) needtc = true; });
-				});
-				if(needtc) {
-					cf = "xl/threadedComments/threadedComment" + rId + ".xml";
-					zip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));
-					ct.threadedcomments.push(cf);
-					add_rels(wsrels, -1, "../threadedComments/threadedComment" + rId + ".xml", RELS.TCMNT);
-				}
-
-				cf = "xl/comments" + rId + "." + wbext;
-				zip_add_file(zip, cf, write_comments_xml(comments, opts));
-				ct.comments.push(cf);
-				add_rels(wsrels, -1, "../comments" + rId + "." + wbext, RELS.CMNT);
-				need_vml = true;
-			}
-			if(ws['!legacy']) {
-				if(need_vml) zip_add_file(zip, "xl/drawings/vmlDrawing" + (rId) + ".vml", write_vml(rId, ws['!comments']));
-			}
-			delete ws['!comments'];
-			delete ws['!legacy'];
-		}
-
-		if(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));
-	}
-
-	if(opts.Strings != null && opts.Strings.length > 0) {
-		f = "xl/sharedStrings." + wbext;
-		zip_add_file(zip, f, write_sst_xml(opts.Strings, opts));
-		ct.strs.push(f);
-		add_rels(opts.wbrels, -1, "sharedStrings." + wbext, RELS.SST);
-	}
-
-	f = "xl/workbook." + wbext;
-	zip_add_file(zip, f, write_wb_xml(wb, opts));
-	ct.workbooks.push(f);
-	add_rels(opts.rels, 1, f, RELS.WB);
-
-	/* TODO: something more intelligent with themes */
-
-	f = "xl/theme/theme1.xml";
-	zip_add_file(zip, f, write_theme(wb.Themes, opts));
-	ct.themes.push(f);
-	add_rels(opts.wbrels, -1, "theme/theme1.xml", RELS.THEME);
-
-	/* TODO: something more intelligent with styles */
-
-	f = "xl/styles." + wbext;
-	zip_add_file(zip, f, write_sty_xml(wb, opts));
-	ct.styles.push(f);
-	add_rels(opts.wbrels, -1, "styles." + wbext, RELS.STY);
-
-	if(wb.vbaraw && vbafmt) {
-		f = "xl/vbaProject.bin";
-		zip_add_file(zip, f, wb.vbaraw);
-		ct.vba.push(f);
-		add_rels(opts.wbrels, -1, "vbaProject.bin", RELS.VBA);
-	}
-
-	f = "xl/metadata." + wbext;
-	zip_add_file(zip, f, write_xlmeta_xml());
-	ct.metadata.push(f);
-	add_rels(opts.wbrels, -1, "metadata." + wbext, RELS.XLMETA);
-
-	if(people.length > 1) {
-		f = "xl/persons/person.xml";
-		zip_add_file(zip, f, write_people_xml(people, opts));
-		ct.people.push(f);
-		add_rels(opts.wbrels, -1, "persons/person.xml", RELS.PEOPLE);
-	}
-
-	zip_add_file(zip, "[Content_Types].xml", write_ct(ct, opts));
-	zip_add_file(zip, '_rels/.rels', write_rels(opts.rels));
-	zip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));
-
-	delete opts.revssf; delete opts.ssf;
-	return zip;
-}
-
-function firstbyte(f,o) {
-	var x = "";
-	switch((o||{}).type || "base64") {
-		case 'buffer': return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];
-		case 'base64': x = Base64_decode(f.slice(0,12)); break;
-		case 'binary': x = f; break;
-		case 'array':  return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];
-		default: throw new Error("Unrecognized type " + (o && o.type || "undefined"));
-	}
-	return [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3), x.charCodeAt(4), x.charCodeAt(5), x.charCodeAt(6), x.charCodeAt(7)];
-}
-
-function read_cfb(cfb, opts) {
-	if(CFB.find(cfb, "EncryptedPackage")) return parse_xlsxcfb(cfb, opts);
-	return parse_xlscfb(cfb, opts);
-}
-
-function read_zip(data, opts) {
-	var zip, d = data;
-	var o = opts||{};
-	if(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? "buffer" : "base64";
-	zip = zip_read(d, o);
-	return parse_zip(zip, o);
-}
-
-function read_plaintext(data, o) {
-	var i = 0;
-	main: while(i < data.length) switch(data.charCodeAt(i)) {
-		case 0x0A: case 0x0D: case 0x20: ++i; break;
-		case 0x3C: return parse_xlml(data.slice(i),o);
-		default: break main;
-	}
-	return PRN.to_workbook(data, o);
-}
-
-function read_plaintext_raw(data, o) {
-	var str = "", bytes = firstbyte(data, o);
-	switch(o.type) {
-		case 'base64': str = Base64_decode(data); break;
-		case 'binary': str = data; break;
-		case 'buffer': str = data.toString('binary'); break;
-		case 'array': str = cc2str(data); break;
-		default: throw new Error("Unrecognized type " + o.type);
-	}
-	if(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);
-	o.type = "binary";
-	return read_plaintext(str, o);
-}
-
-function read_utf16(data, o) {
-	var d = data;
-	if(o.type == 'base64') d = Base64_decode(d);
-	d = typeof $cptable !== "undefined" ? $cptable.utils.decode(1200, d.slice(2), 'str') : utf16leread(d.slice(2));
-	o.type = "binary";
-	return read_plaintext(d, o);
-}
-
-function bstrify(data) {
-	return !data.match(/[^\x00-\x7F]/) ? data : utf8write(data);
-}
-
-function read_prn(data, d, o, str) {
-	if(str) { o.type = "string"; return PRN.to_workbook(data, o); }
-	return PRN.to_workbook(d, o);
-}
-
-function readSync(data, opts) {
-	reset_cp();
-	var o = opts||{};
-	if(o.codepage && typeof $cptable === "undefined") console.error("Codepage tables are not loaded.  Non-ASCII characters may not give expected results");
-	if(typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), (o = dup(o), o.type = "array", o));
-	if(typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && !o.type) o.type = typeof Deno !== "undefined" ? "buffer" : "array";
-	var d = data, n = [0,0,0,0], str = false;
-	if(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }
-	_ssfopts = {};
-	if(o.dateNF) _ssfopts.dateNF = o.dateNF;
-	if(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? "buffer" : "base64";
-	if(o.type == "file") { o.type = has_buf ? "buffer" : "binary"; d = read_binary(data); if(typeof Uint8Array !== 'undefined' && !has_buf) o.type = "array"; }
-	if(o.type == "string") { str = true; o.type = "binary"; o.codepage = 65001; d = bstrify(data); }
-	if(o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {
-		// $FlowIgnore
-		var ab=new ArrayBuffer(3), vu=new Uint8Array(ab); vu.foo="bar";
-		// $FlowIgnore
-		if(!vu.foo) {o=dup(o); o.type='array'; return readSync(ab2a(d), o);}
-	}
-	switch((n = firstbyte(d, o))[0]) {
-		case 0xD0: if(n[1] === 0xCF && n[2] === 0x11 && n[3] === 0xE0 && n[4] === 0xA1 && n[5] === 0xB1 && n[6] === 0x1A && n[7] === 0xE1) return read_cfb(CFB.read(d, o), o); break;
-		case 0x09: if(n[1] <= 0x08) return parse_xlscfb(d, o); break;
-		case 0x3C: return parse_xlml(d, o);
-		case 0x49:
-			if(n[1] === 0x49 && n[2] === 0x2a && n[3] === 0x00) throw new Error("TIFF Image File is not a spreadsheet");
-			if(n[1] === 0x44) return read_wb_ID(d, o);
-			break;
-		case 0x54: if(n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o); break;
-		case 0x50: return (n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09) ? read_zip(d, o) : read_prn(data, d, o, str);
-		case 0xEF: return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);
-		case 0xFF:
-			if(n[1] === 0xFE) { return read_utf16(d, o); }
-			else if(n[1] === 0x00 && n[2] === 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);
-			break;
-		case 0x00:
-			if(n[1] === 0x00) {
-				if(n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);
-				if(n[2] === 0x00 && (n[3] === 0x08 || n[3] === 0x09)) return WK_.to_workbook(d, o);
-			}
-			break;
-		case 0x03: case 0x83: case 0x8B: case 0x8C: return DBF.to_workbook(d, o);
-		case 0x7B: if(n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return rtf_to_workbook(d, o); break;
-		case 0x0A: case 0x0D: case 0x20: return read_plaintext_raw(d, o);
-		case 0x89: if(n[1] === 0x50 && n[2] === 0x4E && n[3] === 0x47) throw new Error("PNG Image File is not a spreadsheet"); break;
-		case 0x08: if(n[1] === 0xE7) throw new Error("Unsupported Multiplan 1.x file!"); break;
-		case 0x0C:
-			if(n[1] === 0xEC) throw new Error("Unsupported Multiplan 2.x file!");
-			if(n[1] === 0xED) throw new Error("Unsupported Multiplan 3.x file!");
-			break;
-	}
-	if(DBF_SUPPORTED_VERSIONS.indexOf(n[0]) > -1 && n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);
-	return read_prn(data, d, o, str);
-}
-
-function readFileSync(filename, opts) {
-	var o = opts||{}; o.type = 'file';
-	return readSync(filename, o);
-}
-function write_cfb_ctr(cfb, o) {
-	switch(o.type) {
-		case "base64": case "binary": break;
-		case "buffer": case "array": o.type = ""; break;
-		case "file": return write_dl(o.file, CFB.write(cfb, {type:has_buf ? 'buffer' : ""}));
-		case "string": throw new Error("'string' output type invalid for '" + o.bookType + "' files");
-		default: throw new Error("Unrecognized type " + o.type);
-	}
-	return CFB.write(cfb, o);
-}
-
-function write_zip(wb, opts) {
-	switch(opts.bookType) {
-		case "ods": return write_ods(wb, opts);
-		case "numbers": return write_numbers_iwa(wb, opts);
-		case "xlsb": return write_zip_xlsb(wb, opts);
-		default: return write_zip_xlsx(wb, opts);
-	}
-}
-
-function write_zip_type(wb, opts) {
-	var o = dup(opts||{});
-	var z = write_zip(wb, o);
-	return write_zip_denouement(z, o);
-}
-function write_zip_typeXLSX(wb, opts) {
-	var o = dup(opts||{});
-	var z = write_zip_xlsx(wb, o);
-	return write_zip_denouement(z, o);
-}
-function write_zip_denouement(z, o) {
-	var oopts = {};
-	var ftype = has_buf ? "nodebuffer" : (typeof Uint8Array !== "undefined" ? "array" : "string");
-	if(o.compression) oopts.compression = 'DEFLATE';
-	if(o.password) oopts.type = ftype;
-	else switch(o.type) {
-		case "base64": oopts.type = "base64"; break;
-		case "binary": oopts.type = "string"; break;
-		case "string": throw new Error("'string' output type invalid for '" + o.bookType + "' files");
-		case "buffer":
-		case "file": oopts.type = ftype; break;
-		default: throw new Error("Unrecognized type " + o.type);
-	}
-	var out = z.FullPaths ? CFB.write(z, {fileType:"zip", type: {"nodebuffer": "buffer", "string": "binary"}[oopts.type] || oopts.type, compression: !!o.compression}) : z.generate(oopts);
-	if(typeof Deno !== "undefined") {
-		if(typeof out == "string") {
-			if(o.type == "binary" || o.type == "base64") return out;
-			out = new Uint8Array(s2ab(out));
-		}
-	}
-/*jshint -W083 */
-	if(o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o); // eslint-disable-line no-undef
-/*jshint +W083 */
-	if(o.type === "file") return write_dl(o.file, out);
-	return o.type == "string" ? utf8read(out) : out;
-}
-
-function write_cfb_type(wb, opts) {
-	var o = opts||{};
-	var cfb = write_xlscfb(wb, o);
-	return write_cfb_ctr(cfb, o);
-}
-
-function write_string_type(out, opts, bom) {
-	if(!bom) bom = "";
-	var o = bom + out;
-	switch(opts.type) {
-		case "base64": return Base64_encode(utf8write(o));
-		case "binary": return utf8write(o);
-		case "string": return out;
-		case "file": return write_dl(opts.file, o, 'utf8');
-		case "buffer": {
-			if(has_buf) return Buffer_from(o, 'utf8');
-			else if(typeof TextEncoder !== "undefined") return new TextEncoder().encode(o);
-			else return write_string_type(o, {type:'binary'}).split("").map(function(c) { return c.charCodeAt(0); });
-		}
-	}
-	throw new Error("Unrecognized type " + opts.type);
-}
-
-function write_stxt_type(out, opts) {
-	switch(opts.type) {
-		case "base64": return Base64_encode_pass(out);
-		case "binary": return out;
-		case "string": return out; /* override in sheet_to_txt */
-		case "file": return write_dl(opts.file, out, 'binary');
-		case "buffer": {
-			if(has_buf) return Buffer_from(out, 'binary');
-			else return out.split("").map(function(c) { return c.charCodeAt(0); });
-		}
-	}
-	throw new Error("Unrecognized type " + opts.type);
-}
-
-/* TODO: test consistency */
-function write_binary_type(out, opts) {
-	switch(opts.type) {
-		case "string":
-		case "base64":
-		case "binary":
-			var bstr = "";
-			// $FlowIgnore
-			for(var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);
-			return opts.type == 'base64' ? Base64_encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;
-		case "file": return write_dl(opts.file, out);
-		case "buffer": return out;
-		default: throw new Error("Unrecognized type " + opts.type);
-	}
-}
-
-function writeSyncXLSX(wb, opts) {
-	reset_cp();
-	check_wb(wb);
-	var o = dup(opts||{});
-	if(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }
-	if(o.type == "array") { o.type = "binary"; var out = (writeSyncXLSX(wb, o)); o.type = "array"; return s2ab(out); }
-	return write_zip_typeXLSX(wb, o);
-}
-
-function writeSync(wb, opts) {
-	reset_cp();
-	check_wb(wb);
-	var o = dup(opts||{});
-	if(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }
-	if(o.type == "array") { o.type = "binary"; var out = (writeSync(wb, o)); o.type = "array"; return s2ab(out); }
-	var idx = 0;
-	if(o.sheet) {
-		if(typeof o.sheet == "number") idx = o.sheet;
-		else idx = wb.SheetNames.indexOf(o.sheet);
-		if(!wb.SheetNames[idx]) throw new Error("Sheet not found: " + o.sheet + " : " + (typeof o.sheet));
-	}
-	switch(o.bookType || 'xlsb') {
-		case 'xml':
-		case 'xlml': return write_string_type(write_xlml(wb, o), o);
-		case 'slk':
-		case 'sylk': return write_string_type(SYLK.from_sheet(wb.Sheets[wb.SheetNames[idx]], o, wb), o);
-		case 'htm':
-		case 'html': return write_string_type(sheet_to_html(wb.Sheets[wb.SheetNames[idx]], o), o);
-		case 'txt': return write_stxt_type(sheet_to_txt(wb.Sheets[wb.SheetNames[idx]], o), o);
-		case 'csv': return write_string_type(sheet_to_csv(wb.Sheets[wb.SheetNames[idx]], o), o, "\ufeff");
-		case 'dif': return write_string_type(DIF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);
-		case 'dbf': return write_binary_type(DBF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);
-		case 'prn': return write_string_type(PRN.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);
-		case 'rtf': return write_string_type(sheet_to_rtf(wb.Sheets[wb.SheetNames[idx]], o), o);
-		case 'eth': return write_string_type(ETH.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);
-		case 'fods': return write_string_type(write_ods(wb, o), o);
-		case 'wk1': return write_binary_type(WK_.sheet_to_wk1(wb.Sheets[wb.SheetNames[idx]], o), o);
-		case 'wk3': return write_binary_type(WK_.book_to_wk3(wb, o), o);
-		case 'biff2': if(!o.biff) o.biff = 2; /* falls through */
-		case 'biff3': if(!o.biff) o.biff = 3; /* falls through */
-		case 'biff4': if(!o.biff) o.biff = 4; return write_binary_type(write_biff_buf(wb, o), o);
-		case 'biff5': if(!o.biff) o.biff = 5; /* falls through */
-		case 'biff8':
-		case 'xla':
-		case 'xls': if(!o.biff) o.biff = 8; return write_cfb_type(wb, o);
-		case 'xlsx':
-		case 'xlsm':
-		case 'xlam':
-		case 'xlsb':
-		case 'numbers':
-		case 'ods': return write_zip_type(wb, o);
-		default: throw new Error ("Unrecognized bookType |" + o.bookType + "|");
-	}
-}
-
-function resolve_book_type(o) {
-	if(o.bookType) return;
-	var _BT = {
-		"xls": "biff8",
-		"htm": "html",
-		"slk": "sylk",
-		"socialcalc": "eth",
-		"Sh33tJS": "WTF"
-	};
-	var ext = o.file.slice(o.file.lastIndexOf(".")).toLowerCase();
-	if(ext.match(/^\.[a-z]+$/)) o.bookType = ext.slice(1);
-	o.bookType = _BT[o.bookType] || o.bookType;
-}
-
-function writeFileSync(wb, filename, opts) {
-	var o = opts||{}; o.type = 'file';
-	o.file = filename;
-	resolve_book_type(o);
-	return writeSync(wb, o);
-}
-
-function writeFileSyncXLSX(wb, filename, opts) {
-	var o = opts||{}; o.type = 'file';
-	o.file = filename;
-	resolve_book_type(o);
-	return writeSyncXLSX(wb, o);
-}
-
-
-function writeFileAsync(filename, wb, opts, cb) {
-	var o = opts||{}; o.type = 'file';
-	o.file = filename;
-	resolve_book_type(o);
-	o.type = 'buffer';
-	var _cb = cb; if(!(_cb instanceof Function)) _cb = (opts);
-	return _fs.writeFile(filename, writeSync(wb, o), _cb);
-}
-function make_json_row(sheet, r, R, cols, header, hdr, dense, o) {
-	var rr = encode_row(R);
-	var defval = o.defval, raw = o.raw || !Object.prototype.hasOwnProperty.call(o, "raw");
-	var isempty = true;
-	var row = (header === 1) ? [] : {};
-	if(header !== 1) {
-		if(Object.defineProperty) try { Object.defineProperty(row, '__rowNum__', {value:R, enumerable:false}); } catch(e) { row.__rowNum__ = R; }
-		else row.__rowNum__ = R;
-	}
-	if(!dense || sheet[R]) for (var C = r.s.c; C <= r.e.c; ++C) {
-		var val = dense ? sheet[R][C] : sheet[cols[C] + rr];
-		if(val === undefined || val.t === undefined) {
-			if(defval === undefined) continue;
-			if(hdr[C] != null) { row[hdr[C]] = defval; }
-			continue;
-		}
-		var v = val.v;
-		switch(val.t){
-			case 'z': if(v == null) break; continue;
-			case 'e': v = (v == 0 ? null : void 0); break;
-			case 's': case 'd': case 'b': case 'n': break;
-			default: throw new Error('unrecognized type ' + val.t);
-		}
-		if(hdr[C] != null) {
-			if(v == null) {
-				if(val.t == "e" && v === null) row[hdr[C]] = null;
-				else if(defval !== undefined) row[hdr[C]] = defval;
-				else if(raw && v === null) row[hdr[C]] = null;
-				else continue;
-			} else {
-				row[hdr[C]] = raw && (val.t !== "n" || (val.t === "n" && o.rawNumbers !== false)) ? v : format_cell(val,v,o);
-			}
-			if(v != null) isempty = false;
-		}
-	}
-	return { row: row, isempty: isempty };
-}
-
-
-function sheet_to_json(sheet, opts) {
-	if(sheet == null || sheet["!ref"] == null) return [];
-	var val = {t:'n',v:0}, header = 0, offset = 1, hdr = [], v=0, vv="";
-	var r = {s:{r:0,c:0},e:{r:0,c:0}};
-	var o = opts || {};
-	var range = o.range != null ? o.range : sheet["!ref"];
-	if(o.header === 1) header = 1;
-	else if(o.header === "A") header = 2;
-	else if(Array.isArray(o.header)) header = 3;
-	else if(o.header == null) header = 0;
-	switch(typeof range) {
-		case 'string': r = safe_decode_range(range); break;
-		case 'number': r = safe_decode_range(sheet["!ref"]); r.s.r = range; break;
-		default: r = range;
-	}
-	if(header > 0) offset = 0;
-	var rr = encode_row(r.s.r);
-	var cols = [];
-	var out = [];
-	var outi = 0, counter = 0;
-	var dense = Array.isArray(sheet);
-	var R = r.s.r, C = 0;
-	var header_cnt = {};
-	if(dense && !sheet[R]) sheet[R] = [];
-	var colinfo = o.skipHidden && sheet["!cols"] || [];
-	var rowinfo = o.skipHidden && sheet["!rows"] || [];
-	for(C = r.s.c; C <= r.e.c; ++C) {
-		if(((colinfo[C]||{}).hidden)) continue;
-		cols[C] = encode_col(C);
-		val = dense ? sheet[R][C] : sheet[cols[C] + rr];
-		switch(header) {
-			case 1: hdr[C] = C - r.s.c; break;
-			case 2: hdr[C] = cols[C]; break;
-			case 3: hdr[C] = o.header[C - r.s.c]; break;
-			default:
-				if(val == null) val = {w: "__EMPTY", t: "s"};
-				vv = v = format_cell(val, null, o);
-				counter = header_cnt[v] || 0;
-				if(!counter) header_cnt[v] = 1;
-				else {
-					do { vv = v + "_" + (counter++); } while(header_cnt[vv]); header_cnt[v] = counter;
-					header_cnt[vv] = 1;
-				}
-				hdr[C] = vv;
-		}
-	}
-	for (R = r.s.r + offset; R <= r.e.r; ++R) {
-		if ((rowinfo[R]||{}).hidden) continue;
-		var row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);
-		if((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;
-	}
-	out.length = outi;
-	return out;
-}
-
-var qreg = /"/g;
-function make_csv_row(sheet, r, R, cols, fs, rs, FS, o) {
-	var isempty = true;
-	var row = [], txt = "", rr = encode_row(R);
-	for(var C = r.s.c; C <= r.e.c; ++C) {
-		if (!cols[C]) continue;
-		var val = o.dense ? (sheet[R]||[])[C]: sheet[cols[C] + rr];
-		if(val == null) txt = "";
-		else if(val.v != null) {
-			isempty = false;
-			txt = ''+(o.rawNumbers && val.t == "n" ? val.v : format_cell(val, null, o));
-			for(var i = 0, cc = 0; i !== txt.length; ++i) if((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34 || o.forceQuotes) {txt = "\"" + txt.replace(qreg, '""') + "\""; break; }
-			if(txt == "ID") txt = '"ID"';
-		} else if(val.f != null && !val.F) {
-			isempty = false;
-			txt = '=' + val.f; if(txt.indexOf(",") >= 0) txt = '"' + txt.replace(qreg, '""') + '"';
-		} else txt = "";
-		/* NOTE: Excel CSV does not support array formulae */
-		row.push(txt);
-	}
-	if(o.blankrows === false && isempty) return null;
-	return row.join(FS);
-}
-
-function sheet_to_csv(sheet, opts) {
-	var out = [];
-	var o = opts == null ? {} : opts;
-	if(sheet == null || sheet["!ref"] == null) return "";
-	var r = safe_decode_range(sheet["!ref"]);
-	var FS = o.FS !== undefined ? o.FS : ",", fs = FS.charCodeAt(0);
-	var RS = o.RS !== undefined ? o.RS : "\n", rs = RS.charCodeAt(0);
-	var endregex = new RegExp((FS=="|" ? "\\|" : FS)+"+$");
-	var row = "", cols = [];
-	o.dense = Array.isArray(sheet);
-	var colinfo = o.skipHidden && sheet["!cols"] || [];
-	var rowinfo = o.skipHidden && sheet["!rows"] || [];
-	for(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);
-	var w = 0;
-	for(var R = r.s.r; R <= r.e.r; ++R) {
-		if ((rowinfo[R]||{}).hidden) continue;
-		row = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);
-		if(row == null) { continue; }
-		if(o.strip) row = row.replace(endregex,"");
-		if(row || (o.blankrows !== false)) out.push((w++ ? RS : "") + row);
-	}
-	delete o.dense;
-	return out.join("");
-}
-
-function sheet_to_txt(sheet, opts) {
-	if(!opts) opts = {}; opts.FS = "\t"; opts.RS = "\n";
-	var s = sheet_to_csv(sheet, opts);
-	if(typeof $cptable == 'undefined' || opts.type == 'string') return s;
-	var o = $cptable.utils.encode(1200, s, 'str');
-	return String.fromCharCode(255) + String.fromCharCode(254) + o;
-}
-
-function sheet_to_formulae(sheet) {
-	var y = "", x, val="";
-	if(sheet == null || sheet["!ref"] == null) return [];
-	var r = safe_decode_range(sheet['!ref']), rr = "", cols = [], C;
-	var cmds = [];
-	var dense = Array.isArray(sheet);
-	for(C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);
-	for(var R = r.s.r; R <= r.e.r; ++R) {
-		rr = encode_row(R);
-		for(C = r.s.c; C <= r.e.c; ++C) {
-			y = cols[C] + rr;
-			x = dense ? (sheet[R]||[])[C] : sheet[y];
-			val = "";
-			if(x === undefined) continue;
-			else if(x.F != null) {
-				y = x.F;
-				if(!x.f) continue;
-				val = x.f;
-				if(y.indexOf(":") == -1) y = y + ":" + y;
-			}
-			if(x.f != null) val = x.f;
-			else if(x.t == 'z') continue;
-			else if(x.t == 'n' && x.v != null) val = "" + x.v;
-			else if(x.t == 'b') val = x.v ? "TRUE" : "FALSE";
-			else if(x.w !== undefined) val = "'" + x.w;
-			else if(x.v === undefined) continue;
-			else if(x.t == 's') val = "'" + x.v;
-			else val = ""+x.v;
-			cmds[cmds.length] = y + "=" + val;
-		}
-	}
-	return cmds;
-}
-
-function sheet_add_json(_ws, js, opts) {
-	var o = opts || {};
-	var dense = _ws ? Array.isArray(_ws) : o.dense;
-	if(DENSE != null && dense == null) dense = DENSE;
-	var offset = +!o.skipHeader;
-	var ws = _ws || (dense ? ([]) : ({}));
-	var _R = 0, _C = 0;
-	if(ws && o.origin != null) {
-		if(typeof o.origin == 'number') _R = o.origin;
-		else {
-			var _origin = typeof o.origin == "string" ? decode_cell(o.origin) : o.origin;
-			_R = _origin.r; _C = _origin.c;
-		}
-	}
-	var range = ({s: {c:0, r:0}, e: {c:_C, r:_R + js.length - 1 + offset}});
-	if(ws['!ref']) {
-		var _range = safe_decode_range(ws['!ref']);
-		range.e.c = Math.max(range.e.c, _range.e.c);
-		range.e.r = Math.max(range.e.r, _range.e.r);
-		if(_R == -1) { _R = _range.e.r + 1; range.e.r = _R + js.length - 1 + offset; }
-	} else {
-		if(_R == -1) { _R = 0; range.e.r = js.length - 1 + offset; }
-	}
-	var hdr = o.header || [], C = 0;
-	var ROW = [];
-	js.forEach(function (JS, R) {
-		if(dense && !ws[_R + R + offset]) ws[_R + R + offset] = [];
-		if(dense) ROW = ws[_R + R + offset];
-		keys(JS).forEach(function(k) {
-			if((C=hdr.indexOf(k)) == -1) hdr[C=hdr.length] = k;
-			var v = JS[k];
-			var t = 'z';
-			var z = "";
-			var ref = dense ? "" : encode_cell({c:_C + C,r:_R + R + offset});
-			var cell = dense ? ROW[_C + C] : ws[ref];
-			if(v && typeof v === 'object' && !(v instanceof Date)){
-				ws[ref] = v;
-			} else {
-				if(typeof v == 'number') t = 'n';
-				else if(typeof v == 'boolean') t = 'b';
-				else if(typeof v == 'string') t = 's';
-				else if(v instanceof Date) {
-					t = 'd';
-					if(!o.cellDates) { t = 'n'; v = datenum(v); }
-					z = (cell != null && cell.z && fmt_is_date(cell.z)) ? cell.z : (o.dateNF || table_fmt[14]);
-				}
-				else if(v === null && o.nullError) { t = 'e'; v = 0; }
-				if(!cell) {
-					if(!dense) ws[ref] = cell = ({t:t, v:v});
-					else ROW[_C + C] = cell = ({t:t, v:v});
-				} else {
-					cell.t = t; cell.v = v;
-					delete cell.w; delete cell.R;
-					if(z) cell.z = z;
-				}
-				if(z) cell.z = z;
-			}
-		});
-	});
-	range.e.c = Math.max(range.e.c, _C + hdr.length - 1);
-	var __R = encode_row(_R);
-	if(dense && !ws[_R]) ws[_R] = [];
-	if(offset) for(C = 0; C < hdr.length; ++C) {
-		if(dense) ws[_R][C + _C] = {t:'s', v:hdr[C]};
-		else ws[encode_col(C + _C) + __R] = {t:'s', v:hdr[C]};
-	}
-	ws['!ref'] = encode_range(range);
-	return ws;
-}
-function json_to_sheet(js, opts) { return sheet_add_json(null, js, opts); }
-
-/* get cell, creating a stub if necessary */
-function ws_get_cell_stub(ws, R, C) {
-	/* A1 cell address */
-	if(typeof R == "string") {
-		/* dense */
-		if(Array.isArray(ws)) {
-			var RC = decode_cell(R);
-			if(!ws[RC.r]) ws[RC.r] = [];
-			return ws[RC.r][RC.c] || (ws[RC.r][RC.c] = {t:'z'});
-		}
-		return ws[R] || (ws[R] = {t:'z'});
-	}
-	/* cell address object */
-	if(typeof R != "number") return ws_get_cell_stub(ws, encode_cell(R));
-	/* R and C are 0-based indices */
-	return ws_get_cell_stub(ws, encode_cell({r:R,c:C||0}));
-}
-
-/* find sheet index for given name / validate index */
-function wb_sheet_idx(wb, sh) {
-	if(typeof sh == "number") {
-		if(sh >= 0 && wb.SheetNames.length > sh) return sh;
-		throw new Error("Cannot find sheet # " + sh);
-	} else if(typeof sh == "string") {
-		var idx = wb.SheetNames.indexOf(sh);
-		if(idx > -1) return idx;
-		throw new Error("Cannot find sheet name |" + sh + "|");
-	} else throw new Error("Cannot find sheet |" + sh + "|");
-}
-
-/* simple blank workbook object */
-function book_new() {
-	return { SheetNames: [], Sheets: {} };
-}
-
-/* add a worksheet to the end of a given workbook */
-function book_append_sheet(wb, ws, name, roll) {
-	var i = 1;
-	if(!name) for(; i <= 0xFFFF; ++i, name = undefined) if(wb.SheetNames.indexOf(name = "Sheet" + i) == -1) break;
-	if(!name || wb.SheetNames.length >= 0xFFFF) throw new Error("Too many worksheets");
-	if(roll && wb.SheetNames.indexOf(name) >= 0) {
-		var m = name.match(/(^.*?)(\d+)$/);
-		i = m && +m[2] || 0;
-		var root = m && m[1] || name;
-		for(++i; i <= 0xFFFF; ++i) if(wb.SheetNames.indexOf(name = root + i) == -1) break;
-	}
-	check_ws_name(name);
-	if(wb.SheetNames.indexOf(name) >= 0) throw new Error("Worksheet with name |" + name + "| already exists!");
-
-	wb.SheetNames.push(name);
-	wb.Sheets[name] = ws;
-	return name;
-}
-
-/* set sheet visibility (visible/hidden/very hidden) */
-function book_set_sheet_visibility(wb, sh, vis) {
-	if(!wb.Workbook) wb.Workbook = {};
-	if(!wb.Workbook.Sheets) wb.Workbook.Sheets = [];
-
-	var idx = wb_sheet_idx(wb, sh);
-	// $FlowIgnore
-	if(!wb.Workbook.Sheets[idx]) wb.Workbook.Sheets[idx] = {};
-
-	switch(vis) {
-		case 0: case 1: case 2: break;
-		default: throw new Error("Bad sheet visibility setting " + vis);
-	}
-	// $FlowIgnore
-	wb.Workbook.Sheets[idx].Hidden = vis;
-}
-
-/* set number format */
-function cell_set_number_format(cell, fmt) {
-	cell.z = fmt;
-	return cell;
-}
-
-/* set cell hyperlink */
-function cell_set_hyperlink(cell, target, tooltip) {
-	if(!target) {
-		delete cell.l;
-	} else {
-		cell.l = ({ Target: target });
-		if(tooltip) cell.l.Tooltip = tooltip;
-	}
-	return cell;
-}
-function cell_set_internal_link(cell, range, tooltip) { return cell_set_hyperlink(cell, "#" + range, tooltip); }
-
-/* add to cell comments */
-function cell_add_comment(cell, text, author) {
-	if(!cell.c) cell.c = [];
-	cell.c.push({t:text, a:author||"SheetJS"});
-}
-
-/* set array formula and flush related cells */
-function sheet_set_array_formula(ws, range, formula, dynamic) {
-	var rng = typeof range != "string" ? range : safe_decode_range(range);
-	var rngstr = typeof range == "string" ? range : encode_range(range);
-	for(var R = rng.s.r; R <= rng.e.r; ++R) for(var C = rng.s.c; C <= rng.e.c; ++C) {
-		var cell = ws_get_cell_stub(ws, R, C);
-		cell.t = 'n';
-		cell.F = rngstr;
-		delete cell.v;
-		if(R == rng.s.r && C == rng.s.c) {
-			cell.f = formula;
-			if(dynamic) cell.D = true;
-		}
-	}
-	var wsr = decode_range(ws["!ref"]);
-	if(wsr.s.r > rng.s.r) wsr.s.r = rng.s.r;
-	if(wsr.s.c > rng.s.c) wsr.s.c = rng.s.c;
-	if(wsr.e.r < rng.e.r) wsr.e.r = rng.e.r;
-	if(wsr.e.c < rng.e.c) wsr.e.c = rng.e.c;
-	ws["!ref"] = encode_range(wsr);
-	return ws;
-}
-
-var utils = {
-	encode_col: encode_col,
-	encode_row: encode_row,
-	encode_cell: encode_cell,
-	encode_range: encode_range,
-	decode_col: decode_col,
-	decode_row: decode_row,
-	split_cell: split_cell,
-	decode_cell: decode_cell,
-	decode_range: decode_range,
-	format_cell: format_cell,
-	sheet_add_aoa: sheet_add_aoa,
-	sheet_add_json: sheet_add_json,
-	sheet_add_dom: sheet_add_dom,
-	aoa_to_sheet: aoa_to_sheet,
-	json_to_sheet: json_to_sheet,
-	table_to_sheet: parse_dom_table,
-	table_to_book: table_to_book,
-	sheet_to_csv: sheet_to_csv,
-	sheet_to_txt: sheet_to_txt,
-	sheet_to_json: sheet_to_json,
-	sheet_to_html: sheet_to_html,
-	sheet_to_formulae: sheet_to_formulae,
-	sheet_to_row_object_array: sheet_to_json,
-	sheet_get_cell: ws_get_cell_stub,
-	book_new: book_new,
-	book_append_sheet: book_append_sheet,
-	book_set_sheet_visibility: book_set_sheet_visibility,
-	cell_set_number_format: cell_set_number_format,
-	cell_set_hyperlink: cell_set_hyperlink,
-	cell_set_internal_link: cell_set_internal_link,
-	cell_add_comment: cell_add_comment,
-	sheet_set_array_formula: sheet_set_array_formula,
-	consts: {
-		SHEET_VISIBLE: 0,
-		SHEET_HIDDEN: 1,
-		SHEET_VERY_HIDDEN: 2
-	}
-};
-
-if(typeof parse_xlscfb !== "undefined") XLSX.parse_xlscfb = parse_xlscfb;
-XLSX.parse_zip = parse_zip;
-XLSX.read = readSync; //xlsread
-XLSX.readFile = readFileSync; //readFile
-XLSX.readFileSync = readFileSync;
-XLSX.write = writeSync;
-XLSX.writeFile = writeFileSync;
-XLSX.writeFileSync = writeFileSync;
-XLSX.writeFileAsync = writeFileAsync;
-XLSX.utils = utils;
-XLSX.writeXLSX = writeSyncXLSX;
-XLSX.writeFileXLSX = writeFileSyncXLSX;
-XLSX.SSF = SSF;
-if(typeof __stream !== "undefined") XLSX.stream = __stream;
-if(typeof CFB !== "undefined") XLSX.CFB = CFB;
-if(typeof require !== "undefined") {
-  var strmod = require('stream');
-  if((strmod||{}).Readable) set_readable(strmod.Readable);
-	try { _fs = require('fs'); } catch(e) {}
-}
-}
-/*global define */
-if(typeof exports !== 'undefined') make_xlsx_lib(exports);
-else if(typeof module !== 'undefined' && module.exports) make_xlsx_lib(module.exports);
-else if(typeof define === 'function' && define.amd) define('xlsx', function() { if(!XLSX.version) make_xlsx_lib(XLSX); return XLSX; });
-else make_xlsx_lib(XLSX);
-/* NOTE: the following extra line is needed for "Lightning Locker Service" */
-if(typeof window !== 'undefined' && !window.XLSX) try { window.XLSX = XLSX; } catch(e) {}
\ No newline at end of file
diff --git a/src/main/webapp/resources/js/rechazomuestras/RechazoMuestras.muestras.js b/src/main/webapp/resources/js/rechazomuestras/RechazoMuestras.muestras.js
index a6987186..c6021fdf 100755
--- a/src/main/webapp/resources/js/rechazomuestras/RechazoMuestras.muestras.js
+++ b/src/main/webapp/resources/js/rechazomuestras/RechazoMuestras.muestras.js
@@ -57,9 +57,6 @@ function rellenarTablaMuestras(nOrden, idMuestra){
         scrollY: 250,
         scrollX: true,
         paging: false,
-      info: false,
-      "autoWidth": false,
-      scrollCollapse: true,
         dom: 'lrt',
         "ajax": {
             url: getctx + "/api/rechazoMuestras/muestras/"+ nOrden,
diff --git a/src/main/webapp/resources/js/rechazomuestras/RechazoMuestras.ordenes_respaldo.js b/src/main/webapp/resources/js/rechazomuestras/RechazoMuestras.ordenes_respaldo.js
old mode 100644
new mode 100755
diff --git a/src/main/webapp/resources/js/registrodocumentos/RegistroDocumentos.js b/src/main/webapp/resources/js/registrodocumentos/RegistroDocumentos.js
index 9a1cdff9..8bebc367 100644
--- a/src/main/webapp/resources/js/registrodocumentos/RegistroDocumentos.js
+++ b/src/main/webapp/resources/js/registrodocumentos/RegistroDocumentos.js
@@ -311,9 +311,6 @@ function orderDetail(id) {
 }
 
 $(document).ready(function() {
-
-  
-
   gRegistroDocs.boBuscador = new BiolisBuscadorOrdenes(["#bo_div_nOrdenIni",
     "#bo_div_fIni",
     "#bo_div_nombre",
@@ -324,7 +321,7 @@ $(document).ready(function() {
   $("#bo_btnBuscarOrden").click(gRegistroDocs.bo_OrdenesTable.doSearch);
   
   //oculta las columnas segÃºn el nÃºmero que se encuentra en el array
-  let columnas = [0,4,5,9,10,11,12,13,14,15,16,19,20,21,22,23,24];
+  let columnas = [0,3,4,5,6,8,9,10,11,12,13,14,15,17,18,19,20,21,22];
   const n = gRegistroDocs.bo_OrdenesTable.bo_OrdenesDatable.columns().nodes().length;
   console.log ("columnas: "+n);
   for (let i=0; i<n; i++){
diff --git a/src/main/webapp/resources/js/tomamuestras/TomaMuestras.muestras.js b/src/main/webapp/resources/js/tomamuestras/TomaMuestras.muestras.js
index 59e7ff7d..52f12b68 100644
--- a/src/main/webapp/resources/js/tomamuestras/TomaMuestras.muestras.js
+++ b/src/main/webapp/resources/js/tomamuestras/TomaMuestras.muestras.js
@@ -32,7 +32,7 @@ var initTableMuestras = function(){
                 url: getctx + "/api/tomaMuestras/muestras/"+nOrden,
                 type: "POST",
                 contentType: "application/json",
-                dataSrc: "",
+                dataSrc: "dato",
                 dataType: "json"
         },
         columns: [
@@ -610,11 +610,9 @@ function ajaxImpresion(nOrden){
       datatype: "json",
       success: function () {
           handlerMessageOk("Ok");
-          console.log("ok de ajaximpresion")
       },
       error: function (e) {
           handlerMessageError("Error");
-          console.log("error de ajaximpresion")
       }
   });
 }
diff --git a/src/main/webapp/resources/js/valoresreferencia/ConfiguracionValoresReferencias.js b/src/main/webapp/resources/js/valoresreferencia/ConfiguracionValoresReferencias.js
index e95e1b4e..818432d2 100755
--- a/src/main/webapp/resources/js/valoresreferencia/ConfiguracionValoresReferencias.js
+++ b/src/main/webapp/resources/js/valoresreferencia/ConfiguracionValoresReferencias.js
@@ -745,11 +745,15 @@ function validarDatosVR(filas){
                 let iHasta = calcularDiasMesYear(filas[i].cvrDiashasta, filas[i].cvrMeseshasta, filas[i].cvrAnoshasta);
                 for (let j=0; j<n; j++){
                     if (filas[i]!==filas[j]){
-                        let jDesde = calcularDiasMesYear(filas[j].cvrDiasdesde, filas[j].cvrMesesdesde, filas[j].cvrAnosdesde);
-                        let jHasta = calcularDiasMesYear(filas[j].cvrDiashasta, filas[j].cvrMeseshasta, filas[j].cvrAnoshasta);
-                        if ((iDesde > jDesde || iHasta > jDesde) && (iDesde < jHasta || iHasta < jHasta)){
-                            handlerMessageError("Datos ingresados se traslapan con otras columnas");
-                            return false;
+                        if (filas[i].cfgMetodos === filas[j].cfgMetodos){
+                            if (filas[j].cvrSexo === 'A' || filas[i].cvrSexo === filas[j].cvrSexo){
+                                let jDesde = calcularDiasMesYear(filas[j].cvrDiasdesde, filas[j].cvrMesesdesde, filas[j].cvrAnosdesde);
+                                let jHasta = calcularDiasMesYear(filas[j].cvrDiashasta, filas[j].cvrMeseshasta, filas[j].cvrAnoshasta);
+                                if ((iDesde > jDesde || iHasta > jDesde) && (iDesde < jHasta || iHasta < jHasta)){
+                                    handlerMessageError("Datos ingresados se traslapan con otras columnas");
+                                    return false;
+                                }
+                            }
                         }
                     }
                 }
